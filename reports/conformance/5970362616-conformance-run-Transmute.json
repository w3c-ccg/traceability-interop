{
  "collection": {
    "info": {
      "_postman_id": "faa02ea8-9433-45af-b9a7-893a98130da9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "499ec647-1876-42c5-8621-ed37e3773ec0",
        "name": "Clear Cache",
        "item": [
          {
            "id": "506f8593-2612-4e40-a413-37b7bd30e38b",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1b56558b-5b46-4b82-ad80-af18c1127b80",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "36bc0234-0e45-49f2-a72c-b7e7480951ce"
                }
              }
            ]
          },
          {
            "id": "6a1f923f-bea7-4e25-8000-7f6fb630081c",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fc8a64ba-d7f2-415c-a276-2455b53badd4",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "70d3df2d-f8eb-4618-82c0-200197f8843d"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "180447c0-32a4-419b-971a-b6a96c90cf0d",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "c3f8bf37-5f6c-44f8-9915-1b1359d4940a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "45296561-de80-4344-8cef-ceb1c1beaa16",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d81786a0-7451-456b-9eaa-8a6f2938e8fe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c2d9725d-b004-4eda-8799-c386d4338728"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0b06a955-099f-4870-8437-2007057f7ea2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "827735dd-355e-4be7-b66a-d031216b797a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "986d8ac2-a7ef-4462-8351-eb38eb82e079",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4d100416-1bd6-4f82-927d-5e9b8bfee610"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "67a956f1-85e4-4ca5-ad3c-a46f6980fb5f",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "b097a581-4326-481e-acf7-1bc6fe05fb47"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1498d588-76b9-4b05-8be7-00eb62b2f905",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4fae3fe9-c724-459d-9add-0ed8330d11f8"
            }
          }
        ]
      },
      {
        "id": "4a17573e-5a59-4631-ace1-0ce1511fe43d",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "1dbab1d4-f678-46d9-a4e2-84b3b4f95178",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bfa9dba9-80e5-4d2e-86f7-ada797f7f42e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ce56c470-f3bb-468e-a8f4-868d5583da1e",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "607c345c-22b4-48cf-91a7-b32a06f8906f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3b44a81c-b8b5-4a02-861e-5c39d1c538d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9101605d-e045-4d8e-84d8-fbf25f9914dc",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6307795-2460-46f9-8d90-5ba543ead567",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "29efc638-f031-4d51-83b0-aa9f17cddf04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cea213ec-633f-48a6-9526-70e8befe315f",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc97ccc1-138e-450f-95e4-6936eec21288",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8c7a2aba-9bb4-4669-b773-58146b245331"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8ce3846f-61e3-4954-a34b-5bde3c4a5902",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d217dda8-e346-42fb-9bb4-d10caf864c57",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1902617c-f7cd-403e-8a03-b3322d191219",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d0bfa0dd-019a-459c-84a6-54eb3cbab3fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77c78c86-5a94-4659-bf02-8d8aa2db2de4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcc7ce99-b49a-4d1c-a180-8cfc4ab80745"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "4a2f54a8-4e9a-404b-b2ad-ba1e3e7338f1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "40c0c665-3629-433f-98b3-c2b9c90316a6",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "837eb692-e365-4f2e-ba93-0f4afd4ab32d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "a4608148-177a-4627-a41b-9a16b8a3e7f3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "316f8b44-93d9-402e-b2df-3f5e99375bb8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "7bca0221-ad61-40ce-b562-63d7e4526904"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bdcb2478-06fd-4892-8f1c-a6dcfc52548b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "04631106-208a-4014-b826-4ce20f4ec6bd"
            }
          }
        ]
      },
      {
        "id": "9a60afec-4eb8-4f29-9936-92cae131c4a5",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "a00ebda2-785f-4851-99df-5447034360f0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dab45807-dea6-46e8-bd98-8e8d12c45966",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "fd011e6f-4d67-4632-b959-555131a9504f",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "259303ea-6843-4b66-be9c-bdf549ae3751",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9648ba3-b524-4476-87d0-81630b1f4772"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a0806ea-ec08-4bdf-b40e-10486e7d79d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1b884bf5-5ab7-4916-8755-cf0317f61108"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43676941-d1a1-43f4-b8bd-2d3e3bfef6ad",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e6f488e-e872-4821-82ee-04e4dbc3d358",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a9570ed-879e-42ed-a786-3dbbacc134ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd8d1d93-bc94-4314-a425-13274d94c213",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "66110f91-18f5-4e61-bee2-9fe743a2b166"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbdb2f80-9de3-4114-93b6-2c6d1cb76898",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b77a1365-f196-4f85-9ac6-c8515b754058",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "573042af-81e6-4684-a1c9-3db79146f463"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8683c32b-8b1e-4112-abc3-cbe7d9f280b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5c89e468-3c29-46fe-960a-80cc55661d89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6e212de-f830-4e8d-84b3-b89ca14ef727",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "481d2451-9517-4326-9ef3-6a0ac89ea651",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0599f1b6-f159-4b9e-81e6-c220007397b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52dccc1a-d087-47ea-9ee3-c241b07fd562",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "799e0284-5ca2-4fea-b835-5827acda9970"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07ff3d61-5409-4526-b322-85eb01de4c89",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba876c31-c655-4f6a-a735-9841e9127d8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3899feb9-e3c4-4ae5-8cba-722bb7d565d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a097d827-c1b4-4a74-917d-10d08ba9ea25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c15fe26d-05a2-4bcd-8f08-8d2599f3d367"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccbd4d96-4bbb-49c8-809f-3e92aa50004e",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cb81d8a-f7fa-408f-8138-8dcc3ed35bd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a3f32f2-85fa-4149-886a-4af467d45bf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0be0e92-0df5-43ae-9c6d-61a354e4e2d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a4eea3a1-126a-4e27-bf16-5807fedb33f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4e016e6-6343-4769-b2ce-a6b48be75cff",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2af0747d-ca44-4094-97f2-c92b0b3c0610",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b718e2d0-1e73-458f-bc7a-8a5fd0896cf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea9a34cd-d9f9-4d14-aa87-804d746dcdcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1399e9f5-4b8b-4ab3-8036-a21b976e1a67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29810f95-ce75-4108-a96e-a650b9248919",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dce549a8-e492-4c94-a509-0bd9c82b1ca1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1731b50a-eeb5-4060-9b5e-ca311df6d266"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d4417e8-c636-4394-9be2-55fd10a30c6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "115aaf47-4a09-4f2f-9fb9-6c01629e2454"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f27cc696-0376-4850-b9af-c4821ebfdf2c",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10b77f04-35c6-40a5-8790-d138ee0080e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdff6ed5-6b21-44c7-8134-4154531450d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "565ece25-ed3e-4ac8-a007-e33833d49b4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7decc1bf-a883-447e-906b-eb606bfce4ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d5644b1-b881-4427-844b-85cd8f470f8b",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f43fafa-7cf7-4bcb-b411-fe7d511ee78e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb95b945-447f-44bf-845a-a8c81b5d22e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2cb4768-6b1f-4115-b659-2c82fb816688",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "92f50ff6-7b7b-4d77-a5c5-40dc3daab38a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "834aaf74-67f6-4543-b91a-678001150d5d",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f6044ec-19e2-4309-8256-401ae8b1d144",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c41f9f1-b028-4956-9d64-986015cb58ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff9e0db0-097c-459b-90c3-6aa716ab8310",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0d6a25eb-d08c-454a-99de-49d68dab8c67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba9216b7-9562-4eb9-a2dd-e7f9794ae4fb",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9799587a-d669-406b-9b21-2ce804f9e91e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3b6f544-f719-413b-8707-e9be5cfafdaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57b0dbd3-9997-4899-a99b-ca6e0062d777",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "23e6a92d-1043-4fa9-b65b-ede1aa2d6242"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0e622d2-42a1-4dc7-8f51-53fb5e3513da",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d60cb20-6065-4784-842c-472eb6fd7b9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afd366e2-8a46-44d7-99a4-a605fbf5b6ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0908d503-0243-4ab5-999e-238fcd0a9ace",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0f62c608-2688-46f3-b829-880b34c54894"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a71dd611-6782-4c03-90a4-fd43e666a5c9",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "458a163f-5647-4f5f-aa73-f9275a95943a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcb8a86c-2ddc-4d61-bd31-355ed0883a26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cdee4f6-c051-4fe7-aa00-329f4235595a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2968e8f0-4e7a-4977-b8d8-5e6944fa17f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60a0ec6d-bed5-4a20-a709-db946cd2af04",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77bbb0a8-265e-4969-b031-0f2ea4032a9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a84d7a62-3d1d-4b9d-ae6f-a6414e2e3bdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff7279f6-8a63-4b33-a3ac-3d527589c481",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c59e0f21-9743-477d-8282-fc2e3bba1e15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d90b050-4eb7-4ac8-991b-0fe99270a7ab",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c79e2ca2-df38-4e15-8097-179413ac4913",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c64d34f6-d59e-4a45-aad0-23c534db0439"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c3e3726-c38f-41de-a839-7a871f224ebc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e4a29f4d-18cb-40a2-bdba-a0d44c98ca1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6f92be7-7113-4a23-9462-6b79faf69447",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c376170-c2a8-48b9-8ead-335fb3686c8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ca6e156-e2df-408c-8992-900133d9191e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4f0057c-c142-45de-8627-841b34734bbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c4719b8e-78a9-4b35-ab66-0bb5c607eb80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a4a172a-b2d0-4c3c-a397-d703fe056da8",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33b5b77e-3030-4202-831c-1459c71efa97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57dfe070-beed-4ce9-8468-12236bed796e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a419a1a-f3b1-4750-aac4-a41953b76704",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e9b7af1-981c-4626-b2ac-970506da04e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0caa0d19-cbed-4035-81a8-3af6316cbe18",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92098dab-a4fb-49eb-9a07-feb63b9a44bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18db6d1b-1177-4156-8436-6ba8c6ea2e78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9383dc8f-0d59-4a7a-8300-54a831f7bed9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a6ad6959-11ea-443d-a0c7-162fca7db016"
                        }
                      }
                    ]
                  },
                  {
                    "id": "806c4e5b-061b-403a-b9bd-ba6852df7b6e",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0d31448-d2a1-4bce-9a13-b92819f47d24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43dc3be2-8d10-4cc7-b4ad-4a50c824cc8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa8656af-1992-48b7-90f1-0b37788ca4c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c29cad5-3d4f-426d-b7a7-12637880ec61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdcc530b-eec9-4ac1-b859-ec03f17ef63b",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b985895f-bf08-4afb-9535-3bc9b202ccaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fba23c8-bd1e-4d35-8360-350b2f95d62d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2791a6b6-daf5-445f-b3d8-63edc01f9db6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e39b1c39-9241-447e-9cf0-8f210543b023"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db015a4b-a382-4a45-bf57-1f4590aba2ef",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f2865fa-15c8-4f8a-95cb-a4d5c5620b7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2690f310-fc84-47c4-b838-68f94fa385b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2abe5b5-926a-4939-bd6c-8a085172b301",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "30c4b328-ace5-4b2b-86d2-5fef718ca023"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e073169f-413e-4aaa-90b1-1bac048dff9c",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5febfda2-b560-4206-ab95-11aa1ca8b174",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94a6500b-90e2-4aa7-bf54-43452e02027d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbad0c8b-480e-4f47-9161-704c631604c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "90c53d02-9de3-48fc-9804-d4310dd41bd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcd026ef-b8ee-4d5b-9ff9-d1865ff151e5",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad711b3d-edc2-4729-98c4-a596943e00e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a07c2a80-fbef-41e8-aa88-a3284eb65a4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fdb4470-85e4-479d-94b4-16ea4afca2c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "33429e04-2bd0-4917-b4ea-b922bd7493e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa93f003-6f40-4016-8358-7a0f17dc0c20",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "310b6b49-b569-4c17-b771-62e1e0e4ea27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb0d2712-3a97-4c3c-bb1c-188a2e472308"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b63531b-a73f-454f-9fcf-dff38b02532a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb1b16c2-418f-4a06-b749-736e343e3f79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d6cdba9-d5de-4a5d-9d19-874b5e514a9a",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5df7cecd-87b4-4deb-8295-d5892568e88a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8861f6f-b47c-4d22-b8d2-b38850f30d7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5750c5f6-32f2-4280-afba-8c30d45af0e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "31fbffb1-4353-4cb4-b6b6-5026b5c1c9a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "803ad016-49d2-432d-844b-1d47190ca596",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d006df0-76aa-4a00-b327-498deee4fdac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4aff0d10-174f-4118-b9e8-15c2a5f0f50b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c627b82-3b15-4f0d-9f1d-526b629ea122",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1ffccd0-14f1-41e7-aeb1-c2668b899de8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea009493-54d3-4506-8e9f-ee32e185f8dd",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6547d8ac-9bc1-40a5-9c5d-c57229a8c07a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fab3b66-1a5c-4576-a61c-d90391e54e5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01a8747d-70db-419c-b571-fc8b69a5da1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "336f7bea-aff5-43d9-9dd5-ad98ce18122a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fe32790-1821-4bcf-bc00-2c56878ed4c4",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f11fce83-aa1c-4fec-b909-b1a03bcfc67f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95a3ea83-c535-41af-9a18-499350a2a7d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c2ebaec-1543-44d0-b344-b9a73cf883c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "afc3c6e5-d75b-4010-98d9-a8aa0374825a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad487e40-6172-4b90-b3f6-46859e7a7a87",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecc94ad3-7ef0-4123-ad2a-739eceec8b75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81a018a9-9cbd-4b7a-a269-fee386924c7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca50a651-a8e8-43e9-87dd-076105a6f170",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "b6505d68-72a8-4c27-97e7-2f9fca360511"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5c9fe64-dc13-4c6a-907c-85588805eabe",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9857c6ec-e0bd-4e52-984d-e367e1898136",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "445e50db-1ab7-401a-b6d7-e537fd0b91fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "194dd86d-1fa4-4dae-8a4d-e4dead78b18d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "17feba03-4551-44b0-b7c1-8e27d994b0a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "046250c8-61d9-471e-bd9b-ac079a404396",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28edb8a1-835f-4ea0-a96c-5490aec78067",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae15ec30-7328-421c-99a1-97b4501c359d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02515cf6-cd8d-4961-9eba-8c8f5a600b93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b369f33-d96a-40c2-92c4-45b304a2b221"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9315cedb-11a9-413d-b235-3b6845c46d43",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6e2f3ed-7740-4f98-9a54-084d45904b81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e55644b-17d6-4d6b-ba02-e5853887ef65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0127f274-f78a-44bb-84e8-eb2a37b7dcc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe91723d-5165-4d3e-b23e-24039a046592"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccab4a67-ef39-4e74-91c1-454c98357954",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec8a4e82-9d12-4dbb-917b-5958ca9acb14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "288efa1b-d00f-492a-a01d-955b46080dfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12642dab-f819-4df5-990c-fb01a9c240c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "87975dbe-bb0b-4d21-944c-665d21d4e044"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a541e56-198b-4c8b-ba5e-32c5d105ee56",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4359d28-c1d5-486b-ac70-7a046c017dc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5abbcd96-6f98-4bfb-acd9-9dfc1ea1e3d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3003ec76-7de4-45a2-80cd-a48399a1aaba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "48cf8d58-ba27-4e79-9c80-e30e9da5aabd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40130113-989e-4f30-a6ae-e54926bca7f3",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24211db3-0e9d-4de0-9b9b-913b64740c06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "15f8eba0-8357-4f1d-8743-4f9e482316c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d587d4b-22c5-4b9e-99df-cf826abbce4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5bedb545-8179-4950-91c0-844465686a98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85763771-c097-4cbc-b1cb-147731b67395",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5054765-bdde-4459-9c9b-d172f7cbd545",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a89d4574-6e98-4082-95df-7f9251f9e05d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c369e24c-9967-4f34-86e0-d9774d7d4d0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "080b829f-7981-4f31-9bf5-ac7e544107ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebbf6988-f3cc-4de2-8c05-166d9b914b9d",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e41dd70-d65d-464a-aaa0-3c218d7e7de5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ec6c3bc-49e2-4847-9adc-b3a950d74d31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e38f2ca3-159f-4712-8645-d4d0ec82d469",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ee74895d-6a15-47e7-a846-cd8a87720fca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ba1e422-68f1-4127-b9bc-c165dd7353e6",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80538103-9b0b-4d49-917a-70cb59447260",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a58a2b9-9390-4718-8d1e-fbd436093333"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f25b5d7a-cfe0-4383-9072-59019ded2713",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d396f7fa-a4f8-436e-b706-a06917b07dcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f5f86b5-99bb-4140-9daa-b1e5c954d33c",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d081daa8-0394-4b30-8b2a-1ab198696c83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60a58eaa-e483-455e-ba5d-8437c75ddda3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e84aac79-c8d5-47af-a340-02978560abb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "01e79cda-5985-417f-b928-88c25a48e923"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5023f939-b53f-47e6-97f0-e39de49731d3",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2e15cba-dec4-4b00-8a25-95d16f49b668",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3fe6204-bbe7-4eed-8a0e-8e99aaa96026"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4edd032d-97f7-4a57-82b7-46a2c1e94e29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f94563a8-e1e7-47b5-84ad-61396bcadc21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a3cfbaa-acaa-4d77-997c-80820c5c8723",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1049d9cb-364e-46fe-a526-ac2f5e3b5969",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce4399e4-140d-471c-8f1e-7e15c827b947"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64d9a01f-bef0-41c6-a903-cf22daea6e35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "c05b690d-31fc-42dc-a02b-be9b76f97412"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07205de2-e511-4466-9803-24bce56c7697",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6087b860-626b-4bd7-aa5c-7803ce29165d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed4799e8-6693-46dc-b1bd-31348606d56c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc71bfaa-0b8e-4315-9d77-ea3eb3318cc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "4f43f6f4-3e6d-4e37-a4c3-e5cb761a0915"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a66aa6d-ffc8-4fc6-a963-5314c62da7d4",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "901c2270-500e-46f7-949a-8e76bf75467d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82b301a6-04b8-478b-8373-f4e48acecc02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a271c6e-552f-41f0-8e4e-895e07b99679",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "dff168e5-2fa0-4ebc-aaa4-82fb870ccb7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ee5ad5e-c508-4534-8b67-a645162d72b1",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e94752ad-86dc-4ace-8b61-2ec6e382c183",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95012138-b787-467a-b580-59859d0818ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8045355d-3c73-40f7-8166-b0c3c449e94d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "99a00b6a-453e-4b6d-aeba-8707f9e14da0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ca45e0c-d859-4ff7-a3b2-25ae91233e38",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ba7b1fc-5f54-4d30-915e-1b4903dbed59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f816402b-5fe1-427c-b9c1-96e82ab706c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61e2bd23-ba33-427c-afc2-83feae079fad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5599869d-0264-4413-8e9d-711e24b3b6b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bb7dbd6-b242-48ae-b635-13bd9b678aeb",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdb5b36c-f9e6-414b-bd14-fb3634918925",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "992d548c-45dd-4fca-9732-499c3e7f3dba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e65121ef-78da-45a6-b444-5478939cc060",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "84e70cb5-1103-4baa-86f6-2be78a39a04d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c07d5fc0-26c8-4081-beee-4ef158c9d293",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c43ff44b-81c0-4407-a4e0-0e89a32e9880",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3c7a29e-14c3-4b6d-a98e-46dac8549791"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ee16404-db47-46f6-8970-b47fa82e5479",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee3e7866-d31a-47f2-9f47-5d2d7f7fda07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd9cc19d-60dd-4d7b-899c-0ca0f847682f",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3eded3b2-2b16-4a27-bb3c-1004371ccd85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54afc60d-dbe0-49e4-a361-d0e3d63f5d6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d6810c2-1a1c-4ca6-89d5-d7798b6bf348",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f880aa30-9673-4ea9-a9e5-f272ccae987e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe92c4db-279e-46c9-a14d-154ff13a9efd",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c04fe63-7729-4792-9344-b37a37fcf84e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c219f8c8-1f6b-45b8-a487-875b5aeffd12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e82196ce-5f15-43e9-8f4a-389f473be00c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d2f6fd7d-6799-43a3-bfd0-4f71256981dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75fd2b5c-b866-4e03-8584-45b4cfa647ba",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a3dac2e-b04b-49b8-8e02-eff0dedd81a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "148af8e3-b671-4eab-9489-dc03e2fc081e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "367b8753-1298-4d46-a060-e6d573e1547a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c86da7c-a1e5-4090-a0f3-933e6a42727e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5de4c9d9-82e8-4dc1-80a2-c47cc9ab12dd",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42527fce-f0d8-4238-ad2c-8b7f586e0417",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63d80586-e296-43f9-b773-69930036273b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5868e5b-4de6-4899-9416-9f3f0a909f16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "502c6105-b0c9-4915-97d7-c4cad9d88653"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35c15aca-7015-48b7-8c6b-ff926126c572",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3cb220d-7169-4e2d-9d4e-59701e68ed82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8455b463-ba9b-4ea2-949f-3268ee2e6fb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8452ea0-47d3-4579-8044-9f99ad29717a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "08ed66fd-13a7-445c-87b9-ac757fd501fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6243b0c6-7977-4b7d-bb56-3d82d5b1c856",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00543a6a-8b9f-4d16-a22c-e0e389e0b278",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bfc389c-7cb4-47a8-a8e6-8d0d2d915cd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d7811e8-74b4-4410-8840-0bcb204134a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "476a39d3-cac7-4e19-9b80-41443f084052"
                        }
                      }
                    ]
                  },
                  {
                    "id": "330eaac5-a545-4813-9f7e-230e9b0fd3ac",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "836c65f9-316b-4f6b-ba81-e850bb5ff47c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95326b06-0770-4d9d-996b-eb4a70e5ef2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cf4c8d4-fd9f-4114-9758-ea4479b7ee4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "961eaa62-69e2-44db-b2b0-7be7385011b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e2ad18a-bcf3-4169-979b-3c09c2a93113",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "051f5ca0-2412-42b1-95e9-86bf7e1dbca3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc2461cb-3b99-463c-bfce-edd17436d8c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5f04230-6793-4d50-b8e9-38bd19db9c8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "875f219a-a208-494c-91f5-220f15e79a8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a21a59e9-5da9-42b1-8401-78fc7eae31a5",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df65f28a-7aeb-41f1-9a75-4b12f8a41469",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1f9d500-1fc2-42fe-b9b2-733c53b4d849"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75374ba3-edb1-4b34-908e-796008004964",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0b1d6efd-86e6-45a9-b8ea-63b049e685a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02ec6741-481a-4a75-a9c4-3b4dae75a7bf",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5f0f66b-caa5-4715-8c8b-7088634eedc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ce1f26f-49b0-4770-bc8a-733be63489ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80e4a22f-3158-4dbc-a4be-fb42930cb4ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3b4ac202-0542-4bf6-aba2-488de26843a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ac93a42-5a1e-49cb-918e-9efd45e0de39",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fef5dd9-0b8d-4781-9cd6-95cb5f4b548d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13ee9a5e-e60c-4a09-aa54-1b86f4173e7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "242dbefd-64c5-4973-af9a-b09d0312067b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d2dcdf51-b4a7-4db9-89a1-c304ea8aa5ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "512fd1d2-46c0-4c35-a5fe-7478979d83eb",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "493146d2-91eb-4925-aa67-808481931c26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e891750d-496a-4d40-bd4c-0dd676538a2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d82973e0-3baa-49e4-af87-077debe7b04d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "af4d171a-90d2-47aa-9d80-7a57891fcc24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4639ed55-36da-41c5-b079-a75ebea9d26f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f96cf460-527a-4b70-88af-6fe489e8abea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea59dc43-77e9-4563-9280-12e0e7f40d87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01133440-5a94-4ccc-a07e-00215b0d32d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "d419fcd8-044e-468a-b614-0f967d6aca19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec077f2e-2501-4550-ba64-ea959a65bcf8",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f40fdedf-f494-4886-9b4f-7a5a266d52c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b593384-0c5b-431e-a47f-7865ad467a7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da23ea77-e2b8-4002-ab5d-377a9019d253",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "dacce771-4cba-471b-8f87-f90f7b882a43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1275a300-b032-4250-aa29-2b1b3d5ebb4a",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "627a0ba3-53e3-4663-9b26-a540e33a83fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa11748b-964b-4cc3-8ec2-1b36a7df9882"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a53b73bd-4950-4712-81b3-ad6b1601451f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d38354c-7169-4c38-8442-3c648f2a9a2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a229d21-e289-47ec-81bb-ac62856ed750",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb5761ac-2d2e-4555-b483-6fbac7aab61f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2304e05f-f22f-49c3-870e-ff03e800772d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e42734ee-cc8e-4433-ba2b-9f3bd92b7d10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "03542903-0422-468f-9e08-95103721ca40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6111a9b-7fb9-41c2-a0ce-975378379400",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cebc5d1-c18f-4c4f-92a4-3c533768b7c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7764029b-f3ab-4961-a186-1cbb3da6e233"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd72863a-f8d7-45f8-b87d-fcde9d7553a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "938102cd-7c54-44aa-b716-f0d2ff8ab912"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5800bf22-ac1d-4793-a4cb-c6d10ad8830d",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "023fb5f3-fde6-48b4-91db-ba1032fd12f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c943b573-641b-4cb3-b6ed-d91dcbbaade5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "751f40d7-69d2-4f58-991f-f6494b293d11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "db30d18b-8c8e-436a-a302-9d01a8b46693"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80f7460e-efae-44de-86a7-2eaf1ae62f0d",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d3ea3f8-8141-42d0-9dd4-283689b9b1b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e6c9528-7306-4fbb-9fea-d50b38ee6e54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "596d36e0-ac23-4056-9d2e-1668e02325ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "007ae5cb-1714-4fbc-a6e8-9a9606bf8d9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79df2903-9205-4fdb-94d2-c1dd9b497107",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce9f3855-1a5d-41c8-a80d-b877f29f1575",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dd699ea-4200-4fc3-a17d-23bcc87e6742"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19bccf2b-8dd9-486b-812d-8003d2eb5f22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "f44d622c-054d-46b6-9618-3f6d34a3e985"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01c8d283-93c6-4c23-80fa-c25c65f8429f",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92053f95-6640-4d87-8daf-80d3020dcbe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71d3c385-c5dc-4fbe-be40-b2dc259fa0e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a32ba44-597b-4166-bc6d-d89d0dbe575e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "0fb08af0-f93d-4737-a3cd-cbceb3bd434c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fafe92af-f20f-4aeb-8b0f-c687337a5da1",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51285a6c-7f6f-4d06-8c2a-5e5cc2c89520",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94d3fc58-5da6-432f-a977-cbd68cd8d02f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "924ca069-668e-4c2c-9dac-794f032dbae6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c714b31-90b6-4c41-b520-095bfd7b990f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae8ba5c5-76f8-41af-95dc-396a8be6a5ea",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f25f037c-600b-455f-a370-c26d70643973",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3afb8683-0b90-4625-8b29-2ae943e2bc9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "589b71a7-3420-4ade-afa9-be4f3b38a512",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7be86304-8358-4c79-9d92-ffb570a6c8d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88198c40-7f9c-466f-bcd0-9d482e9d985e",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56675a92-04b1-4373-9d5a-74cf5ce82891",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d0d791a-c2cf-4c6a-a506-b41b0aa9c311"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "664dfc99-3d9e-42d1-b987-a33a7d30ba22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "000c883a-dec8-422f-af3c-289994e4295a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9615347b-c3a4-4d2f-8b24-23b32fc46752",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b1012c5-bad0-43f7-86ae-5f624241f348",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76a30bb1-5c95-4099-887b-1e3b49ab209d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "748af711-48e0-44f3-ae6a-a5ef47a33a45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "93a3e6b1-0df7-4e6d-8fa7-2b4a17d88fbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a66fbb8b-e57d-4bc4-acf0-e876e32c7075",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cad25682-ddbf-4616-91f0-f92207114075",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a4aa3de-369a-443a-9f2f-cbbe1c51f70e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cefc818e-3bb0-49f1-b38c-04e16b764353",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8bc0a8cc-9add-4b1f-b4af-3bdeb0eb7c60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd6219db-269a-4d83-bb48-84ab8afe456f",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50005c0d-704a-42ab-8c9d-101bafae8598",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbb00120-ed46-411d-afa2-9ffe24953da8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e32f0aa-1c5f-484a-951a-031fe2e1c6fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a54205d-244b-4a9f-a86d-a49e36cb4339"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daee07d6-2afa-4422-b111-4e2c858e27b6",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fdeab09-0aef-4262-a1bd-8a3be956ed19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4d43c74-2480-4615-98fc-06d1fc829032"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0124ce70-3f47-43a1-84fa-bf3d9429d719",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e771839-677e-4faa-b9fe-9e0426b438ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5831dd2e-f99a-4da4-b4ab-5be5384f28c9",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a371381-68c7-44ea-b242-4425237a8c19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bc6ceee-d785-4515-9543-73c077e79763"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0f1ee73-9260-41c1-b050-c251aab4be10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "95652c7a-f9b8-4f37-8a9d-3f117b8823c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "849a35b2-93b7-46a8-85f5-ea387da75af5",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08742c50-b594-4c28-83c4-49fd952c00e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d325a198-74b0-42eb-b3c3-db0d2d1fca31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69ecd445-ba76-46cf-b5c1-dd74a7d1ea38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f7009f0-a6cb-4fff-847e-05715b13d72a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28f9e61c-8dd3-4759-ae9a-c2ce50b118ba",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2c9f354-bfcc-4d12-8666-51f0e6255a30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99c80721-2138-4a9d-ac14-bc9f22f96cbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1311ece2-7c9c-4c48-994a-883d9d49dc48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "12517bdd-81fd-40a8-8759-c15400761cc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64314549-0217-4f76-a8bd-0d70bb27c655",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db05b752-134d-434f-afb2-e75d7862c604",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c8a4b61-5e39-461e-926b-6303ab9e7235"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f4e2e95-2edb-4a24-9c48-ca1c73abd144",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c4b5e2d1-c0c5-4645-aa66-bc485665f852"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53e9ff38-6d82-4981-a13e-6e358073b081",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bac1bdb-b343-4410-ad89-3b03de0a13d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32a7b3d5-6f25-4605-b9a1-6e9f82608fd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f233b9d-db86-4c04-bb3a-10c2e283903d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "36aae949-f808-43a6-8b6a-9b995a8f541f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47310843-596d-4ccc-ae78-73c2421945af",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bc49e78-2f4f-49b7-8548-ec83f9a03c78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d855382-60ca-4689-88cb-d632c842cdef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2247dc9e-4a67-4700-a9d7-1c324f1268a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "88fcb50a-f319-455c-97d3-897c8446d8ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "320e40e3-6040-43ea-8d5d-0ae4d7a4423e",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfccf664-5d49-4ad6-893d-1486076cf2fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "421ad21e-97d1-4bf6-b5e9-502a7346f3ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4239947-3fea-4357-9a23-14a938767de6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d467168-fc0e-473a-8c45-c3fbfb420d86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0296a4f-9fe4-4b50-a145-f0c013a8858d",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f88bc9f-8cc0-4b50-9a39-c9cf5b2a41b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b5b9a1a-fa02-42eb-9056-868cce80c431"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7df04fc-5e7e-428c-a293-932092908209",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b7dcb56-7f95-485c-a1dd-d37d75b29af6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f98775ea-4776-4611-8f51-07e40cc45e3a",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4d5f6e9-f996-4679-aa6d-0e1580878eef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af58d4df-f1a0-41e6-a907-0c1f99f01881"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dcd59ef-af75-4115-a486-05df566ead91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "83bb20c1-9d84-44d5-940f-cde0c20e0022"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9da41b92-fc08-484e-9937-888a09aa34b7",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "043f77f8-df00-4b0b-9ef8-0fcef0a5bfe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e644de39-23b8-412a-b011-3979a4decd89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e0bc181-342f-42fe-89a5-17b96b13474c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9756d5d6-29d1-4e89-9db3-a3632f61b6e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0312812b-2b1d-4d6a-b729-80b3a64ee89d",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29210ef9-a9b3-42cf-b9d2-67f17936406f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45ccce90-92db-451e-b8a0-a8390d8cf2d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7b278ad-0525-4b4d-b16b-c15bf598fc76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "5543e6e6-a30f-468a-8337-6fc868c7d852"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c422704-e179-4eb8-88f6-9a4318190c85",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83153a5f-9173-4797-9a27-a55462e8ce8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "392e9f35-ed5c-4191-86da-76a373ff87cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "634a6c6f-a600-460d-9ca4-03654ae94f5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6b550206-b642-4b6b-b994-749c2d03cac5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "092f8ef6-b11d-432e-88fc-c5bd211138ac",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cc3b4ad-fced-4d44-a93d-82522679c225",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7ec676c-e042-472e-85b3-0c83b5945002"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a137f216-0555-4ffe-80dd-4dffc4d0e02e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "31fa6912-34d3-4049-a1a4-06ef5b57760e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0bfa038-6f2f-4c96-bcd6-9195d14bbd24",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95b88f98-cd35-4e57-8135-cccd340b10d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a14f03a4-a6dd-4506-8809-d30a32938f2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc7d52be-c1ab-449b-ba91-011c75f91248",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "45be4794-78cf-426a-8687-21b4a32e24c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cabbd2f-7f07-407e-bcb1-bb1c9862caae",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d844273-f078-4376-bea5-6215fdbb47a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9234d1c3-244a-46eb-a54d-5fdd2ad49437"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54ff27ae-f7c4-425d-9a08-a800d82570d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "5d87f5f8-97ae-4ad2-82e5-cbb6783e8830"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f82e01bb-956b-4bd4-ab3b-89e357047790",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0436be6b-e649-4ee9-89c8-bd1297bcf657",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "7816232b-a026-437c-b76d-c846cf91c579"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8e1d06a-7d5c-4b7c-8f70-9728a4a1a258",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "3dab5c04-eef5-4346-bf5f-07118b81e055"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5360d4e7-cea1-4caf-983b-39d7748ff4a5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2ce7226b-27ad-4708-9c0c-e65ca731e439",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ce90e1c-afb3-492f-a671-57a16996d523",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d4601854-19e1-49fa-963c-5c73e014c001"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38489836-d5b2-4f95-bafb-020590e62708",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "719d0575-d06d-4a28-af7c-115fbbb75155"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f9d07424-4371-4884-9fb5-be203934c821",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "51509c14-9cb8-477a-89c8-bbb1f7db85a4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "42461623-037a-4b96-b0b5-cb8ec6bdb63c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c17acc57-a5e2-4f92-9093-928dd7b9a471"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1b6c80f1-d18c-4048-90b1-13c6c4e1a55f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d1155cde-a0ff-4ee9-81a5-2c0ad4782275"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a061a30c-1197-4e4f-9c0f-a180d8784f47",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6724fc5b-3674-4e06-9a4d-d46b205484f7"
                }
              }
            ]
          },
          {
            "id": "c5670b4e-0007-4b17-8131-cb59c90bf6bb",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c151cc7b-6026-4301-ace2-e9a19bfc2e7f",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4fa68c9d-066f-4df7-8b03-a067d9e706d4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ffe68a8c-7bf6-47e5-9f49-8021ae554cf7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a359edf8-1522-4921-a00f-2fc7f9b7664a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8778d028-5230-45d9-be6b-1f4d53a096af"
                    }
                  }
                ]
              },
              {
                "id": "8fd0b7a2-6d50-4359-bc64-515fb1fc68f6",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a86406c0-3c85-4910-aae7-cf982652e16a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b0144193-d34a-4c3a-b801-f68a974b060f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "694826f9-f2cd-49c8-97d6-14c377eaafb9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d1464813-6596-48a7-8b24-64c1cf1e5719"
                    }
                  }
                ]
              },
              {
                "id": "949a3afd-50c5-4360-b1a8-7f54ddf9e098",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e4ce32a1-4956-4344-937d-940920f2358b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "99b0570f-598e-4574-8976-5e72f9a28062"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e6993a58-b0f9-4aa9-a74a-ffd550e27b8f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5a8aa3fc-9d20-4b4a-b3a1-67daf8ba9b53"
                    }
                  }
                ]
              },
              {
                "id": "b46dd099-5ef7-4680-b315-0760075ba304",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c89628dc-7688-46d9-8169-ea14ccb5bd38",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "eb0c78b5-54db-47ca-bf86-e70f8a56236b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9e564479-9281-4c72-a0a1-dde22a7f4c8e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "0021084c-0892-4f63-9c10-4a0500f34e11"
                    }
                  }
                ]
              },
              {
                "id": "d4f571bc-2890-49a8-bff7-66c6cd55507c",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "25b92afc-7f92-4873-8308-477f13f69af0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d45c6892-fa26-413e-9ffd-3c200be6c5f0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a53e58bb-155d-4d70-94b2-043cced9055a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "89200c94-6fa9-4b88-8026-e36148a26736"
                    }
                  }
                ]
              },
              {
                "id": "cb01a7f1-8441-4081-b58a-39b1584ea43f",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "75432318-1719-43d8-9caa-fd0329e4aff9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4ccecd30-876d-489e-af6f-998113a6414a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a5b9c09b-a61c-44ce-96dd-43dad8e3841f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ce3a54ec-3cf8-4861-9eb2-9bd2780bc74e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "03faa0fc-72c5-42ff-b2e1-4652bca175dc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "95b375be-3c63-49e9-a988-79b72470050a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "779d3d0c-6862-41b9-85c8-edbc7740a044",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9a8e12f6-fd88-4d2e-98a9-35fc063a9daa"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a2e6937a-a305-462e-b8fc-a00dd17285d8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "518226ec-32ac-4331-b399-e4fe67c117e8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6d788658-40d3-4478-bf1c-373deffd90fb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5222cb17-36a6-489a-ba15-131b9b2e2a97"
            }
          }
        ]
      },
      {
        "id": "c9165ffc-d92a-436e-bb7c-ca0b43d62fd7",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "24112ef5-5581-4591-a220-00ca4ca02ff0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "64bd9dcc-8074-4084-8a6d-d5f69a01bcb3",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "841667c9-df20-4a27-a2d3-f5999e4f8708",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "041aa979-06c0-4412-8ef3-a5b6c018d133",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bb0e391-9cb0-4eb7-8211-50f77db27a4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "753df1c4-706b-4c01-b626-a9d09f003488",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "6fedbd4e-4ab0-4ee2-b3eb-6074f1f9e38f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d2f22d1-68cd-477a-a0d0-f9d0b8fc08b6",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf7a49ac-6b60-46f4-b62b-1e7c500c5d25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a7e2d2b-377a-4eff-ae92-7502474168ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0127277d-702a-4f75-a0a2-b1adc83a9b4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c14b54a-8146-458e-aded-77559ddf7559"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ba5b080-b246-43f6-992e-78fde66cef5c",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b837e30f-fbdf-43c1-b18a-f36f4e366e03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6cacc63-fc77-40ec-bc1f-583a78ff96d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1bd3918-217f-4d6a-aa57-0c8c61cbf815",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "23afd934-b058-4d46-b6e6-222b654075bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b893dd1-1d9b-40c6-ae86-15ae85cecbb5",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6a3bdda-888f-4b74-b216-ee07432870f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d3fec39-b1d2-43db-ae3e-7df90e565a6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb868464-a90f-43ce-856b-933c1d73f0cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb540449-b0d7-4073-a06c-b4f6890494ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8313c0d-28b2-4fc5-a0da-6bcfa8a42c26",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2e37de4-a706-4cf1-b834-e08b79da0ed6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db5b4b3d-7064-422c-b5c2-48d4b8510c9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "752b8861-a201-4785-b7a9-f955c7d95b23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec8dddea-3662-4d63-8f4a-5ba3d891bb61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49995203-1e67-47f8-86da-d6f76ff38179",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03566d7b-e3a3-4a55-9ee3-ee5fdad50a46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5200362-ea95-45be-80f3-fac0a6af0de1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7249f64-8008-489a-8bb4-38846c3d41d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d9ba668f-a081-412a-bcc1-138f274bf2f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "096572a1-d5f1-401d-b1ab-08c9527c929d",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb9a0c9c-459d-40df-b840-c82392a911f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d24b5c6f-a396-4b0a-9b50-d074088b1d74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dafda4b-d208-4db0-be43-92355f2b5e50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d12f044-6863-4098-9fa3-cdb1a143424c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dbaa38e-3835-4656-88fe-820f1b016eb4",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47bf2806-88c0-49d3-b10e-b58283c95955",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc37aa4a-f4bd-4861-9a2f-a3dfecb3c07b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "146cc5ef-4540-4c3c-8309-dd7372878431",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fbd1d65f-e84e-43d2-8c93-22570c2601cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faa9ad85-a1f8-411f-b666-046f918e058f",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a20bfc96-0107-4b6a-8a36-205e6dfb175f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9bdd12c-5dda-4c6f-a4cf-46f2390d8a62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69e2f4bf-ac97-44b3-a3c7-7c2065450d62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0659ab6b-6554-4287-9f0e-2d7fb8beed3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f3ece69-f0f7-46eb-b447-28d8117a2b10",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bf98aa6-a615-493b-a5b8-c260e767adda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4a2fa62-d4c2-4c71-9291-5161d90c3a00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ae7e40e-a7a2-466e-a8d1-b0a473db8d12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "30dcbc1a-39f0-47ce-b4a1-a5edf8ccf1c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d71330f0-e2b0-4514-8e2a-1b968391e4f5",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b4bdbe2-88ff-42d0-839a-364f21e32946",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc04463d-5b93-4f4f-b883-8cba37c5e63e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37b6cf78-b22d-4efc-a0f8-77c4f56b0d3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "5edfce5e-4dd0-47c8-a851-7e8e78721cc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eb0bee4-ff43-4c80-9e1c-9b980f4dd71c",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7922b50d-73ad-4eed-b35e-57dacd05e261",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb36eff7-ad46-41aa-b915-fac43730a45b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b067dba9-af9e-4e7b-8c15-38c87dbff679",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bdb0722e-313a-4c78-a877-581076abb7e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fddf23e7-372f-4877-ac47-86f015eaa47d",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2408ba7-10ab-4f80-85e3-c775be89f8aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "282a34ce-c690-4c8d-af70-beb6bb297f3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5886063-971b-4f2b-af09-35540e7b1669",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5db9a5e9-540d-4b3b-964b-eaa6a51c6950"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b717b10-a5e0-440e-8996-93d2af8e89dd",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30728589-89b4-4133-9a9b-de1f0cfa1ec7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eef1f34a-8221-4ef6-8a70-7816a3b02877"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c9b6032-16fd-430c-b3bf-b3174b0163f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "2036b379-ffe3-4ab4-b3db-c1bc5403611a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ed7a327-9af8-43ac-948c-1fc2fe18dc9b",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f8fe100-f2e8-4161-b409-f752145f8c14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bb78daa-850f-4554-8cbd-4a2da374f3b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0073b7de-831f-4814-9052-7a16437cecf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "94c9e5ac-b93b-4d05-8b41-a504409e3887"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15d2b083-32df-4f45-848b-d61daabe5edd",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cf35f66-89c1-4a22-82c3-be37f229a6ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28f7208a-e473-430c-921f-f6681e138f4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b188d889-d4eb-4d01-95f9-932283fda5c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "c31bf2ba-d3c6-4856-ab17-6921e42ce3d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16646b78-cff1-44ca-a4a4-5660c8ca47da",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f50b8c75-a689-45b9-9d11-43d97eefe37f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91f1a8fb-609b-4890-b933-02283bbeaacb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "730bb941-6ce9-4d00-bcb9-6d258f391204",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "50575ac7-17f7-43e1-9e0d-098e7ea5ac46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09098e41-21ef-44a4-8ae4-02ca1ca5a8ce",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f0ed0b9-255f-465e-8437-99eafc54deae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db20a01b-8fec-4b7d-85ed-1b39a46a5ab5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51af8f0e-806c-4b9b-b21a-b623d3325e56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e125abf8-f89b-40da-958e-22d3c2b491e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4782e530-3875-4ea2-8cc0-a3d1b2fed666",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94da38a5-3772-427b-91a7-b75f41f8a32f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d9527ec-e3a3-48cb-9d3b-7adda77e3c6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "988a0df8-eff2-445f-b2be-9b4a2e01dc26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3032ec36-044f-43af-af00-73d1bbfae718"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e52e48c-c692-4d04-b4b8-3cb509aa20c1",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "803d0b6e-a831-4982-9704-da96764bb55d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56fb4f15-d075-4603-a730-f6ec27d6cd6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60cf899b-536c-4383-993f-1dc855f6e715",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "26452cd5-2b5f-488d-a104-e31a91cadda3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e267a19a-df7b-4659-a380-eb78a503f2fa",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5144cdf0-b14b-416a-bd85-7ea56b7d6a8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6c157b5-37a3-4eb4-bdd8-449ecd7d4c12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c328f265-ab5f-450e-b697-74332b1b68f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "22f742d0-2dec-48dd-a333-eb4244b328fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80fdd5ef-1a22-4865-ae63-2741aabfbef5",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "991657f4-7fec-4f7b-b6c0-ba93e6a1041e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "affc3ad6-5b87-4586-b77d-99ef20206493"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d717329-94f9-4dc0-adb7-6fc7a1c104fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "64412df7-ea92-4cef-976a-574ff1cd03eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29ce2f51-8237-46c2-b40c-0ff64b258086",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf5f0059-9d09-4df3-98cc-9e765e8cf88f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93d43703-0a08-468e-884d-82fc952bb932"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93b951fb-34ce-430d-8242-da6dd118a7fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a5f3ebb-a247-4016-8c56-2d7fcd2703ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd002ac3-88ae-4072-b80a-85323961a0f2",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2307aacc-3f6f-439b-bddd-20b08562a039",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6781395-c1e4-46f9-8f19-b0f53071f6f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ee526a1-25b9-4ad5-8c32-007d03a97e5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c284851-e731-42b0-a93d-51fd555eadbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "076ff6aa-5e6b-4cb4-93e3-6a0ce9d65ce4",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6590e301-c26c-4f51-bdc8-36100ed0603f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e02cc678-ac3f-4110-afef-158a22be01cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65f93a86-4b88-468e-8651-031bbff553ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d341483-7cbf-4ffb-a6eb-1e64dd09679c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2645b988-b22e-46c6-894c-5bd6cf2cbca7",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8cb6881-d81e-4c25-937f-8fbd3388f6f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d159d99f-8734-4fbb-b776-2243e704b629"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd4d4893-6a8a-4a1d-a116-9e623a49e925",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "da0a8fda-75ee-4f2e-aa73-252b3f99ae7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7bf4d1b-4afd-468a-95b2-0f882adf540b",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a97a3f8b-eef8-4602-8ad7-1a608343efdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5622c614-b1c4-43a6-9681-c28a820b4245"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38ec628c-28e5-4080-8064-37a077488e71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a007a380-a6fa-4cf1-8916-63c7463d0c3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb9ef522-fa6e-4932-b1ea-7168138f2610",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8ffdbe9-989a-4852-975a-e681d9033682",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11a25c03-2dc6-451a-96d8-80cf1315222c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca63857d-c017-4e68-9ec2-4fc9cb5bb7b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "76a70179-04ef-436c-bcf8-0cace053cad4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef29b850-ae62-47fb-8ff0-63b6325d7ee2",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33f630e8-8a3b-4773-b916-324ef4442bbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f92cab02-fdba-4ef4-99b5-99889a950e40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "229c277d-ab2f-41c1-82c4-0268915f0a13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "678c81eb-29bc-4d57-897a-17dc4b94f526"
                        }
                      }
                    ]
                  },
                  {
                    "id": "756db54f-d673-4cbc-bcbf-40bfbc383f46",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1922a17-fcd5-48d3-a693-ff1375c60ac1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b368f3ec-2a8c-49da-850f-8eeec83d732e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2957ae66-48d8-4641-99f3-34c2668042e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c506a2c5-3be3-445f-8e5d-68c9d96cd7c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0642fecb-c8a7-479d-b7f5-4f3a50d9aa55",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c057a28-4f9e-4a36-8f6e-ebf7f36466e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d9c0ab8-60db-4959-9a85-06ab817194a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "597b747e-4724-4599-b619-8aa28222bc5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b2f71ea-59ec-4297-9976-50140d1210be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93bc50f8-1bab-45bc-b0c8-e40f5fe2fafc",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6cd3b5e-ecad-44b8-8316-cb37c1a02176",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "006e8dea-1ba2-464d-81af-8d8a71580137"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23d9a436-7955-4dc8-832c-3453b70a51ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0317cf07-c0b1-46d5-9526-c687c9be7129"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b825b7fa-1a9a-42ea-9d26-a057e42b02e1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "abf5685f-1aee-46c1-8e2a-113678b5b501",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1391f4f-6f2c-450f-9b7c-d9230d3547cf",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "807dda92-5bed-479b-bc4b-e1451e67a352"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae6c1933-65a5-4d93-8e6b-254c0c149c02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5b566a4c-1cb3-40e6-a074-1bfe9e101ba6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ab72de32-859c-43c4-93eb-71ea994f974b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8dc276ab-3d74-45d3-b17c-99e855d7349d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e645fd1e-4b2d-498b-8348-0ed096ac9d02",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "909b9d9a-345d-45d6-b383-196641c59909"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ee696996-7b4e-4e60-851b-83d7b7f0326e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4c5fea58-f777-4b9c-8b93-9ec8b448096e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1103a9df-6dc0-49b1-8602-719b7bac3537",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6a214f0f-9e88-4950-8e4b-73ea4faa4bb7"
            }
          }
        ]
      },
      {
        "id": "286ac91a-5d00-4047-ba90-d2fd6d5e716d",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "68098a22-930e-436f-af57-00808ffda47f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "58cda131-ce1c-48a0-8365-ca528e18e2bc",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "eb31a7f8-738b-4313-9588-a86408db5601",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1e07f9c-9114-4968-9437-6088abb82198",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f7dc1c2-137d-460c-91f8-f2bf94805ccb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ad4b300-f906-4c14-bc6d-80659360bc64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "60224701-e455-4577-b4b4-f1cd13b59876"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b13e5d2f-69c8-4b3a-a0c8-eb3fc878bd27",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e147b7d7-8348-4b6c-8dbb-48c97bafd56f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f92c135a-b938-4c43-94e8-c99e2a37ae19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f90a477-a251-4588-b166-d1086a6a150d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4bda10fc-8d58-4463-a4fb-ab9946111fba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8de69520-438e-4ba8-8c31-d28cc6628934",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc2aa2a4-72d5-4620-902c-712e00e5d818",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1da6c309-16bf-498d-8263-d63602258eb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dcf6233-8594-4bd3-90ef-27642ffaa9e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f26a0baf-28c5-4db8-8fd4-a3cea28be1ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac10a240-f714-4a0f-90d3-edbc8ce1409e",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f945992-c90d-4b41-95e6-78b9300c4df9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7402721-fd37-4852-9c20-550994583858"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4954776b-336f-4ac5-8627-58df452a804b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "13780a53-68c8-4d61-b562-caf7361d73bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60f71011-4378-4db6-8379-12011f3041f2",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0692870-5088-443b-933c-de8949177710",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b435844-0c22-4ad8-a69a-ef465314ed1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38c66256-3ab6-4ea0-bece-b0c51a7d10f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "facdafa4-bbe4-499b-87e3-232bdc1c21c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab5d5fa7-c6ae-40b5-becb-e31bc4825ced",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8a0cea0-c2de-4289-b170-2875903e0411",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f708ba9-7792-4ff9-ab1f-e52609370e78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6133e092-f264-4d09-9539-9a539afdda04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "332929a6-6516-46af-a2aa-a3f95dce0646"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd05271d-6d2c-451c-ba5a-b4f139453491",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee0fa69a-8c45-4271-b936-6b959e3c0df1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7572aeeb-183c-48b2-bc71-34b7b6a9b5a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9028b304-fc42-43e8-a42e-8331850abf7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e53df2b-55aa-486f-9123-836e887e0060"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac10a598-5f02-49b2-b99d-277fc6537095",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76a934e7-c1fd-40d0-807b-c6bc6eb2fc20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8af3b144-eabb-4f81-8d96-7e464f54997c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59e192c8-d48e-4b1d-b0da-8403b107fc2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d558f74-0bbd-4b94-94cd-969f1f3a892b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d6d52e8-8fb5-481e-b69c-f818bd1a48de",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "286fb44c-f1f7-4ffd-a764-995150148354",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cc7674b-207b-45ba-9d24-d2d031e43985"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94af0eec-b76c-480e-9efc-9363ff617741",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a0cfc6c0-4ebf-4fcc-ab8b-19b1d3e3a52b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cead535-03f6-42bd-b686-736d92b1479e",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9079dfca-00f4-4506-8b95-0b5f0db73af5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9212355d-0ce0-41fe-b669-900381e6293f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da8e3ade-b16e-42a0-b656-e2a65b7fd627",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a9c77f9-ef4e-4b3c-a47a-912e55191f93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa0df406-a13e-4e6d-8ec9-41c9c123df5c",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62fe6c64-ac2d-4ecf-9e95-47e1ad9ce425",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f7fe745-06cd-44ff-9d32-350fddef7c1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "789b9193-ebb9-48c5-90bb-087d66b895ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "feb62868-1e58-4d91-856a-71b7cd2e4d1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c6f00cc-c68f-4301-825e-d94ff030323e",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f1e7244-978f-4484-8f7d-ed4588c714e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c883a04-d37e-4cb3-b838-24381c20efe6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cc49b0e-2ddb-4f96-a0a3-e9b0fe769c47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0505e99a-9d87-4829-a642-21151d6a43f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e0cfb5d-4669-45b9-a54b-fc693161d306",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd18c453-da3e-4041-8f21-393b70101857",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "800becf9-2e56-4ed8-8658-8c552e5e975a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9943a02-5994-4a8a-83b5-913ce9a4d48f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8579a98c-7335-4bf0-be83-7a92f4acf330"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cd1e861-6c97-48d0-a92b-7ff05d87f6ea",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6c0c880-bf7d-4091-84ac-46757fbd781f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10ad8e38-d606-4045-94f3-bf0ea3a87234"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6c500b9-b352-4492-9fa7-97129cb0848d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "e97598d5-c6c8-418a-8047-f6767adfee92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dba7d6f0-8977-458b-be28-5ad553ef9b1f",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40ad6858-3481-4eaf-8bd8-e9069e009899",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10baf60d-a63f-48d5-8346-3321d3bc74b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1666af94-a02f-4d52-b311-2c8fe6063a5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "6010fbed-05f0-49ea-8add-9e34419b8fe6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccd41537-c52f-437c-bbd8-2fe03e6bd804",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23f271d3-0fc9-4a02-88dc-755be66bdfd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3448fde5-70ae-4489-8eff-c4fae735c2ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "648e7332-87a5-42cf-ae60-431dcc077be7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a9d6353-8875-4f2a-b0d7-da88686a01c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c341ca2-e47c-4e42-940a-6f480d59c7d7",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d33b69d0-7be8-487c-8f5f-33aaf294faeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7501d1f1-9fd9-4c6f-bc9f-7e5c945fb553"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bd0b0fa-e140-4a08-b253-04f69aad6771",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "732537d1-45b2-4bb3-be30-d2e048583b7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "458437f0-31cf-4e0b-ba95-7d8d3efe6f43",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3930bb94-7501-4f81-8273-a21d06a5ca7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4157840-39b3-486f-b5d1-10e543c192d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61a8cc17-e3ab-4f55-b578-31c53057c493",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "07ec1310-e524-43c3-947a-b42842a5c0e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "816583bf-1742-479c-93c7-c940c045c450",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c48f767-f2e1-4f9e-b912-bcddad5c2b9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3446551c-9942-4a4b-8bf7-6ecdb2163141"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64fd20fe-06bc-435f-ac14-c5c73203bab1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "930f30f5-c996-42c2-8c5c-25bb52b30148"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79e06701-b077-44b2-a741-d803aa561718",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68e7ef2c-2244-4e62-b660-835f489d29de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9efeeb1-2e19-4e16-b7d4-17e9f11d6741"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad5d08a4-0011-4a36-ae7b-357a039af631",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "770c89c2-6d5a-45d4-b551-4f16b6075d55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b88d72d4-6981-4f31-b8b5-093561b3c8c3",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "982efa92-94ae-4acf-a4d8-832b862fba7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43b8106e-dd90-4c0b-b9f3-984e12176cee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a30afeec-5d29-45d2-84b4-971b309f8676",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "190c7452-75b8-43b5-9640-87e50de29ea7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1213a42c-91fb-4b7e-85d7-6d6657fea358",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f257cb42-e2b5-445b-a07b-a6f06d757753",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a2aeaf6-4891-424d-91e7-5fc2ac4da3c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a34c59dc-b69a-4849-b80f-b0373492f6db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1be3226d-ebf6-41be-b0b6-61488c43619b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efaa246e-299a-493b-a74b-cf8e0dbc2c64",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7fc57d6-d30b-478d-915a-8dc2d9269a04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "163ee95b-7591-4a67-a8a4-bb5399d3028b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e41833a-24c0-4980-a419-b342c0c71783",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "671bb8ad-ddd0-458c-aaba-68b03d62e60d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "979357da-2535-4df4-bf70-df028b3c8058",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aff4acbb-9fda-4e89-bc22-2d1e290356b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3193f6cb-14c7-4415-8aa3-f483c1b7d8aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78a8c5b4-3cac-4233-9323-0496b5d23373",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3eb5c4db-5188-4f06-8f05-f6557ca609a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0b869d9-8807-4148-a850-ee413cfd348e",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d83b37fc-60da-4cc7-8de9-517f6f791604",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0af60e9-b5b3-4865-ac69-76feff90bd73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2299939-4e36-4a51-aac2-7096f571834b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3415cc84-0290-4e30-87e5-48db57e48307"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc3345ea-ab75-4d05-9224-8c3957b53b13",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7832d173-be90-45c6-a2be-412334d20bf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d282f072-037f-4ce9-a2f5-7e66f8306a1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a00c631-cdf9-4273-8d3a-300d763e6e52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "137e1ab2-33dc-4d7e-8d17-c4dbec822cdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04ce4907-4033-4dde-9c14-852f2eab2409",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27bcd721-4557-471e-a34d-ab683f5a3bc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd45405b-32be-44f6-a6f7-b8d8e249ba31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e1897cf-5480-4cf5-870b-8192c5af677b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef67de31-0138-40d8-b4eb-4064d81d19ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31c9f855-6784-4845-908b-3f6b37bcb510",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5646c23a-b7aa-4dfa-aba8-c1a66b6c7bc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b1a2e46-f2c1-42c3-a65e-e39dcd68f395"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73095ca3-fb52-4363-96d4-a6f0f84dfee3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c89ec615-5434-4d44-9e30-e2345becc5be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4534b900-d349-4680-b4f4-8971e3e637ac",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b4511af-d366-421f-b6de-98e72526aa29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ec7a81f-efbd-4e78-a126-ea3cca5fe86f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbc4ad5c-db8a-4255-94c9-a0f4f1bfc277",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "936803d1-1811-47d2-8152-222e574f2f0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9024b562-c41a-473d-9b0c-d783f436ebef",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08001284-0383-4551-be75-5d63918e917c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16c06a74-df6c-441f-95cf-f4bd818d3e98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c3c1859-ed8a-4c92-8bdb-a0ad89bda565",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa0798b3-9761-4a4e-951f-56c404178937"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5333dfd9-0e3e-4a95-8bed-847eb1da9a6a",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3abac3f-b0c4-4550-b89d-699293860b6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "662bb5dc-7bb4-4eb9-9b82-4cc027bda70f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "755521bb-fb0e-45e8-98e9-12659ab372ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "78db6618-2005-4379-8833-711e12e4c1b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99274d21-5bb7-4443-8e07-d38de9908f26",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb994181-bdb6-40c7-8a05-2770f673cf10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18b1f916-06ad-4cfe-9e7a-7b3eba86df83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63c76de0-c066-42f0-b527-4febcb4831cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a2a87148-d872-45db-bb24-a0556d755309"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2721f811-7568-4b17-9784-8e18f873f245",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cb0f4b0-c52e-42a6-9620-34f86bc1b991",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adec2e47-1119-4d19-97b3-61a591d513a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "009decdc-e1b2-4a1d-b7cf-81bf7cfc98ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8286ffe-d21e-4244-966a-5b6908e2bfac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5a5f7f3-fac4-44a0-b975-2e9b4caf248d",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4096115-845d-422b-ad90-1b40f1bc20e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4dfaae3-6ba4-4425-a0e5-bf1f1caf1151"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7192916d-1c46-4e93-b0a6-e9ca8d53e220",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b2b5be67-343c-4d2c-b207-e5797ea3a72f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fca8594d-20f4-4c9d-8750-34613dd20726",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca8a973f-e124-4b66-ad1b-f71839ad9cbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcfad145-0162-40f0-97cb-aab838379ae9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25b940ba-a9f1-4c6e-bf71-1d8e8364eb4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e72762dd-3533-47d2-af4a-2eb9011a3f06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5954844-19aa-4531-879b-e5e103391726",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f26cc40-0256-4362-8013-ffa6982f6af6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f7d61bd-6a15-44e2-8042-771e7e91170d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8b6d0cf-6c27-47ab-be46-f52ff97e3687",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a69558ca-ac16-41ba-a9f7-3e4e461f72b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "602c0dd4-5bfb-4085-9fc3-c9d77aa5f0cf",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c271cac-5791-40c7-833b-133cf17743d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6cf5a48-9d46-42ee-8848-9b5e02192f38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "942a5d9e-f247-40bf-99ee-119a908bc02f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6087e29f-c624-456f-956c-fc473128e894"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ab812568-1de5-42f9-93ec-22fbf4913113",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a3764756-c6f2-4c58-ab65-699c744e958d",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9267c16c-2230-4978-9899-de1f45cd0d8f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "583d30f2-b01e-4625-962a-0e60e37e8b86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebcf3bfe-ca61-4353-8976-fc484f00c54b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bd9e7509-99e1-463b-9506-bcc16ffc1182"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "66f933a7-8714-4905-a788-615ce62ea9c3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ff642ce0-b63c-45df-b4d7-104dafb38002"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a053f0d6-559b-4305-8975-c1492c73c71f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5416a8d1-eb3d-4374-a546-46f5450f53d7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1a01f110-742c-41a1-a49a-aa5936dbaa15",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b45fbbef-6ce4-49b4-92ae-33db31f27f2c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "72b49555-7893-4c68-809d-7b21430ce0b5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1dd9b7c2-a411-4181-b725-580f7a8377b0"
            }
          }
        ]
      },
      {
        "id": "f3be7e22-b24f-41b6-a81d-cef593d3c71d",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "c0a0d6df-8bac-4fdc-8a16-5d9c1140049b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "abddc3b6-959a-4759-8885-adcb1fd91b0d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a78c7e72-7c86-4809-b545-3037e74ed795",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53fce6b6-a645-4170-890b-2b1b41f3b13c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bf84a14-d133-4c6b-a3d3-dbd7d49013c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34544840-670c-46e5-a982-98a0c1ff89bd",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "434cb469-4f10-4893-8257-b8398c5991d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4de36dd1-960f-4961-ad95-b28da03676e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a54480c-1f04-4536-be61-921599d4f83b",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbb4f9a6-11f8-4cf8-9606-4c1cc9c6d087",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26561bb8-ad9b-4472-9faa-ad00d20fc3f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bfc1b20-99ee-4ed2-8ff3-99bc1f543a6e",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e23951f-7462-4fcf-abaa-7b13f8ed73d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c45705d-c220-49e0-821f-26ddfe5095bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "696f545f-7545-44f8-a728-a44b58959e33",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f51406e6-2152-40bc-a6ca-bf5e534275f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa54f4b0-b97a-453d-9dda-9d354add5d28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b2c45df-715e-4ab2-a4f9-5a37e0e5cc71",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f88e6742-e813-4fae-ac3c-1a267418e049",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bbe6907-4cb4-48ec-ab4b-2f249a70cdf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e390fcc-2e6a-4bfc-b51d-a0b51f2ab90e",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39333cbd-be8d-4049-9f47-b74052417eef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a31e65b-d598-42ad-b923-6e86a4efd1d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "254c0f84-d015-4416-a637-b4cbc7201065",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d794fc34-30bc-446e-ad47-f7b9ff7533f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db2a7e87-e495-4f32-a2a1-9ed196b4ba05",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73cf4642-8376-476f-a3af-78f66889ae0a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16588714-129e-4ce7-b055-290692c8a413"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a5d2251-5245-42ca-b42b-3d81dfe828e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b1ac876-6e31-4841-9cf0-443e70c35279"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54c1b138-c2dc-47ed-b99c-63ed7c76a0f1",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecc0da78-5147-47bf-aaa1-c13ab077dfa6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6ed74b4-df27-485a-8c1a-d9a9be6bca4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08dbbf13-30f3-40ab-95a9-96fdcf68c1bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9925be5-5a6c-4a28-ab60-017de4d0b31f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cf95501-89a2-44d0-9a02-766031ee0ac6",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "615062ca-2ae8-40b8-94d6-bbc948e46140",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "946f2d0a-c8b1-4c60-8fbf-812c738ff7f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b288753-a97e-42b1-9d06-02a9a0f5b4d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7681897a-673c-42b7-9ab2-12c34b2af247"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c317a362-36fe-4e54-a54a-29eb34654400",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ae9c490-8460-418c-996b-44a1ebb839eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c5062cb-b9fb-4ce7-b3ec-37266aaf1134"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcd02e2d-817e-45b6-947c-76ec2068edfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0af422c0-16a2-40fa-8376-145a527268a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2deb384f-34d4-4df6-84cc-a1ff993043a1",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "470da1d4-cfd8-49bd-9bd0-cd49d666dabf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4248e41-f3c5-4de0-b16e-2e712ab88fb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "685531a5-a69b-409b-b751-706c2bcf811d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7103ca96-12b4-4d9f-99ec-9140c10a4645"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a8b3bc2-b5cc-4678-a05d-dd823e4e7b6e",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0174da6-e24f-4e44-b1be-ccfb030cb7f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f446be96-12d5-4ecb-a4c3-afa071de8e39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "737da8f2-9ecb-4347-9b60-0cd1130cc396",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48a47d95-236b-43cf-ab7d-b949038d08a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fd00b7e-35ec-4379-a7e9-f4d1d5463839",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c9adf9b-272d-44d7-b0af-49bdf8463aa5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "965aed29-1a6a-4513-b397-a0cc39a46484"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0cd8371-0cb3-4179-a041-be6ca1df5ab8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a8d5543-7893-44fa-a693-8f4d552652f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2de37aae-e84a-450d-9b34-63df860f5b99",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22b7b936-ece1-4de4-92f2-2bebed1a9a0f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a5edd61-33c0-4ba0-a608-9a7a000633ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1c19910-ed55-42f3-a236-311b253bdc46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db7106cc-bd11-471d-a0d5-e51c2dd844e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b97e0f8f-cec0-43a7-b918-0c5a801f211e",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91506385-8f47-44b7-a1f9-4e3145fbfc9b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1815e61-5a4d-4eba-9203-65b5a99ade2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab970073-3d13-4c75-a38f-90a73fd50c66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebf98fde-4ec8-4ec3-a951-b243b5c51883"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f83f868e-021a-4ed4-b484-fce4ea75e19d",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ca757c7-b74d-4931-b22b-8a1c45c30e51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be2185c8-bec9-4de3-9e1b-6a33818e9885"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a308045-57a7-4ab1-85c8-453878a05857",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be0b839a-d8d7-4702-a063-2d0079ebf4bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97fa0666-3a32-406c-8a4a-1eb4833854cc",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "beefaad4-c9d7-4ffa-8c45-bd09a24cac2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "586909a4-4a13-46d6-9195-2431ce2f4aa7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f263033-a275-4c3a-b1db-a074a4fc64d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24f848d5-8165-43cc-b52b-a89974cfcfae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fefdd3a1-ce5a-49db-af9a-15592ef42ec2",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37bd9fb8-68db-4dc9-a40b-7ad3765c3f01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a723055a-b260-487c-9efd-3bd192e79569"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7706617-31e7-4108-afcf-f8a939514de0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf47e811-e02d-48ad-b648-ba56749fc691"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e82409b-f3b1-4851-bf54-9be705e0d894",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6184ca2a-b041-4c90-9722-cd14efd07a58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d68a70f0-e74b-4fc9-9dc8-d196181ab0b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8931a05c-f6ef-4025-b4af-134162a38e76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb30e058-70d2-4c2f-9eaa-97a3891f6326"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9aca496f-13a8-4df7-9cd4-e5a112493e1c",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e529681-9cb8-4828-9bdf-2458abcb59a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9c13734-f894-47dc-ae8a-cce431910d0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff5dcee1-9ea5-4fd8-a507-26c164568eaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "890e9cda-8dff-4401-bacb-0ca16637fefe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86633c78-fb0f-40e9-8ec1-762c9d08b229",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b282fe17-fe89-46c2-9ffc-eb9b3139612f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f038fc97-a1d2-4b3f-8786-174e988602bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b257687-d358-4fdf-a985-64a14d20d386",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50c49046-d9be-4590-b43c-dc7b43efe7ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "433596a4-3d4e-43f0-9199-b1266f6a0518",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7ba2ec9-6cc9-48ab-aeb1-8db291d2ab50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92ec02ce-61eb-472c-9c06-aa401a154394"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c747cd56-f742-4935-a851-adc506e17108",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2ef3146-782b-44aa-997c-748c61787421"
                        }
                      }
                    ]
                  },
                  {
                    "id": "124b248e-5482-4fee-8871-356fe8baa99c",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7b33c45-02e7-4d08-9a9f-2a2635621568",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78427741-c2ab-4814-b649-27fd5674813d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d86ced8d-19bc-4742-a2ff-3251b9d82fb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b95d558c-201c-4c57-a351-f2334037c3a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aed3e83d-0337-4b5f-bf59-42747bc670d2",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9baf67a-3a33-4f9a-ac6b-007dde0268a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9cfeff20-71e5-434a-9cb4-74e34a9871d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1b0d72e-e470-4c4a-bc28-285b5950faf6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1b29ed9-ff4c-49be-97bb-02d7d6612440"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00e5d59d-1b85-4caa-8ff4-78cc78436950",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2b4b301-7722-4542-a163-cb6204bec5a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "444614c8-2a43-4969-b9a1-8f7b098a31ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cb990e0-9059-46e6-99a4-2a4e316ecfd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b20f3c05-d539-4a81-a879-af455c87f065"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14535e8c-d899-4fa8-97a3-fc1e87394cc6",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a072e5d0-f94e-4fd0-931c-385a0e700e77",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d164d46b-586a-4771-8715-5da76cb9e211"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a542737-71bf-457f-914c-43029e32dc1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e6b5e5b-e5cd-421d-943f-0585e1a3da72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62055247-23bb-4b8d-9cd4-07e73a715e3f",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c72e8764-650f-4d40-b883-d4d5a4ba8bd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c36d30e5-bd74-4e4f-9111-ae973fcbc86e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ac111b2-bb40-4679-a891-bd2dec92a809",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29892b95-737f-46e7-ad21-feb55b09625c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25792dfa-10d4-46c2-9a5e-b9748af6bc1b",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "070252a5-5d71-4ef8-876a-1af6cc9b4ce3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "325eb63c-6b37-4db6-aa51-4c123f480f5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d66a460-bc2f-4e94-802b-2ac98967a7b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29ed212a-a958-4642-9c43-09853d8e2f0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2155b3f-d3c3-483a-8a8a-8526f40eb012",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "557347b2-e8ab-4d67-95d1-6a0d1df9339a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "963d7efc-9623-4737-b9f5-2acec97d037b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e116cc3c-8615-438d-8b39-6b209442d1a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e918066-d392-4dac-826a-bcbe716f960f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26500127-4229-4183-9dda-5a47c662eb36",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe3124b3-41d7-4f56-a5f3-af8b8de65469",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c0e9ad3-57ea-4131-9244-087984ec21a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a9afbfb-3561-4dcb-8114-430bb3a91b86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87c6ef16-f109-44eb-90a7-e7d6ed32052d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48430790-9adb-4423-a935-edfa786e6a02",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c7334a7-a740-44c3-8144-4b3f36e296c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fadcad43-7960-44d1-8b6c-b44420b4d52f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7b16279-7b2f-43b9-a2a6-7f8e42721771",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51e187df-1c56-4332-a0ac-1458978d6b69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5990b9c-69af-484e-9e71-7584680ce007",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faf06337-fa73-42dc-9222-429cc5c4f6ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3abacc5-cac6-4c81-83c9-65c5b2689c2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b3e0e14-7b01-43d5-8c8a-688fa29beaa1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e80983ae-4150-43d4-b30f-6967e35481eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "139acc2f-a563-44a8-a844-ce0a6bcce65f",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e405c3f-d447-49f5-925d-0dbb121c5b7a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a55b3e1b-f89e-4bb4-ae8e-1adb2123d703"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2338c4d-e304-4b97-b81f-84c0e6d6d168",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cab971a3-ceb1-4118-8465-76c932823763"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e5241a0-d7a6-441f-8f87-f7853876ea77",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dde75196-4fee-4525-bde2-1183cb8f2262",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2758a1e1-b36f-4bca-a96e-885ca7abfe50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b724d1d4-2d69-433a-94f2-114f34354cce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5fdc56f-d35b-4e44-b10c-561f7b351746"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51eff672-f85a-4f2e-ac21-98d69adedfcd",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0508e0c8-39fe-45d6-8e63-14bf89b07987",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88f46263-a88a-41a6-abb0-9acfd9c651e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da06c60c-f66a-47e0-b6ea-8c0019ecabb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ac6b279-ae02-4077-9d5a-5df4fea9f8a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f45569e8-e001-48a2-a6a0-7182f8edfef4",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8bb1f29-9e78-47f9-9f16-0dce19d659c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d483357-1547-423a-988e-702a241bf296"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c883cc1-b2c1-482d-b97e-4d07d4b567a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b74b8a2d-fde3-415d-b388-7d151e119113"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16dfb785-5b7c-4530-bcec-07f2c8b21a56",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "265bc70c-6778-4955-9d16-59cb28ed7cce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ad95f56-fc5e-41ab-816a-80313d7305a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40a8a761-7715-4fa3-8e8a-f94eb1a66db5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89692474-381d-4e7f-b9b3-3ae8412416f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f03eb8cc-3de9-48b5-9dd1-8cc55edf25ea",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15e4a0bd-7fd4-49b0-90d9-706e3d5b3d3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e616f866-9754-4c13-98ae-591873395374"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3db489f-c96c-4630-89d3-63b2f99185e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13774e7b-3c9e-41d0-8cc2-ca07dc6c506a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1484f778-46f7-42a2-9cf3-68f6e5300db9",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b15c059-37b5-4699-bf6e-cb7ba5e12e7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f1278e5-8469-46f5-8249-5fe7a4814b15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d8e1e0f-13e2-4635-8be0-0407f06b4be1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ab3356d-1d97-47f1-9e50-6c7eb81b7b88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e09c49ee-707f-42f4-9619-8243d13cc249",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdec9aa3-98af-472c-9201-946ecee40090",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "275464b8-5d33-4167-a14c-31f9aaeaca16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02b5b1d3-cbfc-42f8-bcc9-4775fb359baa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c62a0bb-99ab-41e0-9964-52675aa90947"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b361566-63ee-4ee7-8515-60a690b75162",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08969beb-b53d-4a4e-b31d-e123501f621f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fac43de4-ea6e-4957-b7e8-c681099de2db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbb59e8e-2f9c-4953-9dd6-a0875d7c42d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a915dc15-4fb1-473f-8dd8-04b002af24b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "300cc14b-3159-49c9-8490-ac7f02643b24",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81202580-22d8-497e-ac94-b2a78cff4062",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a80889f-05f2-4e2c-bbce-1c7631b8bea0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ba00586-e17f-4019-a2a2-5257a2fc228a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "771919c2-8194-4c35-bfe2-30bd52ed4766"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b465594-b642-4d52-8514-cd8b00d36ef6",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df23f92a-247e-47cd-84dc-6707a3f40143",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "555a509e-b0f7-4e47-a1b2-9790f46e7942"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eec93150-e88d-44f5-92f0-5c15168ef9d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e6752ed-bdf6-4208-80a8-48fdc9a2366e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fbf6755-3f12-4552-a430-06a7aaaefb25",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1ca8909-6250-4d45-8981-d17f5780f1bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a08f56a-9a4c-447e-be64-b9910a1cd9a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b75505f-bf9d-4724-97d0-cbb255d6540c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da723f51-9efd-47f1-9d46-f5e92a08459a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "520247e5-2bf4-4aec-8964-caf6ceb8ce0d",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1099b1df-4214-4b92-82c8-d3aa0b015072",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8757c7de-30ea-4725-b83d-72bd69e84a6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2b77652-2ccb-45eb-af2d-de9026d4b0b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b08564c3-a6aa-4487-83d8-8996cc017ed6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cf49fb6-ba7d-4eff-a538-9a20a1a171d5",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2917b0e-b41e-4367-9d38-962af6fdb504",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3ac6281-be9d-4e82-b568-2c636f4aba29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fb8e959-e57e-4f56-85fd-17d6555b52c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ffc0324-f4cc-437e-8a4a-9f584af89a9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca6542f9-5082-4f5a-9e2c-fa6a52a023d9",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c1daa9a-178f-4f0e-949d-81fb67a8f772",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7341a56c-3249-4d7e-a9a6-44edaec5c8b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2816637e-a879-4543-8d0c-a4d1b5021680",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff4403de-f313-46ad-83c6-611c41d2d03b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f5723b8-83d2-49f5-a139-9c15dd5f93f7",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5e88ade-c860-4acb-8152-2b7c4909e4f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed1f7e19-9351-4119-85bc-564f450ff3a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83b7d6b2-3d32-4bac-b3db-d4213fb3e62c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20d2af91-941a-47b9-950a-3cb9ed7bc5f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5051c15c-413d-4473-a20a-b5b20e9d3cf3",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a789a95a-6103-42ca-9c4a-a4be5b0b954a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc97df3a-c4e3-496b-857b-21ff785ef06d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39762595-1a43-4da3-8c9e-fe9c86efc055",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fb51725-2121-457a-b3c3-1d6b62fec0b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3124e5d0-59ed-4dff-bca1-56857443c5b0",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c5c9f4e-d34d-4da5-9cd8-fb7329e4cdff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41d2c6ee-2d13-4b00-8705-952768fe0740"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e2e8726-faa4-4a09-9285-0b0efd19c3ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7fd91dc-5f09-4988-b0b6-0969b6a80c8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c56921cd-45cf-41fe-b60a-f25686c03f1e",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11317197-5742-40e8-9363-03eda1032bb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6099cd0d-16ab-4383-9d09-4a89b3010ccf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a8a483d-b2d3-49eb-becb-94e0659f93ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd8e1af3-9a90-42f9-9592-0e3b12edd639"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9210230-759f-41c6-a06b-24bb91fcdb9b",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f07655de-e0e5-42e9-b095-8f47859bf040",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "381d2c37-dcd6-428c-989a-5edbad42765f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70b666ed-ac93-4274-bcb6-a84b6180cc49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac3b9f38-efbd-4bec-91e5-a0050167a38b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78c6918f-1d24-4847-ad89-6522477af473",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05c36e7d-5608-4487-8ae3-b60b2477861e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6e1a380-2769-4ac2-a91d-cd6b17d06f02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68cc35c6-1cf7-4f2a-9d16-b96dd1aa9c15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "691f601b-5224-4775-bc83-74cf6046cc61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb32bd4f-cc7f-4ec3-b6d5-6e0b0ed6b8fe",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0250f19-996a-4d1f-b142-39a8dba20c89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a3530a6-424c-4e71-9fab-264d178e4580"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a642327c-b187-4a7c-b6f9-3a5285e0906d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da633ef1-92b8-45ad-b084-0cd3e98cccfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0585744f-a63d-427f-ac43-7c2b6b4c8acc",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8c0a532-1f91-4b58-8b5c-363c81c3de23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "504aadb9-c92b-476f-a26c-05a8afa903c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0afe87a1-5b21-4c5d-afae-60a06a82db15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74b645ee-2a28-471c-b45a-75f5b5a2f98b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57dffe79-e649-4d57-a1c2-0172f3b102fe",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de84ae24-9466-440e-91a8-515fa0291fef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7a85c32-f237-4df3-8e6f-4c731a581975"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ed30afb-e23d-4cf6-952b-b68e39e80cfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc2a2ce9-5ca1-4a02-ad28-f8636d8cc76a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dca80ff4-ff15-46d2-863d-b1b19e8cd001",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11eace0a-90ac-42d6-8693-393bcaca7c8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b152626f-37ec-4324-9da2-c77a091f0b06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f507e7d5-bbd6-4911-94a3-ff03ca9dffbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3519fdf6-b002-4bfc-935e-ae2fe72cf5d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3d0473d-1874-4a99-94d8-6cbc298f8d7b",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ba7c057-cfad-44d1-a4df-5bfca9619343",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d369e1cd-18a3-40b2-8f49-32c12652bf00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3d64e01-e4db-47e1-a1cd-3c430ef6f493",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18f8b3c8-0ebf-4baf-acaa-531e4de7f202"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b39f46c8-a865-40cd-bf71-3ab61e2a52cc",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cd7a1b0-65e6-4fed-a3f1-f8572405dd79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3b1c4f1-afa8-438a-bf31-a0517273d938"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c02e132-a5ce-4cd7-a07a-264d2c068af4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27d44cba-fb04-408f-93ca-1ee73a1e87d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "331ad3bd-9ca9-4ecb-8f3f-0010640a5a94",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2517503-856b-4308-b9db-c5337bf50568",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b343613-e3bd-49a6-a08c-22d4c411db58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74c23039-3a49-4e3e-973b-810ec1c3ec87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed608b96-a6cf-4545-aa66-41965cfacd45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "701e12ec-c92d-4d10-a038-86d23f3330c1",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1e162ba-b90f-43c1-b11c-97b223205e69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d23e1dd-f605-4253-82be-996ea6dcaa27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90fdf99e-0772-4bad-bab8-4e23a3595caa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7b013c4-cd28-4e4e-b120-d5ef92509e33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4897506-b70e-4fd7-8250-3f42daedae0c",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa5bf311-e6ee-45c1-aaf8-7497ac45edac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "701076de-80c4-40ca-8f4c-ed417f652996"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e1199b5-1e01-49e2-9b72-2f0ff24c6efc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24052844-0be4-4e58-9cdb-78f90d2c2cce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4682bfbb-bc34-4ccb-a82d-a760d0fef951",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18bef341-78a8-4f79-a0b9-f072af6a5880",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7dd22dc3-c6e1-41a6-9384-0e6846a585c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceded1a1-bdfc-4dcb-bfdc-b0b6089c8672",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39d77567-3eee-45e2-9280-9bd60942922d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db04ddc0-2025-4c4d-b9cb-a9a72b55030c",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e80de83-6a6f-48fe-929e-07d7b209b4a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a792c3c-228b-4929-8d87-75217b161624"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48e50c03-18af-4f2c-bdbc-241c9331cc11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d12fe747-08f2-4ade-8eed-44be0c71cbae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96132822-ddc7-4725-a0ad-88ba71baac32",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e93af50a-b1df-4320-bc7a-ae832d9eff45",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8dcb4f1-a16b-4660-ae3e-2feefdd1416a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12912630-01b1-4593-a7c1-59f330a6a159",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5f0b19d-c8af-43d5-aec7-eafc58310a9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32dc8588-bd99-4c3c-aa61-a0e597f8a940",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a76ccf1e-3108-46cc-b1b3-bcd5b22730b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a6c0603c-1154-42b6-997c-da9ea1e9dfdf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af1d78cc-6214-4284-877c-3f8db8fbdc10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "624d5653-4a81-4602-b256-a343705572eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc923ed3-698b-47ae-953a-a4af657e9981",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ceb166f5-1e11-4b6a-b603-cac4b91ba8c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff0b62cf-b69c-47ca-8554-9bff31cbd23e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f80b437b-37eb-4df0-9907-7dbfc816e642",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54a7f318-9953-4988-9559-d9726b5b2907"
                        }
                      }
                    ]
                  },
                  {
                    "id": "775df254-6c87-48fd-832f-d18ba516f424",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7da94f3-dd66-49b8-95fa-d0e362e29c36",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "419f06f5-018d-4062-8a22-9faa8fd5f9ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20798797-2fac-4fec-8c20-a1920a74bf07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88a24b58-0131-4828-a840-69d2a2010eda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9040734-cafa-49d3-9b33-0788424d3676",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92ec3a82-e612-4290-a4fa-8747de2f90c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f82817dc-2005-4bd4-9971-3ff190ff1743"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a56fa07-53c4-4b31-8654-06c7f0e250f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d985754-2941-4ee7-b95b-c0515addd873"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ead3049-e63d-4b10-ae26-f23b804e1f55",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b77d09cf-d59d-4bc5-985c-ef2d909a5bda",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dcde3522-5854-4477-accc-638f671fe435"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a74b8d9f-08cb-4124-a35a-9c56bf8bda0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7d833b0-9622-4b3e-a768-10da7f52f9ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f6c059c-bd85-4d51-891d-bbbc4965d9cd",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e46d8e2d-d513-44f3-93c0-ac6bba0946ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1177a95-5f32-41e1-a116-45ffcdd32223"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c98b6476-6a75-4050-9197-e72002a4fbe1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9efbe907-2d76-4498-be13-a34571fa29f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40474495-618f-4b35-bc13-b003a14cfed3",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "539c4721-dc77-43a3-b59d-9da354b708e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5b5f6bc-6d13-4aeb-ba92-137c5fc3e60b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e6f5789-d391-4fdd-b18f-ece36950c253",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc7ee9b2-c0ed-40cf-b58c-33bc938adddc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bb9259e-2e70-457a-b174-6160ea0dd404",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "950a3d9c-74db-4269-9318-c0e7b2823619",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4cc97334-5fab-468a-849a-4f1e2745ac83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28f7b7ed-9e56-405a-aba3-c19413fa5a91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59ab9bd8-53f5-4e0e-bafe-f6ff0109d56f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "245caa45-60ce-47a9-9ca5-3e4b8751e979",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e8251c4-efa5-4356-b6f4-afe658223d02",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d12bee9e-dfeb-4ac7-9611-3cbaba08956c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3d35daa-a29a-4799-8b12-9d19175c2487",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7389fccb-e052-4f1a-b71c-ac31e3562387"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c24e4dc-c481-4970-ac50-8ed4ff13e743",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea119f58-4ae3-494e-aef6-316742af510f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9815a0f1-2fe7-4ac7-b744-b8a7cf9a8d2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3d66565-8819-4b90-9599-fe74f820bc74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "703dd26e-cdc3-4efb-9ffa-fa2535abbbb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5240cc00-a4a1-48ac-844e-be36a7212e1c",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd770de5-8374-463d-820a-9b8f52b541ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c552fc3b-991b-4931-b140-36c817e703eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9485265e-d47e-46b1-ae2c-6a029346d06d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82a96715-2e0a-4d17-8ebd-511d6743b40e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa335563-ed9d-4e75-a76f-300203c786b3",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8b8a522-08e6-45ef-8223-b8c7af421596",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70818aad-71c8-412e-b65b-a5c5aa935502"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "660a02d1-ff46-4f0f-804e-cea033a43f2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18e91c4d-a7b5-4c3d-94db-b9854bce4788"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29372ff2-f47b-4f6c-81e1-9295ddd7a0b3",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e23ddc89-6647-4ace-879d-aee0932fbc88",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "586472a2-29e1-4bbc-94a8-ce54fda9c613"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b10d75b4-26d9-46df-bd4c-885a6b6b367b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a36daa52-f1ea-4244-9df9-313411f776e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "592fac4c-fcb6-48b1-a54d-c1abb5926fae",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b22b30d9-2a90-49bb-9950-601c99a36370",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ecf980e-25a8-44c6-b455-a319a0b99c11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd0ca3cf-026f-40d1-91bc-78f009e2fd8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9361ceaa-e550-4576-b0f9-e38cb9dc2682"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de8ba82d-79e5-436f-8360-6661ef771d35",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7ea311c-fe31-48f2-9c3a-bba408fe5459",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fcb80ae0-68a5-4049-8686-a1ec8819126c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cd1f9e5-7700-4075-be62-70cf327bd96f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae1d3909-f7a1-452e-9bb2-835d3f907ec4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41266c91-1c42-4e38-8930-7c20a9392ea9",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb1c8885-e321-4d94-ac32-33088ca65d17",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58960340-f683-4f10-8562-ce1f71c9376b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27e02750-346f-4e62-b877-805054ca60c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cea5fb92-2761-4ea7-bb56-c2a84398af6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5ef6643-0d73-4be5-be87-d8d50fd2c55a",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1876d28e-0f42-4a07-9bd6-1b45e42ffe4d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f2eb56e-d534-4cdc-b66c-2c899e89803b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39686853-2d88-4589-bcc1-0e52310cc70e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa94c82a-ddc2-4bb7-9276-f94e9fb8d648"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fce8feb-397f-4355-a6b8-decb4830ac9d",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbe5d2a2-c77e-4de0-8c7b-5cfb81d5e883",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6116a37e-fcbf-4e77-9874-b5cf39725d3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79295571-7371-43af-823f-904df35e5369",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec197d7f-f1a1-4b8c-8fd7-01050b21e8b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14f8c312-88d6-41c0-b14b-3546ebcf6e19",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4c7e208-a08e-49e4-a7d5-f7c23f5d6a1c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71266c21-b523-462c-a2ba-f5e2fa1d17df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cb2f9b8-270f-466d-8c17-581ba3e27d96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e167f37-3107-46df-9c0e-6408ea10e56c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be2da137-13f6-439f-86af-dd13cf85e522",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b695ad54-b5f6-48e9-94c4-05b36ace160b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40194353-32da-4fa6-acb0-3aa5ec82afb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d88dbfa-447b-49b9-a01f-52c60df8ab21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a23744ae-9fb6-4832-bc80-ace8da4e4e7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "943a3b1b-7e17-4076-8201-0a7911d004ee",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac42e00b-5cac-48b3-b358-97b99c224381",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2bf27056-aaf3-4fe8-a082-f06dd1b7ed42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c050c52b-7a6c-4a87-bd4f-be06ce51f5df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "321ee117-fda7-46e7-946c-13a29e2376dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5e94e73-1aec-4e0a-b6a6-697de6df37cc",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2621011-eed3-417a-8d17-c7d5b782d17d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8bf23529-c373-4012-a14a-5c9865d9b9a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6f08054-ebf6-4a24-a027-ff3a47158929",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cc2203a-c129-4c64-9ccd-957ce8c2f02d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29a89a04-e98f-4c75-8095-a46369fdb62a",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26789b8a-d0e2-4ad9-8479-3bb37047b399",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aaa0bcc3-a036-4b00-8f6a-14f979604973"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0685ccc-ff4a-4670-aec9-5740aa9682eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b8f6b89-309c-4a38-a258-88ddd0f7c6ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "846651a6-25b7-4ee8-abd6-c0db72747303",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb8f0831-cb2e-49a9-a61c-921fcd747413",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5925a9f-6d8e-4e9e-a777-b57fb5b5e3da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41209478-7302-4c01-9e2f-21db0f4c3370",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d56ad66-0298-4b76-9c4f-0f0819d469fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af75e2e4-d4b6-4967-8821-4599a1e388f4",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1050a263-6206-42c6-9876-493d64f596c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c800eaa1-7287-429a-897c-a76665ec1692"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ef5e70c-5c6d-469d-a405-ce11a374a8e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbb5599a-7188-4e57-a110-fa171481c315"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d275921d-3c63-4a1e-9bca-d6f8e01244cc",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51c4e0f1-378e-4476-8b21-bff34b201612",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9553653-cfdb-462b-bd8d-1660a61e2c71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5b6784a-6aeb-413a-81d3-4080394ad14e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7d0289b-58aa-4529-b900-f3313870faac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ef4e019-0f3e-4460-8876-0b9e6a2f3c5c",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "640f1c48-a509-4a28-be1a-e44b7bedd4ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da589b18-331d-4ef9-9a99-0392239f9668"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d472392-8e10-4882-9bb1-9d11fbe7854b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fe04d25-1b92-4df8-8316-ea9abe1a24f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73dc5c9e-6cb5-44e9-b6ca-3e51bce11321",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9cb0db8-e1cc-418d-88ab-124a399e2e9c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ca0cb12-75a2-4a21-a9ed-179ab165f695"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a702653d-9c9c-4a72-9206-0567b9fc6cf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9570c7de-c6ba-47fd-802e-2b94e7d016c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5992649a-e4a5-409f-ae3b-6939878dc286",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4dc7de8-8893-40a4-aa0d-d3e4c1f46d25",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1c6b22a-501b-4833-b4ca-90b41e2fecf1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcd85d74-ae8e-46d8-8117-609af27dfc46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a05fcb88-b222-42ee-a208-570467b7080f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d48fe5d8-bf1c-4388-bfa8-1d459e102e50",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6177af50-294a-421e-b121-e4d8f67dac30",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c20ac4bf-dda3-4c88-8c7b-c06f3c9f0fd1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1944997-f07d-4c35-9a92-8a57a831657a",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a35aa884-2741-45bc-8c07-39b154293d36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18d72628-3c71-45fc-be55-efc5b0ac98a7",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea7b38d7-3e74-49b5-b938-8d55ed0d5000",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e93f963-a222-4123-a0e1-21e614deb3d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "288cdeac-ab2a-4c95-87d1-16abb75f165c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe540976-212c-4cac-8995-d9dced5a6a5a"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "686cf332-cc10-4678-9175-cf58de40db7e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "73f0eac9-b08e-467c-b841-633d7840d797"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b1a29a0c-5619-4b5d-a2f7-647a66bd9963",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "309f85ee-ef20-41bc-9bc6-a82126a20fe0"
                    }
                  }
                ]
              },
              {
                "id": "2cd373ab-4500-465c-a774-f4bcbfd59908",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "db65f64a-d432-4573-9187-b71883ceeeea",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "946ea857-64b8-4cf8-b15b-9e1a760a6d54",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "3a917eeb-2214-4506-8af0-d24dad1f1489"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c738636d-2a48-4c86-b894-4818e0f4b41b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "eef8a6f6-4345-4063-a963-b9490a570e21"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "16ccb052-989b-41e8-be02-64555a0afa8f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "18b70485-19dd-45d8-8f87-5170e00bec97"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e199d161-de98-483d-94d1-f9fc94659cdd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b4f7c8cc-3b99-441e-b624-278fa51d88ab"
                    }
                  }
                ]
              },
              {
                "id": "4dfe4238-6ba8-4a5a-ae2d-8189b91f3133",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "3f818a3a-6e82-4e76-b4eb-3a77307fdd47",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b983a99-052d-4033-9504-22405ab5139b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "ed34ee3f-6ba1-4bd4-9f90-fd58333c68e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ce37c31-fbf1-4fbe-97ce-ae510531952a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c6dd260-f185-44bd-8f0a-c4b98b7ab5fa"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "d978d8a5-8b30-4f3c-a6a0-b061498880ba",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b40fa14c-8f8d-4d40-ba0f-b2916409beec",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6811d49e-6d2d-4eaa-9ab8-1c008c6ffc4a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "e6645ea0-9200-417c-9c0b-fa55ebe518af"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6714e2b5-6e9f-4e34-8191-e0509c84a079",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "50b61cc9-6be6-49d2-8aed-f4e9d4f74f80"
                    }
                  }
                ]
              },
              {
                "id": "5946e219-c5f3-4ef2-92f2-f20a9780f7cc",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ba8d67e7-5631-40fd-a3b4-9be35356a497",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "dd97980e-e8eb-4985-b58a-49c8cb106cae"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "75964fb5-6599-48f0-9cad-dbd19db011b5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "76ef4b05-b12a-4957-b286-e45ae826b7a9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e0ef0957-4ce5-4bb8-83a3-e5005c02a9f6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "003ad962-6192-4fcc-9245-5639df72be9e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2dcc9520-a36c-40ac-ac9f-4c158036b7d7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2aa0c28c-780a-4c91-afa4-98d6a4abb3f7"
            }
          }
        ]
      },
      {
        "id": "0eead8e4-d5d8-4640-89c6-57a7d0bc4b30",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "2bc7ed1b-ae39-4d67-9f52-104aa0072a80",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4ec93a0b-29df-4f54-91a9-802113ff28c4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b1e2b0c3-6d2b-4438-bd6a-0428999c334a",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "145daa20-6416-4ae6-9bd6-710052966fd5",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "048e89bc-52ef-4dad-afca-93fd8614a3e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5cc5eb5-526e-4bec-8fb5-cc94bc8c395f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2fc09183-0b48-4abf-a5c9-2b3f8e50f699"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c9a2d857-8d4a-4336-88b7-a85f4d9b7f9b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e6eb5f8e-9d74-4055-80ce-a557c620dad5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "73bfd3c6-90bf-47ff-aa01-f30a49bbd727",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cb9fa888-93b7-4ee3-87a2-68dafe4f0a48"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e63c7ddc-3b36-41e9-a291-e6a201f74711",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "502775a1-eed3-4a69-b5c7-5961ca9beb7a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "aa065079-cd88-42cf-86c6-16a6a3872fe8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b35975af-7b7f-44c6-92ec-7a0737462c2d"
            }
          }
        ]
      },
      {
        "id": "694ff3a7-42d3-4ab8-8ab9-72a92d88374d",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "892f5b21-bd4b-44a8-81d9-a676c3e883ed",
            "name": "Negative Testing",
            "item": [
              {
                "id": "46a7cba6-e990-458c-90c7-5c69dec9d546",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "adda56d1-2ecb-4b1d-92e5-3cf6ac9b2536",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1371bfb3-373b-403e-8277-5043f3bb8a4b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a3d3d34d-a6a0-4e24-a7ae-1971291fd4ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "983ff188-d5f3-4d1c-9718-08eb937479ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cbfe177c-755d-4149-b67d-c85a15f48a5c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "69fd8d01-6338-4c2e-9402-d2291896d71d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9d732447-4d2a-49af-90e6-b13486853f86"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "af9257d4-ba28-4edf-89be-c35208f6df34",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "86804d05-b2ca-4fb7-bb79-e92f645920bc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "aa01f538-3231-4c43-a88c-c1a0a223046b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3db69344-be50-4c7b-97aa-2ac71dbb5a87"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cd2bc3f4-16a6-448c-aa9f-6ea0f69cffc2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "62f387de-e2ab-4ea9-86de-e8c5b41dcc55"
            }
          }
        ]
      },
      {
        "id": "0db3c84f-703d-4bea-a3ba-8e3948921c1e",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "48bca4af-d5cc-4853-b9ec-14645f6c9b50",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e9161cbe-f2b1-4732-9142-b551835301bb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2e5c4475-34cb-4872-b6b4-98f55cd790f9",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b20e6c2-05b2-4af4-8f70-fe6ad724b4d4",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9e55d223-e47a-4f6a-9db4-18811aae438c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dc9abc5-9298-428c-a4c9-6649c605429b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "baa2d8f0-c49b-49d2-835a-89c74422c338"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "476a614d-e9c8-4548-902c-d6847b6562e4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7f13af4f-19d6-4ebe-88ae-eb2a360846bb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "81d56c6a-5bb6-4a18-84fa-10b0612ce443",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "69803c0f-cd5f-4337-a3b9-be6d9e4e9ed4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d0421516-ce2e-4b4f-a85c-da3fa5681d88",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "71bb13b4-1992-4fe7-a20a-8b7727ea32fa"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4105b532-285c-4100-afc4-5c860eaeed0e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "00eaa470-ebcc-4a19-8097-af0aff1121fb"
            }
          }
        ]
      },
      {
        "id": "4c65db30-8777-4291-b18d-59be5a39a309",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2ebc88c7-6c6e-43f3-8dbc-e19308729cb0",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0ea4fae0-d447-4755-a76a-a5f8984d63bc",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "d34d3183-e545-4c6d-8219-0fe016efb88e",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6bcd4313-c0a1-4ca0-9fdc-464de4fc72d6",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2a6e1d80-eb44-4111-b18f-67384c7fe5f9",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 2
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 341.2640845070422,
      "responseMin": 20,
      "responseMax": 7133,
      "responseSd": 853.4789105079924,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1692923531594,
      "completed": 1692923641637
    },
    "executions": [
      {
        "id": "506f8593-2612-4e40-a413-37b7bd30e38b",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "39413886-4225-4dc1-9911-86a939cece3e",
          "httpRequestId": "251372a2-b0ee-49e4-a85a-e6f5b6cfa762"
        },
        "item": {
          "id": "506f8593-2612-4e40-a413-37b7bd30e38b",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "a33f5b31-94ad-4da6-81aa-8536c192fdcc",
          "status": "OK",
          "code": 200,
          "responseTime": 94,
          "responseSize": 0
        }
      },
      {
        "id": "6a1f923f-bea7-4e25-8000-7f6fb630081c",
        "cursor": {
          "ref": "ac8fa7fd-bff0-4f91-a6a1-a4700ab02a5c",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "415ec8d5-cc51-42ce-a2c3-b50756dda316"
        },
        "item": {
          "id": "6a1f923f-bea7-4e25-8000-7f6fb630081c",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "fbba474f-f967-4086-be16-cd6f2f37b9bb",
          "status": "OK",
          "code": 200,
          "responseTime": 20,
          "responseSize": 0
        }
      },
      {
        "id": "45296561-de80-4344-8cef-ceb1c1beaa16",
        "cursor": {
          "ref": "2d7e1ef4-c39c-4b0f-8b86-19e15176330f",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "e941a9d7-d18e-4237-90b6-7f6cd5b3c07c"
        },
        "item": {
          "id": "45296561-de80-4344-8cef-ceb1c1beaa16",
          "name": "did_json"
        },
        "response": {
          "id": "735e550f-ca1b-41b9-ab8b-6ec109dfda88",
          "status": "OK",
          "code": 200,
          "responseTime": 1538,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce56c470-f3bb-468e-a8f4-868d5583da1e",
        "cursor": {
          "ref": "0ec12a7e-b808-4c09-bafa-91882616f505",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "e930cc82-0e4d-4c6d-8efe-06a7568716d4"
        },
        "item": {
          "id": "ce56c470-f3bb-468e-a8f4-868d5583da1e",
          "name": "did:invalid"
        },
        "response": {
          "id": "be555714-3351-4877-8b7e-e660f7daf72a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 358,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce56c470-f3bb-468e-a8f4-868d5583da1e",
        "cursor": {
          "ref": "0ec12a7e-b808-4c09-bafa-91882616f505",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "e930cc82-0e4d-4c6d-8efe-06a7568716d4"
        },
        "item": {
          "id": "ce56c470-f3bb-468e-a8f4-868d5583da1e",
          "name": "did:invalid"
        },
        "response": {
          "id": "be555714-3351-4877-8b7e-e660f7daf72a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 358,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9101605d-e045-4d8e-84d8-fbf25f9914dc",
        "cursor": {
          "ref": "38679a6e-51e7-47d3-9991-6c1d2922d113",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "78f5889c-de0e-4eb5-8b64-1b96445b9275"
        },
        "item": {
          "id": "9101605d-e045-4d8e-84d8-fbf25f9914dc",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "e004a7c8-6534-41df-a266-83303a7b36b5",
          "status": "Not Found",
          "code": 404,
          "responseTime": 421,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cea213ec-633f-48a6-9526-70e8befe315f",
        "cursor": {
          "ref": "db1c991e-e360-43d7-b94a-6e63b0a325eb",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "300205f8-a805-4785-af0c-85a96eda1209"
        },
        "item": {
          "id": "cea213ec-633f-48a6-9526-70e8befe315f",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "af75cc3d-f81c-43b3-93d2-1de34ec53908",
          "status": "Not Found",
          "code": 404,
          "responseTime": 300,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d217dda8-e346-42fb-9bb4-d10caf864c57",
        "cursor": {
          "ref": "d26f4362-79ab-429b-8a66-0d83c574075f",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "8d01a5ad-95ae-44d7-ad69-9662662da586"
        },
        "item": {
          "id": "d217dda8-e346-42fb-9bb4-d10caf864c57",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "b0785b41-af58-4669-b61b-e2db03276695",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 79,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40c0c665-3629-433f-98b3-c2b9c90316a6",
        "cursor": {
          "ref": "5e5da4b3-0890-41a1-9c66-c3eb090408b1",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "48509060-ef1e-43db-98ea-e3b2955f2d43"
        },
        "item": {
          "id": "40c0c665-3629-433f-98b3-c2b9c90316a6",
          "name": "identifiers"
        },
        "response": {
          "id": "c7a6c76f-b093-4cba-9972-bb4107af68a4",
          "status": "OK",
          "code": 200,
          "responseTime": 1149,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd011e6f-4d67-4632-b959-555131a9504f",
        "cursor": {
          "ref": "a8619028-e4f4-4568-bef5-b0471bc06d73",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "97fdbcac-65ff-458d-a51b-398f2a61025f"
        },
        "item": {
          "id": "fd011e6f-4d67-4632-b959-555131a9504f",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "6d30135b-cb69-46bd-aae2-0574365ffee6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43676941-d1a1-43f4-b8bd-2d3e3bfef6ad",
        "cursor": {
          "ref": "730d24f8-2e16-4431-85a5-f9250c07d497",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "9cf1b655-470a-47ed-af4e-c8d2940ce700"
        },
        "item": {
          "id": "43676941-d1a1-43f4-b8bd-2d3e3bfef6ad",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "581ce08e-705f-4691-b881-c0c76ff0f0df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbdb2f80-9de3-4114-93b6-2c6d1cb76898",
        "cursor": {
          "ref": "aac939ed-f868-4582-afe9-b7636a69448d",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "f224e22d-b29d-44b5-9538-3d142e903c0a"
        },
        "item": {
          "id": "dbdb2f80-9de3-4114-93b6-2c6d1cb76898",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "f8a2312e-6651-40c6-a11b-392b7f8aa515",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6e212de-f830-4e8d-84b3-b89ca14ef727",
        "cursor": {
          "ref": "c262c0bb-7006-4cc7-b344-c9416b46f913",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "79632482-8fc0-4c17-bed2-8aef38ba19c3"
        },
        "item": {
          "id": "c6e212de-f830-4e8d-84b3-b89ca14ef727",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "be610c13-b60f-4230-8efc-cf534c5a2c79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07ff3d61-5409-4526-b322-85eb01de4c89",
        "cursor": {
          "ref": "5a89cd09-433d-4b8c-aa2b-7b96f483ae69",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "948c35e4-715f-468d-9f1e-51098ef6a9e0"
        },
        "item": {
          "id": "07ff3d61-5409-4526-b322-85eb01de4c89",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "6a7b0c54-1643-4622-8d34-f809ffa33045",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccbd4d96-4bbb-49c8-809f-3e92aa50004e",
        "cursor": {
          "ref": "31523dc0-cd19-4891-8daf-9b10deaef465",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "f4cf6792-2937-4c6f-b3ba-7c953f59cfcd"
        },
        "item": {
          "id": "ccbd4d96-4bbb-49c8-809f-3e92aa50004e",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "64db14e9-7981-49e0-9f5b-16e4b2ad5d03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4e016e6-6343-4769-b2ce-a6b48be75cff",
        "cursor": {
          "ref": "402048e1-d8cb-4183-a490-3aedfb801f20",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "f8f1131a-59e8-48f9-bc20-d41e199c5855"
        },
        "item": {
          "id": "b4e016e6-6343-4769-b2ce-a6b48be75cff",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "488c5b81-626a-48d5-b09e-aa1a101340d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29810f95-ce75-4108-a96e-a650b9248919",
        "cursor": {
          "ref": "84399c4e-ffe3-4e91-9053-7756a6c05fdd",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "0fd3a013-6302-407d-a2f5-d8294c8096a4"
        },
        "item": {
          "id": "29810f95-ce75-4108-a96e-a650b9248919",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "141927c3-b47f-4530-b74f-5bd45d320715",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f27cc696-0376-4850-b9af-c4821ebfdf2c",
        "cursor": {
          "ref": "d0d453c5-4735-4b15-a7c6-612c85ae84fa",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "9e8bac15-1be7-4c42-ae12-8a9a22057e6f"
        },
        "item": {
          "id": "f27cc696-0376-4850-b9af-c4821ebfdf2c",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "efe1ad6b-a690-40b5-bffa-883e61b7704a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d5644b1-b881-4427-844b-85cd8f470f8b",
        "cursor": {
          "ref": "21b50cc6-ae78-44f7-921f-9c23a0cf1013",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "3c237cca-0233-43a8-b1a6-db77431cc5f5"
        },
        "item": {
          "id": "4d5644b1-b881-4427-844b-85cd8f470f8b",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "bc433d3b-c16b-4990-a25f-90db9b8ae5ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "834aaf74-67f6-4543-b91a-678001150d5d",
        "cursor": {
          "ref": "06d64401-987f-4b35-9c91-c3fab7069469",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "c170280c-dd40-426d-aa8c-04de4a410493"
        },
        "item": {
          "id": "834aaf74-67f6-4543-b91a-678001150d5d",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "20cadb1d-6403-4918-bfce-b2d23c4f450d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba9216b7-9562-4eb9-a2dd-e7f9794ae4fb",
        "cursor": {
          "ref": "8f768c21-3902-4084-ad3c-935e9d53e8ff",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "9df76544-7274-4151-839f-27bcc42f762b"
        },
        "item": {
          "id": "ba9216b7-9562-4eb9-a2dd-e7f9794ae4fb",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "e473bc39-fbd8-4571-b7a4-90734ad9a4f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0e622d2-42a1-4dc7-8f51-53fb5e3513da",
        "cursor": {
          "ref": "12665898-63a6-4f3c-ba53-128f36f671d1",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "1710b98b-f062-4990-82e5-8b5278836bf2"
        },
        "item": {
          "id": "e0e622d2-42a1-4dc7-8f51-53fb5e3513da",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "b6435874-c508-44f4-b4ae-665c2d7d00a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a71dd611-6782-4c03-90a4-fd43e666a5c9",
        "cursor": {
          "ref": "f01437b3-1d08-4c6f-b1c2-92f600af2085",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "7fd0aa9a-274b-4374-ba87-be7d2dc4903f"
        },
        "item": {
          "id": "a71dd611-6782-4c03-90a4-fd43e666a5c9",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "dbde4d8a-f6fc-47e8-9dcd-a2a149c2f905",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60a0ec6d-bed5-4a20-a709-db946cd2af04",
        "cursor": {
          "ref": "4cb6a435-78dc-4f2d-8b58-89c9a6d05e67",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "5be15db0-cb12-4d4b-84cc-f6adc94a3de9"
        },
        "item": {
          "id": "60a0ec6d-bed5-4a20-a709-db946cd2af04",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "17cb3f1d-d617-44b2-9e74-6bd27651f7fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d90b050-4eb7-4ac8-991b-0fe99270a7ab",
        "cursor": {
          "ref": "3a93a6e3-361c-44eb-9ac2-4d3a311e6bc6",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "cf4e25bf-2a6c-4c2f-9581-fc64469c9b38"
        },
        "item": {
          "id": "9d90b050-4eb7-4ac8-991b-0fe99270a7ab",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "3c38bce9-af57-4102-9085-5bc752931bbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6f92be7-7113-4a23-9462-6b79faf69447",
        "cursor": {
          "ref": "a8ceb8c1-4ed3-45ff-a699-8ef847a0d466",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "89dc866a-01f1-4b7a-ab18-931debaaa026"
        },
        "item": {
          "id": "a6f92be7-7113-4a23-9462-6b79faf69447",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "889f3853-5991-405d-b564-44df4f989fd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a4a172a-b2d0-4c3c-a397-d703fe056da8",
        "cursor": {
          "ref": "ba210e48-7c36-4526-bd3f-b3ea0529b1eb",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "21a3f86f-ff5e-4873-81e6-9ef3d2dbc201"
        },
        "item": {
          "id": "8a4a172a-b2d0-4c3c-a397-d703fe056da8",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "bf5c36b5-9cb2-4977-b07b-197f78a9d8ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0caa0d19-cbed-4035-81a8-3af6316cbe18",
        "cursor": {
          "ref": "674c3d18-ad17-4d04-b2be-56a7db5a1bf1",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "f1c2b3cd-6555-4d5c-94af-241af534c5c7"
        },
        "item": {
          "id": "0caa0d19-cbed-4035-81a8-3af6316cbe18",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "458250e8-f5e9-4555-ab4c-b28feb6cc2eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "806c4e5b-061b-403a-b9bd-ba6852df7b6e",
        "cursor": {
          "ref": "33d58c85-aac8-42d9-a1ca-236f611e16c1",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "c2245760-2fa3-41be-ae9f-1cd370417fc6"
        },
        "item": {
          "id": "806c4e5b-061b-403a-b9bd-ba6852df7b6e",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "70dafec0-6f85-4f0d-ac2f-b6ff2e19727f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdcc530b-eec9-4ac1-b859-ec03f17ef63b",
        "cursor": {
          "ref": "56ffe436-66e3-4f38-b889-610d0000a5cf",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "6ce20acb-678c-4c16-8032-2f5e224d9e88"
        },
        "item": {
          "id": "fdcc530b-eec9-4ac1-b859-ec03f17ef63b",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "632315b8-ff89-48c5-a028-eb331a79739c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db015a4b-a382-4a45-bf57-1f4590aba2ef",
        "cursor": {
          "ref": "bf7cec7c-4e36-4e68-ad09-92972cd21d79",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "9da097d4-e870-4db2-b850-440427cb1cf2"
        },
        "item": {
          "id": "db015a4b-a382-4a45-bf57-1f4590aba2ef",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "fcbc9d84-80e0-4385-8002-01de45cde961",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e073169f-413e-4aaa-90b1-1bac048dff9c",
        "cursor": {
          "ref": "e111d955-6470-4a18-9fac-03cfe3bbe560",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "87fb3034-7392-4db6-b779-1ec8c7556d96"
        },
        "item": {
          "id": "e073169f-413e-4aaa-90b1-1bac048dff9c",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "16a545b2-1f09-4d0c-b867-b2011667a37b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcd026ef-b8ee-4d5b-9ff9-d1865ff151e5",
        "cursor": {
          "ref": "c54bcc55-8213-4f65-8359-cdad6d63d088",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "313b92fd-f234-401a-b01c-576d8520988c"
        },
        "item": {
          "id": "fcd026ef-b8ee-4d5b-9ff9-d1865ff151e5",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "80b61a11-a36e-4e28-b396-d20e58ad8f6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa93f003-6f40-4016-8358-7a0f17dc0c20",
        "cursor": {
          "ref": "24a12b97-0418-4c11-b643-ab3ad4fc46f8",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "b876e2ac-e81b-4286-93b4-3956644094ff"
        },
        "item": {
          "id": "aa93f003-6f40-4016-8358-7a0f17dc0c20",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "8e5ce782-371e-468a-a6c1-b733bbdde8ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d6cdba9-d5de-4a5d-9d19-874b5e514a9a",
        "cursor": {
          "ref": "a9178008-055c-43a5-97ba-60c92a24f43e",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "3c4e7942-b090-4434-a4ca-1433e9ebc4a6"
        },
        "item": {
          "id": "4d6cdba9-d5de-4a5d-9d19-874b5e514a9a",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "7398d390-8f7a-4f30-95b7-33d311c82d57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "803ad016-49d2-432d-844b-1d47190ca596",
        "cursor": {
          "ref": "14fddf20-5756-44fb-a287-2274975f3b38",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "8c726d42-5102-4c7e-a2a1-f775418da285"
        },
        "item": {
          "id": "803ad016-49d2-432d-844b-1d47190ca596",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "8fa46f61-c8b4-403f-ae56-cf40f13866e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea009493-54d3-4506-8e9f-ee32e185f8dd",
        "cursor": {
          "ref": "17b6189c-081a-4b23-a9db-1ca6b1ce3dbb",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "ba6228a0-f363-47a9-9018-38c2bce6cb30"
        },
        "item": {
          "id": "ea009493-54d3-4506-8e9f-ee32e185f8dd",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "1226f90c-b458-4ded-960e-045a3c2b2fb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fe32790-1821-4bcf-bc00-2c56878ed4c4",
        "cursor": {
          "ref": "73a92f2f-3179-44cd-9463-23a56e326a09",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "5d326576-cdd1-4d63-8665-577159f831d8"
        },
        "item": {
          "id": "1fe32790-1821-4bcf-bc00-2c56878ed4c4",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "506161c1-131f-43df-b31d-139f0701dae2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad487e40-6172-4b90-b3f6-46859e7a7a87",
        "cursor": {
          "ref": "5cff8710-f971-4ded-a975-504919b870c9",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "63d368e3-7afc-48bd-b478-b6f8103c00fc"
        },
        "item": {
          "id": "ad487e40-6172-4b90-b3f6-46859e7a7a87",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "3767a313-b5a0-427e-adfb-33c37cd176ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5c9fe64-dc13-4c6a-907c-85588805eabe",
        "cursor": {
          "ref": "bbc93da7-3768-40dc-8bfd-c0fa0fccd70a",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "7b42206b-4eca-4bfe-81bf-e6f65bdf36cd"
        },
        "item": {
          "id": "e5c9fe64-dc13-4c6a-907c-85588805eabe",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "6214dfda-5364-49f6-958d-087c14958b17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "046250c8-61d9-471e-bd9b-ac079a404396",
        "cursor": {
          "ref": "8a9f374d-83f5-4d17-bb9b-ba8a6a8818a2",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "87283b29-8987-4fa0-bc94-3d050d6bfdb5"
        },
        "item": {
          "id": "046250c8-61d9-471e-bd9b-ac079a404396",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "27e92649-0746-42a4-8900-e6e437e03d19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9315cedb-11a9-413d-b235-3b6845c46d43",
        "cursor": {
          "ref": "7a927f6b-fef8-4c24-8ae7-094bbdaf32bc",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "245e7696-b538-4ba1-bd13-f81f22e83e75"
        },
        "item": {
          "id": "9315cedb-11a9-413d-b235-3b6845c46d43",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "6f005b8b-7b2e-4de4-a8c3-ea59cb008dea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccab4a67-ef39-4e74-91c1-454c98357954",
        "cursor": {
          "ref": "5e49c292-e0d5-438a-9deb-1f41fdaa2a92",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "d57b929d-f28c-419f-8d06-fe4d9e39e8f0"
        },
        "item": {
          "id": "ccab4a67-ef39-4e74-91c1-454c98357954",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "4fd90067-caf6-44e5-8168-ee934076d0b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a541e56-198b-4c8b-ba5e-32c5d105ee56",
        "cursor": {
          "ref": "a72ee7f4-c0b2-429b-a048-43f019f08b80",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "29fc8fd5-51bc-4a09-89ee-60f125acf9ca"
        },
        "item": {
          "id": "5a541e56-198b-4c8b-ba5e-32c5d105ee56",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "83945336-2200-4fe1-9f19-0f92d64e17bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40130113-989e-4f30-a6ae-e54926bca7f3",
        "cursor": {
          "ref": "04423d07-34b1-4604-8445-6db7471ee514",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "3860b63d-430e-46bb-a927-964670c2e448"
        },
        "item": {
          "id": "40130113-989e-4f30-a6ae-e54926bca7f3",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "c0596a6b-9bc2-409e-b404-a04ff1d2277f",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 611,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85763771-c097-4cbc-b1cb-147731b67395",
        "cursor": {
          "ref": "044ca708-adfa-4ee0-8fc0-e1137e22a7be",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "7cda55d4-76c8-4f2f-b9a0-eb10e56342f4"
        },
        "item": {
          "id": "85763771-c097-4cbc-b1cb-147731b67395",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "abe7b218-cd50-45a8-9443-4c910c7f1a33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebbf6988-f3cc-4de2-8c05-166d9b914b9d",
        "cursor": {
          "ref": "c0ca87fc-0f24-415d-8475-d88c5f8a0b1a",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "5f2d0a5a-873c-4ae6-b920-b7efd60f0e09"
        },
        "item": {
          "id": "ebbf6988-f3cc-4de2-8c05-166d9b914b9d",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "c8fd31b8-6169-40c8-bdc9-94f2f836933c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ba1e422-68f1-4127-b9bc-c165dd7353e6",
        "cursor": {
          "ref": "e801da6a-b337-409c-bfb2-0eca8535ceff",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "f3a6e5f4-77d4-4957-b7e6-49eeaaadaf00"
        },
        "item": {
          "id": "3ba1e422-68f1-4127-b9bc-c165dd7353e6",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "8ae63098-6a57-4a6f-a3b0-44faa2be75c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 308,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f5f86b5-99bb-4140-9daa-b1e5c954d33c",
        "cursor": {
          "ref": "7927d152-4f30-4625-bfdc-22c78811ed15",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "87ea3fad-2229-43ab-af93-cdfbdf4949d8"
        },
        "item": {
          "id": "5f5f86b5-99bb-4140-9daa-b1e5c954d33c",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "344fdc1d-f76b-45c0-b97c-a160f13b0a00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5023f939-b53f-47e6-97f0-e39de49731d3",
        "cursor": {
          "ref": "1f1a95a0-f82b-4ee8-a87b-2326a5366eeb",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "27963f0d-0eba-45ab-a4e9-c3599b7ef816"
        },
        "item": {
          "id": "5023f939-b53f-47e6-97f0-e39de49731d3",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "95dc3878-6ce8-4160-ae63-68a6fc5ce54c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a3cfbaa-acaa-4d77-997c-80820c5c8723",
        "cursor": {
          "ref": "8d28d906-4bcd-4d33-baec-2b0fa3255567",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "aa1be537-d055-433c-a041-d7ea928c1fac"
        },
        "item": {
          "id": "1a3cfbaa-acaa-4d77-997c-80820c5c8723",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "b2704a9c-5891-4c90-b1aa-8edc9a15b491",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07205de2-e511-4466-9803-24bce56c7697",
        "cursor": {
          "ref": "3a7779f8-44af-4e24-b27a-bb69b2305e53",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "761b20b7-6eff-4e9a-86bb-c16e64bc24b4"
        },
        "item": {
          "id": "07205de2-e511-4466-9803-24bce56c7697",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "eb9fe0d2-332c-41fa-bb34-2d2e674605b3",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 620,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a66aa6d-ffc8-4fc6-a963-5314c62da7d4",
        "cursor": {
          "ref": "252aa96f-0c6a-4d18-a1bb-351e2df92657",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "34498a35-9c66-4aa6-9984-31ab8922715c"
        },
        "item": {
          "id": "8a66aa6d-ffc8-4fc6-a963-5314c62da7d4",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "a9d47a97-2c47-4d4e-bc36-63299d28943a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ee5ad5e-c508-4534-8b67-a645162d72b1",
        "cursor": {
          "ref": "56d9321e-1607-4f17-a319-706929a78aaf",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "25625a34-5267-437e-9dde-352cafc998fe"
        },
        "item": {
          "id": "8ee5ad5e-c508-4534-8b67-a645162d72b1",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "470fbd41-9ce7-46b6-9dd0-b98e9f12cb6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ca45e0c-d859-4ff7-a3b2-25ae91233e38",
        "cursor": {
          "ref": "0b6f40ee-525f-433b-9a17-9a8cd83e8bc8",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "01fa01ac-8454-4777-9126-2403444ef729"
        },
        "item": {
          "id": "5ca45e0c-d859-4ff7-a3b2-25ae91233e38",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "dc452e0e-ffcf-4450-8d5d-d4757daf8121",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 575
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bb7dbd6-b242-48ae-b635-13bd9b678aeb",
        "cursor": {
          "ref": "cd12dc88-0af7-43e1-b18a-b59be8566caf",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "684c5e59-7077-49a2-b323-bc26b98e357b"
        },
        "item": {
          "id": "9bb7dbd6-b242-48ae-b635-13bd9b678aeb",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "379b4067-8eb2-43b0-ad2f-265e823dc79d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c07d5fc0-26c8-4081-beee-4ef158c9d293",
        "cursor": {
          "ref": "26f359f5-2afe-4071-a45b-57c5bd672e1d",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "768420a6-7c8f-40e3-a650-8b259118d63e"
        },
        "item": {
          "id": "c07d5fc0-26c8-4081-beee-4ef158c9d293",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "d7757f8d-b68d-4554-b85c-da5b25386ed6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd9cc19d-60dd-4d7b-899c-0ca0f847682f",
        "cursor": {
          "ref": "81428dcb-8f1e-4987-a061-32145abf8551",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "5803b871-a40c-40a4-b3ef-85a4e21f1a3f"
        },
        "item": {
          "id": "cd9cc19d-60dd-4d7b-899c-0ca0f847682f",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "d42a12c4-373f-4db2-a054-3448ceb456e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe92c4db-279e-46c9-a14d-154ff13a9efd",
        "cursor": {
          "ref": "28417434-bf3a-4d19-957e-1f5a796689ba",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "1a23a981-ab32-4c25-b80e-70fce6d72511"
        },
        "item": {
          "id": "fe92c4db-279e-46c9-a14d-154ff13a9efd",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "bb73a2ef-d6d3-423a-9f0e-fa7aaec3d71a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 625
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75fd2b5c-b866-4e03-8584-45b4cfa647ba",
        "cursor": {
          "ref": "fb4532bf-005b-41bf-bc4a-c344f054138b",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "6c30176b-851a-42c2-bffc-b00518774d2e"
        },
        "item": {
          "id": "75fd2b5c-b866-4e03-8584-45b4cfa647ba",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "489be9bb-271d-416d-8206-cd4c7308d68d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 320,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5de4c9d9-82e8-4dc1-80a2-c47cc9ab12dd",
        "cursor": {
          "ref": "6866db97-46bb-4933-bcaf-217e77681d99",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "c6969c60-62c9-49e5-997a-69127fd229d7"
        },
        "item": {
          "id": "5de4c9d9-82e8-4dc1-80a2-c47cc9ab12dd",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "8dff5aff-f12e-47c8-b68b-ff4184826000",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35c15aca-7015-48b7-8c6b-ff926126c572",
        "cursor": {
          "ref": "c3a5fe0b-2f6f-4d73-bf63-617caacd5444",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "4a72ac79-2f19-4a23-a883-3861709fd1f5"
        },
        "item": {
          "id": "35c15aca-7015-48b7-8c6b-ff926126c572",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "9a4125df-3bc5-4015-9b3d-5ebec3b68921",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6243b0c6-7977-4b7d-bb56-3d82d5b1c856",
        "cursor": {
          "ref": "c1a6b1d5-ed60-4acc-89f8-952251e67e01",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "58277c59-63fb-45f4-bac2-5a1dc00bae1a"
        },
        "item": {
          "id": "6243b0c6-7977-4b7d-bb56-3d82d5b1c856",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "b99de65b-9f81-4830-801c-d2338ef4cd69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "330eaac5-a545-4813-9f7e-230e9b0fd3ac",
        "cursor": {
          "ref": "eceedc51-7172-4491-a691-9bda1a075af5",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "948f9b03-64ff-46dc-b3b1-5660f770baa5"
        },
        "item": {
          "id": "330eaac5-a545-4813-9f7e-230e9b0fd3ac",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "e988018d-4b86-4392-96e0-007159370ff8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 308,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e2ad18a-bcf3-4169-979b-3c09c2a93113",
        "cursor": {
          "ref": "63bdb48a-e5d0-4678-8383-2ef3b25d5262",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "12339d31-6a1d-4f9b-99f7-8424ccf6884d"
        },
        "item": {
          "id": "8e2ad18a-bcf3-4169-979b-3c09c2a93113",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "dc01f62e-7e59-4adb-8a5c-f8103750fe08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a21a59e9-5da9-42b1-8401-78fc7eae31a5",
        "cursor": {
          "ref": "b8f2713f-a904-4c18-b0ce-01a147460af9",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "bb8ab924-473a-4c50-9adb-c78427148c16"
        },
        "item": {
          "id": "a21a59e9-5da9-42b1-8401-78fc7eae31a5",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "6296f57f-20c5-4b89-b85b-becd2a6114b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02ec6741-481a-4a75-a9c4-3b4dae75a7bf",
        "cursor": {
          "ref": "d0b07cbd-c7b9-440b-b6c1-97593546b144",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "0b1dcf93-2d72-4d94-b1e2-4e58fd06a01a"
        },
        "item": {
          "id": "02ec6741-481a-4a75-a9c4-3b4dae75a7bf",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "88ac1c18-b611-4a38-8f65-07cd678dbc25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ac93a42-5a1e-49cb-918e-9efd45e0de39",
        "cursor": {
          "ref": "278696d7-cedd-4c7a-a2a6-e5f577a5ede4",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "4fc5d741-2a02-4fd5-a1ca-f9275a92323a"
        },
        "item": {
          "id": "6ac93a42-5a1e-49cb-918e-9efd45e0de39",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "c4ca124d-33c7-4311-98ae-e2c90bd826a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "512fd1d2-46c0-4c35-a5fe-7478979d83eb",
        "cursor": {
          "ref": "123be392-cfc1-4436-bb56-b01a22e802a9",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "fe2b9f66-641a-4e5a-ba50-cfc70e6fad81"
        },
        "item": {
          "id": "512fd1d2-46c0-4c35-a5fe-7478979d83eb",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "093f7847-465d-4e51-a3f5-62caf6b7e3ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4639ed55-36da-41c5-b079-a75ebea9d26f",
        "cursor": {
          "ref": "0e63add3-55a5-4762-8023-89001cb58a1f",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "13e4d18b-7616-4df0-92be-fdfc2ca5b715"
        },
        "item": {
          "id": "4639ed55-36da-41c5-b079-a75ebea9d26f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "10a32f7b-3111-4459-a6c5-d251f7ccf061",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec077f2e-2501-4550-ba64-ea959a65bcf8",
        "cursor": {
          "ref": "2365c38f-8c6f-4035-94ae-f5f27926f0b4",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "43b4260c-9564-41c0-ada2-5194f3469454"
        },
        "item": {
          "id": "ec077f2e-2501-4550-ba64-ea959a65bcf8",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "34de27ff-584d-47ce-a5be-509664c6c357",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1275a300-b032-4250-aa29-2b1b3d5ebb4a",
        "cursor": {
          "ref": "50413d28-6a19-48e1-b442-5f04880c711e",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "09be775f-3fdd-47b8-88f2-18aca21c7d2b"
        },
        "item": {
          "id": "1275a300-b032-4250-aa29-2b1b3d5ebb4a",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "42f2e484-9558-4b3f-9952-9568a5d1a717",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a229d21-e289-47ec-81bb-ac62856ed750",
        "cursor": {
          "ref": "c8f3046c-dbf3-40fa-9413-404487c39c86",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "0d658994-be67-45a0-8108-bbff377db942"
        },
        "item": {
          "id": "9a229d21-e289-47ec-81bb-ac62856ed750",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "970de2eb-3737-441f-99b9-8c56332a1855",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6111a9b-7fb9-41c2-a0ce-975378379400",
        "cursor": {
          "ref": "d3831340-b0bc-4784-b481-9283a735d785",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "7972cbe7-e630-41ea-9cb7-1340a5a2a6e1"
        },
        "item": {
          "id": "f6111a9b-7fb9-41c2-a0ce-975378379400",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "34ee8ca8-5d36-4348-9011-d1a8986e414e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5800bf22-ac1d-4793-a4cb-c6d10ad8830d",
        "cursor": {
          "ref": "3d6cc578-afb4-4628-8470-9e1abfb11934",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "2ca0709b-8327-411d-9979-71a0db5c3118"
        },
        "item": {
          "id": "5800bf22-ac1d-4793-a4cb-c6d10ad8830d",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "b7a2e38d-4813-4feb-9f7f-30094a939fd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80f7460e-efae-44de-86a7-2eaf1ae62f0d",
        "cursor": {
          "ref": "603dffbc-425a-44e3-9356-2c4b02eff392",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "b25fd391-90e6-4a96-8318-e172b02bdbb9"
        },
        "item": {
          "id": "80f7460e-efae-44de-86a7-2eaf1ae62f0d",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "152f29cd-17f5-406d-9281-f27944f7547a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79df2903-9205-4fdb-94d2-c1dd9b497107",
        "cursor": {
          "ref": "dc96f899-8223-49fd-b9b6-6ea52c4e6b41",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "9b498821-d530-43eb-841b-a152f042c04b"
        },
        "item": {
          "id": "79df2903-9205-4fdb-94d2-c1dd9b497107",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "d54047f7-5d3b-4828-b343-24111bfb21b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01c8d283-93c6-4c23-80fa-c25c65f8429f",
        "cursor": {
          "ref": "5f92bb26-5755-4f72-bf1e-dd605c0dd47a",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "9a50c28c-180b-44ce-a5b2-1a815d06e2c1"
        },
        "item": {
          "id": "01c8d283-93c6-4c23-80fa-c25c65f8429f",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "8c83e99c-07d8-4c26-a7b7-a2239ba23e35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fafe92af-f20f-4aeb-8b0f-c687337a5da1",
        "cursor": {
          "ref": "f14c879e-daef-42eb-a87e-4788e6a36a6d",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "9faab93a-0789-4fe1-ad19-806426c126ac"
        },
        "item": {
          "id": "fafe92af-f20f-4aeb-8b0f-c687337a5da1",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "1d201675-3dc9-4a91-a4b4-49a3949c40c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae8ba5c5-76f8-41af-95dc-396a8be6a5ea",
        "cursor": {
          "ref": "7fceead1-7320-481d-add0-b0047cfb8af0",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "c57565e0-a34a-4b30-92a9-8d27916c275e"
        },
        "item": {
          "id": "ae8ba5c5-76f8-41af-95dc-396a8be6a5ea",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "36741854-9b63-483d-abad-ea177739b201",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88198c40-7f9c-466f-bcd0-9d482e9d985e",
        "cursor": {
          "ref": "a43fef47-a01e-46ec-8c4b-a6d8a70c05cd",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "c47f959b-18b1-4d55-b12d-e3e33ad5ac61"
        },
        "item": {
          "id": "88198c40-7f9c-466f-bcd0-9d482e9d985e",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "e2c55d95-b247-4795-bc46-28ce776e0136",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9615347b-c3a4-4d2f-8b24-23b32fc46752",
        "cursor": {
          "ref": "3af80d7e-a621-4609-a195-6e63770e8b5d",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "67975c90-a544-4582-90b4-eb411d2cfb01"
        },
        "item": {
          "id": "9615347b-c3a4-4d2f-8b24-23b32fc46752",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "f8445f75-110e-4027-9f2e-ff1c880f57aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a66fbb8b-e57d-4bc4-acf0-e876e32c7075",
        "cursor": {
          "ref": "4765c63c-d097-4054-bff9-533731dd64ce",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "38584b7e-62c1-4619-801d-cdb0766ed8dc"
        },
        "item": {
          "id": "a66fbb8b-e57d-4bc4-acf0-e876e32c7075",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "6a6ff000-4615-4512-8642-5899dc5432fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd6219db-269a-4d83-bb48-84ab8afe456f",
        "cursor": {
          "ref": "aafc4c74-d8e2-4410-87f1-1243e4833842",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "5c8a5220-97ef-4c4f-9810-4778705be9c9"
        },
        "item": {
          "id": "dd6219db-269a-4d83-bb48-84ab8afe456f",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "128dbd35-b2a3-41b6-bd3f-f28cc1fc3466",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daee07d6-2afa-4422-b111-4e2c858e27b6",
        "cursor": {
          "ref": "ea96ade7-1e18-4aa6-9100-5fc554496a05",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "1918e880-c9d7-40a5-902b-0aa1fe226e0a"
        },
        "item": {
          "id": "daee07d6-2afa-4422-b111-4e2c858e27b6",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "6f83df1b-dd00-4774-8c46-ab47a3f691fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5831dd2e-f99a-4da4-b4ab-5be5384f28c9",
        "cursor": {
          "ref": "eb23a6e2-b47c-4e98-84f7-fe9b2f36335d",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "f0a03f26-ffea-4e48-a3bf-5f9920ccb54d"
        },
        "item": {
          "id": "5831dd2e-f99a-4da4-b4ab-5be5384f28c9",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "efe0cadb-61ba-4920-8af7-6ad844dc1f5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "849a35b2-93b7-46a8-85f5-ea387da75af5",
        "cursor": {
          "ref": "3a0be168-23b3-4084-b4c7-bf793fd78419",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "ca16b392-ae64-4043-9fbd-7e8164bd39d4"
        },
        "item": {
          "id": "849a35b2-93b7-46a8-85f5-ea387da75af5",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "04c53baf-8d28-4af8-9398-bd6f5be0a677",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 335,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28f9e61c-8dd3-4759-ae9a-c2ce50b118ba",
        "cursor": {
          "ref": "d10c5b04-6ed2-4a1f-8a7a-0e7708e80acb",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "fe8b173a-550f-412c-b86f-a1f1bfe1d1b3"
        },
        "item": {
          "id": "28f9e61c-8dd3-4759-ae9a-c2ce50b118ba",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "aafecec4-7255-4d72-9dcc-0ac54cbb9693",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64314549-0217-4f76-a8bd-0d70bb27c655",
        "cursor": {
          "ref": "a021b7c9-5d7f-45bf-ab47-6c6ddc639e79",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "0e03b15e-f747-4b7c-87d8-e67a27a73bd8"
        },
        "item": {
          "id": "64314549-0217-4f76-a8bd-0d70bb27c655",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "0e6bd3fe-e410-49ff-b566-f592b5564f83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 650
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53e9ff38-6d82-4981-a13e-6e358073b081",
        "cursor": {
          "ref": "060fdbd9-1e95-41d3-8726-9520e1d7767b",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "2649cc3e-2678-450d-a4f6-d62f9a796ffc"
        },
        "item": {
          "id": "53e9ff38-6d82-4981-a13e-6e358073b081",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "0373c0f8-022e-4aa9-a68b-91265ef6333b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47310843-596d-4ccc-ae78-73c2421945af",
        "cursor": {
          "ref": "51f027bf-3bf5-418f-89ef-5c530b0f4bbc",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "c9dc35ab-2948-4431-8897-b6a5e6dd9740"
        },
        "item": {
          "id": "47310843-596d-4ccc-ae78-73c2421945af",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "d4a66bba-1d54-40b9-9344-d251aaf276e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "320e40e3-6040-43ea-8d5d-0ae4d7a4423e",
        "cursor": {
          "ref": "b8dc9360-dd78-4829-b208-f88652e03f6b",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "46aebd72-e481-49e3-904b-310e6ced5d52"
        },
        "item": {
          "id": "320e40e3-6040-43ea-8d5d-0ae4d7a4423e",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "eaf925c8-4c1f-48cc-97ad-e24f900f11fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0296a4f-9fe4-4b50-a145-f0c013a8858d",
        "cursor": {
          "ref": "a59ac8fe-0286-4944-84f6-cbe4fc85852f",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "bf357603-2e11-4cf0-8220-b3021918f0ba"
        },
        "item": {
          "id": "c0296a4f-9fe4-4b50-a145-f0c013a8858d",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "a2a18bca-3c7c-4ca6-b9aa-8d8ec8b0b0e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f98775ea-4776-4611-8f51-07e40cc45e3a",
        "cursor": {
          "ref": "5b9b70b9-03cb-4447-89fd-874b95ca9766",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "0f2e9d4f-0d65-440c-b506-c30cc05c0310"
        },
        "item": {
          "id": "f98775ea-4776-4611-8f51-07e40cc45e3a",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "6c31e6b6-50be-4f0a-846e-1d3ae5d48bce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9da41b92-fc08-484e-9937-888a09aa34b7",
        "cursor": {
          "ref": "f478bad3-c5d9-4ed3-b669-4e12582323f5",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "6200a9ab-eb5d-431e-a1ef-34b85147a6c6"
        },
        "item": {
          "id": "9da41b92-fc08-484e-9937-888a09aa34b7",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "7e3b11a4-f539-40e5-ba2a-c835531a2a95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0312812b-2b1d-4d6a-b729-80b3a64ee89d",
        "cursor": {
          "ref": "3f411f43-2fa1-4c00-b3a5-bd3548a1b7fe",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "d9cd2b9d-d7d7-43c2-8fdc-eb56c07880f1"
        },
        "item": {
          "id": "0312812b-2b1d-4d6a-b729-80b3a64ee89d",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "d69d3740-9551-47a2-b77e-51bab0a14712",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c422704-e179-4eb8-88f6-9a4318190c85",
        "cursor": {
          "ref": "d4bc9ccb-af1d-4dc2-a9d0-811ebedeb38d",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "250213b7-6791-4d65-9134-95d7b4c283cd"
        },
        "item": {
          "id": "8c422704-e179-4eb8-88f6-9a4318190c85",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "1c91e65f-7381-4d77-abe3-a76a3da419ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "092f8ef6-b11d-432e-88fc-c5bd211138ac",
        "cursor": {
          "ref": "f68578a5-ef14-4cd6-9885-1efd5c1a4126",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "6452880c-39b2-4da4-a2e2-d3b5d2b4bbe0"
        },
        "item": {
          "id": "092f8ef6-b11d-432e-88fc-c5bd211138ac",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "4e717331-6025-4eb8-917a-0b5e6bbe537a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0bfa038-6f2f-4c96-bcd6-9195d14bbd24",
        "cursor": {
          "ref": "a811d4bd-5cb3-4793-b424-5d4adeb88eab",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "96497359-b98e-42a4-b55e-6ab05dcd9562"
        },
        "item": {
          "id": "e0bfa038-6f2f-4c96-bcd6-9195d14bbd24",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "1e51238a-b39c-471c-9dd0-ae2972f099a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cabbd2f-7f07-407e-bcb1-bb1c9862caae",
        "cursor": {
          "ref": "659a5334-a557-4852-9826-235ff4e6a000",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "203543f2-49cb-4c82-8fde-9f955c5aa4a8"
        },
        "item": {
          "id": "2cabbd2f-7f07-407e-bcb1-bb1c9862caae",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "8fc0538a-7d45-40ca-8d6b-4f0e920178d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f82e01bb-956b-4bd4-ab3b-89e357047790",
        "cursor": {
          "ref": "44ca1e45-65f4-4251-898c-842965c6547c",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "84b9c637-310c-4fd5-973c-cfb443987b03"
        },
        "item": {
          "id": "f82e01bb-956b-4bd4-ab3b-89e357047790",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "45c65dae-9fc0-4bd7-a2cf-13050ea16f64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ce7226b-27ad-4708-9c0c-e65ca731e439",
        "cursor": {
          "ref": "eb902df1-0fe6-4093-a186-1582e33d81ab",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "9f67d49f-383d-49f7-aaaa-e75b1a3a5104"
        },
        "item": {
          "id": "2ce7226b-27ad-4708-9c0c-e65ca731e439",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "241b6e85-0d33-4627-9280-c20a5a30bb8d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 80,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c151cc7b-6026-4301-ace2-e9a19bfc2e7f",
        "cursor": {
          "ref": "db8960f0-71d6-4af1-b9c9-ce168cfe0471",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "72516293-038a-4428-bc9d-cbcf7d0af796"
        },
        "item": {
          "id": "c151cc7b-6026-4301-ace2-e9a19bfc2e7f",
          "name": "credentials_issue"
        },
        "response": {
          "id": "7e55daa7-7313-4421-971c-c062cf9b234e",
          "status": "Created",
          "code": 201,
          "responseTime": 7133,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fd0b7a2-6d50-4359-bc64-515fb1fc68f6",
        "cursor": {
          "ref": "16d38345-a9a9-426f-9f1c-aa2b61ba0391",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "8f0f9e63-cab3-41e5-8594-93f9e2f0ad35"
        },
        "item": {
          "id": "8fd0b7a2-6d50-4359-bc64-515fb1fc68f6",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "e03cd4fe-6152-4096-84e3-73509a1fefb1",
          "status": "Created",
          "code": 201,
          "responseTime": 5968,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "949a3afd-50c5-4360-b1a8-7f54ddf9e098",
        "cursor": {
          "ref": "9710dbdb-535b-49b5-b52b-58292507e22e",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "f2d6b957-f047-45d9-9b97-4ea674ef22ab"
        },
        "item": {
          "id": "949a3afd-50c5-4360-b1a8-7f54ddf9e098",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "64fa98aa-b5dd-4e43-8f1c-09ba9b983ef1",
          "status": "Created",
          "code": 201,
          "responseTime": 6624,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "b46dd099-5ef7-4680-b315-0760075ba304",
        "cursor": {
          "ref": "053f675e-92dc-4dff-ae84-8283aadf8e45",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "87cb3fa1-6219-4e88-8cc7-d6f7aaedc236"
        },
        "item": {
          "id": "b46dd099-5ef7-4680-b315-0760075ba304",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "0ffa372e-943d-48a2-9d97-8c93bf57f2b6",
          "status": "Created",
          "code": 201,
          "responseTime": 6418,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4f571bc-2890-49a8-bff7-66c6cd55507c",
        "cursor": {
          "ref": "c9a2e6e1-5a5d-411b-aa5f-0f3a15f0867d",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "e69e6bf6-7d5e-49a1-a76d-c08d6b0bed77"
        },
        "item": {
          "id": "d4f571bc-2890-49a8-bff7-66c6cd55507c",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "790edb7a-909c-4637-ac8a-20c1f9dc0783",
          "status": "Created",
          "code": 201,
          "responseTime": 6607,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb01a7f1-8441-4081-b58a-39b1584ea43f",
        "cursor": {
          "ref": "e7502886-7569-4cc7-a904-8d32a08116bb",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "44e41c05-4ee8-4659-9542-2bdf60fafcbb"
        },
        "item": {
          "id": "cb01a7f1-8441-4081-b58a-39b1584ea43f",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "3ec2bb1e-f6fa-4cbb-869a-a53fbd250d8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "841667c9-df20-4a27-a2d3-f5999e4f8708",
        "cursor": {
          "ref": "b8ca246e-aa3b-4473-aa22-b95c34db4e1c",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "70c22a30-b9ed-4ad2-b198-59a923a1f3e7"
        },
        "item": {
          "id": "841667c9-df20-4a27-a2d3-f5999e4f8708",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "3edd7427-3aea-4f3b-88d0-be55744798d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d2f22d1-68cd-477a-a0d0-f9d0b8fc08b6",
        "cursor": {
          "ref": "67dceea1-ff0d-46f7-a885-ea067559747e",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "2a50073a-3a66-49c5-bb63-d67d64b29431"
        },
        "item": {
          "id": "9d2f22d1-68cd-477a-a0d0-f9d0b8fc08b6",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "d2f41b0d-5152-49e4-8950-765f0f5ec9ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ba5b080-b246-43f6-992e-78fde66cef5c",
        "cursor": {
          "ref": "1e0899df-1ca6-404d-a200-6cd39fba7309",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "82bfac4e-e015-45ed-85fa-6b44fa93af08"
        },
        "item": {
          "id": "2ba5b080-b246-43f6-992e-78fde66cef5c",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "5d1bd127-2798-4f72-8607-afc907819d64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b893dd1-1d9b-40c6-ae86-15ae85cecbb5",
        "cursor": {
          "ref": "f835f199-9302-47f8-9b6e-dbd7e0a8a21d",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "ca5d67d6-e0c3-48e4-be20-4a319db360f1"
        },
        "item": {
          "id": "7b893dd1-1d9b-40c6-ae86-15ae85cecbb5",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "a5f5ba9e-1721-41d6-bc61-ebdaf2bd067e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8313c0d-28b2-4fc5-a0da-6bcfa8a42c26",
        "cursor": {
          "ref": "ae9b0d95-3260-4476-bcb4-3cefdbdf9e5e",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "23fa3702-2593-4bfe-a29d-3907da9a109e"
        },
        "item": {
          "id": "e8313c0d-28b2-4fc5-a0da-6bcfa8a42c26",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "d2fd1ee8-4435-47b5-9ab3-1bca163c5aa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49995203-1e67-47f8-86da-d6f76ff38179",
        "cursor": {
          "ref": "00f562e0-d47b-4df7-90e4-503ee3205e82",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "e9428869-1a23-4a84-90a6-8beb202a70e5"
        },
        "item": {
          "id": "49995203-1e67-47f8-86da-d6f76ff38179",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "669dbca0-f2d3-4859-ad4c-582279d78ec5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "096572a1-d5f1-401d-b1ab-08c9527c929d",
        "cursor": {
          "ref": "9c099cf8-3c13-4110-85d8-5d1dbd5fc91a",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "952cd331-7bd5-41b4-931b-d0a2ca23ee2e"
        },
        "item": {
          "id": "096572a1-d5f1-401d-b1ab-08c9527c929d",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "61dcedb5-cc3e-4bd8-81cd-b3b7953bd804",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dbaa38e-3835-4656-88fe-820f1b016eb4",
        "cursor": {
          "ref": "25944d39-9349-499b-a5b8-8f0144e9f5f4",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "9aca5ad2-6bbc-405c-b221-055ee116b389"
        },
        "item": {
          "id": "9dbaa38e-3835-4656-88fe-820f1b016eb4",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "52cf340e-ce9d-4a56-a142-acf921fb3432",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faa9ad85-a1f8-411f-b666-046f918e058f",
        "cursor": {
          "ref": "2f9aebc7-52f4-4038-a7ae-c0f4619d3391",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "1a29578f-fb58-49b0-9456-4fdd23ca2120"
        },
        "item": {
          "id": "faa9ad85-a1f8-411f-b666-046f918e058f",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "78f668d7-0a75-4d64-9753-fc5c846aa114",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f3ece69-f0f7-46eb-b447-28d8117a2b10",
        "cursor": {
          "ref": "29f7e4a8-d81a-4d87-87c0-1758498f263d",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "d3079cb1-1195-4a3e-9f92-88803f1f2998"
        },
        "item": {
          "id": "5f3ece69-f0f7-46eb-b447-28d8117a2b10",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "73ca28b1-131e-4ff7-926c-3c36bd916cd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d71330f0-e2b0-4514-8e2a-1b968391e4f5",
        "cursor": {
          "ref": "6a5fa3a1-c7bf-4c9f-8492-a4c72f62a010",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "1d2759b5-4805-4cfe-8efc-8238d4231290"
        },
        "item": {
          "id": "d71330f0-e2b0-4514-8e2a-1b968391e4f5",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "03741f72-0f1d-4d79-91d9-36f8cfe80568",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eb0bee4-ff43-4c80-9e1c-9b980f4dd71c",
        "cursor": {
          "ref": "cfb0f221-03c7-47dd-a717-c679ad83e816",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "3139fb87-5236-418a-9a0c-c36575a3c79e"
        },
        "item": {
          "id": "6eb0bee4-ff43-4c80-9e1c-9b980f4dd71c",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "804b14e2-8313-4c97-a450-bf616530206d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fddf23e7-372f-4877-ac47-86f015eaa47d",
        "cursor": {
          "ref": "06306429-0f22-43a2-bbcd-b521e3334517",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "25f0c18a-af22-459a-a064-939cabc71744"
        },
        "item": {
          "id": "fddf23e7-372f-4877-ac47-86f015eaa47d",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "7c54bdfd-4865-4fed-9de8-80d0a76b0a3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b717b10-a5e0-440e-8996-93d2af8e89dd",
        "cursor": {
          "ref": "d8614f0f-d48c-4e09-8f92-feae3b5cb121",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "9df22157-9a1d-4c88-bb80-e802ded41231"
        },
        "item": {
          "id": "5b717b10-a5e0-440e-8996-93d2af8e89dd",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "6390bec0-578a-440b-bb97-3716220e7a15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ed7a327-9af8-43ac-948c-1fc2fe18dc9b",
        "cursor": {
          "ref": "d8abaa83-ab5c-4912-9bbe-158028462c07",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "d825fea0-2182-41fe-aae0-88763201ea3b"
        },
        "item": {
          "id": "6ed7a327-9af8-43ac-948c-1fc2fe18dc9b",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "83bdcd25-6ceb-49e6-aec5-6ff8e4a44807",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15d2b083-32df-4f45-848b-d61daabe5edd",
        "cursor": {
          "ref": "bac3f39f-6306-4950-99ad-7814355b0fec",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "256a147e-5b47-43ef-9c26-5214d21eb2b7"
        },
        "item": {
          "id": "15d2b083-32df-4f45-848b-d61daabe5edd",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "48f21d7b-83c5-4f2e-9283-b8f5293c8390",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16646b78-cff1-44ca-a4a4-5660c8ca47da",
        "cursor": {
          "ref": "2c206112-de74-4f72-bf65-feacc5440e28",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "95b9f32c-d18a-4998-b8c9-f02af9ebd10b"
        },
        "item": {
          "id": "16646b78-cff1-44ca-a4a4-5660c8ca47da",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "c0e7c6f5-0729-4965-9617-1fb1e64617ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09098e41-21ef-44a4-8ae4-02ca1ca5a8ce",
        "cursor": {
          "ref": "e18d291d-e3ea-4e4b-a9e0-8d25145bb0f2",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "9082546b-fb24-4fc2-a61b-67cd55e8f164"
        },
        "item": {
          "id": "09098e41-21ef-44a4-8ae4-02ca1ca5a8ce",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "e04082f1-58d4-4613-b365-3ab0183f9eec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4782e530-3875-4ea2-8cc0-a3d1b2fed666",
        "cursor": {
          "ref": "49bf1e6d-929f-4cb9-a3a9-4d38f5135dd2",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "e85cfc67-419a-4339-abc3-99f1629a847f"
        },
        "item": {
          "id": "4782e530-3875-4ea2-8cc0-a3d1b2fed666",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "41d0e745-7a31-496c-a15c-714dd732a76c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e52e48c-c692-4d04-b4b8-3cb509aa20c1",
        "cursor": {
          "ref": "cb1063c5-714e-4950-8ac5-ef5d9fbe6f36",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "056aba51-eb08-4535-86de-058f8d7b89d4"
        },
        "item": {
          "id": "0e52e48c-c692-4d04-b4b8-3cb509aa20c1",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "118d9d74-0a1e-4610-a62c-86bc7dae0684",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e267a19a-df7b-4659-a380-eb78a503f2fa",
        "cursor": {
          "ref": "637d8c9a-866d-4596-b3b9-d91e2b3a107d",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "6ea7683c-47a2-4282-a254-0f1e4021e210"
        },
        "item": {
          "id": "e267a19a-df7b-4659-a380-eb78a503f2fa",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "2f9391f2-e1aa-4fb4-8240-59958239c603",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 318,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80fdd5ef-1a22-4865-ae63-2741aabfbef5",
        "cursor": {
          "ref": "f80a02a4-925d-4f6f-a9ba-2272319fcaf8",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "948fbb5e-5b5d-4baf-8320-621fd4a0faf9"
        },
        "item": {
          "id": "80fdd5ef-1a22-4865-ae63-2741aabfbef5",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "96b002cd-269e-42ae-b98e-280345aa424b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29ce2f51-8237-46c2-b40c-0ff64b258086",
        "cursor": {
          "ref": "5318af38-59d1-4e77-a0b2-a61c34463b45",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "ccd9817b-2a8b-4ba6-9c19-a42914b6b7c1"
        },
        "item": {
          "id": "29ce2f51-8237-46c2-b40c-0ff64b258086",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "9cd0ec4c-5168-4fba-997e-9ebba1d3625b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd002ac3-88ae-4072-b80a-85323961a0f2",
        "cursor": {
          "ref": "dffe0721-12b3-404f-8f52-32f0af6506e5",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "a129711d-2060-493b-a005-a23f9110fa46"
        },
        "item": {
          "id": "fd002ac3-88ae-4072-b80a-85323961a0f2",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "727e0781-d9a7-46f0-aed2-6884629e6743",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "076ff6aa-5e6b-4cb4-93e3-6a0ce9d65ce4",
        "cursor": {
          "ref": "097adbe9-bffa-4be8-a061-386a10933d86",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "b8313c29-9699-4dea-9c68-50222a8f1b7d"
        },
        "item": {
          "id": "076ff6aa-5e6b-4cb4-93e3-6a0ce9d65ce4",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "aee580ad-89b3-4b83-b541-c2f35ad4b90b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2645b988-b22e-46c6-894c-5bd6cf2cbca7",
        "cursor": {
          "ref": "98cb8c9c-92cf-4384-93cd-a824e639a30e",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "fed8c42e-9ae5-4459-ba68-279741855280"
        },
        "item": {
          "id": "2645b988-b22e-46c6-894c-5bd6cf2cbca7",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "f504a438-fe44-403a-8a08-4e3e1cc9004e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 308,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7bf4d1b-4afd-468a-95b2-0f882adf540b",
        "cursor": {
          "ref": "eadbe671-e701-43d6-adb4-90c7d048d5bb",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "8e73283f-6e7d-4781-aefd-09f2f93d0c7c"
        },
        "item": {
          "id": "b7bf4d1b-4afd-468a-95b2-0f882adf540b",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "3d6d31b8-e475-42dc-9746-935b4a2a2c12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb9ef522-fa6e-4932-b1ea-7168138f2610",
        "cursor": {
          "ref": "993f655b-20d5-4225-a2a8-297e606ab52c",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "a033ba71-c4ff-4360-aa33-73c866e416c8"
        },
        "item": {
          "id": "bb9ef522-fa6e-4932-b1ea-7168138f2610",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "6881344c-2761-4775-8be6-e703445284c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef29b850-ae62-47fb-8ff0-63b6325d7ee2",
        "cursor": {
          "ref": "91684fda-728e-4b3c-855d-c7337fb6ab59",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "3838a478-ec8a-45b7-83ea-152c8ce2032e"
        },
        "item": {
          "id": "ef29b850-ae62-47fb-8ff0-63b6325d7ee2",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "936f3615-11d2-4c14-af0f-7f16f91afefa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "756db54f-d673-4cbc-bcbf-40bfbc383f46",
        "cursor": {
          "ref": "7e869fa4-447c-4de0-9f7c-0c56eef8de57",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "1a791bde-3835-4c6f-b829-74041b196d54"
        },
        "item": {
          "id": "756db54f-d673-4cbc-bcbf-40bfbc383f46",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "d87bbae6-0381-4b0d-adfe-944ec3e2dae7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0642fecb-c8a7-479d-b7f5-4f3a50d9aa55",
        "cursor": {
          "ref": "88d81523-ab37-47bd-b897-86c2a14b8f22",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "bc101b6c-a079-4f0c-8f03-7134b8d0d19f"
        },
        "item": {
          "id": "0642fecb-c8a7-479d-b7f5-4f3a50d9aa55",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "a4c78c8a-2f52-4fb8-94a3-777ade8630a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93bc50f8-1bab-45bc-b0c8-e40f5fe2fafc",
        "cursor": {
          "ref": "a080ee79-2fab-461f-8b89-67fad135ef0f",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "116def10-f3ac-44ac-91fa-d189042e5679"
        },
        "item": {
          "id": "93bc50f8-1bab-45bc-b0c8-e40f5fe2fafc",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "39a35590-6c73-42b2-9335-49041aaa3cd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abf5685f-1aee-46c1-8e2a-113678b5b501",
        "cursor": {
          "ref": "91f11c42-a4d1-4e9e-b003-d415235f8d25",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "7d550cf2-d910-458c-af72-fe3c528dfd3a"
        },
        "item": {
          "id": "abf5685f-1aee-46c1-8e2a-113678b5b501",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "699c8720-394b-4eab-857a-dbc1bb3b0d40",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 79,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb31a7f8-738b-4313-9588-a86408db5601",
        "cursor": {
          "ref": "fa69c415-a254-463e-a04e-41dd0aca7764",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "47e9b821-a8d4-4fb5-94b3-fb9ee92fc763"
        },
        "item": {
          "id": "eb31a7f8-738b-4313-9588-a86408db5601",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "5972387f-fc1a-45a5-828f-cea1c7d66d33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b13e5d2f-69c8-4b3a-a0c8-eb3fc878bd27",
        "cursor": {
          "ref": "ab9e4ead-390b-47c5-9092-4afd4c823249",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "b32e4ab4-9273-4cd1-860e-37ed1c509e9c"
        },
        "item": {
          "id": "b13e5d2f-69c8-4b3a-a0c8-eb3fc878bd27",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "3320b713-688b-4355-bc74-718f4860de97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8de69520-438e-4ba8-8c31-d28cc6628934",
        "cursor": {
          "ref": "7f3ed646-0dbb-4c1c-8712-e7f7b74f4722",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "5eabea61-c600-4ef3-9371-ab20d5f72185"
        },
        "item": {
          "id": "8de69520-438e-4ba8-8c31-d28cc6628934",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "61133094-2a7b-4093-bf95-21cb36bebb1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac10a240-f714-4a0f-90d3-edbc8ce1409e",
        "cursor": {
          "ref": "87a0e442-072d-418b-b7d9-13165d17ad2d",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "aefd5253-cc28-4ba2-857a-8013141bd09c"
        },
        "item": {
          "id": "ac10a240-f714-4a0f-90d3-edbc8ce1409e",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "5609cd81-df92-48f0-88cd-9d301aa93263",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60f71011-4378-4db6-8379-12011f3041f2",
        "cursor": {
          "ref": "d0f1631d-4619-4277-abde-8b36cbb821a9",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "b1a8b1a4-22ba-430d-998d-59a65d22354f"
        },
        "item": {
          "id": "60f71011-4378-4db6-8379-12011f3041f2",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "511530a9-b631-4611-85ec-e9dcf8f33922",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab5d5fa7-c6ae-40b5-becb-e31bc4825ced",
        "cursor": {
          "ref": "98e4f12f-c30a-45a6-b97b-465195ff2436",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "12de7c93-3414-45e5-8301-28029896e015"
        },
        "item": {
          "id": "ab5d5fa7-c6ae-40b5-becb-e31bc4825ced",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "e953d454-2262-4a9e-82bd-820d0240686f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd05271d-6d2c-451c-ba5a-b4f139453491",
        "cursor": {
          "ref": "3c9e1995-8250-4c43-902d-d1b30cf1cd2c",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "4e77e737-ee21-4b7f-a264-0d1b979ee61e"
        },
        "item": {
          "id": "bd05271d-6d2c-451c-ba5a-b4f139453491",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "f8ad8331-8874-417d-945f-02ec9c99bf2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac10a598-5f02-49b2-b99d-277fc6537095",
        "cursor": {
          "ref": "faf5423f-98a5-4607-a357-bca9e5e43574",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "0470dc88-8bee-450c-a0e6-9ad83e2aa5de"
        },
        "item": {
          "id": "ac10a598-5f02-49b2-b99d-277fc6537095",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "be07f317-7a9e-4004-afad-b047b779d001",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d6d52e8-8fb5-481e-b69c-f818bd1a48de",
        "cursor": {
          "ref": "6ccb14e4-37a6-4946-a180-91ee62bd5e35",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "ee942005-b788-4328-8e06-39dafa3cc5da"
        },
        "item": {
          "id": "8d6d52e8-8fb5-481e-b69c-f818bd1a48de",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "54500d38-1683-4c1e-956f-b034653bb3c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cead535-03f6-42bd-b686-736d92b1479e",
        "cursor": {
          "ref": "b48378eb-4935-4ae1-983d-484eb9c5dfc2",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "e623e46d-cb4d-4cfc-a7af-4876ffdc5806"
        },
        "item": {
          "id": "5cead535-03f6-42bd-b686-736d92b1479e",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "7d743379-e6a5-43c3-84ac-c65a8f27ffae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa0df406-a13e-4e6d-8ec9-41c9c123df5c",
        "cursor": {
          "ref": "899cf7ae-4067-496e-b53b-d7596ae074e0",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "1a52f34b-c2c7-4cbb-bb71-28cbaa96897e"
        },
        "item": {
          "id": "aa0df406-a13e-4e6d-8ec9-41c9c123df5c",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "ecc6ccf7-b417-4573-b8b8-d7287598b6d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c6f00cc-c68f-4301-825e-d94ff030323e",
        "cursor": {
          "ref": "52afd180-2aab-407a-9db6-86c575b779e4",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "e122c1f3-2e7d-44ec-b586-2382c574a0c3"
        },
        "item": {
          "id": "7c6f00cc-c68f-4301-825e-d94ff030323e",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "b414e2a6-7d23-4585-8032-1d978e896cb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e0cfb5d-4669-45b9-a54b-fc693161d306",
        "cursor": {
          "ref": "6c6810c0-00b8-40d6-ba6c-af8e5c2c667c",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "997da028-bd4b-40a1-96ee-4dd7590fd342"
        },
        "item": {
          "id": "1e0cfb5d-4669-45b9-a54b-fc693161d306",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "b6b9b650-c6f8-416f-8165-5f40c5159981",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cd1e861-6c97-48d0-a92b-7ff05d87f6ea",
        "cursor": {
          "ref": "0504eab8-9296-4702-98f0-53f892f3ac6b",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "3e3f4d1c-a36c-43d1-8c0d-faa0c2752af2"
        },
        "item": {
          "id": "7cd1e861-6c97-48d0-a92b-7ff05d87f6ea",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "0ac2dd65-ce10-48d1-950c-5993ce500e1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dba7d6f0-8977-458b-be28-5ad553ef9b1f",
        "cursor": {
          "ref": "1629d2e4-b6ec-4e3f-9e72-c830f2f8e5c0",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "765d1653-2527-43c4-8bb4-32fcad1d5f40"
        },
        "item": {
          "id": "dba7d6f0-8977-458b-be28-5ad553ef9b1f",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "87c6e6a7-ac27-481b-a382-b8263bc231c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccd41537-c52f-437c-bbd8-2fe03e6bd804",
        "cursor": {
          "ref": "481b827f-d12a-4b6e-aea1-50043ffacdf2",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "364f42f1-ad79-4304-a454-daf4f94edb2f"
        },
        "item": {
          "id": "ccd41537-c52f-437c-bbd8-2fe03e6bd804",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "a33e5a29-25e9-4200-9263-d924e9a5aa47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c341ca2-e47c-4e42-940a-6f480d59c7d7",
        "cursor": {
          "ref": "c63779ce-397b-493a-b9f1-f095dc2253d6",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "94366fa0-41bc-4188-99b4-ccc80e6ad300"
        },
        "item": {
          "id": "6c341ca2-e47c-4e42-940a-6f480d59c7d7",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "4b106377-a3ff-4a9b-9db0-d6645c4385fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "458437f0-31cf-4e0b-ba95-7d8d3efe6f43",
        "cursor": {
          "ref": "347411ed-14ca-4d58-aab5-bfc086d65476",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "231f6f20-c296-49b3-9776-6de755d082a1"
        },
        "item": {
          "id": "458437f0-31cf-4e0b-ba95-7d8d3efe6f43",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "685185b0-9f36-499b-8de1-73fd62a57357",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "816583bf-1742-479c-93c7-c940c045c450",
        "cursor": {
          "ref": "519458a7-a71d-434e-91d3-17d5785ccd0d",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "f1de9c40-6df1-46eb-82be-b2cc79128d89"
        },
        "item": {
          "id": "816583bf-1742-479c-93c7-c940c045c450",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "c0da4170-2722-4eb1-b549-f5a1e5460551",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79e06701-b077-44b2-a741-d803aa561718",
        "cursor": {
          "ref": "72aef235-394f-4edf-b625-71f42c069bf6",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "2b402f00-71f1-47dd-8931-5d464c5dfd68"
        },
        "item": {
          "id": "79e06701-b077-44b2-a741-d803aa561718",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "9cd27a6d-22fd-493a-bc46-ba1e05367437",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b88d72d4-6981-4f31-b8b5-093561b3c8c3",
        "cursor": {
          "ref": "d8fdd5bf-fd9d-4738-9b5b-32a1eb8ec8c7",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "28db66af-a071-4935-9597-a7a63f628cdb"
        },
        "item": {
          "id": "b88d72d4-6981-4f31-b8b5-093561b3c8c3",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "7bdfa17f-39cc-4b54-9496-f5f3abb7a338",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1213a42c-91fb-4b7e-85d7-6d6657fea358",
        "cursor": {
          "ref": "7c689f81-25b4-4dbb-afa1-d72c8b5c2ed8",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "2086796e-3b5e-443f-8577-8abf157ec65a"
        },
        "item": {
          "id": "1213a42c-91fb-4b7e-85d7-6d6657fea358",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "3a54c5c4-b63a-48ec-83b2-6e3c263e8665",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efaa246e-299a-493b-a74b-cf8e0dbc2c64",
        "cursor": {
          "ref": "5741b591-226a-4ce6-81d3-9ca23d30356a",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "c5b528ba-57fb-4c95-967f-5a16e29aa6ba"
        },
        "item": {
          "id": "efaa246e-299a-493b-a74b-cf8e0dbc2c64",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "fc7bdeab-543d-480c-88f6-c2d62ddea0f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "979357da-2535-4df4-bf70-df028b3c8058",
        "cursor": {
          "ref": "aa6f2892-03f6-4ffc-84fa-f445cbe5803b",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "aa67e808-40c6-4d2a-85b2-fcaa0b758bcb"
        },
        "item": {
          "id": "979357da-2535-4df4-bf70-df028b3c8058",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "c32e2d68-4c97-4eed-bb60-757871535eee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0b869d9-8807-4148-a850-ee413cfd348e",
        "cursor": {
          "ref": "8cfb7f15-6173-478f-ba18-5a01143f1869",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "2b463c12-ec9e-4598-bce2-b6a3744ec74b"
        },
        "item": {
          "id": "b0b869d9-8807-4148-a850-ee413cfd348e",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "f24d2e11-f157-44b8-b3be-b43553e348cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc3345ea-ab75-4d05-9224-8c3957b53b13",
        "cursor": {
          "ref": "0fdc4c69-444c-47f8-aca0-e4da21b972e2",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "a4527253-607a-456d-92ea-97186793449c"
        },
        "item": {
          "id": "cc3345ea-ab75-4d05-9224-8c3957b53b13",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "64edb936-962c-40fe-a878-2181a5da1d6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04ce4907-4033-4dde-9c14-852f2eab2409",
        "cursor": {
          "ref": "f5dca1a2-1c02-43c8-b9d5-eac6fc3a1276",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "ea23af8d-5b5d-4e1a-932d-303439fe0ead"
        },
        "item": {
          "id": "04ce4907-4033-4dde-9c14-852f2eab2409",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "51460c3c-8aab-4214-b571-21618b692956",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31c9f855-6784-4845-908b-3f6b37bcb510",
        "cursor": {
          "ref": "472aaa65-e118-4daa-8c85-0ae5269066e0",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "60bbb7a5-206f-4127-986f-d75f8b094953"
        },
        "item": {
          "id": "31c9f855-6784-4845-908b-3f6b37bcb510",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "237d5204-0580-43fd-8709-552f1c403cbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4534b900-d349-4680-b4f4-8971e3e637ac",
        "cursor": {
          "ref": "e5c51f49-0f8b-4380-854a-844e63676447",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "98c0cf9a-b946-4831-8978-9fa3635ca958"
        },
        "item": {
          "id": "4534b900-d349-4680-b4f4-8971e3e637ac",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "3d5df014-4dca-4c1e-b5fc-9f21449b91dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9024b562-c41a-473d-9b0c-d783f436ebef",
        "cursor": {
          "ref": "917856a0-58fd-4bbf-9c50-b7c45259cfa8",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "b3a657f8-46a5-4733-ba11-0cb6fbb1da63"
        },
        "item": {
          "id": "9024b562-c41a-473d-9b0c-d783f436ebef",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "b9f9dc30-f4ce-4507-bc60-4f11ed794c24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5333dfd9-0e3e-4a95-8bed-847eb1da9a6a",
        "cursor": {
          "ref": "5b757159-a798-414f-8046-29767097cc81",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "02e5bd16-6fd6-4826-9f18-0aacf2af0e36"
        },
        "item": {
          "id": "5333dfd9-0e3e-4a95-8bed-847eb1da9a6a",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "43cbf840-30e4-4b98-bd73-cb8c75c68015",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99274d21-5bb7-4443-8e07-d38de9908f26",
        "cursor": {
          "ref": "ee709ece-c85d-4088-b985-e53175b32334",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "43cb5b34-6f19-4959-8145-b97d5b06c72b"
        },
        "item": {
          "id": "99274d21-5bb7-4443-8e07-d38de9908f26",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "df184dc2-c51f-47b5-abf7-8441c5fc755f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2721f811-7568-4b17-9784-8e18f873f245",
        "cursor": {
          "ref": "4610b199-689d-465c-93b9-0b30daf9d573",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "6dc7dfd7-d9d1-406d-a401-88ae88d2c560"
        },
        "item": {
          "id": "2721f811-7568-4b17-9784-8e18f873f245",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "636774b0-b3bf-41fa-af54-79130f9515c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5a5f7f3-fac4-44a0-b975-2e9b4caf248d",
        "cursor": {
          "ref": "3a3c4e0f-b538-4f2d-b05b-7bfe0bd1b762",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "48c4bbed-2755-4b26-93c1-26d04ddfb4aa"
        },
        "item": {
          "id": "d5a5f7f3-fac4-44a0-b975-2e9b4caf248d",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "8205d19e-81fe-48f3-90b4-f5e2fed2b6e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fca8594d-20f4-4c9d-8750-34613dd20726",
        "cursor": {
          "ref": "606345cb-1659-47f2-b9dc-258579bdf3b6",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "4b99f308-fd71-465a-90f6-5f644321a6a9"
        },
        "item": {
          "id": "fca8594d-20f4-4c9d-8750-34613dd20726",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "d706e60a-8304-4382-90ba-096a41d0e579",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5954844-19aa-4531-879b-e5e103391726",
        "cursor": {
          "ref": "1ed79383-e63f-43ad-acd7-743c03c39b62",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "d0fc7c0c-cdd5-442b-8759-021e92de811f"
        },
        "item": {
          "id": "d5954844-19aa-4531-879b-e5e103391726",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "89233471-03ea-4303-9913-89db5caaeb92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "602c0dd4-5bfb-4085-9fc3-c9d77aa5f0cf",
        "cursor": {
          "ref": "8f0d2ce9-e045-4afd-9966-3f2796bd6541",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "42cc7431-d898-4cda-917d-cd6efa8c1d57"
        },
        "item": {
          "id": "602c0dd4-5bfb-4085-9fc3-c9d77aa5f0cf",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "2485754e-fbf1-4816-8d19-526ed36e353a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3764756-c6f2-4c58-ab65-699c744e958d",
        "cursor": {
          "ref": "a515f998-a815-4887-9465-5aeb29197e53",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "88c7ab6c-6e68-47e1-a22c-eeec8f0fe1a6"
        },
        "item": {
          "id": "a3764756-c6f2-4c58-ab65-699c744e958d",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "2429cb3a-0985-41db-adbb-4f0880337b6b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 76,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a78c7e72-7c86-4809-b545-3037e74ed795",
        "cursor": {
          "ref": "81dfc8fb-631e-4b87-9090-626fe6a32b7e",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "f67fb05a-4e0b-4148-94b5-1dc6dc876614"
        },
        "item": {
          "id": "a78c7e72-7c86-4809-b545-3037e74ed795",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "4fadaa97-864f-44dc-b0e2-50ac9226634d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34544840-670c-46e5-a982-98a0c1ff89bd",
        "cursor": {
          "ref": "cd30f418-e2b4-4755-afea-a425d1ee35af",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "90782765-0fb5-4f44-9268-79f7d90024c1"
        },
        "item": {
          "id": "34544840-670c-46e5-a982-98a0c1ff89bd",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "4a05dfaa-ee66-453f-9d21-bbd11b887223",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a54480c-1f04-4536-be61-921599d4f83b",
        "cursor": {
          "ref": "213bff6a-dfae-4b5a-bd9f-f62981e705a0",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "476a76ca-5ab0-4fb9-a3ae-beb37ae966fd"
        },
        "item": {
          "id": "9a54480c-1f04-4536-be61-921599d4f83b",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "29d2f180-38c5-4c08-bfdd-107ab84a7c51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bfc1b20-99ee-4ed2-8ff3-99bc1f543a6e",
        "cursor": {
          "ref": "7b915ba3-28d4-4190-bc06-f62f26878c1f",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "3330d9d0-278c-40cc-8ba2-15ed0e417fe6"
        },
        "item": {
          "id": "9bfc1b20-99ee-4ed2-8ff3-99bc1f543a6e",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "6e2f0951-361a-412f-b2e0-a70a87cf4f7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "696f545f-7545-44f8-a728-a44b58959e33",
        "cursor": {
          "ref": "1454a0a1-ab0b-4d79-b7e4-6e19884c40a3",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "c6972287-3c5e-4f46-bd07-ae3a647eb057"
        },
        "item": {
          "id": "696f545f-7545-44f8-a728-a44b58959e33",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "34733d7a-a117-4cd2-945c-39738fea1f4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b2c45df-715e-4ab2-a4f9-5a37e0e5cc71",
        "cursor": {
          "ref": "e9dd0614-25c6-4b28-8dc1-0871377f9bfc",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "f8efcae6-3f9c-4d1d-8a69-c92368e61a4e"
        },
        "item": {
          "id": "9b2c45df-715e-4ab2-a4f9-5a37e0e5cc71",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "43244c0c-277e-475a-b0e9-3ada4feef629",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e390fcc-2e6a-4bfc-b51d-a0b51f2ab90e",
        "cursor": {
          "ref": "91070491-e9ab-4b1a-b6e2-4979e79e5db3",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "67c8e496-8151-477f-8333-e986435a3d8b"
        },
        "item": {
          "id": "7e390fcc-2e6a-4bfc-b51d-a0b51f2ab90e",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "a0af5e48-d389-47d4-ab59-923f8756f068",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db2a7e87-e495-4f32-a2a1-9ed196b4ba05",
        "cursor": {
          "ref": "9041fe64-1304-428c-9b2d-a5bcca1169f4",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "852a3fa0-f9c1-43a6-becf-059da08bf2bf"
        },
        "item": {
          "id": "db2a7e87-e495-4f32-a2a1-9ed196b4ba05",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "bca3a369-7409-4623-839a-df86cc19cead",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54c1b138-c2dc-47ed-b99c-63ed7c76a0f1",
        "cursor": {
          "ref": "d4cb88f0-46ea-43aa-96de-baae08b061ab",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "94d69601-4d29-4359-b9fc-3ffbff086a12"
        },
        "item": {
          "id": "54c1b138-c2dc-47ed-b99c-63ed7c76a0f1",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "9e275feb-b833-444c-9a25-6a771db7635c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cf95501-89a2-44d0-9a02-766031ee0ac6",
        "cursor": {
          "ref": "94d869bf-513b-44b6-92ce-44cd9808ce26",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "77db84ee-7fb8-4c91-8ad0-3c01489f1dd2"
        },
        "item": {
          "id": "9cf95501-89a2-44d0-9a02-766031ee0ac6",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "1d213821-4c80-4fa5-93fe-983b8fad7b8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c317a362-36fe-4e54-a54a-29eb34654400",
        "cursor": {
          "ref": "63937307-8f27-4a0b-bbc1-dcae2c4070ec",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "ec2c1fac-7d77-44cd-8e83-2ff55be8e077"
        },
        "item": {
          "id": "c317a362-36fe-4e54-a54a-29eb34654400",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "352e396b-a9fd-425b-9d4c-ad3c4bb5cee6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2deb384f-34d4-4df6-84cc-a1ff993043a1",
        "cursor": {
          "ref": "15ce1300-3615-4d17-ae0c-cff735fc357a",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "4ef3ea4e-3ebd-47e6-b911-2a1e37196323"
        },
        "item": {
          "id": "2deb384f-34d4-4df6-84cc-a1ff993043a1",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "1929918d-1928-4f5a-b12b-540448f53ed6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a8b3bc2-b5cc-4678-a05d-dd823e4e7b6e",
        "cursor": {
          "ref": "2459f594-a04f-4161-a05a-73e3887380e0",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "96126fa7-ab91-4745-a847-514f0369b2df"
        },
        "item": {
          "id": "9a8b3bc2-b5cc-4678-a05d-dd823e4e7b6e",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "ee706791-500c-4f02-8bbf-ef7196a5656c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fd00b7e-35ec-4379-a7e9-f4d1d5463839",
        "cursor": {
          "ref": "8210955d-b1d1-4803-8fc0-019cd829a232",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "d27ed591-623e-4d53-b8d8-feb92ab5a1e0"
        },
        "item": {
          "id": "8fd00b7e-35ec-4379-a7e9-f4d1d5463839",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "d8e2bd61-3a8d-4cfb-8db6-f39b8ccceaf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2de37aae-e84a-450d-9b34-63df860f5b99",
        "cursor": {
          "ref": "9c4f75b9-3a74-4f7a-a623-a1ea29eeeb4b",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "84f3d22a-1c2f-441c-938a-c5a908607507"
        },
        "item": {
          "id": "2de37aae-e84a-450d-9b34-63df860f5b99",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "7d5676ca-ebe0-4ff7-8db2-26542c5245a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b97e0f8f-cec0-43a7-b918-0c5a801f211e",
        "cursor": {
          "ref": "4cfc041b-be15-4702-a8c7-e554fa2e7bee",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "f1d238fa-6c72-4812-bae4-22add3aa128b"
        },
        "item": {
          "id": "b97e0f8f-cec0-43a7-b918-0c5a801f211e",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "ba4a2008-ba4f-4e3d-986f-f6f4fdcb9501",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f83f868e-021a-4ed4-b484-fce4ea75e19d",
        "cursor": {
          "ref": "d2829320-6ae2-49a9-98d5-e9138dcd316d",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "a7d2c0b0-c0c3-4d73-aca0-546b36ea2946"
        },
        "item": {
          "id": "f83f868e-021a-4ed4-b484-fce4ea75e19d",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "01a83dff-ca15-466c-8f47-bc7734b495a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97fa0666-3a32-406c-8a4a-1eb4833854cc",
        "cursor": {
          "ref": "8c7129cc-4f27-44d1-a1fc-9e42f990c52c",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "d2a3f41c-ace0-4ca4-ad51-1718e4dc1cbd"
        },
        "item": {
          "id": "97fa0666-3a32-406c-8a4a-1eb4833854cc",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "b1c6bdff-a4c7-4068-9acd-cdee3cc7d2fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fefdd3a1-ce5a-49db-af9a-15592ef42ec2",
        "cursor": {
          "ref": "64f48008-4fa5-4207-a021-9c8123b0a67a",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "a9d3d85d-4856-4c88-9a73-e477c9525040"
        },
        "item": {
          "id": "fefdd3a1-ce5a-49db-af9a-15592ef42ec2",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "37becdb7-f85f-4aab-bb2d-1849d18e4d86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e82409b-f3b1-4851-bf54-9be705e0d894",
        "cursor": {
          "ref": "1665b95f-367c-4fb1-be80-fa86a6b0dd4f",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "6d2cbbc2-3519-440c-b2c3-4af5735e2e58"
        },
        "item": {
          "id": "3e82409b-f3b1-4851-bf54-9be705e0d894",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "b10550e0-d790-48ab-8bbf-853822fc76eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aca496f-13a8-4df7-9cd4-e5a112493e1c",
        "cursor": {
          "ref": "fb314623-d8f5-4238-84c2-1cd1e2ea7d5d",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "fbc0da23-da45-43a7-aa06-2cf45026ed78"
        },
        "item": {
          "id": "9aca496f-13a8-4df7-9cd4-e5a112493e1c",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "868b8ad3-9cae-47db-8726-d2a72ca6e5c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86633c78-fb0f-40e9-8ec1-762c9d08b229",
        "cursor": {
          "ref": "69edc1b4-5296-42a9-9284-3e29966178ce",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "7e428558-687e-48e1-9889-5bec1eef2da4"
        },
        "item": {
          "id": "86633c78-fb0f-40e9-8ec1-762c9d08b229",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "6e5a0b8a-ff87-4da0-80af-782e7c3f6ea3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "433596a4-3d4e-43f0-9199-b1266f6a0518",
        "cursor": {
          "ref": "f41e0d77-bfce-4de4-8a1a-34196d1e8344",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "09e5e037-1dd1-491b-8359-d6086298afbc"
        },
        "item": {
          "id": "433596a4-3d4e-43f0-9199-b1266f6a0518",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "ea889e93-1f1a-4969-8ac3-761df8f36c27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "124b248e-5482-4fee-8871-356fe8baa99c",
        "cursor": {
          "ref": "8136335a-ca16-4bfa-85f1-1f8e48a3b8d5",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "d50e4cf3-f612-48bd-9d97-9b7c5c26e8c4"
        },
        "item": {
          "id": "124b248e-5482-4fee-8871-356fe8baa99c",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "4dda6b67-7049-499a-a03f-158001f42014",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aed3e83d-0337-4b5f-bf59-42747bc670d2",
        "cursor": {
          "ref": "b46bc78a-e721-4c14-b508-edc13ab1b2c2",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "712e5e6d-b4c6-47cf-9191-e0167accb92c"
        },
        "item": {
          "id": "aed3e83d-0337-4b5f-bf59-42747bc670d2",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "29e041a6-d97d-49a3-82e5-4488710e1cbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00e5d59d-1b85-4caa-8ff4-78cc78436950",
        "cursor": {
          "ref": "49c4e85f-1ba4-4fe3-ad80-6da364760fc7",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "f415a9cc-6b4e-4102-8d70-fd3095e99240"
        },
        "item": {
          "id": "00e5d59d-1b85-4caa-8ff4-78cc78436950",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "7a5ab367-edac-482b-81ce-edaa775331b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14535e8c-d899-4fa8-97a3-fc1e87394cc6",
        "cursor": {
          "ref": "b88bfc2f-508a-455f-8ce0-ea5625a482cf",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "930304cb-f136-4c17-89d1-516340f70b42"
        },
        "item": {
          "id": "14535e8c-d899-4fa8-97a3-fc1e87394cc6",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "82c7e30c-95f8-4102-8156-216f9d0a9a7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62055247-23bb-4b8d-9cd4-07e73a715e3f",
        "cursor": {
          "ref": "acf5a4d8-e2ca-4b8e-80b1-f87177b4e77a",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "9a3fc32c-76a2-4550-8d33-00882e0c11ee"
        },
        "item": {
          "id": "62055247-23bb-4b8d-9cd4-07e73a715e3f",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "5f64797d-5106-43f1-8c0c-5b79214e9119",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25792dfa-10d4-46c2-9a5e-b9748af6bc1b",
        "cursor": {
          "ref": "205c9ec7-321a-4b0d-8772-a63e3a6f3dfb",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "fe27e0eb-a7e8-4cb5-aa19-17287057d27d"
        },
        "item": {
          "id": "25792dfa-10d4-46c2-9a5e-b9748af6bc1b",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "415ff5e1-9ba6-42fd-9425-b50b323e56ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2155b3f-d3c3-483a-8a8a-8526f40eb012",
        "cursor": {
          "ref": "4d852f35-3138-4ead-8fa4-d1ddf2453917",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "2f844d7a-31d7-410d-bfca-9c9a230c4c85"
        },
        "item": {
          "id": "e2155b3f-d3c3-483a-8a8a-8526f40eb012",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "1eb6c7dc-88a7-4172-807a-424117454542",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26500127-4229-4183-9dda-5a47c662eb36",
        "cursor": {
          "ref": "38d140ac-0907-452a-823f-0a477b8d29bc",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "d5afa47d-43ce-4391-848e-29cf857a19ea"
        },
        "item": {
          "id": "26500127-4229-4183-9dda-5a47c662eb36",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "acafaa3e-ef8d-4e6a-a6cd-b1e9a7d00b10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48430790-9adb-4423-a935-edfa786e6a02",
        "cursor": {
          "ref": "5432490f-41fc-4e5d-8a72-baafeceaed56",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "f7c93689-9617-407b-be7b-cb859a6eb010"
        },
        "item": {
          "id": "48430790-9adb-4423-a935-edfa786e6a02",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "e48c64c4-58d8-4ff8-90ba-7b04a95accae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5990b9c-69af-484e-9e71-7584680ce007",
        "cursor": {
          "ref": "d4eb02bb-b3c3-4760-9844-400724ecc834",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "b23f8f0c-ecb4-4694-a9a6-c7a1e5b73cc6"
        },
        "item": {
          "id": "a5990b9c-69af-484e-9e71-7584680ce007",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "6b1f4f6f-dad2-4415-a65b-f3e2f172528f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "139acc2f-a563-44a8-a844-ce0a6bcce65f",
        "cursor": {
          "ref": "08b62312-4290-4812-a6b4-43c287731d62",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "7bb0a51e-2a18-4e70-bd39-e9174016e07a"
        },
        "item": {
          "id": "139acc2f-a563-44a8-a844-ce0a6bcce65f",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "4e37da68-cbe6-47a5-9acc-2b04256eeafd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e5241a0-d7a6-441f-8f87-f7853876ea77",
        "cursor": {
          "ref": "149ca9c8-d84c-42da-91c3-b72bfe9e911f",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "b7210b1b-834d-4a27-aaee-84a29fff257c"
        },
        "item": {
          "id": "0e5241a0-d7a6-441f-8f87-f7853876ea77",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "ace147c9-1043-4aad-a088-8c6a3657b122",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51eff672-f85a-4f2e-ac21-98d69adedfcd",
        "cursor": {
          "ref": "5eb8dea6-7cf4-4973-a761-8984345d6dbe",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "2044d862-a982-4921-8da6-81e446ea9542"
        },
        "item": {
          "id": "51eff672-f85a-4f2e-ac21-98d69adedfcd",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "57dde0b9-abad-4567-853f-50a39401fbe8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f45569e8-e001-48a2-a6a0-7182f8edfef4",
        "cursor": {
          "ref": "291fccf4-5fd4-4569-b127-5119dc7e4df0",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "519cb2b8-0230-4019-af32-083d47cf86df"
        },
        "item": {
          "id": "f45569e8-e001-48a2-a6a0-7182f8edfef4",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "1792c4f6-d7b2-4252-bf3b-3a5d991cf861",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16dfb785-5b7c-4530-bcec-07f2c8b21a56",
        "cursor": {
          "ref": "40290c8b-154c-46f8-84db-2d2f7f7f62ca",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "54608ee2-0dea-47ff-8245-c36081e4b00b"
        },
        "item": {
          "id": "16dfb785-5b7c-4530-bcec-07f2c8b21a56",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "0fc1379a-7c9b-4bb0-aea5-62358dfaf256",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f03eb8cc-3de9-48b5-9dd1-8cc55edf25ea",
        "cursor": {
          "ref": "caf134ed-b892-4935-b320-e483be1df8d5",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "19b8a100-3ef1-4d99-b595-abbe27ce71ef"
        },
        "item": {
          "id": "f03eb8cc-3de9-48b5-9dd1-8cc55edf25ea",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "f1d96907-199f-4416-9128-c0e0b218bdc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1484f778-46f7-42a2-9cf3-68f6e5300db9",
        "cursor": {
          "ref": "3998911e-09ae-4b7e-ba7e-9ccfd510a6d6",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "9a4db613-c578-4e5e-b837-b66b74495b91"
        },
        "item": {
          "id": "1484f778-46f7-42a2-9cf3-68f6e5300db9",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "50ffc19d-6507-4943-bb63-1f7b6d64565f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e09c49ee-707f-42f4-9619-8243d13cc249",
        "cursor": {
          "ref": "b5a5c954-a80f-46a2-8951-4be9b95ce930",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "040bf411-aef5-4a03-b987-a702a19d53f3"
        },
        "item": {
          "id": "e09c49ee-707f-42f4-9619-8243d13cc249",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "9bad1628-949c-4613-8005-f833c4e1ea22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b361566-63ee-4ee7-8515-60a690b75162",
        "cursor": {
          "ref": "0a2c7030-95b8-4303-a450-7b47995a8bc4",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "74d9c7dd-6741-41f7-b42a-b32ded044dc0"
        },
        "item": {
          "id": "9b361566-63ee-4ee7-8515-60a690b75162",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "ed6bc72c-44d4-48a3-933f-22045a69c0c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "300cc14b-3159-49c9-8490-ac7f02643b24",
        "cursor": {
          "ref": "61810aab-f56a-40e8-9908-1356741098b0",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "8417773a-3e52-4e91-adc8-424ff8ca869e"
        },
        "item": {
          "id": "300cc14b-3159-49c9-8490-ac7f02643b24",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "66be9d03-fdf2-43bd-b61f-de718ed8ac2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b465594-b642-4d52-8514-cd8b00d36ef6",
        "cursor": {
          "ref": "c46023b2-1bb2-44bf-82f0-ed4f0e1b6f0e",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "39c94be7-c205-4d3e-9111-f0f0d6fa2307"
        },
        "item": {
          "id": "0b465594-b642-4d52-8514-cd8b00d36ef6",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "e6307be1-5f6d-4334-9565-d269d55ca1df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fbf6755-3f12-4552-a430-06a7aaaefb25",
        "cursor": {
          "ref": "28f9be42-c55e-4c62-8c48-40565b8e3d8c",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "027d2e0b-d8d2-44cf-8237-44c71dd3b1e5"
        },
        "item": {
          "id": "7fbf6755-3f12-4552-a430-06a7aaaefb25",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "722054c9-a18f-4256-8110-0058e2ce618e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "520247e5-2bf4-4aec-8964-caf6ceb8ce0d",
        "cursor": {
          "ref": "22e9bfdf-ba15-492f-9e91-5217405bc41a",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "94e49fb8-e366-4241-ba81-24d87a04af23"
        },
        "item": {
          "id": "520247e5-2bf4-4aec-8964-caf6ceb8ce0d",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "fa7e85bf-4bc9-4967-a4eb-f34b08c55061",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cf49fb6-ba7d-4eff-a538-9a20a1a171d5",
        "cursor": {
          "ref": "51fead80-870e-481f-9d58-46b7ab0ba4ca",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "ff9e5130-3c1b-4559-9f5e-df93f0b3fd07"
        },
        "item": {
          "id": "3cf49fb6-ba7d-4eff-a538-9a20a1a171d5",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "94337fed-61bf-42e9-b949-1a24c720479b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca6542f9-5082-4f5a-9e2c-fa6a52a023d9",
        "cursor": {
          "ref": "b1b7d341-3ed8-45d3-b51b-6dda4000a4e0",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "81540442-3a39-401b-814f-69145e61b063"
        },
        "item": {
          "id": "ca6542f9-5082-4f5a-9e2c-fa6a52a023d9",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "dcc6ffea-e734-468d-94c5-1c225359449d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f5723b8-83d2-49f5-a139-9c15dd5f93f7",
        "cursor": {
          "ref": "572208ce-e7df-4f38-bf49-8a80f5ee519f",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "92318d8b-a209-45f6-bac7-069477f93065"
        },
        "item": {
          "id": "9f5723b8-83d2-49f5-a139-9c15dd5f93f7",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "f6b1f7c2-3a98-429d-b542-b0fb911e9446",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5051c15c-413d-4473-a20a-b5b20e9d3cf3",
        "cursor": {
          "ref": "891a1873-5f97-4846-95e8-599dd474299f",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "07b88e88-7fdc-4303-afa9-cb677bcb2a30"
        },
        "item": {
          "id": "5051c15c-413d-4473-a20a-b5b20e9d3cf3",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "19a7e5e4-fa0b-48c0-87b5-7af7093abf4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3124e5d0-59ed-4dff-bca1-56857443c5b0",
        "cursor": {
          "ref": "6b1f2701-2b9e-4e9d-814f-32b48ce6ea4b",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "3d82ba1b-9a92-4550-8075-334a7fdec152"
        },
        "item": {
          "id": "3124e5d0-59ed-4dff-bca1-56857443c5b0",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "9f2912ad-851c-4e3c-832a-2bd4f9d1756f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c56921cd-45cf-41fe-b60a-f25686c03f1e",
        "cursor": {
          "ref": "e7892ad4-dd3c-43ee-8e82-f94b5b42f5f3",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "69b6e782-166a-47fb-9c97-bf5d0a83fa31"
        },
        "item": {
          "id": "c56921cd-45cf-41fe-b60a-f25686c03f1e",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "90a9b528-11b0-4109-9a86-afc905420166",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9210230-759f-41c6-a06b-24bb91fcdb9b",
        "cursor": {
          "ref": "0582f1df-363b-4e3c-b84b-1209e58177d6",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "d834d499-2a63-4d1d-a70a-5482885c09e0"
        },
        "item": {
          "id": "c9210230-759f-41c6-a06b-24bb91fcdb9b",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "3f793721-f9f5-4224-bb59-1b4224b64da4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78c6918f-1d24-4847-ad89-6522477af473",
        "cursor": {
          "ref": "52bddccd-aaeb-4a73-86b7-d9361631429a",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "fcef3a09-0dea-45f8-8800-04b143d7965c"
        },
        "item": {
          "id": "78c6918f-1d24-4847-ad89-6522477af473",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "d36273aa-4355-4983-b137-b2a5fcc9f069",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb32bd4f-cc7f-4ec3-b6d5-6e0b0ed6b8fe",
        "cursor": {
          "ref": "58f1bbed-bfaa-495e-baab-112103f90a88",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "b0dcb1b6-e738-4de3-9d9c-a4f64314d6ec"
        },
        "item": {
          "id": "cb32bd4f-cc7f-4ec3-b6d5-6e0b0ed6b8fe",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "5f726690-d9fa-485f-813e-bd26825b0d67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0585744f-a63d-427f-ac43-7c2b6b4c8acc",
        "cursor": {
          "ref": "20388faa-65ed-47f5-a122-c2d4d8e5d3b4",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "e98693f1-4a3c-4c70-b4a2-7e51d162e8d7"
        },
        "item": {
          "id": "0585744f-a63d-427f-ac43-7c2b6b4c8acc",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "59e521df-9dfe-4d50-b408-cb1ad2e06dc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57dffe79-e649-4d57-a1c2-0172f3b102fe",
        "cursor": {
          "ref": "0a4d1dbb-ff39-4d4f-a9af-cb93d80513fd",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "cca201c2-d922-48d2-b3e0-d4d397d1dc45"
        },
        "item": {
          "id": "57dffe79-e649-4d57-a1c2-0172f3b102fe",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "7171a03a-b6fa-447e-9e35-79949d07a226",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dca80ff4-ff15-46d2-863d-b1b19e8cd001",
        "cursor": {
          "ref": "37ca2a45-1d88-49cc-82d2-7f2b068c5b3d",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "6b325db7-8e8b-4e9f-b960-188bf04a73ee"
        },
        "item": {
          "id": "dca80ff4-ff15-46d2-863d-b1b19e8cd001",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "2f29dba5-e7c4-426b-bdee-02ed6f460058",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3d0473d-1874-4a99-94d8-6cbc298f8d7b",
        "cursor": {
          "ref": "12f804ef-c3a7-48cb-a991-476affcbbe5a",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "048b4672-54c1-49d2-8d7e-bf5ab8a3f3dc"
        },
        "item": {
          "id": "b3d0473d-1874-4a99-94d8-6cbc298f8d7b",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "6f748764-8830-4df5-ba8b-2a81e4fa3568",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b39f46c8-a865-40cd-bf71-3ab61e2a52cc",
        "cursor": {
          "ref": "3b9fa283-117c-4b35-b9c0-566acbd22d04",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "1177d428-bd16-4be9-ac4e-998e3e8a2c58"
        },
        "item": {
          "id": "b39f46c8-a865-40cd-bf71-3ab61e2a52cc",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "b3abb03a-2953-4763-8dd7-762d3362701a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "331ad3bd-9ca9-4ecb-8f3f-0010640a5a94",
        "cursor": {
          "ref": "b10caf7e-9469-41fe-8f6f-49264b4ddfe9",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "28ae4aed-2d53-42ea-a091-338c5861bf82"
        },
        "item": {
          "id": "331ad3bd-9ca9-4ecb-8f3f-0010640a5a94",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "db0dc5d3-670b-40ea-b6a9-15186fdd6178",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "701e12ec-c92d-4d10-a038-86d23f3330c1",
        "cursor": {
          "ref": "916c4ef0-af1f-4f2d-8a98-9811dbe519f0",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "50df0c17-68a2-4608-83c6-bbf2af6cb386"
        },
        "item": {
          "id": "701e12ec-c92d-4d10-a038-86d23f3330c1",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "8e50c373-9db8-4862-bf4c-9e53f1e483d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4897506-b70e-4fd7-8250-3f42daedae0c",
        "cursor": {
          "ref": "a37f61a9-6e30-4a1e-ba3e-358e00aea89e",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "d53ead4d-8295-4c1c-9348-5dc99c26a0a1"
        },
        "item": {
          "id": "c4897506-b70e-4fd7-8250-3f42daedae0c",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "c3f6b2c2-2aef-4354-880d-6fa805b92d33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4682bfbb-bc34-4ccb-a82d-a760d0fef951",
        "cursor": {
          "ref": "8c35f7d3-819c-4a2d-865b-d04e1d0e92f8",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "2e696770-ec7f-44b7-8850-c22663d6b597"
        },
        "item": {
          "id": "4682bfbb-bc34-4ccb-a82d-a760d0fef951",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "bd70be47-2a0d-4a7f-8f67-b327d61ff112",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db04ddc0-2025-4c4d-b9cb-a9a72b55030c",
        "cursor": {
          "ref": "700a39bc-7d32-4886-a90e-1ca8f0a9fb51",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "105071a8-5588-4bea-93d6-86f8f80a78d4"
        },
        "item": {
          "id": "db04ddc0-2025-4c4d-b9cb-a9a72b55030c",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "a2c90182-a293-484c-93bd-f590a6bb2e48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96132822-ddc7-4725-a0ad-88ba71baac32",
        "cursor": {
          "ref": "192ee90f-4d50-4623-bec1-8e98943b394f",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "0d6c7b0a-c902-49ad-8591-8311d4bf2289"
        },
        "item": {
          "id": "96132822-ddc7-4725-a0ad-88ba71baac32",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "969bdd9c-88a4-4ef5-9f68-16670f3517ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32dc8588-bd99-4c3c-aa61-a0e597f8a940",
        "cursor": {
          "ref": "c7514d6b-2b1b-4505-b85c-a08ce08fb6f4",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "c664b2cb-5d2d-4d94-bc64-9ad2d2e89a68"
        },
        "item": {
          "id": "32dc8588-bd99-4c3c-aa61-a0e597f8a940",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "659487d1-7a85-4e81-af26-3350e338dd61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc923ed3-698b-47ae-953a-a4af657e9981",
        "cursor": {
          "ref": "0ee6e3c0-07f7-4bde-a544-5c56971a8681",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "37e1e6c3-83b1-42fc-9500-3334554510f7"
        },
        "item": {
          "id": "dc923ed3-698b-47ae-953a-a4af657e9981",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "37f6dcc9-298d-47fd-b921-c4c70e9d3246",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "775df254-6c87-48fd-832f-d18ba516f424",
        "cursor": {
          "ref": "d3105f37-5765-4480-b3db-033beb838088",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "17e62fc3-c3f6-4de4-8e8f-b09b6ca99102"
        },
        "item": {
          "id": "775df254-6c87-48fd-832f-d18ba516f424",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "bffd0713-f9d8-45ce-adc2-fda7b277656f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9040734-cafa-49d3-9b33-0788424d3676",
        "cursor": {
          "ref": "4d86819f-1356-4d67-8e4e-3dbf2dfbd112",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "4a789ce6-3e43-4995-8f01-5640bcf8b579"
        },
        "item": {
          "id": "e9040734-cafa-49d3-9b33-0788424d3676",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "4d6bf31e-ad50-4050-9a9c-773cdaf6d9a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ead3049-e63d-4b10-ae26-f23b804e1f55",
        "cursor": {
          "ref": "9914d3ac-8a6b-47c5-805a-b80f0231cd1a",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "5854bcfd-a420-4019-8b43-aaff8c7e8809"
        },
        "item": {
          "id": "1ead3049-e63d-4b10-ae26-f23b804e1f55",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "5323e9f9-bb84-4054-a196-4d88d52bf002",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f6c059c-bd85-4d51-891d-bbbc4965d9cd",
        "cursor": {
          "ref": "92ac4ed7-92b8-4b4d-acad-6ca554014be2",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "8ebc04a2-015a-4fb6-9ef4-b8aba4f3a1cf"
        },
        "item": {
          "id": "1f6c059c-bd85-4d51-891d-bbbc4965d9cd",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "a34266e7-04be-4b13-ac88-d2b6f24ac4f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40474495-618f-4b35-bc13-b003a14cfed3",
        "cursor": {
          "ref": "55681692-9f7e-4d38-a1a3-c0e78704eaa3",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "378e2b9b-c364-449c-9787-735ce1d9176a"
        },
        "item": {
          "id": "40474495-618f-4b35-bc13-b003a14cfed3",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "c7456b83-9864-42b7-9028-b29e960fd794",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bb9259e-2e70-457a-b174-6160ea0dd404",
        "cursor": {
          "ref": "182c8f1e-2e94-438c-a364-24ee1a85ed3d",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "11ffdc9e-c38d-4589-bc52-f421ceab704c"
        },
        "item": {
          "id": "7bb9259e-2e70-457a-b174-6160ea0dd404",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "d38f3e26-a5c5-4f17-adf6-8a9183021933",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "245caa45-60ce-47a9-9ca5-3e4b8751e979",
        "cursor": {
          "ref": "a3a1d559-0ccd-4a4f-83b3-00635ee5167e",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "05992340-34e9-414e-ba9c-47a73f11ced1"
        },
        "item": {
          "id": "245caa45-60ce-47a9-9ca5-3e4b8751e979",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "e98da52f-39a8-437c-9b9f-3eb05539e699",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 106,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c24e4dc-c481-4970-ac50-8ed4ff13e743",
        "cursor": {
          "ref": "bc9272d1-7f71-4d03-b389-9471e64a2073",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "50ca38c7-2487-46bd-9159-4750678b958e"
        },
        "item": {
          "id": "7c24e4dc-c481-4970-ac50-8ed4ff13e743",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "46dadab8-332d-42a7-90c9-6fa0b51814bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5240cc00-a4a1-48ac-844e-be36a7212e1c",
        "cursor": {
          "ref": "51ebe3c3-ef04-4c45-ae10-921c20e02575",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "a838b073-76ed-4192-99dc-ba1d34d84d40"
        },
        "item": {
          "id": "5240cc00-a4a1-48ac-844e-be36a7212e1c",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "38024ed5-91cc-46cd-a105-33cf84fc6700",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa335563-ed9d-4e75-a76f-300203c786b3",
        "cursor": {
          "ref": "b95e3287-a630-46ac-a0e0-9806bbd2ca41",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "dec0826a-90e6-46cd-9e93-b528e736fc3e"
        },
        "item": {
          "id": "fa335563-ed9d-4e75-a76f-300203c786b3",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "8d474ce3-091e-4bad-b36a-d262ba9aba8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29372ff2-f47b-4f6c-81e1-9295ddd7a0b3",
        "cursor": {
          "ref": "531180d6-694d-4602-9e41-bb7aef09546c",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "f28f2846-2ac3-4d32-85f4-49f3e3b1795e"
        },
        "item": {
          "id": "29372ff2-f47b-4f6c-81e1-9295ddd7a0b3",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "3d9a3e7f-69d4-4ecd-8c10-b0c595618ea4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "592fac4c-fcb6-48b1-a54d-c1abb5926fae",
        "cursor": {
          "ref": "ea2f654c-8b10-4d62-9be4-0546e0c1fc4f",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "a04cb5fc-4ae1-4212-b499-fdf05167dedb"
        },
        "item": {
          "id": "592fac4c-fcb6-48b1-a54d-c1abb5926fae",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "4f726492-0b2a-413c-8bc1-29399d9f0a6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de8ba82d-79e5-436f-8360-6661ef771d35",
        "cursor": {
          "ref": "3578e24b-748e-479f-a954-d57456624b8f",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "3876db88-0200-4874-8126-89681f30f151"
        },
        "item": {
          "id": "de8ba82d-79e5-436f-8360-6661ef771d35",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "840a6d4d-22c7-491d-8db3-1281dcdac341",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41266c91-1c42-4e38-8930-7c20a9392ea9",
        "cursor": {
          "ref": "be94f6e8-230e-42ae-b628-0ae624612c5c",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "f7cc2e05-307a-4e75-bc69-bf0e53f3d008"
        },
        "item": {
          "id": "41266c91-1c42-4e38-8930-7c20a9392ea9",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "239e413c-fe13-4a86-9cd1-1338f60094b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5ef6643-0d73-4be5-be87-d8d50fd2c55a",
        "cursor": {
          "ref": "25238dde-b0f1-4a0d-a124-a98b8bc11e25",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "d56e7128-2867-4f48-9831-84122b16c88e"
        },
        "item": {
          "id": "c5ef6643-0d73-4be5-be87-d8d50fd2c55a",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "7b3897b6-9f19-4991-aba3-5e645d23911b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fce8feb-397f-4355-a6b8-decb4830ac9d",
        "cursor": {
          "ref": "a65bcdfe-73a7-4655-9295-087bd3b88e76",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "e386cdab-fb5c-4d12-9d70-92afe23993e0"
        },
        "item": {
          "id": "5fce8feb-397f-4355-a6b8-decb4830ac9d",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "73e9814a-f843-4dd2-a6f9-eed96ca5b661",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14f8c312-88d6-41c0-b14b-3546ebcf6e19",
        "cursor": {
          "ref": "db5f4274-22ed-467d-bee0-8e5c718192de",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "96946476-41f5-4c79-82ee-5016a247d1e9"
        },
        "item": {
          "id": "14f8c312-88d6-41c0-b14b-3546ebcf6e19",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "0367a8bd-e629-4c38-9630-68e2eb5ce532",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be2da137-13f6-439f-86af-dd13cf85e522",
        "cursor": {
          "ref": "9f5a83c5-0666-4f1f-8422-90f10e8edcef",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "59cc6427-b96a-4308-9221-5635698965ae"
        },
        "item": {
          "id": "be2da137-13f6-439f-86af-dd13cf85e522",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "30d26d04-7edb-4df6-9ea3-0457a46ea88e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "943a3b1b-7e17-4076-8201-0a7911d004ee",
        "cursor": {
          "ref": "43f60b6e-bffe-45a8-bfa5-2c919aed1bb1",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "513d3627-27d7-4c6c-a133-62d22516b85b"
        },
        "item": {
          "id": "943a3b1b-7e17-4076-8201-0a7911d004ee",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "db47132a-0629-4933-8b46-8e938cd41adb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5e94e73-1aec-4e0a-b6a6-697de6df37cc",
        "cursor": {
          "ref": "1ef9ccad-17a5-459c-aba5-c9ca9d776ff4",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "a9911a0b-fc36-4696-8ed4-d93d208c5cba"
        },
        "item": {
          "id": "e5e94e73-1aec-4e0a-b6a6-697de6df37cc",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "3c34f647-17b7-4106-aa59-89fc5ab24715",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29a89a04-e98f-4c75-8095-a46369fdb62a",
        "cursor": {
          "ref": "b566973a-ea29-44f0-8c2f-ac34f8160f97",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "606e34b7-a43b-42ac-9f22-d4797a81e6c9"
        },
        "item": {
          "id": "29a89a04-e98f-4c75-8095-a46369fdb62a",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "83b80c30-cf67-4a8e-a7b3-666854cad161",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "846651a6-25b7-4ee8-abd6-c0db72747303",
        "cursor": {
          "ref": "ca6d4739-b13c-4bdd-a907-4f89241d6ef0",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "56c2fcd2-5aed-4299-b33d-33684f9b4f47"
        },
        "item": {
          "id": "846651a6-25b7-4ee8-abd6-c0db72747303",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "d99647a4-8b34-4afa-ada8-1523f03c46aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af75e2e4-d4b6-4967-8821-4599a1e388f4",
        "cursor": {
          "ref": "8e23e8a3-d68c-437f-bcb7-f36fd76b8722",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "f5c3a3bf-3bb4-42f7-bcc8-f5077c0cb989"
        },
        "item": {
          "id": "af75e2e4-d4b6-4967-8821-4599a1e388f4",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "a4323c0e-3895-4381-8fdd-2ed3131bd996",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d275921d-3c63-4a1e-9bca-d6f8e01244cc",
        "cursor": {
          "ref": "c66fdbbf-82f7-4a28-b246-35961be0606a",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "3319b567-120f-420e-92b2-f69ad6edfbcd"
        },
        "item": {
          "id": "d275921d-3c63-4a1e-9bca-d6f8e01244cc",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "df643d09-7182-4615-b823-993bd07c2792",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ef4e019-0f3e-4460-8876-0b9e6a2f3c5c",
        "cursor": {
          "ref": "cb98c8df-d152-4435-aeac-d35da580d939",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "10981b5f-9c76-4b82-8f65-fcf611159e53"
        },
        "item": {
          "id": "6ef4e019-0f3e-4460-8876-0b9e6a2f3c5c",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "c7b9d77e-d78d-4684-9d47-34d385f013d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73dc5c9e-6cb5-44e9-b6ca-3e51bce11321",
        "cursor": {
          "ref": "5973419e-e40b-4e5a-84d0-3c88b7ae7439",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "fd5fc5dd-2de1-4442-98a7-ff0ec1c82675"
        },
        "item": {
          "id": "73dc5c9e-6cb5-44e9-b6ca-3e51bce11321",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "b27c0e2e-532e-4291-bac4-05f79c877cd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5992649a-e4a5-409f-ae3b-6939878dc286",
        "cursor": {
          "ref": "8bc0105e-5092-4e58-ba77-dc2299ca1dfa",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "f4d18fc2-d610-4ac0-a6f1-16f591d40f82"
        },
        "item": {
          "id": "5992649a-e4a5-409f-ae3b-6939878dc286",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "f478433c-7b21-4ef7-989b-a1ef3869f5a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d48fe5d8-bf1c-4388-bfa8-1d459e102e50",
        "cursor": {
          "ref": "2a657f5c-9f75-4d6e-bc77-5f3815c87f44",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "e8ec610f-9dac-4c7f-bb85-71467dd2b7fc"
        },
        "item": {
          "id": "d48fe5d8-bf1c-4388-bfa8-1d459e102e50",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "934f8a43-fb69-44b7-bc30-99917587f187",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 112,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18d72628-3c71-45fc-be55-efc5b0ac98a7",
        "cursor": {
          "ref": "b6787ab8-3ee9-4ad1-a45b-c633d9152d31",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "404a159d-85cd-44a9-966e-7ff251fde721"
        },
        "item": {
          "id": "18d72628-3c71-45fc-be55-efc5b0ac98a7",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "79f41c6d-11a5-4776-83f6-dec9c5014e99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db65f64a-d432-4573-9187-b71883ceeeea",
        "cursor": {
          "ref": "0f15729b-44bd-4108-a8eb-7f2a2e1081ad",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "ef201d24-5d0f-4c9d-8f04-f947b6fa5170"
        },
        "item": {
          "id": "db65f64a-d432-4573-9187-b71883ceeeea",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "e512a9c2-0d4a-449a-ad3a-db6c0a1f6f22",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 75,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f818a3a-6e82-4e76-b4eb-3a77307fdd47",
        "cursor": {
          "ref": "83ab8611-b886-4568-838a-506e72e6b874",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "de3b7b74-3ff9-4cb6-9175-4b45b9cb4a78"
        },
        "item": {
          "id": "3f818a3a-6e82-4e76-b4eb-3a77307fdd47",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "4dcc9b79-dc66-4d3c-ab38-f5318a3cee54",
          "status": "OK",
          "code": 200,
          "responseTime": 144,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "b40fa14c-8f8d-4d40-ba0f-b2916409beec",
        "cursor": {
          "ref": "f6388663-4132-43fd-a8cc-93f7ea0b2723",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "c42d0175-fdcf-41da-81fe-4745b4d55113"
        },
        "item": {
          "id": "b40fa14c-8f8d-4d40-ba0f-b2916409beec",
          "name": "credentials_verify"
        },
        "response": {
          "id": "c40826fc-17d1-47ae-b33b-4d48e26f6a30",
          "status": "OK",
          "code": 200,
          "responseTime": 1391,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "5946e219-c5f3-4ef2-92f2-f20a9780f7cc",
        "cursor": {
          "ref": "7b867557-31aa-4428-9917-8fc78d074fda",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "a7de227a-a0f3-4435-be44-78dd42d645d6"
        },
        "item": {
          "id": "5946e219-c5f3-4ef2-92f2-f20a9780f7cc",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "4195019f-56fe-4df4-869a-d3748130c37e",
          "status": "OK",
          "code": 200,
          "responseTime": 1626,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1e2b0c3-6d2b-4438-bd6a-0428999c334a",
        "cursor": {
          "ref": "a715ffce-b728-4d1f-a395-51a29364b370",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "0feee0a0-1754-43bc-9da7-aec409d3e206"
        },
        "item": {
          "id": "b1e2b0c3-6d2b-4438-bd6a-0428999c334a",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "9445ab21-7c9e-4cff-8148-3e15f77a15e6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 83,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1e2b0c3-6d2b-4438-bd6a-0428999c334a",
        "cursor": {
          "ref": "a715ffce-b728-4d1f-a395-51a29364b370",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "0feee0a0-1754-43bc-9da7-aec409d3e206"
        },
        "item": {
          "id": "b1e2b0c3-6d2b-4438-bd6a-0428999c334a",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "9445ab21-7c9e-4cff-8148-3e15f77a15e6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 83,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adda56d1-2ecb-4b1d-92e5-3cf6ac9b2536",
        "cursor": {
          "ref": "8f2c58ef-6f6d-4fb5-b57c-6351fa67ae20",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "eb0e8cec-02ed-4801-9474-279819383906"
        },
        "item": {
          "id": "adda56d1-2ecb-4b1d-92e5-3cf6ac9b2536",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "98abc0c1-73d3-421a-a915-5280627cc010",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 86,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e5c4475-34cb-4872-b6b4-98f55cd790f9",
        "cursor": {
          "ref": "ac8e6391-2627-44ff-ae60-f8b890a601fd",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "43b2b227-920b-4c36-9ac8-2998769d9d81"
        },
        "item": {
          "id": "2e5c4475-34cb-4872-b6b4-98f55cd790f9",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "2a3c3f99-c001-4eec-aa9d-c82c9d7f9090",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 89,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}