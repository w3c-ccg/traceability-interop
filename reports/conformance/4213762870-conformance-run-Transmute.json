{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "33e76a34-ded2-4839-9e78-42c0970e3d54",
        "name": "Clear Cache",
        "item": [
          {
            "id": "6f5c171d-56e5-4e95-bd25-91051058f6e0",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "49c37501-557f-4df3-9ae1-2a30fa3c3519",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "1fd05429-0412-45e1-8bd3-aca767be577a"
                }
              }
            ]
          },
          {
            "id": "d90879c0-a592-4bae-bb7c-c672b8a871bb",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2a3cdff1-5f5b-4965-add3-4883a7cf65ca",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "31f32a18-f474-4d64-bc17-a163ec3a91d4"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "8b8ce331-d8dd-42ed-b459-e621df3a8965",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "508fb38e-039f-4f1f-a706-70d626d3585d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2ed72032-f5d2-4232-9ecb-b0cf5888f9e3",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3e62e8a8-2dc7-4181-92f9-143c45e9e95f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6cb08aff-baee-4a14-80ab-d7c680946aab"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "383948ac-7853-4a12-b4c5-d03ce88e0085",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6aa9f1eb-8396-449b-8ece-c921de15bb81"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "faf81e46-0485-47af-af8b-212fae7f36d4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5c5f2902-c9e1-4e77-8069-6e07a95f8f05"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "33b95fc3-bda0-4732-a12c-26fcfefdaf0d",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "47ed1d78-eba8-4bab-aae0-49d1bad28fcc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b6b062a4-28bf-49ea-b39e-a40770e796bc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "af2eef20-96e5-426d-898a-d7677466fdb2"
            }
          }
        ]
      },
      {
        "id": "a5032544-abf5-4130-86d2-d2abfe332b3e",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "e7c12b38-232a-4357-8045-d1bf98a2e5e6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6ef60497-7016-4c99-9adc-da7508bab161",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ade301d8-67df-4739-845c-53a1fc1cbccc",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5997022-c974-42f2-a523-1c12ec63c9e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0c22a76f-2677-4344-a9fc-0d124d9796d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e0ac133-a798-46e3-a545-66800e47fb25",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5657c024-13c0-4485-8761-2c0c343bd282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4911ba75-81d2-4cba-b7a7-5057cea0cd0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b83ab79e-228f-4d10-a4a5-639ae7082d63",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79e0779b-c014-442e-8843-daea69c3c24f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5e5c5148-21c1-4c61-ba6d-3b6861308623"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b3d545ee-cc31-4e18-b46e-10d335839402",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f84b7aa8-14e7-4ca1-a596-4613e06c299d",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1be1e202-eaa2-4ad5-ab99-f747c86a5876",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "175e744c-6633-4c1d-ac65-df1043618853"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6636e3da-512d-4e31-8c48-0673bf528ba1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "257f913e-9cf8-45d0-b9a9-06a4649ffc53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "552d674e-3b0e-45d5-868f-b5b52369b115",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3387917f-7cf9-4f78-9817-591775b3afb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b688ec5d-d708-4bc8-9167-3dfefd69f378"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec5fbe26-23d6-4bc0-86c2-b2947cf03f02",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "fb485fa8-5a63-4a85-9900-1b4aa51c60af"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "425db98b-8d49-4431-b323-83a00c6023b1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a10415a5-3850-48a6-abd2-50b6e9a7bf24",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ddaa2740-f257-48ef-a327-92153c118a78",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "ea973176-6d7d-4e87-994f-a2985a140ded"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "65ca74eb-a7db-4934-8193-7bdc3e064502",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "28aba127-7181-4f71-9687-1020e2db5e1c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a1226033-e11f-4388-aa8f-94505035b37d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "697f724e-78ea-42d1-8019-60ed2d68c9dd"
            }
          }
        ]
      },
      {
        "id": "63fad78f-5dbc-4d84-99da-07e41fe6f2c5",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "889657ea-6413-486f-8ecc-d652e56316db",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7ff6e811-71ff-496e-a604-896ed494a80f",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "e2c3d4f3-d745-4434-91bc-29d46f636fe8",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bff72e2-9d4c-48d3-be92-872fdbb1ee8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ed0f8d4-938b-4f07-b026-8357873f27f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f606706-aafa-4704-bef5-3e333c6197b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e4dd4cae-5f62-4686-ac2e-363f4033f404"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aeccdedf-a372-4079-8fe5-59a5079bf7af",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de458de1-a438-4d2f-bf22-59a3b3eaa342",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4013f02c-3952-4292-9bd5-507c6dc4bd80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cf5a3a7-a1bb-42be-82da-0d5c0d2a543d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "93a23105-85ee-4db0-84ad-b07af6c3f0f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd7937a9-cd0e-4643-8bc2-f1e76ce38560",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08082d29-39a6-4373-8896-0bf4d61f58cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9350de5-d190-4cbb-b395-a78bcfb9aa7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6eb9257-d9e2-4757-b709-cd73af9c4188",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e1bbbbc1-19f5-43b4-8af8-248d665b161c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "816decc8-86dc-41e1-9885-638fbc4af6a2",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d4957c0-7a65-496b-816d-bdd753954678",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f65efb0-a470-4e32-90e1-60f0479b27fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00265af3-8b70-455a-9f48-900bbe252c5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1970d787-77cb-4e24-ac16-e2d9d6fd5dba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18052959-1d85-4ad8-bd7a-b57d7067977c",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35cdeb18-7a12-4b4e-bc8e-d7b8434ae025",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cec3426-860d-4f63-aa18-4946aae6ece0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e46c8bf-90bf-4edb-8efe-14f50c70d663",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a8b0aa8c-35b6-4888-8bc7-ee55980fde8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00a80706-f52f-40d0-84c3-4afb7614ba22",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebe98147-1f8c-4f0d-adee-02a51831039e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "659e1bda-7d29-4d30-a117-5d35f96da51f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33c37343-be8d-4114-ade7-f0b3e00caa54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "54b7bbdd-b3d9-4ceb-ab39-84c3d57dc088"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbda0ecb-21bf-40cb-94de-3d3023f6ab04",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37bd85c7-79b4-4ca9-bc34-ec81413a4382",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "171f9cd8-1ec9-4442-93a8-f976d2237f8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca1af5b6-d180-42f4-aceb-af9d472e4635",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a1c86d50-1101-4bb7-84c6-7896cad6b2ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3f6947a-c1d9-446a-bdd9-111e779cf124",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a2aedc1-c91c-40a8-805b-2d5cc99b8489",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bea0e7e-6167-45f8-91cc-62c2ff1147d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef2aa4e0-0fc8-4ebc-ab57-b96f24e8d2fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6af1b06b-5821-4c17-9dd0-576727994ef8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b96bf76-6fd1-4f75-a371-dee64deb4bd7",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23fdb8b5-d697-4861-8338-b56cfcfe2ff7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "412705ec-845a-4721-8958-ea0c7235492f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc68f7a5-58c2-47fc-9dbc-0db9d1102f8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "07881224-d868-4e7d-96bb-071fc595d671"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9c0d2ec-15d5-428c-aeb1-a3d03da6730d",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b4bd37f-8ad7-4c99-ad62-b22aa7e5158e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67059d55-117d-407c-a9c0-9e9f636428d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96546a11-1b71-45d9-969a-258341388391",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "87cdda8a-7add-442f-b945-d8ce092ae8ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "703a3427-23c8-49d2-9025-5f2e352beabd",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ed27803-f4c2-4da4-b5c2-5f806796b61f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "456aebb9-50ed-4147-893b-dfde0ad1042a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e9581c7-c7ca-471a-b618-6882f477147a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ba68611d-6fbe-4b1e-8305-6abd5f493b40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b050bb93-0074-43d2-a7f2-91d6b068cf33",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1ce1e9f-ddb4-4efe-9df4-90ce05def537",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aaeb2001-98d8-4fb2-8eae-a357c63c5caa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2518a7ea-f73e-4fac-abb4-a79b268b23b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ff79c1d0-c1b5-415e-b137-ac109bee5d5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fbbe63f-383b-44e6-b746-9db0e50fa0d7",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86c95716-59b4-4420-a26f-0ee1dd9526ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fe2716c-15c5-410f-85d3-dd961561ac9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a28a318f-fda6-4fd8-9a65-4f86a764b92a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "518341c1-5db7-409b-b2bf-e8890a0ba12b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b675428-2cad-42b7-9e41-99d15df364b1",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "822a7b90-77c1-4b25-89c0-e0a48298ff4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf7627a8-7d3a-45f4-ab76-b70a77e79db0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66c961c7-fe4a-4b71-9065-690e009b9b2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4e131423-d72e-4e1d-82cb-876cb894652f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e022134-3a24-4197-a855-6dff8a9ecb74",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbc06133-3d5d-4888-afaf-1c7970919fbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1f85598-7038-40e4-a0f4-bea7aa54214a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9868c54a-2e33-45d4-9bb6-906629f764cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3709eaf9-4c3a-4d19-99b8-51e110521373"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cc8dfa3-531c-4bfc-9d85-2d8139cccb71",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16e88919-83a7-479c-865a-548d938ecea5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24b9b9cb-e10d-44e5-be04-ad699090cf8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca87fbad-3ff4-44ce-bb4f-75d161a4b5a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e0b56adc-2fdf-47c9-9b28-9eee5a9faeff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbc32405-76f8-4fc5-a3c3-4ce60fbcfdf1",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48d48389-5cd7-4cff-beec-e5760eb43f8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83391302-3760-442b-8ed9-64edd3880dc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a503dc2f-672b-48c7-a0d6-06e828476337",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c16fcbe9-581d-4040-9efa-9d7226e6266f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8386adaa-c705-4fa5-bffb-2d5f4cfa168d",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aacffb3-9f41-4ffc-9df4-08590de2d556",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e261d0f-595c-49c8-9e41-0944234d4347"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "050926dc-f594-4e43-b663-24b4c2375825",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "f8b4c950-92b2-4606-ae97-d9c886df0aa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "452da266-c51b-42a5-afe5-4cf083a8643c",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8485d32d-916f-4e02-bf53-d7183608f4cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0505eda0-0076-4928-9391-ccabd07fb55f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0392edad-4927-40a2-bcf0-23d5a802f5cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bcd0a17e-aae6-4f3a-9409-e86a2bb1065c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0122f57-7f11-4716-988f-602fa1105796",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7195fd9f-675c-499f-9eb5-e3d724116992",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4558a310-d7b4-47b2-bc70-843358713f2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "308eac3c-e747-4caf-a6fb-3c4a91a5eefa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f9ceff1-1d9e-49ec-8743-3afee337cfd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c7c8e7f-cda2-4242-b449-7b79e78a6f55",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d531c301-fbe1-4e84-8045-0fd9d7122196",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce71a557-bebc-442b-83ea-b728f6b1abc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4d6711c-faca-42ce-ae20-6534bd2166db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "27a302e7-ff2f-4cec-80dd-3de31ec0b9d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bb64d42-a5e2-487d-9e36-90b684615730",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "257f19f4-8043-45a1-9349-3bc06f065206",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a152cd1-3d77-4a4d-a30f-344e5cb604fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d111050-a286-49c4-a11a-79a2f693b3fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "44addb31-4f15-4f14-8703-8df96677d56e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e3cc039-e1a2-4a01-b107-55aa4bd6a4e4",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea39f60d-c37a-475c-956d-ff6fd390e181",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f582706-6405-4402-bd8a-6700b20d21a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4747f85f-dfc3-482d-96b3-6eec6f23110f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "38a0c5d5-4ad0-44e9-92ae-adc9604c4c73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eca70833-762a-4f53-8b8d-6d2a6a66fe1e",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "939493c7-48ee-4fd2-a963-2d5da9e4e3a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5497edcc-ab32-4df7-b142-ebac8435eaef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6a3562f-783f-4295-ac7b-35fb696eca6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "85001b24-0e65-4aef-9702-2abff973b6de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "231885b0-f6c5-4cf4-b6e7-2aad73ec7859",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3b71ca9-07ce-45d3-839a-471e20ab6b25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cb36e77-3511-487d-991a-b77799a3def7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48c7e9f7-9219-4c25-b59e-133604667ad0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe46236a-462e-4891-a1a0-3a8c9abc8448"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f79e7ca-c57c-40cc-af8a-f4df988400b2",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f693a19-95da-482f-b367-fa87ecc9a8ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41d98da2-5831-435d-ae04-8336ee2e607e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7c892d8-3bda-4bdc-88e0-8b7464dc4b0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f820685-5d1f-49ef-961f-554401eea152"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc489a45-3bb5-46f5-b12d-5127d62a46f7",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "760dc6da-53be-4ecd-87dd-12f97e34b289",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "102d41cb-ce87-45b2-821c-d3ba5b8217b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39b163ce-addc-4202-8019-376c214656e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e32b307d-fcee-4a9d-bec3-886425fad5c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eea43a66-d345-4868-a222-c39ba24708b3",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ccae435-62e8-43cc-b806-72ef76729668",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db343dfd-35b4-464e-84c2-f9f0f811dd2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80f4c161-a4f1-47cb-bb97-be3ac8232c8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3db85e7-dce2-421a-bebc-bfde82eba4ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ee88a09-c1a7-4086-9c18-a64ac97c45cc",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6532d286-02d7-4f65-91b1-4032b7dab4ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e17e8db-18eb-4334-ba69-858ed9e626f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8d60ef8-251f-4f70-935f-25edcabd8c4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a10d0335-00a2-457e-8154-90a14bfc2a37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ed5cb1d-6a62-4672-96e5-cee5565cf749",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "458340b2-65c2-4494-8b81-5bf490afb6ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "badcfd95-bc19-4d02-b0ff-26fd738dabfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25076cd8-00e0-4cd1-b12f-b6ab88c065f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "c94164f6-e51a-45a7-b04b-02dd472c8377"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91220978-873a-4098-b725-be9de33980c0",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ca736e6-4262-4038-8162-0c2eefcf23c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c2b50d4-0ae3-40bf-a914-ee3fb98bfa09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba9e6eee-c4ab-4b09-a313-f30524e862d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6327faf7-4e52-4274-b220-78d934fb7b69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a28fdad-7c66-42a0-893c-e2e5e2af2796",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "612abb8a-a52f-4b5b-a71a-3e961a8951f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63a1b2d4-7442-48b4-968e-66f4acfcad77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b214198-db79-4165-9752-ae2ca6b31611",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "489cc89f-4c0c-478c-bdf5-9c2985c8cc5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4b5ac95-15d2-4d62-991f-8b96e8ab8dd0",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c04f1961-d4e5-436a-9a3a-9a33e2d67e97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e3befdb-f34c-4fa0-91fe-3ac6355d7d9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46e1849a-4888-4749-9c84-179af4290291",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c7f2e354-2d6f-4afc-9de4-85eab94db89a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3f2503b-7a28-49df-ab49-6eff804f0767",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "902b1aae-38db-4048-9542-7c827ef03df2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "646949bc-53b2-4a1e-a475-8c4f22434c33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca211f40-6449-4dc6-9e50-5b550b1add69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "29fdd2dc-9abf-4c9f-9f2f-da46f0e059b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39965aa1-a9e8-451c-9362-9ff797d4edb1",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43ab3eaf-b379-4a10-94b1-4eaec188a034",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1eeb0ad9-d943-4b87-943d-0cfb2072f12e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd388bda-de94-4a5a-86b8-78d48ee2b82e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "c8f1442a-7dc9-4f47-9566-e7d3bf17d8ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "449e0471-3838-4e64-a112-9da6826f9afe",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4abaced-9708-4581-a8db-4363929149ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "df02993a-65e5-4d55-9328-99bde1cfdbdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aa29740-e750-4dc0-88ea-8a0d1bae0ab8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2613ea1a-0217-4463-9394-bc4d7af39cc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3004c85-467c-43ad-9178-518d87422c03",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3c0782f-48c9-4230-8a41-52da8aeced7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "776f3b53-4d67-4df7-b542-1ed15a00f580"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a5006ba-0d17-406f-a79b-d5f7a6183fca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e56dee9f-8217-4865-a6ac-6e5b11831f77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41d80acb-6800-4dc0-81a5-975fec9051f3",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54ba87bb-adf4-4dbf-b5d1-b8e219fb9ae4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c1806c2-e08f-4b5e-bccd-133cdf21edeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99c98ef8-97f3-4bf9-b1f9-2dd31a0c542d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "4bf82c7d-c28a-44a1-a363-31568aa6a2d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53f19d34-322f-4b71-b1b0-9a619992823a",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15dd8bdf-4f35-4911-a7ad-6deff34d1791",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afd4823e-58e4-42cd-933d-9bd0ecf2bf07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "986f61b5-efb2-44e0-a412-ad92745c17ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c08a326f-2150-4bc0-bc5b-1cda0bfaf97d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31a4b821-a494-4e41-8fb1-2675bc0dd116",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e38bbd13-0d0a-4110-8137-caf2377b0e7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b916820-d21c-40be-ba9c-61c2018a0a8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4f4d873-f980-44da-876d-ecf63257cfdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "60a8761b-2ca6-41ea-9105-1bf637f0b40c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ca8dcbe-6713-474e-98bc-fdc578ddb83e",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0aa481b-6857-48ec-93f4-e950a37ca265",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6292356-8451-4afb-b1ab-4eabb33be3e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6707c11c-78ea-43f9-8f1a-fc1c3c26f019",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5d423b78-32f1-41db-b0c9-999f0d2b9c48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3344e1fa-d791-41e0-b7c7-adcce69c8e3f",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06d1c857-06ad-4f6a-980f-f4cfdb2a0220",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb720d2d-daaa-47ab-a4c7-fef6e0f71b91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83cf0df7-c3e4-47e8-baaa-9b6fa21682e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "f3963d50-c271-4a79-9ddb-08d6d3636623"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc7bafa4-6e6e-4afe-b085-a9003cac9589",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4dc5453-5cf4-4c0b-a954-5a97de3205ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68bf8364-bfa2-460a-9996-c2e1357de023"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08fa7572-f566-472e-a0b5-509a3e099966",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "f473c620-852a-49d6-a8e1-3f1f6bc454a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ecdc983-8e4b-4e69-858a-007836b33591",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b9156f1-cb14-4d11-aa11-a03701f18637",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecc3663b-67b9-4d8a-bf53-678c9d5fd71e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "785bf2f4-8f72-4829-a689-5acdc55fbe77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f7571bf-8df4-41c7-8fc5-a29edee68b58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d22afadb-2eda-4aa4-bdd7-13596922a343",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd751ad5-2a7d-4975-b8c0-6f5c7497050f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdbbcbf2-17ca-4c53-8634-519b022acb84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33d3b453-5519-44a5-bbe7-7b6b3a504440",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9bd872c4-dd13-4f57-bab0-6f6752392d48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f451bfc9-9b7a-44ad-917a-e6a5563adb58",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd2073cc-8c57-4b39-ab39-c2bdf0853cd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6075b0f4-a52b-4872-9738-7e9245d662cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "840d1d8d-b3f2-4a87-a7a2-9232745ea5cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c075712-fc84-4090-b4be-b1a0f87a3972"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f144a365-7c1e-423f-9772-81136b9f9f6d",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "384cf7a2-b14d-4d16-8f1d-2641817b3005",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3528c255-9cf8-4528-a4b1-79cf82e75c40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa0fa673-d99c-4748-86c5-78b4793e738a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b6ef079b-f5d2-4fdb-8751-2dac07963e00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b46f94a-5e6e-478c-894d-9e4057aa2034",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95940977-5d19-49b9-a94d-7bc1b35831d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df2f7c14-497e-460e-a919-93e9ea68bd47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41672525-78e4-4208-bf05-24aa8c90d889",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ad13325-1430-45f6-9d1b-c4d58d9f4bbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dba16b26-7b3f-45ec-ba50-351be8aa0e55",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bf74f76-9c21-4fab-8b9d-5e553937b85d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2474a15a-6a00-41ee-9554-c6f532f2cb4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed354ada-ddce-402e-b695-438be6dcd249",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3ce7bba0-6879-4289-a303-0c6eaded42af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1928c4ab-cd07-4ac8-a677-22d1dae81c43",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fe07230-b02f-4a3c-94f6-add0d8dd13a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a569e7bf-b899-47ea-a615-1c4957bb3fe9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd40eb85-0ae8-472b-818e-8a70a8792c8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6f799b53-cf33-4606-af45-bf5f6a841294"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9db0b890-bfbc-4b38-ba85-5a36d0858e38",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "481bb808-d042-4a34-b57f-2bcf08427369",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a87de6a-a3f5-46dd-99a2-039b8e17d212"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebff4914-4a80-480b-9fdb-36a25393d14b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1537b04-60e6-49b3-aef5-f7ee4d30c3d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff99e189-fe79-4839-8745-d1c1af60ca2e",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03b6e3b3-5538-4495-bd12-f1a7d3d6dcf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fec6e3e6-c4cc-40ff-922e-442aea811873"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92d485e5-7aa8-4fb7-95ea-244043aa6096",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b99d505c-e912-4526-8183-162631b3dc1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55b2680b-c94e-4125-b20e-f23f6aceefdd",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25d861cc-a49b-4411-adcf-78efea80bc86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5eacdcb7-956b-4273-915e-d44f8f91cf2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a4d1479-9c8f-4ec1-9f6b-f736b124e0c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "198b25ff-83bd-480b-a830-9ad7ef690b1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdd4cc90-56c1-495e-b87f-20ecd72d9df7",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c4211d4-5994-49fc-b0e6-f747c4f11f5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20749906-952a-4e2b-9510-24dc03cdd285"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8647ee6e-feb8-456b-bd07-0b5e596dbc9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1437ed5-3d3f-43c7-bd58-eec44df89b51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d731dcd-df21-4db7-993e-d225afbf76e5",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4e92d7f-7e45-4475-a8e3-28b4b6b544e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f9d6113-6754-4cfe-adc8-c74dd75cb91c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c26dd3f4-3134-46dc-97b4-5086a0e614f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a8811d3-47a3-43eb-b08b-ddcfe73b85f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc0fe010-8968-46d4-bcab-a7337c33f874",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96d3744c-acf2-4866-b835-8f11f2ce11e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26853e23-be02-4a34-b61a-7cd1b0ca33ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae6d39fd-9f08-4d5e-9136-fe3882bf1b39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "16fae1f5-5ddf-4dc8-b800-3ba061208003"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be00ad15-1002-4810-a920-304d6a333783",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "738196c3-d4ea-4ebd-b930-a218bd577ba2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8712c7e-8c7e-4dac-bd4c-d9983f34788e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80e57a8f-a2e1-430a-9fa9-6dad206b4df6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "4e7cdce7-b2a0-43f0-b580-e76879f5f268"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cb6838a-5820-4422-b974-d65ecfc173ca",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0e2c7f9-01d7-4bd1-9132-39a9df17d071",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f51a658e-6688-4f23-8e9d-34aa3605993a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0aac64fa-c120-4ddd-8cd5-b2556fa0537e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1e65c191-47ab-492a-9783-6a3fe2fbe905"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64b25389-0146-4020-a332-c4ed04594931",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91ec9f65-4221-441d-839c-18af8d47a9e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f89451c-4eb3-4887-a0eb-84b89b601693"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d60e6bb2-39f7-46dd-83b8-2f934f454364",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d3160a57-cc9c-4d7c-826f-d3481000cccc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5d04765-e793-441d-9d38-85e12bf205e3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9e0688d-c6f7-4c72-b99c-1333aad4b752",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5982b165-f113-47b3-ab4a-545edcf6c9e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02bbf410-a146-493a-b783-f3ff467112c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "916846f0-4dfe-4644-b6ef-3118f851b9ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3063f36a-ec0c-4c83-87fe-642b207636b5",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fb190ee-69d6-4a2c-9db1-72977a0fddad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae72c714-d680-4e29-979f-2b9327e00b26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f179328c-b50a-4933-b0c9-34bf340af301",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "978186c7-d3b9-4388-b608-5217bef0a78c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a48dfff-155c-4827-9cd0-e7d9bd064ecd",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88d4d17d-a6e4-4a2b-9740-e567dcba446f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68f318b4-5eb1-4fd1-b161-ec73bb7ab0ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53e782af-2d04-4fa9-b479-6d782bbd8889",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc9e3b08-3b5a-41aa-a4b2-e3cfd5860b0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8a32d16-47bb-4082-a97d-e80a6f5690ce",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3c3f7f2-8cae-468f-8d74-0ccfd66d37dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a8ddb08-4015-428d-839c-d9f9ac35dc0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "217aa397-5db0-4c39-b59d-ed1483065089",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f25eb66-de03-4e5c-b3a5-633d80e7fa43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b500365-0217-4852-916a-c483252e17dc",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "274a40fd-9cce-4f10-b400-c582c09f9e44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10fe81d5-9d99-4d3f-8aef-e6bd8da52e74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f2d7368-ea66-45a5-b1f9-8843c36280bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "763d8f32-2c58-4607-988d-65360bdd46f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95f73de4-59ed-4040-ad35-3ae29609d048",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02b121c4-7fab-4224-8082-840d4de1b86f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60c4a979-535e-46e1-85c6-ef75e447d52f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ffe9dbf-752f-4153-ae78-f25b90cd99dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a5490f10-9e08-4161-9282-0404061f843e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bae808a0-6c74-4b16-8c18-80f6d1759e04",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "046774e6-af03-41c1-8647-907f91e1f00b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2120eb9-b6b8-4296-a3a6-3e1a36d5136e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baee7fee-47ad-453c-93ab-557bd3866a18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "31d8cbe1-baca-4fb3-b8f3-5b1596e24561"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e142d11-73eb-4f9a-aef1-b13973aecae4",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e1020b6-3c2a-49f1-94a5-7a8357064778",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0378696c-1ba2-47cf-8183-b570f407f781"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8372a3fa-176b-47a0-9ccc-71fc67a2e3d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "078f922f-550d-4820-87fa-cdb1a8660b47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7210d211-60b5-47ed-8f5d-6b46d0251262",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fe81d6c-cc36-40a7-993f-6b34514f8622",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d9d4050-bdb9-4fb1-8bb1-8f010f6bb37e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86d36dee-d335-4530-9821-019647bbc4c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "1432225e-b964-4bbf-a048-008a99b4d206"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef7831d3-0262-4bde-93aa-60fedfff5ee4",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "422cbdc5-1910-4015-954f-1c75f8fc9f9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07068996-1d49-4333-ac3c-c04322b45a08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9ca6cd6-a0cf-4e90-a551-c5cf6b7f6625",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b73829e-2b59-45d4-97b9-35a8e03b99e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e41ac718-d496-43fe-b7ee-21f83f6a505a",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e912f063-3d9b-44d7-80d1-eed894fae410",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb688f11-c56f-4af4-9126-80d2ba30e03c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70028b67-92a7-4978-adb3-675b5d94127a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "53bd73d0-05df-49ab-8184-cfed7531d799"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21e0d376-c862-4eb2-9fb0-d0e879337ccf",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89e04361-118b-47d1-a8e7-e4f29225b32b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82a72ff2-5fe3-4e57-8f14-7ca51badc6eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0407cc78-af2a-4118-9571-c9100b4e3164",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd38963e-552a-4f54-8238-c47266063f42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "710fcac5-6af8-44b2-8acb-74c9064e226d",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b51d626-0435-4128-98fd-e830705c9ff1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efbae21a-8ebd-4781-ab12-bc8f1febe318"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06220821-3f83-439e-b340-8f04e381fab7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "65895991-75e3-4df4-9c8e-ede13604663c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bacdd505-bf1d-445c-9434-9554405189d2",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8824742-2651-416d-8487-7dcc9dd6e155",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b93d1dea-a728-475a-98aa-8c84a745ffd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41e0ba11-0579-422e-b488-cc87b5c69a8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4946cbdc-7b10-4d3b-917b-358ebbb09e12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7c7a417-b716-49f7-a8f3-7b4312204009",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d08174e1-dd0c-45a7-bd27-86d1e6ec0b2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1ed5024-a7da-4bde-9ef7-c7e8f397f50f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e26bee6-3223-4401-b1f9-5b1fe75ec6bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fd1b7c9e-a682-47b3-8174-ecf14a4a2fd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea63fb26-1385-4cc0-acd7-ae48f6c85c84",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4ae71b7-be1d-4079-bf5e-9e833518cef5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8a5439c-6a73-4a8f-b586-ef2c32e4f886"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e292f83e-3b17-41b4-9be2-a34eb6d24939",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d632a655-93bb-46a8-8814-979e8b9bffa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b842c73c-0157-4ef9-bcad-31fccc75f6d3",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a504b064-1f80-41a1-b496-4b1f921d9823",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c647a24-f5a7-4fc7-a0ab-fafbce74b688"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "556589f9-ec21-4020-be6c-ae2037a31e25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "57642596-c4e7-4fb8-b3e9-e09db2d5b528"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9821adc3-25fa-4288-9c12-0278c055afa7",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f00f81c-0ebd-4b01-b18f-dc6754cb2f77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "948d60e1-36bb-4d41-96df-77eb3d3dd0fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b274d82-2058-4e8f-8487-883c9b2153f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "51a28af1-8bdc-4b50-9f8d-36866bc3aacc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "064614f4-9a91-4551-b97b-d1b5fb209fe4",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc23c5d9-9a8f-40f1-b36a-73e1e2e70d91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a935ec2-c4bf-46e3-9e66-b445b7bfd49b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "962c539f-6ec1-4ed5-9c6f-1fba5b7855e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b7241be9-2854-4d13-b910-dfc184e70fa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66baf88f-772d-44db-a7d6-018f25088fea",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb9e4df3-b5b4-4882-9862-ca30308991c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0d0f54a-d2dc-47e2-8b53-5e19ea4aadef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e767788a-f6fc-443d-8e0d-135d7946ba16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ab3e95bd-ddbb-4bcd-a2b5-7216872995c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4d636af-d03b-4652-ab18-de3b432e757b",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c254b7c-c723-42ef-97cb-5bcb9192124e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdd8ef68-8e3b-4473-9352-5d8aa8e361ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d0633e3-8737-4a10-a0ac-67b14d78eca3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6b25c129-a804-41aa-b923-57baa8cf28af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27ea17c8-2505-433a-a7b1-7539db02d7aa",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46b75dc8-20c5-4580-b6d0-aadc6f50a95b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b166ece-b96c-41a1-a5b0-73f074823218"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f73d7a8-70ef-42c2-bca7-68dbdcb18950",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4923cbec-fb8b-440b-8066-6838f4323577"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b981e3cf-8f32-442a-8f89-2dc0c0bed1be",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66199267-ca5a-4d92-a18a-17bc713e41f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0397eab3-77b7-4961-826e-d51e2799deb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bceffed-a6b3-4218-a3ed-f8df37f03a33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c28ad3a-1b16-4082-aec3-b82ac3536d11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f08250c1-f2dd-4800-8ad9-a3672eb5b624",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56dfcb7f-a1a3-4286-8383-7287bc7b5165",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c2a40ce-cca9-4856-a179-62b0051cc592"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c8c821a-e42d-40ba-81e9-a90c565337d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b67981f-421a-4bf6-8c2f-3661776c3b0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d75a43d4-e7c0-4bb2-851e-2f72da9e8c16",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df372d0a-6d97-4df4-b5c1-038a3a476915",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fda70445-ebbc-4faa-a9e0-e0f51fabb843"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99fdc3c0-db16-471c-a831-89c004a250bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cec06e26-5ed5-42b2-8fe1-6f121b73b501"
                        }
                      }
                    ]
                  },
                  {
                    "id": "887c022d-5313-4cee-8fe7-2100db56b8fc",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "541b9f82-dcce-482b-b30c-bf40cd9801bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "798a2062-f516-4aa1-a4b7-dd93b852bb64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f8daff3-41bc-4214-b10c-e18c066a7e97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bdb3eae2-2a89-49aa-a2e2-66bf0231ba1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be833d6f-d6b4-4e0a-ba28-1f482fd57c89",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68a1ddc6-6d83-448e-9727-77dd191e5042",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5726d50-2c64-4495-b352-c5f888fef7dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8da4b587-b55b-4990-a4ea-b4adacc23c87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1afe066a-d7b6-49be-aac2-b3f786e74b97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82a25ccf-62da-4c09-88f7-e811d435fed4",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8931bc5c-b778-4bec-a1ac-47b3c9750fed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2cb9c97-d66d-4521-a78a-a96b9abd6056"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da6b8a46-ee83-4193-9902-6fb1a3753624",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2d84b35b-fa5c-4c5c-9a78-76fa64c1e1f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12611dfb-f2c0-443b-aa59-4d267d2577f5",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8611f019-bdd2-4432-8bb6-bcb2bdf3026a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ceec8c4-dd85-4b54-95c7-eacfa8e8ce07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45cc0533-4108-4ff4-a755-73c9a4720a1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c7b8e5c1-e300-4030-9333-2d196cbe6d05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c97167dd-5aeb-4da3-b5e8-4c5b294f046b",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c424baf-1896-4cc3-a4e8-71f762eca715",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9196fbbc-b75a-4ffa-8ccb-bf4322bc622c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1706c282-63fa-4664-92e3-bbdc7ca51062",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "07c489a2-a219-423a-9ec6-f43b970340a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b89f3fcd-eed5-4b49-a986-6d1e086b4a01",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b98a573-394b-4e77-87f3-7745bf9880bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab7dc108-36a9-4d77-9e41-f1c91d3670f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3537df5-d48e-4651-a323-334c8cf5ae77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "debed835-e6fe-4041-a588-2ba7f369baf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b771a5e-9ac8-4451-8ccc-68948e08eaeb",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ff73e0d-8b8a-4624-8bf9-a8f3be571503",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d503b2a5-f09b-4fb7-beca-c533940689cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "129c43bc-e7b9-4a16-a002-a700c00fec4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b978c4a9-240e-41e2-88d2-b983953b8672"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcd7a9cc-60a2-4ac9-ba76-8cebc827790d",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9766279-6556-45f2-afe0-12176229a9a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "996c2bc5-ffe1-4691-a298-b7444ae5cdd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5976fc5b-0607-413b-8de2-bf83ce144e78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "99b46812-6ae8-4c93-b5e6-5e046af48f7b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "feae3dbd-e9b1-40f9-8988-e50593ff70e7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0f887a3f-d59a-4905-a162-7b0cd12ccda9",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "343799ea-95d7-4469-a967-cecfcbd4e907",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "87bd8137-08c2-4646-a25e-2d662ad1a4c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88aff438-3b03-47cb-bc47-75c01a39b918",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "17ac9bca-8267-4b8f-99c7-3820b698f39a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9606c554-7876-44f8-bfd6-e61f1731171d",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0aa0f94b-e30c-4785-86b0-67323f07aaf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a79a6595-528b-44be-b4aa-7b313476b105"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcbb2438-a02b-43db-b48c-8f42afea9f97",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "827e0587-91af-4d49-9d72-c312a8043a12"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "31feef95-0b6d-4433-bf5c-657a6d772b25",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bac5df0e-a882-46a7-91a4-e6a1aa4dcddb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "39795b77-b908-4af2-a067-d44a4424ef68",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "833c4dc9-d7d9-4d7f-9d4c-6edf7910ce32"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ca376476-34d4-4ace-9567-bbc2384c108a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e8e975f2-5f2b-40d3-9135-60d54a1008b0"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "37f0e304-941f-4db4-b215-81c27028a1d2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a80c2948-0530-4302-9589-e439c57a7dd6"
                }
              }
            ]
          },
          {
            "id": "c9820730-53d8-41af-a638-2728c026eec2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "18416117-ecc7-41e5-b724-b7f282c0a7ca",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "aec83129-6c95-4709-8265-28d303b5403c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "39aa0f93-4c19-4b0f-98be-23f027f68695"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "62ebab41-638a-4164-9903-4767d9258622",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f6c2eb4a-62fb-4f39-8a94-abc6de68b822"
                    }
                  }
                ]
              },
              {
                "id": "7507acec-5c3a-4531-bff2-1e5b4270d52c",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d7d5814c-e426-4aaa-bb0a-fd15658e3200",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cf3bc53f-d99a-4b4d-b30d-bb855624b68c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3c3d8d07-c675-41c8-876e-e83cac090b2e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e9756b71-0aa0-4452-9351-1989bb865c28"
                    }
                  }
                ]
              },
              {
                "id": "d56e99df-f6bd-4ec2-85dc-13bd5baf939c",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c83651ca-663d-4e56-bd85-8a78f079a6be",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "04ef54b6-e4c2-48ac-b9b8-3d33bd006ad5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6424310b-382a-4b55-838e-f1b734f2c60d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "620fa770-11d4-4f83-93ab-3b68b52f8ea5"
                    }
                  }
                ]
              },
              {
                "id": "cff49f07-299b-4f04-90ac-89066e8e1706",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6c278cde-1e14-4102-925c-c6e6d900add1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "15fd631d-45cf-4410-9cd7-e04139583560"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d930324d-6bcc-4227-96f5-7431f8de9eca",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "dcf586da-d258-4e63-9b02-f627e643fc51"
                    }
                  }
                ]
              },
              {
                "id": "57a24feb-c2d6-483c-901d-1fe2c0b8e2ec",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5a59813f-8ae4-4b3e-b22d-b7ade129456c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "13de06a4-8a1d-4bb6-b357-8721bc9be722"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7d1cb79e-98c1-4fa9-810f-1505bc1b3d54",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "80a99bca-9fcf-45f7-8875-2a6111376c21"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c63020ba-bf09-4164-8de4-55c90c9b6775",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "cc2d1743-afd8-455c-9399-bfc05351b528"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0fc589e1-e519-4173-8222-095602e831e4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c348abab-318a-4c3c-b6e4-6de070b27884"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4fb1606a-a402-4bc5-926d-f0eb4a45e650",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"id\": pm.variables.get(\"credentialId\"),",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "87d70813-9af3-4699-a3b6-bd7b7ffecc7c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "44164a47-69f8-45d3-8de0-fcf508e6a444",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "81777ddc-2643-4ca4-8abc-e336b6484a5b"
            }
          }
        ]
      },
      {
        "id": "1a3b7846-1962-41aa-9244-8755eb4c284f",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "de3a41bd-e644-486c-b117-a07e42f24652",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3403127f-d0bf-485f-973f-a08d7b7c1155",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "585a5b88-a8ec-499d-9b1b-984d2ef80987",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ec909d8-720b-486d-97f9-eadb76c07afc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef9010d8-6c64-4bbe-a622-81d8210de1d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5826837-b8d6-4e2f-9ad0-ae7d52c10586",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "6185ea79-ecaa-4fcd-9505-75c0ffc95f22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8df207f3-7faf-4fef-851b-d4b87a8d04fb",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bb0df53-aa36-4d00-92f1-4f63bed63f47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4f5e29f-8e3f-4f21-ab20-f3c7f2219697"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38b4c9c7-28df-404a-88ea-08211df9f704",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e40105a-c261-4f12-a748-e01a9ff020f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1eb85e26-d7c1-4d15-8d44-a81f09c67ce5",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5aa77e8-93b7-4b95-9569-8fe6283507c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82c6b2a8-ccb4-4012-8f32-9d1bb11ee795"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51631e0c-5b8d-4efc-90ae-d45b1b9bae0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f224362d-8661-4ee2-9fb1-4ed48efb1089"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4422f00a-0c3a-4b49-8eba-5b9e7e15492f",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0addab3-1d91-4cc0-923c-9b3efc71db1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "556b97cf-a5d9-4390-807c-d1064218c2b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e432603-27b5-405e-8aa5-780b29b87b13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef7ae262-a5c7-4a35-a0b2-33b8a7a44a02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "818c0a2c-5da4-439e-8b5b-b068c92b5ad2",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aae85127-c8a5-42dd-8a2f-71c829d56268",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bf14891-c7e3-4156-8337-659b12ba0d0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a51385f6-39c4-455c-af71-217ca3cf95ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5609b644-94b4-43c5-91ff-33e45307e1b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fd288da-a5eb-491c-8555-7f719d31ebd2",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43b9f354-7bc1-4844-a655-66c0ec6e74ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "638ac305-b94d-484e-ada1-9a67799aece3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59cc732d-bbef-4072-b9bc-58fe6eb04cc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f5770356-edd2-440f-b465-ac660a007e17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e8e011f-eae7-434d-98cb-a3fcb16509e0",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a50b992b-d9d4-4e12-bc7d-d54bccebb9bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59c59706-4048-4ab7-963f-839d00ff7794"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b10da503-6a6d-45ca-bed2-ee1925c5357f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "e61ec4af-22f7-4a9e-8eca-3f6e19c8e595"
                        }
                      }
                    ]
                  },
                  {
                    "id": "797dfd7c-7097-4db0-a43c-aac1fb3ed7bb",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68d56a62-1819-4017-86e4-bc22145b82ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "123c179a-fe3c-448d-bb70-036be001ee20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42715656-5151-4a27-a9ce-e6e3a4f2c9a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "470014be-2012-439c-a3d6-cb521e96494b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f89338e-074e-45a1-ad7e-da2b5f14e25f",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e5212c3-887c-47b5-977c-29433dd9ae64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "717de140-8433-459f-90c9-52bfcb53de58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f41bd816-75cd-4338-b3b9-2736e6697452",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d408f181-36c1-4061-a536-0f758c589e7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1e256ad-7509-4ce9-a027-bd45b1215ce4",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9916d4d5-254d-4a31-9679-96735c191e37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0022b36-32e3-422d-8c27-0af02f8dfca9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "062b59be-52c3-47e7-9e51-3cc2e59196af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd14af9a-cadc-4fc7-9aa0-7a6d96f7c615"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9977c3f2-0f3b-4c14-b84f-c6c573f51dae",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef09f9a6-e2ac-4602-858e-4d30f5e5e8d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1a17cc7-7b31-48df-bef1-1cffc640d2eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66b2bbc0-bc7a-4d3f-a347-9f21aa682a93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "24cc22d5-e314-4a17-831e-c1a8a85a0ebf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69e33f3f-7b06-4a97-9757-cf025f2a04c1",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b77b2f9b-9494-4a44-8431-d4bc5fe6bfd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a96e283-58cf-47ca-906b-38b5886574d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c82ad022-3962-456a-83f9-9fb450c48364",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "dac8f4bf-c2d8-4206-8b92-da0a5d62afad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e0ea2fb-a400-4156-a996-737eb33171ce",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27db60d1-b78f-4cc1-92da-4642ed9df53f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b59aaca3-7bcd-4f8a-81e7-eaa42ed457c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c954ab73-ad2e-415b-afd1-58eb0c41329e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "caf82265-d51c-441c-8319-9a43f5c50368"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a69056fc-4fd3-411b-b9b8-e05a45f7d096",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f396605-f950-4ac7-bc99-6c6622882964",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecb7de57-e9b6-4aee-b140-07779fc7434c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f37c717-85e7-432f-8f0a-eb2269966ed8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "aafcaa7e-7d75-437d-8de4-2a7fa46f3f6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3958283-79cf-481f-a72b-f924799b5a1b",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82c9d159-3402-4bd1-8a96-4d5461e355f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18f586e4-32bb-4eef-88e1-00ae8c522df4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00f8dadc-906c-4948-94c2-5acc04c978f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "11fc6587-1c2c-4e1b-8f0c-34fd2c26588c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78e4fb39-1411-4ace-a217-98bdaf826754",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83de0713-8d54-426f-a31b-fb10180f97c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8b1840c-36dc-40a9-9706-2d7654e6e7c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5874e8f7-5df5-45b7-a4ae-82d94d215a7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c234be0-30a6-4374-afc7-161c2565f5d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "159733eb-c37a-4ac9-9873-eaf471a8ded1",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ba138b8-3f34-4748-9aef-739434ea8714",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0907b4f4-dff4-46e8-a69f-e1462899f22b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6221783-51ce-4331-9838-09c333557c68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "eec6cd75-eada-4047-8e35-5e4c00a1ee39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a2f54a6-4f11-4d83-9c62-910b037ad918",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff16c512-557c-4ac5-89a9-c36685117130",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9296cc7-a122-4ee7-a644-6b8921701b62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a9c0b00-3f4f-45c1-945a-4f05eb0b45e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9372844-dae1-4b20-a309-71ed3a7b050b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56dd47e9-d846-4a46-9a7c-2fa0f2f81c4a",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "caf2f1e5-f2bf-4818-8e81-1bd57bedbb4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13543083-840a-414c-b533-d5f54ed3f56a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6bbe73c-1927-49b4-8b5b-f58ad7d05a0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c93b955-2dfd-443c-ae57-681b1c427f6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ecf75d5-d71b-421b-ac05-ccf37afcb274",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21770126-3858-4d72-ad74-c528ce1cd291",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40e4ea28-c60a-4832-9f2d-1b66ae750972"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71058a38-4e79-4d54-ae49-734a548d2f9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ff228e1-4b70-48be-abc0-c1ff3d739ba8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21cdaf81-39b1-4490-ac02-8a15f32eafd1",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b79bd88f-abff-4f22-987c-3f5b014d6027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81821b31-c273-49dd-b029-d22a4d6bde4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b147910-3f4b-4b00-a0c1-456447fe5a06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "71577cc2-0fa3-4846-a484-8315b75aa7c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03fd7530-92e3-4ecf-bdfd-616dafa1ad68",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f86179ff-15f7-4f42-9da5-ef9b2b525aa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a284cef-816f-49b5-a201-f974e3a9728a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb7162f7-1df5-4d93-b1cd-a0037f4f5b02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "484b172b-0c9b-4800-8100-5645a34ff5d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6ad607a-44d6-4bbe-acd6-d2f5ce701f72",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dc292ee-c407-4377-b94c-66862f30affe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81636a65-5e1d-4c07-a76f-4708e3f69fbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10a6d9ce-2e83-40ed-99a0-340245a4d717",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a389526d-efe1-4695-8b87-0a56feef12cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4c12ba3-10e5-4a45-b7e1-b1e5f953ee22",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f14a5cd-3e48-4052-b978-c397fa685d16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c331bc4e-398a-4e5e-96f6-639e61bce369"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f3ca359-25a0-4035-aa2f-9c8038d9a94b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c6d928ba-d1ff-4536-99da-6587ad4a7b6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a78e8b02-85d6-4d86-82d3-2136dcb60602",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f8f7222-6fd2-46d9-9070-2277f7fe26a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "970531f4-599c-48b3-b49b-2c1b04258a19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36fb57f3-15b3-4792-a0e8-535bf68706a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "76895402-f992-4190-a3ed-bb531edd311f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fba6c3c-ebee-41a4-b182-87d5c6c66fee",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3573884d-b193-4263-a182-8de5a43693b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62a92321-64be-4b9f-9405-60cb6aebc2dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1c31e9b-e4bf-49d4-a483-dbf133415772",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "db0f1022-94d5-40cf-8ed1-e617c0b2e409"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7301c2bb-ac25-4b9d-b419-a505ed5d82b9",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95cbd788-93bd-4f85-afb2-c5d2f22bebb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf9993d2-3ad5-4986-ba92-b08a50e9ca8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc0fe477-52fa-434f-8510-c91e0e6d78ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1639bac-46cb-41e6-b4bb-18c0dc7719de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c7af2a0-6e16-408c-9369-c34b7462e5aa",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b7d222e-e9ac-4a86-988b-35dc8e539cde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb3f41fc-af04-495c-9e4b-2d1370d234c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50a14a17-b9b2-4bdd-80a4-c1235ca64b22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "615a2c0e-054c-4773-bdd1-15127dea7568"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adc4ac59-bafe-4161-bad1-d81a57b3aea9",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c06105b5-2c06-4356-abea-467ac11f9cab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54b27e72-52cf-405e-8d72-c9e2bfba5f35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8451724-b912-4383-8897-797f8168190e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "31ae9702-1ce3-46b7-9ee4-bebdfdd18532"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2937055a-690a-4e59-8175-467c229ff4af",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84ab7e9f-9946-4391-9019-4c13024bdf80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4efbd794-1fd5-4405-9ab7-b8900cedc465"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40334894-a6f3-4931-885a-59e7f319754f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "544b7c42-80d8-4be2-9de1-76cce52f2086"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0419e246-80ba-4296-a71a-cd925244f37d",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afdbbc53-6345-452c-a02a-989c6b46a3e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20afcde2-ae4b-4921-9ef8-95f357096341"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2aa2757-279b-4ad7-a3ff-e1d5f22796f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd9e0993-8f1b-4f2e-8750-248553fe1c79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "031dc7d0-f2c6-4958-9660-d0c93e3e886d",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8be021c2-c069-44df-af97-24eecfd7f964",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2811bb3d-12c4-4564-bb63-f0cbb9e097d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f0f47c2-4c4a-4740-88c3-4e16e4106d91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "36e3cbc5-5115-4a4c-8fe4-3329f207703b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2a85ad17-edef-43fc-960f-d9f238bbea55",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "072e5d7a-5433-4c4c-aac8-a71f9dd95384",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22e163a0-c6b3-4ca5-96da-f27d3c1502e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36e98eea-62b1-4de1-a340-7c8869bb4ab3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0908249-ac70-47ac-9148-ab0201fe998e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1ceb5021-b8df-4ebc-ba90-6218bfbef8d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fe8f586-b326-45e5-91c7-349e480d9d73",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34e3e4c8-5f13-492a-9971-3e641200d6db",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "663054c6-effd-4709-8d3b-288cf130d141"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0dd2c41-fc2e-4fad-9b4c-d7a3b1997799",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d15f5787-6c6d-440d-b8e0-b007b20bc11d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "edcb3069-c5f3-479b-8742-ff386b53928f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "620b6045-b5af-4e47-b080-8de72ed9dd51"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d8b823fe-3c04-4339-91e1-ddd0f3dcaf75",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "84e593e4-5982-45a3-97d3-3c7746eac69e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "98c93848-94fe-4917-96fd-441bbafe006f",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "292503f5-2220-4c4e-ab33-71d53d802b7f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e13ab0ae-8a41-4cc3-8219-165091ba02ca",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "08fc23cf-65e3-4c64-8097-9be9222b0610"
            }
          }
        ]
      },
      {
        "id": "3a43a0fc-fa5f-4829-8311-4d0c1d5a860b",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "f2509494-7ac0-4dd4-a660-a21774d21791",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cb3104b5-a9de-42ae-a7bb-3181ef0e3ff3",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "cfdfd0ff-3939-477e-826f-633473c44a09",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de48934a-8a94-4a67-8825-eabbc255263c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81dcf0f6-f3af-4be4-a4b9-5d8700c5dcc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d81afe75-7783-495e-9edb-9378a0a1f96c",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "460855ea-5cb9-4b25-874a-e93ef85dec13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ceb8869-6ec4-43ea-84e3-9a2fbc7d773f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "029bb825-47dd-461d-a23a-e02a87dc6a56",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53d7c3d5-7bc7-412f-bb69-319e877d9a91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a624187-116c-4c3f-a8ac-144732fc7a23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54aa4eab-8db9-46bb-b9e5-3d91c6d0a11f",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d0b21e1-042a-48dd-9b24-b7eeff71e4b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7308e6ed-330d-4920-9721-f4fb0a628eeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f96621f-841a-45e7-8fbf-c88eddb402bd",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb49aee2-1574-42be-a7f5-a94a37c70d05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "feb981c3-b125-4c7c-985a-ef1456604975"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76814ae2-005f-47ac-ba60-5126c520dbb2",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7a15d21-7ee4-4417-9fca-b3827f372720",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65f37113-1c8d-4791-9b05-8e16d4aae01d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c220d32-d5de-42d9-b38f-645682dc3836",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c000a64-a663-4786-85b8-16ac2f38c214",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7aa2f8f-43fe-41e3-862d-e3084180f963"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "809917ff-f8da-4b52-b0cb-8a6eae6d308a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb1091f2-12a2-43f6-8360-5b6bb16cda62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "094cb1d6-cb92-45f8-91bb-5af221f16e2b",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aee85f93-f705-4ad0-80ee-929eede60d76",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b0b9726-fb12-4805-bd4b-56ddd908be6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25f79814-9a1f-4422-9620-8a864bc35fc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cecf941c-c4bd-4f56-841d-0617b17d3daa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a28c787-ad84-430b-aafa-9b3bf1ff045e",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e0ef8aa-427f-496e-a255-96f08e7a13c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3d0c2c0-e4c3-46b2-bb1e-1bcbcdf74067"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0235f879-34c9-476c-a42a-4ea5b6ba4304",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbccdc26-320c-4838-be05-3b1882d0bc06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f1ee81f-5815-43c2-85c8-026a097e5a8e",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "281c81a0-4a05-4b7f-9e8c-5c3cdcb11cc1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7acc9e3-8a41-4dea-b8da-c3713761605d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48e89b56-6ae6-4ff6-9f88-92a1a13e064b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "748a170e-ccaf-40ea-ae66-7ad1a12ff9ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5f9f458-4de4-4ffe-84b6-8f261ca74425",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8516a8fe-8f82-43d1-8ded-811ddefa91ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc2a2b4b-1961-4499-acb9-3e7dc2a9f0af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70400531-23d5-4129-8ba6-301501e165b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92ecbbb3-1eef-4685-9b4b-f559fd7fdcad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af0fceea-661c-47d8-9d88-8abfcb2d4e66",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4020925e-3a2c-42c0-810f-f20387b4063d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1aac34b2-de7d-4128-948f-522e4b512a58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56686fd4-0856-4a9a-874e-0c25053c0e64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23af4fec-0251-418c-8801-2a13f2b0de23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bd275b2-350f-44db-a83a-90f1a22e3085",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8907bceb-be13-4d24-969e-4019b69ba8ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1219c273-fbff-4ad6-b417-a194f8d0c30a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2387e02-2edb-4d70-b089-ee0e30e654f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d15b3cbb-e875-4d74-8ff4-95cfd234c3ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82aaf1ad-585c-4210-9cc7-e4b43ff1d592",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4feab97-a53a-477b-8a63-241125d1ea20",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f3133ed-b8ba-4684-9976-d6a5902877f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b11c7b7f-97b3-4acc-b7ff-afa9f5858f82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66f0c677-2b91-4409-a720-6784982a4c68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a050f1c6-f505-4e8d-aebf-af947bd749e6",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c17f308c-ba5c-4b4b-8208-c3fc93c7b298",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b52487dd-497c-4d69-9e01-1cfd719e1457"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28742b9b-1972-4d59-bcc7-1e012e75f250",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64bf4877-5145-4044-acf7-5b5df91544c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bf42c32-3539-4aff-9773-e20b54447980",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e107968-e8c1-4541-8dc0-7e2e0bdd91e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9878a038-d5a7-4a3d-9b0c-5fbbdbf89468"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0a12a8d-d384-4153-9388-ec9e7717c9ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70c9ddb8-6526-469f-bc2c-afdd7c7cd321"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f5cf6de-c59d-43c6-bab9-1634968a97b0",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7e21f17-f68a-443a-89e5-7892d040b8d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da138787-93b7-4647-a637-cb3de91b3e6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "276aa6c9-45b9-4b9b-b780-69c513246d0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58837ef9-10f1-4c58-b088-3c30e29b43a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "420005e7-ca8d-40c0-bed6-3825ee774439",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c72bffeb-d7d4-43cf-a588-439cab478ab6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d47908b-03b6-4ec5-a3ad-ae612c955534"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a50705a-ea09-45a8-8c66-e6dfba02d6e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f4f1aa1-e554-42d8-a4f3-9173317d82db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0fc7e5f-c4f2-489d-bc24-759ce96fcac9",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c6f29f7-c519-49f1-8b93-d80f2648c930",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9524ff9-256a-4492-870f-780e48cd8f0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "404cefda-eb20-4f51-96e4-edaa82207438",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb43721f-cbb2-464f-970d-d31a193c2c37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05a2726e-2095-4073-8969-209cd08bd73b",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "182bbbc8-e91e-452d-9d0b-46221f12d27e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74c069aa-1f90-450f-b592-7d59caf47f05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6583c4db-99b4-4ad5-808d-6f431a0a53b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88d2b132-0071-4ceb-b534-287ba83a1a04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e3eec53-49f1-44b2-bb14-0053743f4e98",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e12540c-e28c-4aa6-8f1e-da73aaae9ff6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0819bec-f813-45a0-b8df-9aa904c11c0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a82c81ea-3dba-4a86-8ece-8f553d2b973b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7196e3ba-4c9c-4a11-8cd4-f74707869bdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d74722d9-9545-462b-ad23-455a65815f17",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e83ffda4-b128-4bd0-8666-af6095371369",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7404ba1-cefb-4ae8-881b-fc6cac3a98bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a73a18b-0178-41ec-bc8b-e0d606a74040",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d00dbed-c2fe-4d37-a6ac-aaf530ad71dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b34955b7-b10b-46bd-8e00-e71d52a25881",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f699e55f-557a-44cd-bc4f-3b94cac56267",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd97b99d-03dd-47e0-915c-e827a57b1ecc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcd45a5f-9a1c-459d-a3ab-01f5824ab5aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe3119bc-759a-482b-96de-0621ca27f4d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c75261b-31f0-4413-bccd-43c1f306115a",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "413d0908-7571-4748-b13a-b575c6cdc735",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c4ac81c-5451-4ad4-930d-1f67f126309a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1ef9bf9-939d-492a-8258-02d7e86a1588",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "048d2571-5feb-4d4f-9caa-47fc27e0d4fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59d54b52-5055-4726-ad2e-e2c1565c5974",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ee330f9-fddc-462a-b0fe-aa8f9f72a68f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e00198cf-7b1b-4a01-be23-cf6aef22eae1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dab9a4b6-31af-4f57-8224-e799a316f5bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e87e5f91-4295-4c48-905e-383ba300dcf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99c82951-f5d6-4907-9d83-ab6d21a5e35c",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6445f89-1321-4373-895b-30a7f797a5e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b6acb6c-ae28-4cf0-97cb-d564f4248528"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "446f7513-0a47-4079-93d8-6baf4e26395f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c48da77-8b0d-4620-a704-374dfeea3cc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20fd9635-aa40-4007-9bb2-14859ab88a5e",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d09ba0bd-4ae6-4f51-93f6-3d402727d356",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17acb6fa-7c4b-4ca1-8cc6-3b5565cac13d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d5d80f5-ffab-4150-ade8-05c446dcecf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a5e8d27-9a88-4070-9f5a-9165eec23652"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59d2db64-f95f-4816-bd9f-4c99fb87a4f1",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f74428a8-fdd5-4f65-8ba3-7eac906300c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dd6b2fd-5f52-4cfc-a5dd-09a9db9d3f1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb9a3551-3dbb-4fc2-ab51-d94f397a07ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22db26fe-9308-478c-b4ce-3313a7e3c942"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6c11a92-cae5-406d-989e-6cb77cd79d2c",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffbfb654-5c3e-4b61-b5d5-8f4f567ba7dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb06b059-3568-4d6a-a2cd-14744c70330b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af0a46f1-bd95-4fdf-8389-ff3742ef262f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93e3c233-4aa4-4cec-a716-0fe222ca7da2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f61e3480-af1f-4104-8e43-faf7a402b1a7",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc2c6e0c-2865-409f-a42c-7a0ba84c0b82",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5c533cf-01c8-481e-917f-4a8dd046ef26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c9ff376-8b26-4f9b-8211-f74d216465a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43b857ea-4845-4db1-815e-554beaa4c5bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f195f98-f64f-412b-aa7b-ef009b45494e",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d645d1d7-f369-4511-93a8-fa9082194982",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9a9fd9b-819b-488f-a906-47db6c90edc8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c00736d-799e-41ce-9fe9-338a453bc71e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3557116f-bb04-46ae-aee1-2a1d59f042cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9861ebfc-75e3-4914-8462-e17eb50b6d7a",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3799d0dc-6fee-4688-8eb1-1c88b759556a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "640fb0c4-46fb-4a7e-9a86-18fd084ca018"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9eb037d-5324-4839-a4c0-d19fa10c94e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "280ba68b-cb4e-46b7-97fb-c1007c2d7e5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16c719ef-4f93-4612-b179-77e117b9fe69",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86a0737f-6e38-43a7-99cd-68ece2ef6133",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aabea852-8999-409a-a2b5-ec738059816e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "102d4660-65eb-46fa-8c05-b72b2d6be51e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "deb78d8d-07db-424f-a434-1d08395b624e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fcbc4a9-d379-46fe-8461-bbc34d5320d7",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24840991-27e2-4bcf-bea7-715fea429d0d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9477b71a-004d-44fd-b853-ed459cf40abe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95b7c966-0083-4b21-8d01-3727463db66f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4581bfca-c847-4c5a-9ba0-62fa122c1fd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f13f704-ec80-476f-a439-a9a65bd979eb",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92b77db4-5288-43de-993c-00c22e1d731d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "311f14bc-440c-4c58-89b1-2f2ecb53b47f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c615bf0-7946-4ee4-9997-088aadefbc50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1581f87f-52ca-4165-9e56-fcf6de080a99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59c6ebf5-6e2e-4a8e-ba38-ea932214551f",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d31a21a-e4ac-499f-b8fb-3d04f5aab880",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c5d88ef-8ed5-43f1-aa25-78c553d10ffe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3645b638-e03d-4a2d-9b9d-7a7a956da128",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e12079dc-ae50-4ffa-b620-aca1065df159"
                        }
                      }
                    ]
                  },
                  {
                    "id": "481f2ba1-49ab-4e53-b20b-c28fc0693a52",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65e73303-9d4e-4d62-876c-1e392fd2b4f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eaa32e00-e343-46be-a7e7-f9cc78e895fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdb0e45c-fcc7-4c2b-a1f8-ee2c1ab74390",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "251e3032-7a41-4f31-a5e4-d1482821e332"
                        }
                      }
                    ]
                  },
                  {
                    "id": "595d8537-bb7b-46fc-9e94-4c22bee4857d",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d478744a-680c-4ab6-b11a-0289afb1cbee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8308d2fd-2a81-4aff-9d75-e0aa0ecd0068"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1791bc2-d432-496d-93cd-d04afa7bebe3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71424dd4-fddc-4f46-b333-de8b9485baf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c169ce09-be17-4f16-ab0b-9c3096f43116",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcc5031e-5294-4319-8f1b-341d8636e2e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bad57e1e-b2ac-47d3-be58-df1cab76ea81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dac9d2c8-0ab1-451e-b0a9-d39f5b1c9c9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a518da6e-018c-4689-8021-65ecb47b9fb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2aecbf7-1d2b-4efd-875b-109dba785f20",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f31c9a3f-bab2-4197-ae87-e0837c1faf50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "993912bd-3244-40d2-ae87-ee2704dbbd09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6716b225-1b03-4d6c-b4ab-23fc46aabc11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee85c77e-e3d3-4b40-988a-b34b2cb8aa55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d9eeeb0-93c8-4844-a48d-116ddabf253e",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbab785b-d11a-4389-aac6-7010339d9353",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95194a55-4f08-4be4-a96e-16cca35264b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b5ed4ea-8895-40ec-8cb5-0bdb7038fe66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5bd2b19-f0f5-46dc-8ab5-1955d9eec6ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49a913f9-f6da-4c68-b0e2-b40457f8d030",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a06c28e-2570-4311-b9de-01e1a346ede9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc55f968-4c64-4a73-92a8-74a9d290116b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a088ac95-383a-41d8-beb0-580cefd8b89d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "295c02ab-c32b-4730-9109-957338e2f1e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "259643bb-c19f-49e5-95c4-8cb1b657bf06",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eebf6afc-a3cd-427c-8690-d67e3745a734",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6c77195-f76b-4cd5-bf28-3c34c4168c6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e9f0695-a448-4930-bf85-9a49dc8c42eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da16daf3-68fa-438b-8c43-d3373f7b2fbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15ba726a-8155-43b1-91fa-b66afa337de8",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ea60686-083e-4700-a241-886fa9eabde5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99250237-a3d2-4d54-ba20-07fbbeab9519"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a573b323-1b75-4441-b754-e6f1180cf07f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bf23dc8-33c3-432a-86ec-b96c5c586898"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8ae2386-a939-4209-a069-9a72ba4d7275",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d9c32ee-e2bd-4eac-bc37-80b7e084b9b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f3f6f6d-3c31-4766-8938-7c4ee98e93f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c41d5a88-4d42-428b-a8cf-6a8021c4da09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7ec071f-14e4-4cbd-88d8-aca068eaedc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d365fb41-3d2f-444a-9073-5a934ddafcd9",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfaf8119-0772-4612-b5e1-5002dca6d580",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4e9806e-5748-4f4d-afa3-3500ab68792d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40332070-3210-4d82-a18e-bd10f0fde8de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58878e86-7285-4bdf-8233-4dec52dbbd56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7e2f0ea-21bf-4e8e-9a38-bf147151c939",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9619a319-0c75-4b58-8e0c-d80a90a6fd09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43b8ee6a-6140-4d5e-82ff-9f7a9dbe7ad6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dd2e4d0-cc89-4013-aa9c-d1a3ba304d5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03847762-c5d1-4cfc-852a-6b4725a2e97e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "989d32cf-a650-48b7-b88b-aab41a30e34e",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fb9e38a-eead-4a8d-a57c-61b18fd2bafe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99a96766-93de-40e6-ab98-d32e79b7dcbf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c7db582-c8cc-4e91-9c90-267fa5a5c018",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04e0e1e0-9421-4eb7-85ba-4440d4eb6e27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07953f87-591a-4d65-880a-8b779cb0d886",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b52cc79-a103-4253-821c-c859545a85b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26d8f571-a519-4fe5-8fe3-d2803a4145e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "514d8d19-51f5-4f85-816f-c5ea535b7bb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a61b625-dd1c-48fe-96d2-b4e7391cfda1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "741345bb-51d7-4cfa-ae07-30e14e63b9f7",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf15e6f9-cd95-404a-a8fa-d0ba4b1d490b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf870061-ee33-4098-afd9-e6240d76b18a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6910a95c-4207-406a-8747-e677fc8276ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11f2c07d-e60c-4afe-b459-c0014b3cc55c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b2a7888-519b-488d-a414-3817696e1736",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69f19eb7-ba2e-41ba-a05a-10bb6d9bada2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c4c7051-fc3a-42ad-9551-8f149646a8ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27e0d013-35dd-47d7-b3d9-1cc449bfc5fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3475982d-1a0c-4308-ac85-625299a1476e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a754eaa7-2bff-49a5-9f65-638c7160f210",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5075fee1-1c79-4699-8ed9-cdc92c03aa3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58170eee-5906-4296-9d23-dd1cf6af5f76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22f2ab2f-cbb2-46e9-af81-dd481f4baf8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb74f5e1-76ea-40c9-850e-a057a9867fb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b741fed-b092-46a3-a3fb-d22606cc3189",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0d06149-273a-4dfb-94a7-109b339b05b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e74490b-6081-4de8-9082-c3b3df0739ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d8d4c2c-53c6-4f5f-b9cb-9229679eb618",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c23141f-6046-44ea-b7c1-f48e258dc831"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4aa7b32f-b747-4d3b-abdb-26ed2982a3dc",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d923969-8ed1-4b03-b3ad-4edffbe6aeca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dc67e33-c04a-4ba9-8178-dc66e62a2597"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a14ae603-e781-4656-800d-2b4dcd7eb12c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "332c8e11-cc41-47d8-bca5-5927d1b3196a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "017cda56-4dd1-4a7b-a7a5-702622b3e7e8",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e39103db-b578-4d9c-9a15-ff851a6312a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dd60819-0f86-499e-be19-21a08978493d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5215df8c-4228-4a61-af02-d37e5d640a91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ada1b9ea-1560-4269-8653-5117d5348641"
                        }
                      }
                    ]
                  },
                  {
                    "id": "351b1a5e-c74f-48e5-91d9-8727ecfd6c98",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "304b6c84-c2bb-4e2f-ba47-f6c1d9d744c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5df1a0e6-6b5a-46d7-83c8-ab0b9b36ca44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4560255c-e3f5-4629-9e5c-e5ab8d9f8ccd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14ff1e7f-63cc-4b66-97dd-88511825334d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "494c965e-e8e7-4103-bd64-5677b7b03c1a",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "145bbfda-033d-4542-8426-9d89f4564937",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d80c057e-a800-4079-a4d2-836cc54a5f8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "848677b3-566c-48ee-81fa-68b3d93ae7ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfe9a1f1-0ba5-4e99-be3c-ad79f693968c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18b774a8-45fd-4c91-902e-7cbebd134dc0",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20f11935-84db-4d8b-a7cd-e6857a6ea7c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48979324-98bf-4953-97b1-4e7d6e92b536"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "146ef288-8cb0-41ee-af19-5f96ff790e31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40330641-b971-4968-80cd-dfb88e2ee8e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9797f7c-d141-4de9-b8cc-2298b9038797",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c369c73-8229-4e4b-89b5-75cd95effe25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6aa21086-5658-4e2d-b770-1281bf0ebc25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "331cf9da-cd54-4dfa-ad85-01d9c10d8079",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ac7cd9f-c53c-4b3c-9ba2-87ad3cb44059"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffd3e016-35f4-4c2c-b029-d8b1595ea9c7",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d610a0ec-25cf-43ec-a42d-115b27a20afa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bb43e4a-3433-4036-87fe-ca3182530117"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bf3587f-a61c-4559-9690-b5339b3d5595",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21bbd17e-2aae-4e1a-95e5-d2ff382dad2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ead23c51-4b01-4806-9898-596dc692c916",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dc1a9c4-b82b-4494-aa59-efb8014119b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "147a8af7-1402-487b-867c-470c8c59d948"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfac21fa-d5f4-4608-9d5c-e1922006182b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d779c2f-ede5-4230-962b-ea4566e066f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c69b2889-38db-482d-a2cb-32e03a2a3ae7",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3e002be-93c5-4ca9-8354-21cd969de82a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "456a5e7b-31d9-4be1-81cb-6a163955d45d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56131832-b238-4a01-9c9c-84da6de72f7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43582214-5f09-4f68-b25d-cd8e774c1a81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c99a6f5d-911d-47a6-8d84-d8177cf7361f",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faca1b13-4bad-47f9-ba02-bb070ef2195f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f5cfc13-3c6f-4487-9150-ade3a0badc8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9878d753-5800-4332-81d2-42d106d3c3b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6f503df-4e25-4205-9e9d-5211fcf6dba0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58c400eb-5483-46bf-98f1-0079e5639c01",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9e3e83d-0dd3-474d-b338-f529c0ff6603",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1db822a-3394-4abd-8c00-01103a244ba7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c79c60b-9220-4843-8341-63b12554a31a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fd28f16-81c6-4db0-bfe7-66a8b1f30c3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8d945da-b73b-45e7-8f82-ea620456644a",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85961814-1207-4e61-ac47-e35cde7def7b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a7de147-7d0d-48a3-b3fc-956e5e38d884"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "266d1e9f-3c85-4ac8-bc8e-4fdf80edb238",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1640367d-092f-497c-b31f-c1a7502651c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "326abb0b-b499-421e-99de-46b6fc7b4a3f",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f28d309-7b3b-46db-bd6e-aef0285c50e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08bde779-0183-4a19-966a-977d2d147d2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db4d91a8-0885-4981-a174-ded2c684dd1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cb89238-1860-4c6a-bcb9-bc99e7f30165"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb38e7c4-960f-461d-8b32-6de66e8d2143",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92869cf0-3a97-4530-bd83-c2a69407aebc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0cc9415-a7fd-4e55-9ceb-f0926772dbc8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9e0d6ab-4a87-448d-a0ac-33327d6c1b2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "932dd95f-aaf2-40d1-aeaf-9b1e270f6ad1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22dec4b3-4bbe-4779-a4cd-ba32f51025b6",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba903af0-d020-4aec-a5fc-663823cfe417",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ad7016d-28f1-4e68-89f1-c6ea17acd5dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42313767-8f50-4807-8f37-cbfb3c77dcd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7590e11a-9701-477e-a7dc-df25fdf46f16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4b4cf0d-c7b6-427f-8014-be020108f561",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8505fdfa-3859-46cb-a82d-2d317200b9ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc5b49aa-e8f1-400e-b7ab-d160c79596e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fc31a36-a5c4-4436-a594-4351c3420024",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad501189-7a2f-4e2d-a9f8-409e3118a87d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d51f4a2d-152a-4420-8903-0b25e2b9e4d4",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4b11ffc-a3e4-496a-bc8c-1dbc1053a33c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "139ea86b-e3b2-430d-b485-225bd01f28ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "290120ba-bdcf-4d2c-8160-9c1c7bbb37d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9324cb21-bfa7-4fd6-949e-5b58e7d97873"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfffdb76-7d3c-48ae-8c75-f6a47d0bdc45",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73b7c6b1-a704-43bc-ac56-1c59d68ca085",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a854f79c-872c-44a7-8287-7c7ef8a81da7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf6be29a-ad74-4fb4-af5e-6edc024f78df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba5d8cf7-cc7c-4ec6-b581-653502e3be9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cd01e08-f5a4-4a2f-a57f-21ea2bfd09e7",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96592033-43d5-41df-8ab6-98d3a4ba4e7f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5c2c7b8-1ac6-4f45-8104-29c737c77500"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db210bfe-695a-408a-b991-b386cb076649",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1eead2c9-fbc6-48d7-ac7a-5f4606f73cb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0e3c345-1dd0-408e-a238-de4a694e9d6e",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "291cf4bf-3824-4254-9475-a94bd2d01afc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2cd92fdf-1b1c-41b8-be67-cd248827fe20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85135b47-e4c7-4fc2-90fa-c3fb908696b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cae174b5-0713-48a1-985f-8171b43e0712"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d3d4742-f15b-42ac-a228-c10ba298fa8f",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ef09913-e3a6-4606-bdaa-f906304616e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de48bd00-9587-463a-8673-50b38bca571b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35eb84d2-3ab1-4ba4-b495-d4777ea22f64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e38429af-d438-442f-807b-0914d4485f7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cafca610-acbd-4847-8ff4-fac18bd1970e",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d39e798-3936-4973-9eec-0db0aad52992",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59a558c8-af51-47fe-ae6c-ee1f6d4823ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aebd446d-6f32-4a64-9afd-d40cfbbeeddf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "056d939d-d1b9-4295-ba23-f21bcc56b41a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24f33bab-598e-4f23-bf82-c3559ee98ffb",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62af6a97-bef5-45fd-8096-6b47154c77a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4602e5da-af11-4059-9e7d-4bae7be64dc8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "485e66d1-f14c-432f-9d91-cc2431abe274",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ca8c315-ad61-4dec-a512-23b715cfe37f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abd54892-8a74-4639-9f42-d82f63f8c3fa",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7dc0f82-cd3b-4316-9011-dd2fb7a89565",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "313407c5-5787-42eb-8748-23308501c3b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4686821-4bec-48a4-96e7-951166122ae4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9be551b9-cc8b-4243-bc57-48fb14e51106"
                        }
                      }
                    ]
                  },
                  {
                    "id": "618fd5e6-a11a-461a-b2d0-8fd13574795d",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c3a7c03-a97e-4018-a6ba-232bb4814bae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a47c8aea-96f2-4092-8318-2d8dd3b46508"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bed309c9-5728-4ac0-b81e-98dd342f61c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c23e9d8-9d64-4535-b460-6455e2ed03b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "658c5a80-f5dd-44ed-a84f-af534324f1ec",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcf282dc-6ac9-4e5f-9aa6-ac6ada213573",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4df99994-1839-4b47-b747-71e29df981b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3487fb80-aa56-465f-ac89-7a63a9973a34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be49099c-806e-41ef-8c76-6aebf387fdee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c78417a-73cc-4ff9-b219-e8efd8c1de0b",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2196dde2-b765-4aa2-b8f7-203fa4c53868",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ae4493d-cb08-42aa-b40e-3c363b2677fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e321cd7-0199-4f37-90b4-2fc5453fc8b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9097f752-1d68-42e2-a9c7-07c2e08d0c64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a7f2a62-ecb0-42c9-b606-4c11e7a004a1",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b2d961a-0725-4fe2-960c-cd7d93afcc89",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c35bd23-473c-4b88-bdad-c1a0682303cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97ca3ec2-b4b8-4908-a71c-5c6d6edf144e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "984b071e-4a2c-4bd1-abb9-da2ab27915c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "641b4365-d87a-4818-9c79-79cde7ce0892",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fab5ba60-8997-48b6-b0b7-a4fec68fc6e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cbd751a6-71ff-41e4-96ae-5dfb3a2230a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d83860d3-2f9e-431d-9270-958e5b5611f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ee48f34-6d60-4d67-8495-30f168341247"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9b7bc4a-ef13-4456-97de-0b80adf1c59e",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e11f8ff8-93c1-4607-9147-3b7697292f34",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40b89432-558b-4b95-ad83-f92b247239aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bdad821-691d-4e93-9b33-0783648f913b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c78cf839-6205-4a04-8ba6-be349903bb20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4127aec-62e1-40e0-a112-fbf819bcd190",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "303c4897-f131-4103-aceb-1b67bac64957",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3cc08899-f901-439d-a520-76f41898b603"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4048cbe9-86db-4830-9368-6e07eb314f42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4491e1a6-bd34-44b6-8ae9-dcbb5ebb6364"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce5508e0-adb1-4273-98c2-5b8ac9d3e14a",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c4a9cf1-d055-480d-b41b-82e03c9eafd7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1b89e1d-e822-441f-9977-282117eafc7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4268874e-7a11-459b-8a48-f869c1530323",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "779617c7-767e-4384-be98-62cbea5d1fc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fac3ab54-1a2b-4629-9e07-56c0058eb010",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad2fc29b-4a0c-4d98-9382-312b1c26c237",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f93c934-70fb-44a8-982f-eab7e3d71a5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5aa737b0-aa77-4289-9989-c5196d65e446",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b23be99-7623-4034-97a1-a6908580680c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca12c1fb-7b69-4b48-b362-017cefd14ca4",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49ad620e-ab9f-4be3-b8d1-2924ab5dea5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9df2410-3e85-4f85-88d1-e264e1ebc671"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcf4d046-943c-437a-86e2-fc0e3b90a524",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f481b396-5d7b-44ab-9bad-344f7c934109"
                        }
                      }
                    ]
                  },
                  {
                    "id": "399aa3f8-8c81-4dd5-84e5-ddfac89b3f4e",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7269149e-a422-470d-bec9-68127a4f0fc4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "109a56c5-adfc-4836-9428-1a964425879a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72ba4134-e831-4ccd-b773-098f722d265c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "261e7f74-7ba2-4a42-86e4-c64eeba90d11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba6abe85-7628-4a3d-a054-014a888607f7",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc8c7101-96a6-404f-b286-000f4c687b0c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "896765d2-676b-4a08-8e1f-52a8f08821e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbd8cca0-1ee5-404d-ab07-2960b951e119",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8435887e-2426-42ed-babd-48ed2cc4856f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6015c861-1dbb-4a22-aa7e-8857225ea2fe",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3d7ea5a-d8e8-4af5-afb8-cbcc4e02fa47",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b2bdb23-0cec-49e1-a6bc-b82b5a2c0567"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b411d865-59c1-4397-b35f-2d4a585bb3e1",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6944dad5-aad2-4175-ab04-33dc876ba3a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbf2bcae-3114-4828-aa15-8f479744267d",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc3421cb-2d8e-404d-bc1e-062d9cdbd12c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f4eff11-158d-4e38-a96d-4c1bf5a8e931"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32273e18-9d29-4a1d-b98d-d8103fbc91a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8e669b9-1f68-4481-ac1f-f9fa1090f43d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24dada41-c179-4576-adfc-2d956bc2589f",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b68d53ed-0f92-42e5-acab-714eb568361f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b38c0185-9a31-4a5c-8898-a013ae8d03c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d75ca375-ebcb-4e38-a1a4-592d24ef6947",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f744245-9d08-4cf4-bf3f-f820dc64a5e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "594c5585-0b8a-44af-b35b-492cc3682c79",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e066a59-4348-4ef0-98f7-80f08aa5cca5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8f0883d-8273-47c8-ba15-1050375ee0dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "812662cc-6d93-49a4-a688-d25e0d41d84c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "407c5030-3b30-4e9c-92e1-72026f571a6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4631cf51-ac78-4144-95bf-df5afae566e5",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "948e5ab1-7c06-4659-887a-af21f8540fd6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1c38166-9e17-4d92-bec5-ebbddd2bec26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ade06f37-088c-46a9-8129-2c11bf85bac9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "998f5505-7bb1-4d72-b9be-2e7da1b5f61e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25a8b442-1c10-4521-8a18-77062e82f9b7",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f530527-f921-49f6-8460-42588bde6c2f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "022f5712-6008-41cf-8cef-4bb5612e2bf9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8298d72-f529-4b0e-85ff-601aea88997c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b89861d-f6d2-4ae1-ab64-354649780d38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82c9fc0c-46ef-4a7a-801d-e42daf494229",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4fd7d9b-7f9c-411f-a76b-e2251012e166",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11eecab4-9c80-4ba6-9ae7-2bce76b451d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "262d59bc-ec31-4922-a86d-e03af2bd2c4b",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3571bbe-2ad0-4fed-bf83-e58c761b9a8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "870b525e-6342-4661-916f-00f069fdd3fd",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e008f63-caac-4e07-b429-314145c92ae0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a24f5dfd-8976-41fd-8e3b-d97e9d7b3312"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1cdd1a9-875c-4b61-8513-1b4bbb7b1941",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58629820-014c-4f99-9acd-4c401ef4dd55"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e3249f95-8858-4d62-bb06-822bbdd8eb15",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3762a76c-f10b-4ad0-8e6f-a811cb935d4a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5b7e2b18-45e6-4ab2-84f9-ab515931386e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5f96fab6-bbce-41b4-ad23-5f1570516e82"
                    }
                  }
                ]
              },
              {
                "id": "6dcf9aab-71a1-4b87-83d8-b83103d31c12",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4bdf52e9-8b9c-4aed-847d-7046c94d285e",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dc85df6-d90f-4d3f-aac7-86a75b3c8259",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "563ec3d2-ad8b-4155-8be2-ce26d4c15def"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "403f7412-7b8a-4f9d-8570-6f178369a14f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a046f94a-3c6b-412f-8478-af82d884b927"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff1de47c-36aa-46ab-838f-27803128f92e",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dd31c39-af8e-497d-ae70-9b6bd3b897ed",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "fc0a1815-237f-4902-b0af-3686989ab577"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd38561e-9cc5-4e95-8b9d-82d1be9bc5ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "51fd19f6-bc22-4000-b1e3-4f46eed5dd3c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a9f3eea5-b4ec-4659-91a3-03a6d762cc25",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f8c4b360-fd80-476d-86ba-7eda8b5d77e4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f464ccc0-9073-4686-9eac-60ada4b27bab",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "23b74ba6-3cfb-493d-81ef-93412bf61d30"
                    }
                  }
                ]
              },
              {
                "id": "6a546a48-cb78-4763-b579-9ef5a494e76d",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "d7b0a5bb-ed4d-4665-84b8-eb852e594206",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b603a58c-2c18-41f6-b89b-0c5185a809b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "4b7747e5-3522-440b-b62a-47ca7fbdfe0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21937d1f-2fe3-4704-b966-5d275c3efeee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f9a9d68-7718-4c6e-9b41-5c84b01a8fbd"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "b7598f56-5c31-4879-af88-1e26ed22d61b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "30dd42f9-8ff2-4286-8de0-ff6d60e59fcf",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "eddb3794-22a8-4c07-adc1-764ca7d29b00",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "65fa7bc3-c10a-480c-bcb5-d7f96446bb61"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0f26fa19-495a-4922-8ef3-abfd493770d0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8e2f2c83-8c02-4254-99c7-20ef348a4abd"
                    }
                  }
                ]
              },
              {
                "id": "1367faa1-975e-44fb-b84d-2ee2b10cb363",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3b8fb33d-8310-4a97-83cb-22d0215f16e1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "c7c87c59-fe3f-49ba-81c3-265698a66f45"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a77c7bce-ff58-4649-b7ac-cf06b6b43a56",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6e01e7d9-e79f-4b33-9a41-9c8a1d9e05cc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d25cd232-3b06-49d8-b37c-4e8c898715d2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "bd109c01-c7b3-4791-b064-425048acbad4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9af6296d-1da4-4384-909f-7fc09af8415c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bf376c23-2ea4-4e76-92ab-002054e0deef"
            }
          }
        ]
      },
      {
        "id": "6476fb4c-52a2-4822-8082-1724c430db14",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "649dac03-d1a2-4caa-b9b1-cc18fa10413e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e9a7872e-f567-4c71-99b4-2d112cd23035",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f2658c67-29b9-4e43-9c3e-9141ec9ccb56",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cea56554-d18b-46ed-8e36-a940143dfbbb",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "4b9124e6-b135-496b-9180-ca862993e829"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d183133c-ec29-43aa-849d-6795811ab634",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6bd50dd6-4617-437e-afe1-1df62faad3a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a59e8b2e-748e-4c96-8eba-489a0364c92c",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5160dfb-87f8-4bd8-a3a3-563bff878c8f",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "e98809ba-0ed6-4f3d-a70c-d00d4418f26e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48e5b80f-ddff-43a7-a829-849e55481316",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "811465bd-2094-415d-b341-ab58a92165a0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "715fdcd1-58a2-4d7d-a065-c7e9264474af",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9eb2c4a4-8c34-45cb-958e-619b9f21581d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c45de537-b85a-44b0-8d86-85db5a3dadab",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0eff553a-c123-4c42-8bbd-96cfcac0e1cc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7311ff62-f08d-4cad-aa6c-d98707ff0bd8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "fc9399ae-fec1-4349-a88f-26354f83abca"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "afcd46f8-6064-4a74-a4a8-894e09a9efae",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3cd84a44-d500-4b9a-95cb-0cafa9ffb007"
            }
          }
        ]
      },
      {
        "id": "5f70c8e8-cebd-4f06-9256-1b4576f5fb27",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "8d890bbe-fabf-4a6a-8b83-99521f538c1d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1a633dbb-b053-4943-84fc-0b0339cbec76",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "dc293515-3c59-4005-9224-7155147201a8",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c74d794b-84e3-4891-ab55-318b8f5d3fb9",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "7b058d79-a253-4442-ab51-6ee97df32f84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbccbab0-f5e8-4eeb-a615-2e3a0eb5e736",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "950d558e-2a7d-4f94-8b4a-76c7eb15dcf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b700d08-ff92-4ad2-85db-efdc1a7e18fa",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd06fbec-bfe3-401f-b12c-f586b6308067",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "9e7db5a7-9ac1-44cc-bd45-18e2c0ec5ae4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eecd1734-1b19-4268-ac01-843ab0786a3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9cb729e7-4c1b-4e40-a2b9-cccb307378c2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3ebcc118-02ad-482f-befd-b19c12dc1ae7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a6383cda-957f-41bf-b6e7-2851e32f0f4c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "396e3699-c2d9-4935-aff1-88240e982bfe",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "84966da9-824a-44d4-8267-3feea9fce93d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "acc0e9e5-cac1-4765-abef-32b05c48215f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "a73ff6d9-dfa8-41d9-8ae1-33445e449d91"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9436bcd7-196e-4f62-ad0f-9a59d8a49fa3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5431c895-efa3-48c3-bb55-3c753a278f5b"
            }
          }
        ]
      },
      {
        "id": "54b323ad-a843-4757-ab2b-67a6e65f33e7",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "b5f18992-8d4d-445b-9c31-36a21241eae3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "df451c9a-f155-4760-8c67-778a0be00f3f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c2bd09dc-3145-437a-a5f9-028f06e69b77",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30a9da32-8d92-4d2e-8299-ed885512afb1",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "83a9b38c-7fbd-4ff4-bcd0-aa25a17ba54b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dec5d785-f736-4345-b309-c233df09485c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "511254e3-3c6a-492e-abdf-1abe23c65c38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e3d358f-c6f5-4b12-88eb-d418b70bfaa9",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24a13251-6a9c-4f2f-af2a-d82e9f0cd9c4",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "e4bbf13b-d669-4233-8cbb-ec4fce8ceb9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44c4d788-e992-4020-a7e1-b2e224e58148",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2cd447af-58b6-42e8-99c8-ce48bb574af0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a1eff27c-d7bb-403b-8591-be68c864abbe",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7a7145f3-adea-4913-b117-c46d2125b70c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "44533b78-d184-42d6-a862-9b59e419d614",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "15565e4d-32f4-499b-bbfd-589a8c44c739"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8ea05b00-821b-49cc-a4bc-859a9c95945b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "1b22b55e-8523-4df6-b1f8-09a6dd043ba4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a0522524-4174-4f51-a0c6-21bda6b92337",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4dd2d3bb-f311-46bb-83e9-ca69173ab2d4"
            }
          }
        ]
      },
      {
        "id": "ba0921ff-f60b-4480-abf1-d9fefe4967cf",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bd1cc7f2-0fa1-4d3b-b209-dfece338c5c5",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "12fef741-2499-4ac8-a402-a66483084286",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "b0b52c6c-b77a-4e66-a05d-226d038cd9c3",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3916f317-069d-4c92-814d-6854ad43e127",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "103ff939-09d1-4de6-a2ae-88f4bd0aca82",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1901,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 259,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 511,
        "pending": 0,
        "failed": 22
      },
      "testScripts": {
        "total": 955,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 946,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 698.6718146718148,
      "responseMin": 8,
      "responseMax": 6029,
      "responseSd": 695.5539752232235,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1676767320069,
      "completed": 1676767516937
    },
    "executions": [
      {
        "id": "6f5c171d-56e5-4e95-bd25-91051058f6e0",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "888fa3f5-63ac-4163-b9de-b8eab1fd84c6",
          "httpRequestId": "d01f432e-e1c3-439e-9009-647d795edd67"
        },
        "item": {
          "id": "6f5c171d-56e5-4e95-bd25-91051058f6e0",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "eb0b07e5-4484-4490-8040-872ed47355f7",
          "status": "OK",
          "code": 200,
          "responseTime": 80,
          "responseSize": 0
        }
      },
      {
        "id": "d90879c0-a592-4bae-bb7c-c672b8a871bb",
        "cursor": {
          "ref": "01360f0c-169e-4a9a-816d-e03a14c98157",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "7d1ef618-474d-4a6f-b51c-618420e4c645"
        },
        "item": {
          "id": "d90879c0-a592-4bae-bb7c-c672b8a871bb",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "eb2d3c37-e5f9-4f96-be39-8e08ca33c00e",
          "status": "OK",
          "code": 200,
          "responseTime": 8,
          "responseSize": 0
        }
      },
      {
        "id": "2ed72032-f5d2-4232-9ecb-b0cf5888f9e3",
        "cursor": {
          "ref": "f4eff72c-4178-4aa5-819a-0063357922fe",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "fff81381-84cd-4ceb-b4e6-d3d4bfd69297"
        },
        "item": {
          "id": "2ed72032-f5d2-4232-9ecb-b0cf5888f9e3",
          "name": "did_json"
        },
        "response": {
          "id": "246a96c1-c09c-4abe-887e-5ef1cdb924f0",
          "status": "OK",
          "code": 200,
          "responseTime": 1417,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ade301d8-67df-4739-845c-53a1fc1cbccc",
        "cursor": {
          "ref": "8f58e6a0-2139-446a-8b52-b75bee32deeb",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "1c305a9a-db89-4339-93f0-4c2ef304c93b"
        },
        "item": {
          "id": "ade301d8-67df-4739-845c-53a1fc1cbccc",
          "name": "did:invalid"
        },
        "response": {
          "id": "00ff1221-86a2-4678-973b-71aee218cc94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1042,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ade301d8-67df-4739-845c-53a1fc1cbccc",
        "cursor": {
          "ref": "8f58e6a0-2139-446a-8b52-b75bee32deeb",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "1c305a9a-db89-4339-93f0-4c2ef304c93b"
        },
        "item": {
          "id": "ade301d8-67df-4739-845c-53a1fc1cbccc",
          "name": "did:invalid"
        },
        "response": {
          "id": "00ff1221-86a2-4678-973b-71aee218cc94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1042,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e0ac133-a798-46e3-a545-66800e47fb25",
        "cursor": {
          "ref": "7835ac96-a139-49d9-bd7f-783c411f8ebf",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "63abea56-568b-42ec-ba36-c7a031dc8b78"
        },
        "item": {
          "id": "8e0ac133-a798-46e3-a545-66800e47fb25",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "5dddbffa-e8c6-43f8-aebf-cfc06a210a3f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1124,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b83ab79e-228f-4d10-a4a5-639ae7082d63",
        "cursor": {
          "ref": "301b53ab-c3dd-414c-a18d-fbdbdd116878",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "26451115-52e8-42d1-96a6-7a82efca1ce3"
        },
        "item": {
          "id": "b83ab79e-228f-4d10-a4a5-639ae7082d63",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "eb73e3c0-9b18-4b6e-8553-af31934fc40d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 589,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f84b7aa8-14e7-4ca1-a596-4613e06c299d",
        "cursor": {
          "ref": "2b589d93-19b5-4f34-b1ab-07a36fb97e22",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "0d350a59-a15a-422b-b6a0-d4444c04abbd"
        },
        "item": {
          "id": "f84b7aa8-14e7-4ca1-a596-4613e06c299d",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "800c828f-91b0-4a71-b868-4e4008883f74",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 72,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "552d674e-3b0e-45d5-868f-b5b52369b115",
        "cursor": {
          "ref": "5e2f53db-9607-4349-b35c-89c587157f9a",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "fdda8e10-94a0-4bfe-9fa9-cfe48623cf1c"
        },
        "item": {
          "id": "552d674e-3b0e-45d5-868f-b5b52369b115",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "fc5baa5d-93bb-4c9e-b77c-f9ca966ca312",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 903,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "552d674e-3b0e-45d5-868f-b5b52369b115",
        "cursor": {
          "ref": "5e2f53db-9607-4349-b35c-89c587157f9a",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "fdda8e10-94a0-4bfe-9fa9-cfe48623cf1c"
        },
        "item": {
          "id": "552d674e-3b0e-45d5-868f-b5b52369b115",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "fc5baa5d-93bb-4c9e-b77c-f9ca966ca312",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 903,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a10415a5-3850-48a6-abd2-50b6e9a7bf24",
        "cursor": {
          "ref": "74714c16-a5bd-49a5-9b7b-d0bbfec35829",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "fab43434-7492-4d3a-84b5-5868c5f57e9f"
        },
        "item": {
          "id": "a10415a5-3850-48a6-abd2-50b6e9a7bf24",
          "name": "identifiers"
        },
        "response": {
          "id": "bc531cf5-c734-454a-b37b-cc2839812bb2",
          "status": "OK",
          "code": 200,
          "responseTime": 2584,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2c3d4f3-d745-4434-91bc-29d46f636fe8",
        "cursor": {
          "ref": "a73b277e-e35d-496a-b35e-5016958f4bf1",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "29c9b9ac-554e-466c-b62c-23852984192f"
        },
        "item": {
          "id": "e2c3d4f3-d745-4434-91bc-29d46f636fe8",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "62978afe-2db8-47d6-854d-7d7026d8aa95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1700,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2c3d4f3-d745-4434-91bc-29d46f636fe8",
        "cursor": {
          "ref": "a73b277e-e35d-496a-b35e-5016958f4bf1",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "29c9b9ac-554e-466c-b62c-23852984192f"
        },
        "item": {
          "id": "e2c3d4f3-d745-4434-91bc-29d46f636fe8",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "62978afe-2db8-47d6-854d-7d7026d8aa95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1700,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeccdedf-a372-4079-8fe5-59a5079bf7af",
        "cursor": {
          "ref": "09dc056d-0a10-4434-bd4b-3962b24fdd77",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "45ec70b5-e592-4893-8980-6129b2028a2f"
        },
        "item": {
          "id": "aeccdedf-a372-4079-8fe5-59a5079bf7af",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "d16e8b15-968c-437b-81c6-54b9f5630454",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 982,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd7937a9-cd0e-4643-8bc2-f1e76ce38560",
        "cursor": {
          "ref": "ff5aa8d4-2601-4a21-971e-0f9eeaaeb782",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "2f700280-a5f9-410c-adb9-4b46e7a35469"
        },
        "item": {
          "id": "cd7937a9-cd0e-4643-8bc2-f1e76ce38560",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "52970638-8666-49d9-95ed-b6879684927f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1329,
          "responseSize": 1117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "816decc8-86dc-41e1-9885-638fbc4af6a2",
        "cursor": {
          "ref": "61089187-29a9-4419-9dd8-736d853a6fd6",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "b1eedf96-86db-4214-92da-254123de101a"
        },
        "item": {
          "id": "816decc8-86dc-41e1-9885-638fbc4af6a2",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "fa7a0be0-c8cf-4d1f-9ef7-a487b391333d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1002,
          "responseSize": 1114
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18052959-1d85-4ad8-bd7a-b57d7067977c",
        "cursor": {
          "ref": "d30c79dc-1cb3-4153-9277-133a40f323c1",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "e8ae3413-82a5-419b-bc9a-10b8b41b65d4"
        },
        "item": {
          "id": "18052959-1d85-4ad8-bd7a-b57d7067977c",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "0de544d1-b9b7-42a2-b8c3-654419d27001",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1111,
          "responseSize": 1116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00a80706-f52f-40d0-84c3-4afb7614ba22",
        "cursor": {
          "ref": "8b23fa48-0f94-4372-8b84-063661c09e50",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "bde39569-8794-4f98-ad72-1407d7a5f5f0"
        },
        "item": {
          "id": "00a80706-f52f-40d0-84c3-4afb7614ba22",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "519fd68e-e912-4602-974a-26e9ecfb4ebb",
          "status": "Created",
          "code": 201,
          "responseTime": 3295,
          "responseSize": 723
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:15)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:15)"
            }
          }
        ]
      },
      {
        "id": "bbda0ecb-21bf-40cb-94de-3d3023f6ab04",
        "cursor": {
          "ref": "ae6d1581-5b5b-4647-86a4-a1fb1f1ffa6c",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "239b2f94-e503-4e21-bab7-3e58cb490821"
        },
        "item": {
          "id": "bbda0ecb-21bf-40cb-94de-3d3023f6ab04",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "c85f88b3-9939-4491-92e0-950b57de35b6",
          "status": "Created",
          "code": 201,
          "responseTime": 2694,
          "responseSize": 712
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:16)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:16)"
            }
          }
        ]
      },
      {
        "id": "d3f6947a-c1d9-446a-bdd9-111e779cf124",
        "cursor": {
          "ref": "a7249c25-81fd-4a6d-bcd4-519cfd928d46",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "81583735-c427-4a7e-b103-14397a91ef8d"
        },
        "item": {
          "id": "d3f6947a-c1d9-446a-bdd9-111e779cf124",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "5559072e-9caa-4712-a7f1-40f0e4185301",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 598,
          "responseSize": 1574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b96bf76-6fd1-4f75-a371-dee64deb4bd7",
        "cursor": {
          "ref": "150e1099-d683-4f0e-8122-b22b98f7d9c2",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "26f56aff-e51a-413e-a51a-877c32553e89"
        },
        "item": {
          "id": "6b96bf76-6fd1-4f75-a371-dee64deb4bd7",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "10e80297-e9db-48a9-9dcc-f7cb6b2da2e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 577,
          "responseSize": 1543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9c0d2ec-15d5-428c-aeb1-a3d03da6730d",
        "cursor": {
          "ref": "84f15255-1a77-48fc-8b81-69e33db8d957",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "5feab7ec-4c76-48cc-accc-aa3b27e6e5d8"
        },
        "item": {
          "id": "f9c0d2ec-15d5-428c-aeb1-a3d03da6730d",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "67442556-0e7a-45d6-aa80-29e65c2f0eb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 613,
          "responseSize": 1540
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "703a3427-23c8-49d2-9025-5f2e352beabd",
        "cursor": {
          "ref": "32592dd8-8ce9-47ba-8583-9c49af334e5d",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "6c8b9ce2-d773-41aa-aba0-1603333b9c67"
        },
        "item": {
          "id": "703a3427-23c8-49d2-9025-5f2e352beabd",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "dc257661-c85c-4cb9-927b-3ae33fd2f166",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 611,
          "responseSize": 1542
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b050bb93-0074-43d2-a7f2-91d6b068cf33",
        "cursor": {
          "ref": "8d7aa987-4aeb-4b11-ac14-4bc17f50b4b0",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "951a2571-5d3f-4a9b-a648-c09c3fe8d6f8"
        },
        "item": {
          "id": "b050bb93-0074-43d2-a7f2-91d6b068cf33",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "3f31ad2e-5f5f-4429-b04e-6403743331a3",
          "status": "Created",
          "code": 201,
          "responseTime": 2633,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:21)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:21)"
            }
          }
        ]
      },
      {
        "id": "2fbbe63f-383b-44e6-b746-9db0e50fa0d7",
        "cursor": {
          "ref": "3f6c7906-1390-4a1f-aabd-5ac2af93d750",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "9d69cd2e-9da3-46e6-ac39-a779f4c8849c"
        },
        "item": {
          "id": "2fbbe63f-383b-44e6-b746-9db0e50fa0d7",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "639e8ad9-fc9a-4f8e-8f2d-4d4b69b11f32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 654,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b675428-2cad-42b7-9e41-99d15df364b1",
        "cursor": {
          "ref": "feebd326-5d6c-4599-9dbb-d1e2b9a166b3",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "bade59be-e964-40c8-bbad-1bed115cae9d"
        },
        "item": {
          "id": "6b675428-2cad-42b7-9e41-99d15df364b1",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "3b607eb3-1869-4cbb-8378-10129a6a7c76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e022134-3a24-4197-a855-6dff8a9ecb74",
        "cursor": {
          "ref": "f9792ae5-5ff9-4a08-8e09-5fcaa9dae514",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "fd5b3335-744a-4db4-a075-8bd4eb3c6875"
        },
        "item": {
          "id": "8e022134-3a24-4197-a855-6dff8a9ecb74",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "9108c79c-098d-421c-a187-ebc014d82464",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cc8dfa3-531c-4bfc-9d85-2d8139cccb71",
        "cursor": {
          "ref": "ed5fe1fe-1f6b-4ab9-ae4e-1219a1fb2b0e",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "96ca0b62-d570-49c5-8fb6-32be0738722e"
        },
        "item": {
          "id": "7cc8dfa3-531c-4bfc-9d85-2d8139cccb71",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "96e3286f-abd6-4040-8ea1-d6e850ac9862",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbc32405-76f8-4fc5-a3c3-4ce60fbcfdf1",
        "cursor": {
          "ref": "2b47016e-e80c-4c25-9796-abc5f4dc9f88",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "8681a5a0-3015-4e8d-9502-baf5e0ada267"
        },
        "item": {
          "id": "cbc32405-76f8-4fc5-a3c3-4ce60fbcfdf1",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "e5ed7f64-7552-4141-a46f-43c33034a912",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 582,
          "responseSize": 666
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8386adaa-c705-4fa5-bffb-2d5f4cfa168d",
        "cursor": {
          "ref": "9ab071f6-76fe-451b-ab19-3d716c8226c7",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "9bd81b63-60c5-461e-bb2e-6f8b23b5f960"
        },
        "item": {
          "id": "8386adaa-c705-4fa5-bffb-2d5f4cfa168d",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "7def32d8-3309-4177-b9b4-e57361f26ac8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 647
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "452da266-c51b-42a5-afe5-4cf083a8643c",
        "cursor": {
          "ref": "0147fbc0-e108-4d04-b324-064fec58ef60",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "14e0285d-3999-48f5-8ebd-dfc9d3be0fa4"
        },
        "item": {
          "id": "452da266-c51b-42a5-afe5-4cf083a8643c",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "07e99fc7-37c1-44da-a947-bb6cb0c652d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0122f57-7f11-4716-988f-602fa1105796",
        "cursor": {
          "ref": "1919cf3f-fb42-4667-b734-7ef07ab7d1a1",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "33ae03e5-c867-4e76-a193-d78366283c6b"
        },
        "item": {
          "id": "b0122f57-7f11-4716-988f-602fa1105796",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "bce522ee-ed6e-465e-a68d-910b31cf5ad3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 628,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c7c8e7f-cda2-4242-b449-7b79e78a6f55",
        "cursor": {
          "ref": "6f3ffcfb-da8a-4269-bbab-1c0e683495e8",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "499d84da-2fec-4ece-9882-4d992b6d7db2"
        },
        "item": {
          "id": "3c7c8e7f-cda2-4242-b449-7b79e78a6f55",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "86e2519a-dc5b-4a4a-aeb3-96517761117c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 628,
          "responseSize": 641
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bb64d42-a5e2-487d-9e36-90b684615730",
        "cursor": {
          "ref": "4f80d145-0a58-4cde-9337-0608d84d3d05",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "705e0f43-9115-4f3b-81f9-42cc12bdcfe7"
        },
        "item": {
          "id": "3bb64d42-a5e2-487d-9e36-90b684615730",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "302dedb0-ba0c-4b10-adf8-d6ef5d85c1ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e3cc039-e1a2-4a01-b107-55aa4bd6a4e4",
        "cursor": {
          "ref": "bfd4d7cb-bcbb-440f-bb78-7da29244b4d9",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "af3268a1-8cc8-48c6-8c4e-1c42be02327a"
        },
        "item": {
          "id": "3e3cc039-e1a2-4a01-b107-55aa4bd6a4e4",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "5cf0644f-be3a-4c86-9d0e-403e013a6b59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eca70833-762a-4f53-8b8d-6d2a6a66fe1e",
        "cursor": {
          "ref": "23bb4205-07f2-4713-a940-391519b7f634",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "9ef50a1a-d3a2-447a-aa8e-3ad5d0150297"
        },
        "item": {
          "id": "eca70833-762a-4f53-8b8d-6d2a6a66fe1e",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "e0a5f0eb-a89c-4395-891e-aee93347d9dd",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 1891,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:33)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:33)"
            }
          }
        ]
      },
      {
        "id": "231885b0-f6c5-4cf4-b6e7-2aad73ec7859",
        "cursor": {
          "ref": "a85cfa2f-0458-457b-aa42-2582417213bf",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "3f6c9114-8d64-4078-87c0-68da80843850"
        },
        "item": {
          "id": "231885b0-f6c5-4cf4-b6e7-2aad73ec7859",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "71545d1c-e790-48b9-8464-1c254138a9e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f79e7ca-c57c-40cc-af8a-f4df988400b2",
        "cursor": {
          "ref": "70e163bf-1867-45a6-9508-87a1a5da7665",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "fa377204-9647-4759-8969-372bc748c980"
        },
        "item": {
          "id": "3f79e7ca-c57c-40cc-af8a-f4df988400b2",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "aca905a3-375d-407c-904a-e48618c82761",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 677
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc489a45-3bb5-46f5-b12d-5127d62a46f7",
        "cursor": {
          "ref": "50ff070f-ca10-4719-9905-d77b50143959",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "b2ef4375-92f0-4f75-a8e9-5f6eca052fe6"
        },
        "item": {
          "id": "cc489a45-3bb5-46f5-b12d-5127d62a46f7",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "095a6ebb-810c-428f-8039-0e0e59fa0c86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 674
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eea43a66-d345-4868-a222-c39ba24708b3",
        "cursor": {
          "ref": "b0a03ac6-3e6a-4472-a1bc-b3909b15220c",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "2585299e-5c09-42eb-80e6-ed89f10bf5e2"
        },
        "item": {
          "id": "eea43a66-d345-4868-a222-c39ba24708b3",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "16633bc8-5095-4097-a271-80d0ab1b16a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 676
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ee88a09-c1a7-4086-9c18-a64ac97c45cc",
        "cursor": {
          "ref": "d59cb522-a915-4c1b-b630-63035d86472f",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "95c6ca36-142d-40be-97fe-319ec3e5442d"
        },
        "item": {
          "id": "3ee88a09-c1a7-4086-9c18-a64ac97c45cc",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "79349cb6-0990-436f-8b70-ee65075632a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 674
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ed5cb1d-6a62-4672-96e5-cee5565cf749",
        "cursor": {
          "ref": "949bd879-a510-4ddd-8020-726d36fe3725",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "116b2646-6991-4152-b6c8-4c262e0f8a45"
        },
        "item": {
          "id": "7ed5cb1d-6a62-4672-96e5-cee5565cf749",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "d920beaa-ed19-4075-a4a2-ca161f1f1ac3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 591,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91220978-873a-4098-b725-be9de33980c0",
        "cursor": {
          "ref": "d99bf5d6-0f5d-4eaa-b7d5-107e46fe5d86",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "04a93ac0-5527-47ef-8246-5581d6bb07a2"
        },
        "item": {
          "id": "91220978-873a-4098-b725-be9de33980c0",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "258bb7b8-87f0-477d-995c-c46a6ac7b208",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 1099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a28fdad-7c66-42a0-893c-e2e5e2af2796",
        "cursor": {
          "ref": "f2460104-4d2a-4df3-925b-221c59d49a10",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "341c3c11-2bbf-4435-97b3-a9af678d51fa"
        },
        "item": {
          "id": "3a28fdad-7c66-42a0-893c-e2e5e2af2796",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "7db3be12-e70e-4202-b37f-5395aee981f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 579,
          "responseSize": 1028
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4b5ac95-15d2-4d62-991f-8b96e8ab8dd0",
        "cursor": {
          "ref": "9ec87d73-c866-45dc-970f-d4f2d572e36b",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "2dbf6d83-e698-43fd-99dc-cffaa2634f89"
        },
        "item": {
          "id": "a4b5ac95-15d2-4d62-991f-8b96e8ab8dd0",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "65e39f50-956c-4c8e-a7aa-058c17c54b04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 690,
          "responseSize": 1025
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3f2503b-7a28-49df-ab49-6eff804f0767",
        "cursor": {
          "ref": "81de5c6e-4154-47da-9d10-173819fb4256",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "3b416d6b-9a47-4629-a416-ea18879b0ed9"
        },
        "item": {
          "id": "f3f2503b-7a28-49df-ab49-6eff804f0767",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "952d0e53-fa35-4eed-8cc1-3edb904aafea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 1027
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39965aa1-a9e8-451c-9362-9ff797d4edb1",
        "cursor": {
          "ref": "bf0795c6-8691-486f-b7ae-db9c10f829d5",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "00cef01e-0b65-4471-b495-d71e21e48100"
        },
        "item": {
          "id": "39965aa1-a9e8-451c-9362-9ff797d4edb1",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "b6c14c1c-459c-4dab-84d8-e38ef9e572b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 579,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "449e0471-3838-4e64-a112-9da6826f9afe",
        "cursor": {
          "ref": "4cc20cbc-1f55-4893-9b99-4f33542b21d1",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "d8d29655-464a-46ae-aa0c-e610689f8538"
        },
        "item": {
          "id": "449e0471-3838-4e64-a112-9da6826f9afe",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "d408fec7-b240-428d-9993-41ac12dd7f6e",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 665,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3004c85-467c-43ad-9178-518d87422c03",
        "cursor": {
          "ref": "41097e56-47e7-44de-a690-54c098988a25",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "a06bd398-dc0a-448a-8896-0c98c5518c3e"
        },
        "item": {
          "id": "d3004c85-467c-43ad-9178-518d87422c03",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "e35f46d2-db02-4f72-814a-3c3970518032",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 580,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:46)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:46)"
            }
          }
        ]
      },
      {
        "id": "41d80acb-6800-4dc0-81a5-975fec9051f3",
        "cursor": {
          "ref": "1c0708d9-ecf8-4e26-a7b2-de12e1c96070",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "5daeaf59-12a0-4bdf-aeb0-f8dfab0dd69b"
        },
        "item": {
          "id": "41d80acb-6800-4dc0-81a5-975fec9051f3",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "afc7ce6d-fa11-4071-bb19-0f300c9c03d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 1438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53f19d34-322f-4b71-b1b0-9a619992823a",
        "cursor": {
          "ref": "6c98d347-2545-47de-a33f-ef371ad7b401",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "51c40d77-e39c-4c40-bad9-0ded90a1717f"
        },
        "item": {
          "id": "53f19d34-322f-4b71-b1b0-9a619992823a",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "f1ae0aa6-6200-43f1-a6d6-dcfb67489e38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 1367
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31a4b821-a494-4e41-8fb1-2675bc0dd116",
        "cursor": {
          "ref": "c775593e-eb97-4104-9753-579a5cef6227",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "97603c08-914e-4c4c-8ec9-52db54967138"
        },
        "item": {
          "id": "31a4b821-a494-4e41-8fb1-2675bc0dd116",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "b582d2a9-c822-4412-b657-c9b0c8f56287",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ca8dcbe-6713-474e-98bc-fdc578ddb83e",
        "cursor": {
          "ref": "9a0512a5-5c76-480d-8217-8d411f92d8c7",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "708a2b69-e0b5-4950-a058-ebf356970297"
        },
        "item": {
          "id": "7ca8dcbe-6713-474e-98bc-fdc578ddb83e",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "ae8d61f8-a7b0-4d02-8061-febe205ad248",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 1366
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3344e1fa-d791-41e0-b7c7-adcce69c8e3f",
        "cursor": {
          "ref": "1719bbf6-9374-4e89-be1b-ba77689cb3bb",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "8f6fc555-1f91-4cc1-a40d-023b8405c124"
        },
        "item": {
          "id": "3344e1fa-d791-41e0-b7c7-adcce69c8e3f",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "6d7ff1c7-a8fe-4b7c-95dc-1cbfee96b6b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 1769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc7bafa4-6e6e-4afe-b085-a9003cac9589",
        "cursor": {
          "ref": "31a25469-279a-4d52-b794-9853210d9365",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "279c98c2-5dee-4692-bff5-240b9e419ef7"
        },
        "item": {
          "id": "fc7bafa4-6e6e-4afe-b085-a9003cac9589",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "f73d5d57-f021-4e65-816f-a7e3cf4f0b31",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 653,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ecdc983-8e4b-4e69-858a-007836b33591",
        "cursor": {
          "ref": "b01f6fdb-5b71-42b6-856c-b5327aa71790",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "ccce3abe-3ea2-4908-8fb7-f357736244d9"
        },
        "item": {
          "id": "5ecdc983-8e4b-4e69-858a-007836b33591",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "85259187-2b6c-4858-aa62-1664bdd91bd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 657
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d22afadb-2eda-4aa4-bdd7-13596922a343",
        "cursor": {
          "ref": "895c1414-a7bd-4f54-b1b6-3c08adedf512",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "6e6ae8fc-fbeb-4027-b357-1ac5832f08ef"
        },
        "item": {
          "id": "d22afadb-2eda-4aa4-bdd7-13596922a343",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "cd551e35-97a8-49ce-ad25-e208b059437a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 681
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f451bfc9-9b7a-44ad-917a-e6a5563adb58",
        "cursor": {
          "ref": "a7e08c41-f54d-483c-bd63-dc3e6de916ac",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "6150c315-bca7-42f3-a74e-ef59efdfb2ea"
        },
        "item": {
          "id": "f451bfc9-9b7a-44ad-917a-e6a5563adb58",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "8df0a7ac-a97e-406d-9cfe-027bcd8474f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 662
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f144a365-7c1e-423f-9772-81136b9f9f6d",
        "cursor": {
          "ref": "2974a19e-cda3-4c52-b881-d2cee9deaca5",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "c9214b5c-e71f-460b-b47e-ace122b0fef7"
        },
        "item": {
          "id": "f144a365-7c1e-423f-9772-81136b9f9f6d",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "860521ee-79c9-4d05-a4c1-e9129bd3c53a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 585,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b46f94a-5e6e-478c-894d-9e4057aa2034",
        "cursor": {
          "ref": "8e0d7c08-80c5-4055-aebb-c460c1a7106c",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "6bcf1871-d75f-4d61-bbe2-d729184567eb"
        },
        "item": {
          "id": "9b46f94a-5e6e-478c-894d-9e4057aa2034",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "1c87d155-7894-4200-91f3-5893765c3e65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dba16b26-7b3f-45ec-ba50-351be8aa0e55",
        "cursor": {
          "ref": "52800ba5-945b-421e-a606-3cc54a0e6ce5",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "c6294e59-b6e5-46fc-8da6-1e980be8a888"
        },
        "item": {
          "id": "dba16b26-7b3f-45ec-ba50-351be8aa0e55",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "5338abef-1151-42f3-a6ef-2aae568b822e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1928c4ab-cd07-4ac8-a677-22d1dae81c43",
        "cursor": {
          "ref": "81e0ceec-fe38-49a8-8cb6-29cca3a39be4",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "aed1a91f-03cc-4b69-805e-b62c5d3531e4"
        },
        "item": {
          "id": "1928c4ab-cd07-4ac8-a677-22d1dae81c43",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "38755857-6e8b-498d-b149-71b157189c98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 619,
          "responseSize": 712
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9db0b890-bfbc-4b38-ba85-5a36d0858e38",
        "cursor": {
          "ref": "f903ef62-0f93-4f9e-90b2-2cfaa6b5539d",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "5dbfb7da-a493-4acb-a35a-dbfafcb5a8d1"
        },
        "item": {
          "id": "9db0b890-bfbc-4b38-ba85-5a36d0858e38",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "2a3aa0c1-4da5-40c1-ab0e-4c03a43502d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff99e189-fe79-4839-8745-d1c1af60ca2e",
        "cursor": {
          "ref": "f9e9035a-564a-459d-ad71-53c6aed54b42",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "7bc66268-7aac-4970-8a28-f1765a4ac4aa"
        },
        "item": {
          "id": "ff99e189-fe79-4839-8745-d1c1af60ca2e",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "deeec2fb-e099-4b1f-b55b-20d9e02042fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 1153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55b2680b-c94e-4125-b20e-f23f6aceefdd",
        "cursor": {
          "ref": "03d0ddbf-91c7-48cc-b820-229c97d56396",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "ea2157d2-b384-47ff-815f-032fa383d4df"
        },
        "item": {
          "id": "55b2680b-c94e-4125-b20e-f23f6aceefdd",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "e04a54fe-01fa-4323-97a3-bdef6faca096",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdd4cc90-56c1-495e-b87f-20ecd72d9df7",
        "cursor": {
          "ref": "2eaf1b38-ef99-4dbb-9846-8deefb8eb855",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "8fb0408f-4dbc-49ed-bd14-7dc72a222cef"
        },
        "item": {
          "id": "fdd4cc90-56c1-495e-b87f-20ecd72d9df7",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "bfdfd13f-c511-4d70-b9df-81a2499f81e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 959
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d731dcd-df21-4db7-993e-d225afbf76e5",
        "cursor": {
          "ref": "d90ae10b-991c-4679-a4ac-ff76100949ec",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "566740e9-769f-47dc-894d-59bae07b4919"
        },
        "item": {
          "id": "0d731dcd-df21-4db7-993e-d225afbf76e5",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "9b64465b-9425-47f2-bdc5-cf7d5d77746c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 585,
          "responseSize": 961
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc0fe010-8968-46d4-bcab-a7337c33f874",
        "cursor": {
          "ref": "be8219da-d4c8-4ca2-9aa8-2e27d6bd8c63",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "96f53f98-625d-42fa-af3e-fdefbf0d334f"
        },
        "item": {
          "id": "bc0fe010-8968-46d4-bcab-a7337c33f874",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "ea77197e-5eb5-4ea2-bfd1-b91d9358795f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 974
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be00ad15-1002-4810-a920-304d6a333783",
        "cursor": {
          "ref": "c846eb8c-0be9-4a1e-aecb-cd996758d575",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "c7906909-382e-48fc-a3d6-b1b5814d6a8b"
        },
        "item": {
          "id": "be00ad15-1002-4810-a920-304d6a333783",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "40855de5-a39f-42dd-9f89-12c6a631906f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 1468
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cb6838a-5820-4422-b974-d65ecfc173ca",
        "cursor": {
          "ref": "55cf121a-69f8-4346-96c2-67bcbd3244c0",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "7ff919f9-2237-4f45-a10e-36c64629f490"
        },
        "item": {
          "id": "9cb6838a-5820-4422-b974-d65ecfc173ca",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "14590f92-48d2-46cc-88c6-b35e298478c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 597,
          "responseSize": 1454
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64b25389-0146-4020-a332-c4ed04594931",
        "cursor": {
          "ref": "507ab54a-f2f9-4a6e-8d9d-a64b9f8f7f98",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "814f0cb7-157e-4ae4-8243-e66070320a9d"
        },
        "item": {
          "id": "64b25389-0146-4020-a332-c4ed04594931",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "443c9afe-df4c-4458-a19d-d78364481d5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 1451
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5d04765-e793-441d-9d38-85e12bf205e3",
        "cursor": {
          "ref": "1bac7361-23ec-46b9-8e42-cef4619fa247",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "9fcf607e-aa92-46c1-b941-56954c859d23"
        },
        "item": {
          "id": "a5d04765-e793-441d-9d38-85e12bf205e3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "e599f384-5a55-474b-811c-893188f5d723",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 1453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3063f36a-ec0c-4c83-87fe-642b207636b5",
        "cursor": {
          "ref": "b03df7b0-0fbb-40af-8e26-7314c9dbbdcd",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "7a31323a-5a94-4cd0-b24f-014f0d87124d"
        },
        "item": {
          "id": "3063f36a-ec0c-4c83-87fe-642b207636b5",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "04066fe4-d403-4bbb-8807-0c1808c4802b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 591,
          "responseSize": 1451
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a48dfff-155c-4827-9cd0-e7d9bd064ecd",
        "cursor": {
          "ref": "a52e8339-5d19-48af-beaf-d6fab6c2f1c7",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "9702e822-97c2-4a87-ba16-6a0a1de0db41"
        },
        "item": {
          "id": "9a48dfff-155c-4827-9cd0-e7d9bd064ecd",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "da5bdf64-b778-4aa5-8e4f-7f35441f00a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8a32d16-47bb-4082-a97d-e80a6f5690ce",
        "cursor": {
          "ref": "ae3156a9-fcb8-4232-a5b2-03b178ab0768",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "acbf2e60-e658-4666-92a4-59ccf958616f"
        },
        "item": {
          "id": "f8a32d16-47bb-4082-a97d-e80a6f5690ce",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "1aadece5-7474-473a-81de-809ad9afd35a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b500365-0217-4852-916a-c483252e17dc",
        "cursor": {
          "ref": "06323799-fb5f-482b-a207-6e7ec6c06940",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "804d5002-1ef4-45d1-98e7-3db79fd1be5b"
        },
        "item": {
          "id": "6b500365-0217-4852-916a-c483252e17dc",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "dd015548-4c17-46cb-b899-ba6684468f9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 577,
          "responseSize": 613
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95f73de4-59ed-4040-ad35-3ae29609d048",
        "cursor": {
          "ref": "0b4db7fc-d09a-4004-b5be-f90573378e4d",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "55bb67c0-d92b-4251-bcd9-eb23d38449df"
        },
        "item": {
          "id": "95f73de4-59ed-4040-ad35-3ae29609d048",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "e68cf604-d169-466a-be1b-55fffdb998e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bae808a0-6c74-4b16-8c18-80f6d1759e04",
        "cursor": {
          "ref": "17998bef-ab11-4d89-a643-32c38d28fcde",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "e942ebd6-2d05-4e03-8596-429c5ba6fbcc"
        },
        "item": {
          "id": "bae808a0-6c74-4b16-8c18-80f6d1759e04",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "822a8d21-3d74-4452-bac6-0419529bbe0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1275,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e142d11-73eb-4f9a-aef1-b13973aecae4",
        "cursor": {
          "ref": "b9e10dbd-5557-46df-be15-6e92994be530",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "3c0a5a11-b6cc-42c8-95c0-2591ed724ee7"
        },
        "item": {
          "id": "7e142d11-73eb-4f9a-aef1-b13973aecae4",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "0ab4cb2e-782e-458a-8bd5-f64868ee99bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1525,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7210d211-60b5-47ed-8f5d-6b46d0251262",
        "cursor": {
          "ref": "5d17af6f-c1f4-4f38-8499-2af58d759d97",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "e149bc12-7439-4960-8702-1dd67dca418a"
        },
        "item": {
          "id": "7210d211-60b5-47ed-8f5d-6b46d0251262",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "9692c625-72fb-4c64-b302-2976c918cae8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1536,
          "responseSize": 647
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef7831d3-0262-4bde-93aa-60fedfff5ee4",
        "cursor": {
          "ref": "6017a801-02ff-4536-8288-aed18fa5c4be",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "6574f515-a9d1-4b92-9d32-4162a70a60ce"
        },
        "item": {
          "id": "ef7831d3-0262-4bde-93aa-60fedfff5ee4",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "dfdfe1ae-6fed-4ece-926a-799a57f3ce60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1170,
          "responseSize": 889
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e41ac718-d496-43fe-b7ee-21f83f6a505a",
        "cursor": {
          "ref": "9d09af1d-3d44-407c-b64d-90266326a13d",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "6a823564-0ad2-4788-a58a-1d4a1a5699ca"
        },
        "item": {
          "id": "e41ac718-d496-43fe-b7ee-21f83f6a505a",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "86f777ce-1eff-4650-b7bc-4e50d4aef2d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1167,
          "responseSize": 870
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21e0d376-c862-4eb2-9fb0-d0e879337ccf",
        "cursor": {
          "ref": "4d4d9170-5678-4278-8f26-44d8fe84a8de",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "cea0cfc4-f2bc-4858-bbdf-ae3b842e7319"
        },
        "item": {
          "id": "21e0d376-c862-4eb2-9fb0-d0e879337ccf",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "d4b00bc0-827e-418a-9f48-89ac958689d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 700,
          "responseSize": 867
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "710fcac5-6af8-44b2-8acb-74c9064e226d",
        "cursor": {
          "ref": "ef54d754-e1a6-49c9-9960-a3bb612930c7",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "555790f1-fc2b-40a4-a189-d4e83e85e0f5"
        },
        "item": {
          "id": "710fcac5-6af8-44b2-8acb-74c9064e226d",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "044a2d9c-ecce-4d23-a332-f0f00c8f5c4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 616,
          "responseSize": 869
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bacdd505-bf1d-445c-9434-9554405189d2",
        "cursor": {
          "ref": "dd8c9478-fb12-45e4-89d7-e4457d5267e7",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "c809667c-deba-40a1-9d30-a62f39140dce"
        },
        "item": {
          "id": "bacdd505-bf1d-445c-9434-9554405189d2",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "9eccadb8-d082-4ffb-bc54-d38a0e3da12b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 867
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7c7a417-b716-49f7-a8f3-7b4312204009",
        "cursor": {
          "ref": "a52697d9-eedc-44fa-bd10-4a73786e6c1b",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "d7ae811d-6915-4b3f-b113-bd604e3a2fbe"
        },
        "item": {
          "id": "b7c7a417-b716-49f7-a8f3-7b4312204009",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "62d6517e-fb6e-4890-bb76-6a20f03af3e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 738
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea63fb26-1385-4cc0-acd7-ae48f6c85c84",
        "cursor": {
          "ref": "9e86ae2f-0264-430c-8444-f2c258a571d0",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "18d415af-6374-4e2b-9d12-a47288b2889e"
        },
        "item": {
          "id": "ea63fb26-1385-4cc0-acd7-ae48f6c85c84",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "551da847-8ef6-4955-977d-95d024124376",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 647,
          "responseSize": 706
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b842c73c-0157-4ef9-bcad-31fccc75f6d3",
        "cursor": {
          "ref": "826d86d0-5371-417a-b816-ed9c48eaab02",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "df4b4cf7-38c0-48e0-99da-2a2dd3f17260"
        },
        "item": {
          "id": "b842c73c-0157-4ef9-bcad-31fccc75f6d3",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "5ea1fb5b-3c34-49d4-9736-998fe98600c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9821adc3-25fa-4288-9c12-0278c055afa7",
        "cursor": {
          "ref": "9b772c80-c88c-4664-b39d-d722b9dd3681",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "9b9573f1-be82-4082-a183-0f3967662b8d"
        },
        "item": {
          "id": "9821adc3-25fa-4288-9c12-0278c055afa7",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "5bd2da49-b457-44d9-8bb4-393a9678e817",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "064614f4-9a91-4551-b97b-d1b5fb209fe4",
        "cursor": {
          "ref": "9705827d-da61-43e9-9e2a-e43c95834b8a",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "4d0ed4da-378a-4f4e-a04d-10cbfe87accd"
        },
        "item": {
          "id": "064614f4-9a91-4551-b97b-d1b5fb209fe4",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "ff4a8cdc-f62f-4474-b3df-1982b5c0a01b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 585,
          "responseSize": 686
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66baf88f-772d-44db-a7d6-018f25088fea",
        "cursor": {
          "ref": "b5e00a38-ef63-44f7-be15-2ea7739e6e4a",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "cb6d2e16-e9fb-417a-b2bb-7d871a881c00"
        },
        "item": {
          "id": "66baf88f-772d-44db-a7d6-018f25088fea",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "9a5e9c76-1b3b-445e-97ee-5a7f2435eee7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4d636af-d03b-4652-ab18-de3b432e757b",
        "cursor": {
          "ref": "25187f24-addb-4bc3-a626-1ca12393bb5c",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "d0d33a6e-6efd-4d65-813c-c548a02c7cbc"
        },
        "item": {
          "id": "a4d636af-d03b-4652-ab18-de3b432e757b",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "06aed10e-8c2d-42d1-901b-c602d285f320",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 622,
          "responseSize": 737
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27ea17c8-2505-433a-a7b1-7539db02d7aa",
        "cursor": {
          "ref": "251f385d-d6fd-4c13-8e81-e25378bbb2fa",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "b33bc892-e676-47d3-9274-74c354dce460"
        },
        "item": {
          "id": "27ea17c8-2505-433a-a7b1-7539db02d7aa",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "34781e43-f514-4366-a938-bd02a009947a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 732
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b981e3cf-8f32-442a-8f89-2dc0c0bed1be",
        "cursor": {
          "ref": "4e5ac4be-4943-4633-8b08-070c797c14c1",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "87f316d5-1664-4eac-87d5-af5b330cf867"
        },
        "item": {
          "id": "b981e3cf-8f32-442a-8f89-2dc0c0bed1be",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "3f37749c-d7a2-4138-be42-2d38e3869e66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 709
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f08250c1-f2dd-4800-8ad9-a3672eb5b624",
        "cursor": {
          "ref": "6f07bbcf-ab92-4b0c-9849-4b53d2a77546",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "790a33e2-339e-4540-a165-76856f08c375"
        },
        "item": {
          "id": "f08250c1-f2dd-4800-8ad9-a3672eb5b624",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "120fcff4-5223-4ee4-a1f6-18f548943408",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 706
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d75a43d4-e7c0-4bb2-851e-2f72da9e8c16",
        "cursor": {
          "ref": "0da79094-2b1c-43a1-811f-0f5bbed0fa6b",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "73684a05-c4dc-4001-bf81-709eb8332afe"
        },
        "item": {
          "id": "d75a43d4-e7c0-4bb2-851e-2f72da9e8c16",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "416c157c-e390-47f1-a65d-27a33f76aebd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 708
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "887c022d-5313-4cee-8fe7-2100db56b8fc",
        "cursor": {
          "ref": "dec6fca7-319e-4a01-bfca-385184b1db57",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "3298b37b-4a4b-4b38-bc36-dba8a90af11f"
        },
        "item": {
          "id": "887c022d-5313-4cee-8fe7-2100db56b8fc",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "ca4beac6-1a2c-4bfb-8f6c-7ceaac25a0a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1049,
          "responseSize": 730
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be833d6f-d6b4-4e0a-ba28-1f482fd57c89",
        "cursor": {
          "ref": "2ac4bfe1-f63d-4cdb-a3b8-9e56e749bb90",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "d03db436-9c63-4d22-9dbc-506b981001e2"
        },
        "item": {
          "id": "be833d6f-d6b4-4e0a-ba28-1f482fd57c89",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "4cb56190-e130-419c-828e-6bb38be7f3c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1239,
          "responseSize": 743
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82a25ccf-62da-4c09-88f7-e811d435fed4",
        "cursor": {
          "ref": "a3037925-0f5a-490e-8b7a-7a3859a80fe9",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "6a107326-40ad-415a-b77e-b60368cff7f3"
        },
        "item": {
          "id": "82a25ccf-62da-4c09-88f7-e811d435fed4",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "1860d9c1-a8ec-4476-9d78-23ed7e430f95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1240,
          "responseSize": 1006
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12611dfb-f2c0-443b-aa59-4d267d2577f5",
        "cursor": {
          "ref": "41304eec-22fa-4a20-97a5-e189fff5475c",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "4af71e31-d154-4494-8608-ce2f6c993441"
        },
        "item": {
          "id": "12611dfb-f2c0-443b-aa59-4d267d2577f5",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "5846029f-b935-4b0f-bb21-7c9f73707c20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1026,
          "responseSize": 983
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c97167dd-5aeb-4da3-b5e8-4c5b294f046b",
        "cursor": {
          "ref": "8b24d60f-f519-4c4d-b104-154b3f40846f",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "ce8b0b87-a110-46ae-8a81-37fa8c1610d8"
        },
        "item": {
          "id": "c97167dd-5aeb-4da3-b5e8-4c5b294f046b",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "ad843368-80e3-4f22-95bc-223be68a5e99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b89f3fcd-eed5-4b49-a986-6d1e086b4a01",
        "cursor": {
          "ref": "12659ae6-56f0-4dcb-9965-5134d0e3b982",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "e66d485e-fbd6-4d84-829f-4ddc2baad38a"
        },
        "item": {
          "id": "b89f3fcd-eed5-4b49-a986-6d1e086b4a01",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "6775c5c1-a75a-40c0-a7ea-18fddb73de34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 616,
          "responseSize": 982
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b771a5e-9ac8-4451-8ccc-68948e08eaeb",
        "cursor": {
          "ref": "8a3a365b-84b2-45b4-bd45-849816357b88",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "36bb19c7-be9b-40d6-897b-b97e058cf157"
        },
        "item": {
          "id": "7b771a5e-9ac8-4451-8ccc-68948e08eaeb",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "2d0637c6-0aeb-4a1d-af63-808ca44aa64c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 635,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcd7a9cc-60a2-4ac9-ba76-8cebc827790d",
        "cursor": {
          "ref": "0de963b0-f62c-4907-8f16-156d850387ad",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "731771ef-94e7-4797-a1cc-0c19943e3d3d"
        },
        "item": {
          "id": "bcd7a9cc-60a2-4ac9-ba76-8cebc827790d",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "bb72500e-0be2-4a7c-b018-cc77a00f0acd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 806
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f887a3f-d59a-4905-a162-7b0cd12ccda9",
        "cursor": {
          "ref": "8236dd05-b0b1-4ef6-9ce3-65cf8c0cd960",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "e7f44fe8-70d8-45a5-92b1-766810c020fe"
        },
        "item": {
          "id": "0f887a3f-d59a-4905-a162-7b0cd12ccda9",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "806e07b9-2080-43a8-a914-462f7845867e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9606c554-7876-44f8-bfd6-e61f1731171d",
        "cursor": {
          "ref": "f5e997bb-f8ec-47b2-85b5-311d6c13a273",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "915a60a8-7005-47eb-b853-9e469bd5750d"
        },
        "item": {
          "id": "9606c554-7876-44f8-bfd6-e61f1731171d",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "e7730a0b-5128-4e36-8fd0-100a64e5bf2e",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 927,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18416117-ecc7-41e5-b724-b7f282c0a7ca",
        "cursor": {
          "ref": "46455a38-7601-453c-9da7-bd0bfec6b1fc",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "9aeeeaa3-720d-4542-b6d2-47820956f2fc"
        },
        "item": {
          "id": "18416117-ecc7-41e5-b724-b7f282c0a7ca",
          "name": "credentials_issue"
        },
        "response": {
          "id": "b13e0fbd-825c-443a-b020-998dcf5732c7",
          "status": "Created",
          "code": 201,
          "responseTime": 6029,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "7507acec-5c3a-4531-bff2-1e5b4270d52c",
        "cursor": {
          "ref": "f905f695-ff63-46ed-a2bd-2b6ce1a8c124",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "4aa83cdb-2822-4c76-96e8-bde3e3ea4b55"
        },
        "item": {
          "id": "7507acec-5c3a-4531-bff2-1e5b4270d52c",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "fc11facd-6260-4ad4-9871-a42099c9e099",
          "status": "Created",
          "code": 201,
          "responseTime": 3919,
          "responseSize": 756
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "d56e99df-f6bd-4ec2-85dc-13bd5baf939c",
        "cursor": {
          "ref": "42790172-2bbe-4fb8-b4c0-84ca4bd78581",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "990d9c92-caf1-4767-9a8b-81067751a78b"
        },
        "item": {
          "id": "d56e99df-f6bd-4ec2-85dc-13bd5baf939c",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "70e916ab-a06f-4c71-898c-56b88a861eb9",
          "status": "Created",
          "code": 201,
          "responseTime": 4427,
          "responseSize": 771
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "cff49f07-299b-4f04-90ac-89066e8e1706",
        "cursor": {
          "ref": "7f1248de-b2b3-46dd-b224-10980951979c",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "29316ab9-7508-4963-a3e9-1af4e37028b2"
        },
        "item": {
          "id": "cff49f07-299b-4f04-90ac-89066e8e1706",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "dde3049e-6b17-4671-84f3-7d42f81b0479",
          "status": "Created",
          "code": 201,
          "responseTime": 4423,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "57a24feb-c2d6-483c-901d-1fe2c0b8e2ec",
        "cursor": {
          "ref": "197d2267-bd4a-4c96-b87c-0ad532904f84",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "30a859c8-b5ec-416d-8c10-6f1e4948841c"
        },
        "item": {
          "id": "57a24feb-c2d6-483c-901d-1fe2c0b8e2ec",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "331d0cfa-09d1-4398-9ee7-20211e3bac30",
          "status": "Created",
          "code": 201,
          "responseTime": 4659,
          "responseSize": 1088
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          }
        ]
      },
      {
        "id": "585a5b88-a8ec-499d-9b1b-984d2ef80987",
        "cursor": {
          "ref": "485b4558-a540-441a-b0e3-7bf7fb71fcb8",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "3ed22f3e-9481-4157-be5f-59559e0b6250"
        },
        "item": {
          "id": "585a5b88-a8ec-499d-9b1b-984d2ef80987",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "599f24c6-dc52-4dee-9511-08584754fbbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 585,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "585a5b88-a8ec-499d-9b1b-984d2ef80987",
        "cursor": {
          "ref": "485b4558-a540-441a-b0e3-7bf7fb71fcb8",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "3ed22f3e-9481-4157-be5f-59559e0b6250"
        },
        "item": {
          "id": "585a5b88-a8ec-499d-9b1b-984d2ef80987",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "599f24c6-dc52-4dee-9511-08584754fbbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 585,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8df207f3-7faf-4fef-851b-d4b87a8d04fb",
        "cursor": {
          "ref": "df449ebb-4288-4d81-a9a4-b3fdbfe0e40a",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "1ee75877-b996-4398-949e-da2b5b894fad"
        },
        "item": {
          "id": "8df207f3-7faf-4fef-851b-d4b87a8d04fb",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "8e214de5-e6c0-4496-8662-8e2de9758fde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 650,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1eb85e26-d7c1-4d15-8d44-a81f09c67ce5",
        "cursor": {
          "ref": "9e866085-7695-488a-9441-cb193760c27e",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "4d62929e-d071-4c29-b446-c712bcaf962c"
        },
        "item": {
          "id": "1eb85e26-d7c1-4d15-8d44-a81f09c67ce5",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "4e6cacc0-61ff-4668-8f3f-104940ccd475",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4422f00a-0c3a-4b49-8eba-5b9e7e15492f",
        "cursor": {
          "ref": "9f654ca0-50c3-4251-afed-07028345dd96",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "523c680f-62aa-4143-829e-06c4ca86405a"
        },
        "item": {
          "id": "4422f00a-0c3a-4b49-8eba-5b9e7e15492f",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "92afde6f-3c78-43ac-8ef6-61487ab948e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "818c0a2c-5da4-439e-8b5b-b068c92b5ad2",
        "cursor": {
          "ref": "340c07ba-6940-44b3-80cc-6062d49a5e2a",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "05428b36-cc28-4fa7-aa2f-e0f826bdf73f"
        },
        "item": {
          "id": "818c0a2c-5da4-439e-8b5b-b068c92b5ad2",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "94bebd7f-2315-47d8-8316-9d9da3365001",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fd288da-a5eb-491c-8555-7f719d31ebd2",
        "cursor": {
          "ref": "5cfd59a9-cb0a-49f4-a9a8-4140ca9f431c",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "f0ee40cf-3c63-46af-a7f6-f691d66304a5"
        },
        "item": {
          "id": "7fd288da-a5eb-491c-8555-7f719d31ebd2",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "a3f5775e-8ab9-4511-942c-eac72e41d34b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 606,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e8e011f-eae7-434d-98cb-a3fcb16509e0",
        "cursor": {
          "ref": "b3867b41-332f-4a1b-bb1e-1cd1e31c1ae0",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "b8d2811d-4619-4be7-a070-a21685a4a0c5"
        },
        "item": {
          "id": "0e8e011f-eae7-434d-98cb-a3fcb16509e0",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "22177ef1-18d5-4230-96b5-9f8ae065649d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 611,
          "responseSize": 431
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "797dfd7c-7097-4db0-a43c-aac1fb3ed7bb",
        "cursor": {
          "ref": "b9d73000-dc07-4bfb-ad93-16a2dce744d5",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "579f007c-9768-41fc-9722-9d43efe5dec2"
        },
        "item": {
          "id": "797dfd7c-7097-4db0-a43c-aac1fb3ed7bb",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "0f459b87-10a0-4040-87fe-e9f121be386d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 597,
          "responseSize": 482
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f89338e-074e-45a1-ad7e-da2b5f14e25f",
        "cursor": {
          "ref": "7262cd0a-8a20-4637-b45c-1ab4759ca0bd",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "ecb5013a-14bb-4197-ac31-ede590fcdb4e"
        },
        "item": {
          "id": "5f89338e-074e-45a1-ad7e-da2b5f14e25f",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "3492c0a8-ec9b-450f-b21f-d566c3f0ef8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1e256ad-7509-4ce9-a027-bd45b1215ce4",
        "cursor": {
          "ref": "2e6442ba-63bd-4066-a5a0-67e94ac62d50",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "ee480f02-2a02-4846-9f58-7d63ea46eda1"
        },
        "item": {
          "id": "e1e256ad-7509-4ce9-a027-bd45b1215ce4",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "53e3c36c-05ba-427c-841c-622066f8235d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 600,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9977c3f2-0f3b-4c14-b84f-c6c573f51dae",
        "cursor": {
          "ref": "08d4867f-4b7a-406b-993f-8e4659a0c773",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "951c2d18-bfc9-4e32-8820-5efa688347d1"
        },
        "item": {
          "id": "9977c3f2-0f3b-4c14-b84f-c6c573f51dae",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "56d2b62d-7a92-48fa-b764-1ecea2604af5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 597,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69e33f3f-7b06-4a97-9757-cf025f2a04c1",
        "cursor": {
          "ref": "d6732ea7-fb69-4688-b9f9-f7d9e820a917",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "dfce62ad-966f-4bd1-af4e-140348cf7d08"
        },
        "item": {
          "id": "69e33f3f-7b06-4a97-9757-cf025f2a04c1",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "fd12b9c4-6453-4dc5-b6ae-487246beb348",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 616,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e0ea2fb-a400-4156-a996-737eb33171ce",
        "cursor": {
          "ref": "5c51ae7a-f7e5-49ce-a325-203551893ded",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "d26e68ae-917a-4ce9-8d78-dcd33832133c"
        },
        "item": {
          "id": "1e0ea2fb-a400-4156-a996-737eb33171ce",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "b0749dbf-06ed-4e12-8eb8-bec310e3b32d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a69056fc-4fd3-411b-b9b8-e05a45f7d096",
        "cursor": {
          "ref": "d495602e-085e-4ff8-99a9-258650cd8e9c",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "dd696d46-7531-428d-99ca-1066cfc7ce83"
        },
        "item": {
          "id": "a69056fc-4fd3-411b-b9b8-e05a45f7d096",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "32b88ae3-43e6-4d5d-8872-1df95e29bff4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3958283-79cf-481f-a72b-f924799b5a1b",
        "cursor": {
          "ref": "889a5dfb-75f3-4994-905e-2b802f887f8f",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "e5364c14-6aba-470c-9a36-6356c906159c"
        },
        "item": {
          "id": "e3958283-79cf-481f-a72b-f924799b5a1b",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "237a1eda-6ab8-4053-ade2-7edbd3abe7d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78e4fb39-1411-4ace-a217-98bdaf826754",
        "cursor": {
          "ref": "9184f4bb-7a28-4baf-bdb2-4f5417e5c821",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "ddaf7ab8-a5eb-4b2f-97d1-b83d76e940c6"
        },
        "item": {
          "id": "78e4fb39-1411-4ace-a217-98bdaf826754",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "8700be63-f5f9-41cd-9c32-3c65826f654c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "159733eb-c37a-4ac9-9873-eaf471a8ded1",
        "cursor": {
          "ref": "a06312b9-84d3-4ed2-b3a7-e6601695ae3d",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "1645a597-149f-4f91-b599-fb712df35a42"
        },
        "item": {
          "id": "159733eb-c37a-4ac9-9873-eaf471a8ded1",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "cec9ed3f-90ba-45bf-b661-804b854743d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 630,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a2f54a6-4f11-4d83-9c62-910b037ad918",
        "cursor": {
          "ref": "4e7bd31f-2457-4e89-a501-415533d8d19b",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "0fd549bb-8629-41e4-b501-555fb4ac5966"
        },
        "item": {
          "id": "1a2f54a6-4f11-4d83-9c62-910b037ad918",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "bf62717c-fd4b-47b6-9179-d3e2951442b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 635,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56dd47e9-d846-4a46-9a7c-2fa0f2f81c4a",
        "cursor": {
          "ref": "4e626aa2-359c-414d-90cc-5dc80eb119c3",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "d9ded1da-9e19-45ce-bd7c-7e9549651e12"
        },
        "item": {
          "id": "56dd47e9-d846-4a46-9a7c-2fa0f2f81c4a",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "bc58a8ac-001c-4d11-9bc4-9604f1218655",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 796,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ecf75d5-d71b-421b-ac05-ccf37afcb274",
        "cursor": {
          "ref": "38c186b0-c7c6-48e6-bcdc-07a961fa5e11",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "bd4c43f8-0566-4889-8f35-173d9aea7709"
        },
        "item": {
          "id": "8ecf75d5-d71b-421b-ac05-ccf37afcb274",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "31863182-d24f-484c-9e04-87b6eed31497",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 877,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21cdaf81-39b1-4490-ac02-8a15f32eafd1",
        "cursor": {
          "ref": "0bb0a2ae-31a7-4f6f-a6aa-9704b4f6569d",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "1e9f364d-5a10-40ad-9080-21df8dea03ff"
        },
        "item": {
          "id": "21cdaf81-39b1-4490-ac02-8a15f32eafd1",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "23ba7628-f5dc-4c44-91a0-d39e8d7d2db9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1012,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03fd7530-92e3-4ecf-bdfd-616dafa1ad68",
        "cursor": {
          "ref": "75fe07d6-2c85-4313-b912-5e6c6d9c26ac",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "fca1ba56-4350-4931-b5fc-3fd1f6a40d6a"
        },
        "item": {
          "id": "03fd7530-92e3-4ecf-bdfd-616dafa1ad68",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "bfde4ac7-8354-4792-8f24-2b899928fdf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 868,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6ad607a-44d6-4bbe-acd6-d2f5ce701f72",
        "cursor": {
          "ref": "e34a23e7-9dc4-4bc5-a859-31dc0360802d",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "27b96269-f6c6-4450-8ebe-88fe926982a2"
        },
        "item": {
          "id": "a6ad607a-44d6-4bbe-acd6-d2f5ce701f72",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "9d8765f6-524a-497a-a279-5a28623a6fcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 585,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4c12ba3-10e5-4a45-b7e1-b1e5f953ee22",
        "cursor": {
          "ref": "5c3aea8e-be4f-4a87-a724-6cf89b65f51f",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "950b4469-06e0-4fef-bf03-4aee8997ee31"
        },
        "item": {
          "id": "a4c12ba3-10e5-4a45-b7e1-b1e5f953ee22",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "4921dd38-2565-417e-9dab-a31362f3308a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a78e8b02-85d6-4d86-82d3-2136dcb60602",
        "cursor": {
          "ref": "3813bbe5-f369-46b0-afc8-40ac2161edbf",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "45019e77-a572-4551-876f-e51df42092a3"
        },
        "item": {
          "id": "a78e8b02-85d6-4d86-82d3-2136dcb60602",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "5bcc6ec1-7bfd-42b4-874c-d7414200b17d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 627,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fba6c3c-ebee-41a4-b182-87d5c6c66fee",
        "cursor": {
          "ref": "f0e698ec-d70f-44bb-93f1-7ba9f2662b08",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "4649b679-9cbc-4d57-bb34-68442288994e"
        },
        "item": {
          "id": "8fba6c3c-ebee-41a4-b182-87d5c6c66fee",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "811b9274-2384-4d75-bffb-3dd1d329e6db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7301c2bb-ac25-4b9d-b419-a505ed5d82b9",
        "cursor": {
          "ref": "3a10e800-6551-4b90-9df8-49ca81fe9789",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "2707a053-03a3-4a7e-ba9e-90de7c77f4d5"
        },
        "item": {
          "id": "7301c2bb-ac25-4b9d-b419-a505ed5d82b9",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "623b762b-7765-44c8-9122-482ef21d47ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c7af2a0-6e16-408c-9369-c34b7462e5aa",
        "cursor": {
          "ref": "1f024eb9-cbd7-468d-a22f-328f8b702542",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "dc037af1-1fb5-4101-bb11-420e242b99bb"
        },
        "item": {
          "id": "1c7af2a0-6e16-408c-9369-c34b7462e5aa",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "649cd632-cc2f-48b5-8555-bdd430999835",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 636,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adc4ac59-bafe-4161-bad1-d81a57b3aea9",
        "cursor": {
          "ref": "2dd20628-bff1-4e49-bd42-db54055da057",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "359ec29c-ba93-452b-bcde-78e38679c3e2"
        },
        "item": {
          "id": "adc4ac59-bafe-4161-bad1-d81a57b3aea9",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "2696c488-e654-4bc5-a464-747bd527b49d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 631,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2937055a-690a-4e59-8175-467c229ff4af",
        "cursor": {
          "ref": "2aaedcd8-80d9-4006-af04-501f65fd5d30",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "359da0ce-89cc-4ab0-890f-c6aaa4ae23e5"
        },
        "item": {
          "id": "2937055a-690a-4e59-8175-467c229ff4af",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "24099306-2cd0-4f0d-b51f-785af60ab5f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0419e246-80ba-4296-a71a-cd925244f37d",
        "cursor": {
          "ref": "19343e24-7c17-4fde-a1f7-81322ee26fcd",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "63a77623-dd07-461c-ad0f-9c1cf1074c77"
        },
        "item": {
          "id": "0419e246-80ba-4296-a71a-cd925244f37d",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "4dcc3c63-16ce-41c7-aeca-0fa1cfae00c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "031dc7d0-f2c6-4958-9660-d0c93e3e886d",
        "cursor": {
          "ref": "c541a84d-a4eb-4e99-8617-a7f7e8c23181",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "56830480-b4eb-4e7a-ba5b-d5b239124cc3"
        },
        "item": {
          "id": "031dc7d0-f2c6-4958-9660-d0c93e3e886d",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "f3e460db-bff4-4afb-aece-6b53af04e639",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 600,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "072e5d7a-5433-4c4c-aac8-a71f9dd95384",
        "cursor": {
          "ref": "f34b4abc-bdde-4a6f-869a-e8e2b75c8006",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "4edc74ec-0dc4-49e2-9709-1ff6673ef517"
        },
        "item": {
          "id": "072e5d7a-5433-4c4c-aac8-a71f9dd95384",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "8a2eadd8-f81c-42a9-b8c6-086038c33e47",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 71,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fe8f586-b326-45e5-91c7-349e480d9d73",
        "cursor": {
          "ref": "c2685f4c-e3b4-4f77-a28c-b7f3842a433a",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "bc69f8b1-3fcf-41be-9b15-95bf81cc55fd"
        },
        "item": {
          "id": "2fe8f586-b326-45e5-91c7-349e480d9d73",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "4a460b2d-3f3d-4f00-ad2a-87d6468e304c",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 610,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfdfd0ff-3939-477e-826f-633473c44a09",
        "cursor": {
          "ref": "3949710e-ec76-4874-95b6-a1ab053d699c",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "85b2e94e-6527-44c5-9cc9-e22bc4cec722"
        },
        "item": {
          "id": "cfdfd0ff-3939-477e-826f-633473c44a09",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "82215546-ee4f-42f1-a253-242189df530c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 359,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfdfd0ff-3939-477e-826f-633473c44a09",
        "cursor": {
          "ref": "3949710e-ec76-4874-95b6-a1ab053d699c",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "85b2e94e-6527-44c5-9cc9-e22bc4cec722"
        },
        "item": {
          "id": "cfdfd0ff-3939-477e-826f-633473c44a09",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "82215546-ee4f-42f1-a253-242189df530c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 359,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d81afe75-7783-495e-9edb-9378a0a1f96c",
        "cursor": {
          "ref": "9a86f5c7-bca4-4e05-a4bd-66a9748350b5",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "08b65909-acd7-4de7-ae9f-ecc28664d0db"
        },
        "item": {
          "id": "d81afe75-7783-495e-9edb-9378a0a1f96c",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "32b7f271-08fa-4c8a-b167-d1cd9ad4d3fb",
          "status": "OK",
          "code": 200,
          "responseTime": 607,
          "responseSize": 20
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "029bb825-47dd-461d-a23a-e02a87dc6a56",
        "cursor": {
          "ref": "36ca01b5-e6e3-4542-a0a4-1a9472cb3cc6",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "317eeacf-72ee-4fa3-80e1-fc1fe704aedb"
        },
        "item": {
          "id": "029bb825-47dd-461d-a23a-e02a87dc6a56",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "eea4fea5-ce58-4abd-8b39-cfed638ba134",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 820,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54aa4eab-8db9-46bb-b9e5-3d91c6d0a11f",
        "cursor": {
          "ref": "a49af68e-9c52-454c-aa8a-134d98e3280e",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "6d5c8b55-a842-4a50-bf79-7af1154fe508"
        },
        "item": {
          "id": "54aa4eab-8db9-46bb-b9e5-3d91c6d0a11f",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "b24320e6-bd56-4764-9747-32a9a0d39481",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 644
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f96621f-841a-45e7-8fbf-c88eddb402bd",
        "cursor": {
          "ref": "451b01a1-7e3f-4a7c-b706-4c1f80846074",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "0ce934c8-9741-4f72-9ddc-f86c75bb0c3f"
        },
        "item": {
          "id": "0f96621f-841a-45e7-8fbf-c88eddb402bd",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "4b7459f8-9bcf-4b93-98b1-2d2efad7e581",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 693,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76814ae2-005f-47ac-ba60-5126c520dbb2",
        "cursor": {
          "ref": "ca44c403-1c03-49ff-95ab-bf27cdd4a0f2",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "e8a8a53f-6141-497e-841d-fa486367f3b4"
        },
        "item": {
          "id": "76814ae2-005f-47ac-ba60-5126c520dbb2",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "ccb1f218-1d8e-4100-93b1-93dd1df57a94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 780,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c220d32-d5de-42d9-b38f-645682dc3836",
        "cursor": {
          "ref": "fe0f3484-b1d5-4c36-b9c2-13ffac68fece",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "60712063-a289-4126-97e6-73d9e33fe9ff"
        },
        "item": {
          "id": "2c220d32-d5de-42d9-b38f-645682dc3836",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "83c5e108-f0b3-4582-8ccb-b3ce38ab7e98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 676,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "094cb1d6-cb92-45f8-91bb-5af221f16e2b",
        "cursor": {
          "ref": "c84eecba-1cf1-48a9-a953-d487bfe0daa3",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "d2661376-57ef-4120-8da4-e55f68256c28"
        },
        "item": {
          "id": "094cb1d6-cb92-45f8-91bb-5af221f16e2b",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "e7a187f8-8d19-45a0-880a-ae4a13c99761",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 2010
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a28c787-ad84-430b-aafa-9b3bf1ff045e",
        "cursor": {
          "ref": "dd722b0d-ecf4-4327-abb3-8b42859dad5b",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "f1d970a3-d3c3-4a6f-938b-5b653e7531d4"
        },
        "item": {
          "id": "9a28c787-ad84-430b-aafa-9b3bf1ff045e",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "b9a554af-eb9d-4352-b8d1-cd4d4ebeaac8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 366,
          "responseSize": 2009
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f1ee81f-5815-43c2-85c8-026a097e5a8e",
        "cursor": {
          "ref": "6f49c506-929d-4501-931a-fa1421a62585",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "e44a5fa0-8f68-4149-a8a7-21b2a901448f"
        },
        "item": {
          "id": "4f1ee81f-5815-43c2-85c8-026a097e5a8e",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "3e612fa8-e522-4d9c-9f67-743f40652113",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 385,
          "responseSize": 2010
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5f9f458-4de4-4ffe-84b6-8f261ca74425",
        "cursor": {
          "ref": "a7614f73-0282-4d29-9279-c7e9ee09f18f",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "6ba9c88f-5d62-42bb-b508-37ef7bf19839"
        },
        "item": {
          "id": "d5f9f458-4de4-4ffe-84b6-8f261ca74425",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "9592f2cf-60df-4202-8f75-6968c48d0aa0",
          "status": "OK",
          "code": 200,
          "responseTime": 432,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:153)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:153)"
            }
          }
        ]
      },
      {
        "id": "af0fceea-661c-47d8-9d88-8abfcb2d4e66",
        "cursor": {
          "ref": "1905b487-63c2-4cd0-a697-f935d78272c9",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "3caa57f5-5b6a-4220-942c-9adf3b40f1ea"
        },
        "item": {
          "id": "af0fceea-661c-47d8-9d88-8abfcb2d4e66",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "5fc3e609-9277-4142-a899-e53e57efd107",
          "status": "OK",
          "code": 200,
          "responseTime": 424,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:154)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:154)"
            }
          }
        ]
      },
      {
        "id": "0bd275b2-350f-44db-a83a-90f1a22e3085",
        "cursor": {
          "ref": "83da87ca-f509-4760-916e-bf90c4b3215a",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "e0455662-99d7-48a0-a51a-d8605ef12727"
        },
        "item": {
          "id": "0bd275b2-350f-44db-a83a-90f1a22e3085",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "b00f18ee-76e0-44e0-a7dd-799d636b8053",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 365,
          "responseSize": 2466
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82aaf1ad-585c-4210-9cc7-e4b43ff1d592",
        "cursor": {
          "ref": "c66d8baf-32a1-4c20-8494-4b0d3cd944b0",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "a2624ecc-c512-41dc-8068-308657a90798"
        },
        "item": {
          "id": "82aaf1ad-585c-4210-9cc7-e4b43ff1d592",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "5d0bf229-4ab4-4d2d-9ea2-508159619feb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 391,
          "responseSize": 2456
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a050f1c6-f505-4e8d-aebf-af947bd749e6",
        "cursor": {
          "ref": "51ac0dd7-84ba-4d2b-ae9f-45dc625b4c1e",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "805a1ead-2063-4507-98d8-c6f455359165"
        },
        "item": {
          "id": "a050f1c6-f505-4e8d-aebf-af947bd749e6",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "3f31a422-e05d-49b5-93ba-de893c72386a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 364,
          "responseSize": 2455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bf42c32-3539-4aff-9773-e20b54447980",
        "cursor": {
          "ref": "2a87e95a-8671-4390-9e4b-88c5b47465fd",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "a62c8bb9-38fb-46e7-8caa-086b1b60fa8b"
        },
        "item": {
          "id": "5bf42c32-3539-4aff-9773-e20b54447980",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "e39dd38c-4963-404b-977e-52844715402a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 400,
          "responseSize": 2456
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f5cf6de-c59d-43c6-bab9-1634968a97b0",
        "cursor": {
          "ref": "c226bafa-582a-4afb-860a-b2119ebc9f41",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "e1b94cb2-bcb7-4822-9758-0484fe8a746c"
        },
        "item": {
          "id": "5f5cf6de-c59d-43c6-bab9-1634968a97b0",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "83862dbb-c90f-4110-9150-a371eac4e6a3",
          "status": "OK",
          "code": 200,
          "responseTime": 424,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:159)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:159)"
            }
          }
        ]
      },
      {
        "id": "420005e7-ca8d-40c0-bed6-3825ee774439",
        "cursor": {
          "ref": "625149ac-3305-4267-a711-23cab9874b68",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "00e620b6-e5aa-4616-a696-3ce044ea776b"
        },
        "item": {
          "id": "420005e7-ca8d-40c0-bed6-3825ee774439",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "b5ae0fe1-f722-4053-8aa6-d93db4cea9c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 388,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0fc7e5f-c4f2-489d-bc24-759ce96fcac9",
        "cursor": {
          "ref": "95940049-ebe5-43e3-9f58-031f0bbb8313",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "ef8387ab-223c-4f24-a0c4-d6e77a4498ab"
        },
        "item": {
          "id": "f0fc7e5f-c4f2-489d-bc24-759ce96fcac9",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "a4a56b22-c520-4e16-bf54-274681929a3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 371,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05a2726e-2095-4073-8969-209cd08bd73b",
        "cursor": {
          "ref": "dce1d9e4-f01a-46d0-b81c-dc9442ff7629",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "b33a62c4-79c7-4e76-9e20-7e52af472935"
        },
        "item": {
          "id": "05a2726e-2095-4073-8969-209cd08bd73b",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "416eded1-218f-426c-9c3e-bf06a122417a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 374,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e3eec53-49f1-44b2-bb14-0053743f4e98",
        "cursor": {
          "ref": "6ee1ce6e-b2e7-4972-b8bc-9c4989f81dff",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "bf8c3bc2-ef7a-4358-aa90-f1d257873d96"
        },
        "item": {
          "id": "8e3eec53-49f1-44b2-bb14-0053743f4e98",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "b3d9f2d1-f203-4e57-95c7-3145cf6fc62e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 398,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d74722d9-9545-462b-ad23-455a65815f17",
        "cursor": {
          "ref": "84c5727e-a9ae-4aa5-88bc-a3fbfa7ff3cd",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "fcd4fc67-f050-48eb-acbf-7b6853f03d6f"
        },
        "item": {
          "id": "d74722d9-9545-462b-ad23-455a65815f17",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "7cebd917-59b8-472b-9d7c-7df18c30c878",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 355,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b34955b7-b10b-46bd-8e00-e71d52a25881",
        "cursor": {
          "ref": "86fedd10-42bb-4205-bbb6-005ca39469eb",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "0b938c36-eb9b-40c9-b456-242401b0326b"
        },
        "item": {
          "id": "b34955b7-b10b-46bd-8e00-e71d52a25881",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "497583d0-c185-4211-a4c6-fbb79379628d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 387,
          "responseSize": 1360
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c75261b-31f0-4413-bccd-43c1f306115a",
        "cursor": {
          "ref": "53e483e3-76d6-4b47-8b86-06e042a9259e",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "db33af5a-9f55-4143-99fc-c07a1c403611"
        },
        "item": {
          "id": "9c75261b-31f0-4413-bccd-43c1f306115a",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "bf3a4c95-652e-4227-a1b6-595f59ba58c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 366,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59d54b52-5055-4726-ad2e-e2c1565c5974",
        "cursor": {
          "ref": "50c96ec5-289b-47ee-bdac-a1158a4a9560",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "ae4dd0eb-a6e4-44a8-a28d-d93a7eeb0e70"
        },
        "item": {
          "id": "59d54b52-5055-4726-ad2e-e2c1565c5974",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "4a15a714-d615-4c9f-a4ee-9c23fc8690e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 368,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99c82951-f5d6-4907-9d83-ab6d21a5e35c",
        "cursor": {
          "ref": "c651efbe-8e33-4620-9d9d-9ce80aebc7fa",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "a6fcefd9-5d3e-4076-8e2d-78983f93682f"
        },
        "item": {
          "id": "99c82951-f5d6-4907-9d83-ab6d21a5e35c",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "540f0e77-48f9-4a32-8d54-2b8b7285da67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 379,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20fd9635-aa40-4007-9bb2-14859ab88a5e",
        "cursor": {
          "ref": "51baf16d-c853-407f-bbc9-fb7546af31c0",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "b0d33f96-d547-4ce8-bf2a-dc799614e027"
        },
        "item": {
          "id": "20fd9635-aa40-4007-9bb2-14859ab88a5e",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "05a3f6c1-8c9b-4329-ba03-e41d4408ff74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 377,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59d2db64-f95f-4816-bd9f-4c99fb87a4f1",
        "cursor": {
          "ref": "fabe0d3c-70ac-4059-8790-1a4cca81565d",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "7848e18d-bf5f-49c8-b936-74496345476a"
        },
        "item": {
          "id": "59d2db64-f95f-4816-bd9f-4c99fb87a4f1",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "0c289109-7ccc-44de-a698-d16f4bb63171",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 376,
          "responseSize": 1372
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6c11a92-cae5-406d-989e-6cb77cd79d2c",
        "cursor": {
          "ref": "d3f53518-20a3-4653-a80e-b7b11a03d0b5",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "0a1a177c-ce70-4ad5-9960-c27b632d3feb"
        },
        "item": {
          "id": "c6c11a92-cae5-406d-989e-6cb77cd79d2c",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "735fe595-d83e-4c40-84ed-2ff5693525f3",
          "status": "OK",
          "code": 200,
          "responseTime": 642,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:171)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:171)"
            }
          }
        ]
      },
      {
        "id": "f61e3480-af1f-4104-8e43-faf7a402b1a7",
        "cursor": {
          "ref": "5b8a7df2-911a-45ee-97af-390c1c4456b4",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "bdace79a-f954-4b9b-817a-8ac79f447b27"
        },
        "item": {
          "id": "f61e3480-af1f-4104-8e43-faf7a402b1a7",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "f32b38ad-ba73-4bdd-a044-3398f55ef235",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f195f98-f64f-412b-aa7b-ef009b45494e",
        "cursor": {
          "ref": "2149fb03-b338-497d-a892-c19f9f270090",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "67938ba2-52da-40a3-9632-87841576781d"
        },
        "item": {
          "id": "8f195f98-f64f-412b-aa7b-ef009b45494e",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "fb647088-9513-41e5-bb85-111beb6341ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1077,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9861ebfc-75e3-4914-8462-e17eb50b6d7a",
        "cursor": {
          "ref": "20ab60fa-e2df-4f43-9ce7-b797f65eb25e",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "94ff7e14-b0c5-4905-a4f1-5897af7ee4c6"
        },
        "item": {
          "id": "9861ebfc-75e3-4914-8462-e17eb50b6d7a",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "08ae2b76-aff3-4cc3-853c-4d742fc128d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 782,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16c719ef-4f93-4612-b179-77e117b9fe69",
        "cursor": {
          "ref": "058f37d6-f995-45a0-9fd4-f55c039d1380",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "81d73e4a-08a1-4e33-a17e-32813b34e0ec"
        },
        "item": {
          "id": "16c719ef-4f93-4612-b179-77e117b9fe69",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "783bb9e9-f2d9-46e4-bf8e-737a88ad63eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 908,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fcbc4a9-d379-46fe-8461-bbc34d5320d7",
        "cursor": {
          "ref": "1c14d3b3-1494-47e2-bdb4-1f7856020b1a",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "75729fe9-ed1f-4fb8-a6fd-2a2e3416f981"
        },
        "item": {
          "id": "2fcbc4a9-d379-46fe-8461-bbc34d5320d7",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "02ca8cb3-fe25-45ed-8ae0-48dcbec52804",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f13f704-ec80-476f-a439-a9a65bd979eb",
        "cursor": {
          "ref": "1b41d34d-fd5d-4ea4-8a0f-a46df02e2709",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "ab8b7734-066f-4c62-8d0e-9ceca8bd1b4e"
        },
        "item": {
          "id": "5f13f704-ec80-476f-a439-a9a65bd979eb",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "48326b24-9543-43ba-8a45-0147e223f709",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 371,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59c6ebf5-6e2e-4a8e-ba38-ea932214551f",
        "cursor": {
          "ref": "ae9159d0-6cc0-45df-9f53-4a39c3e63205",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "054dafc4-cbef-4463-b348-67541287ecea"
        },
        "item": {
          "id": "59c6ebf5-6e2e-4a8e-ba38-ea932214551f",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "5a76a525-5ee8-4783-9cf0-ea7d2fbdacb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 396,
          "responseSize": 1801
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "481f2ba1-49ab-4e53-b20b-c28fc0693a52",
        "cursor": {
          "ref": "b7629001-c55f-4c1e-b81d-c3af6679c12e",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "de2bee13-50df-4d87-8d02-313c83bff207"
        },
        "item": {
          "id": "481f2ba1-49ab-4e53-b20b-c28fc0693a52",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "7b1996b7-68f7-4c16-b5df-0efebf4d6f10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 361,
          "responseSize": 1787
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "595d8537-bb7b-46fc-9e94-4c22bee4857d",
        "cursor": {
          "ref": "33412e2c-7c9c-421f-b7ac-b07104d3521b",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "ab510366-ef39-43eb-812f-c268587f5f78"
        },
        "item": {
          "id": "595d8537-bb7b-46fc-9e94-4c22bee4857d",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "8db12d8f-53dc-4c35-b734-1c0a8e8a2ac0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 396,
          "responseSize": 1785
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c169ce09-be17-4f16-ab0b-9c3096f43116",
        "cursor": {
          "ref": "b5d48f6e-faa2-4623-8a6e-9a0327f00a16",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "5437bf5f-6b34-4bc1-9fc0-b71c88c0690f"
        },
        "item": {
          "id": "c169ce09-be17-4f16-ab0b-9c3096f43116",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "da8ba995-ec01-48da-bdb3-e59e36c9ac96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 388,
          "responseSize": 1786
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2aecbf7-1d2b-4efd-875b-109dba785f20",
        "cursor": {
          "ref": "d0763171-a7ca-4789-8487-a23f013f03f1",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "bb5cdb04-0609-4831-83e6-871d57af4082"
        },
        "item": {
          "id": "c2aecbf7-1d2b-4efd-875b-109dba785f20",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "5b6064b8-0bdb-4788-a789-455128dd5700",
          "status": "OK",
          "code": 200,
          "responseTime": 370,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:182)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:182)"
            }
          }
        ]
      },
      {
        "id": "6d9eeeb0-93c8-4844-a48d-116ddabf253e",
        "cursor": {
          "ref": "b1fb1036-6545-4f87-80b0-013a1efc56c1",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "b5560f20-e6dc-40d7-b8a8-650d41adb3ed"
        },
        "item": {
          "id": "6d9eeeb0-93c8-4844-a48d-116ddabf253e",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "51ad859c-d647-4c91-8291-7bceee13273a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 413,
          "responseSize": 2160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49a913f9-f6da-4c68-b0e2-b40457f8d030",
        "cursor": {
          "ref": "1950946f-7c12-400a-a729-89fba89a19e8",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "c84f8f48-7ebb-40de-adbc-1448810e721d"
        },
        "item": {
          "id": "49a913f9-f6da-4c68-b0e2-b40457f8d030",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "088199f6-afe0-427b-8468-075105841b14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 358,
          "responseSize": 2146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "259643bb-c19f-49e5-95c4-8cb1b657bf06",
        "cursor": {
          "ref": "7d26d186-9c8f-49bd-84ae-8cf072987a1d",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "1b3944a5-7ff0-44ee-811f-54a18b8e5d73"
        },
        "item": {
          "id": "259643bb-c19f-49e5-95c4-8cb1b657bf06",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "fa4e9d42-6d1f-433c-9993-8901434cea50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 368,
          "responseSize": 2144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15ba726a-8155-43b1-91fa-b66afa337de8",
        "cursor": {
          "ref": "855aa638-c181-4e1b-ad26-dafdc356398d",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "e4f8e290-a895-4189-aaa5-91af00303e10"
        },
        "item": {
          "id": "15ba726a-8155-43b1-91fa-b66afa337de8",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "364f69cc-4909-45a7-9405-003afa139dfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 378,
          "responseSize": 2145
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8ae2386-a939-4209-a069-9a72ba4d7275",
        "cursor": {
          "ref": "fe3a06dc-709e-4a57-a8ca-6de889e1b6cf",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "c6033c45-db62-4dc3-a527-8a3717bce7ea"
        },
        "item": {
          "id": "d8ae2386-a939-4209-a069-9a72ba4d7275",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "515b5eee-b771-46a7-9453-30848f02f187",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 371,
          "responseSize": 2166
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d365fb41-3d2f-444a-9073-5a934ddafcd9",
        "cursor": {
          "ref": "140ac1a2-5a7d-4a45-ac1e-8450c3a6a272",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "0b64263d-d064-4d0c-a84b-1069fa4e2872"
        },
        "item": {
          "id": "d365fb41-3d2f-444a-9073-5a934ddafcd9",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "db456550-36fc-4451-a7f0-24805e45df75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 361,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7e2f0ea-21bf-4e8e-9a38-bf147151c939",
        "cursor": {
          "ref": "c985fd42-af6d-4da4-87cb-975d9eba7979",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "f8e83ea2-d47a-48ef-987d-3a742d3f6d1d"
        },
        "item": {
          "id": "b7e2f0ea-21bf-4e8e-9a38-bf147151c939",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "2f0ce47e-acf3-40cc-959e-3fd3926484ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 374,
          "responseSize": 1394
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "989d32cf-a650-48b7-b88b-aab41a30e34e",
        "cursor": {
          "ref": "1abc0db3-be90-46ea-8bcc-c276cf8c3d78",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "579ecc04-8165-42c6-9655-410b313e9856"
        },
        "item": {
          "id": "989d32cf-a650-48b7-b88b-aab41a30e34e",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "68cd060e-0081-4a76-942b-78b5f5ef9cad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 419,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07953f87-591a-4d65-880a-8b779cb0d886",
        "cursor": {
          "ref": "f9d1d891-1bc7-4df1-908f-d7c29e96bc16",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "08798587-9cfa-4f75-b110-3abd75e3f9e1"
        },
        "item": {
          "id": "07953f87-591a-4d65-880a-8b779cb0d886",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "6b6f56e0-bfba-4db5-9ea1-9e0e382cc5ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 366,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "741345bb-51d7-4cfa-ae07-30e14e63b9f7",
        "cursor": {
          "ref": "81315738-8e5b-48f9-8ee6-65620c91808c",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "5bedf020-ba91-4a16-8000-99705daf3f0b"
        },
        "item": {
          "id": "741345bb-51d7-4cfa-ae07-30e14e63b9f7",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "1c21d61e-51c6-42d4-a0db-c5da3d8a45db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 465,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b2a7888-519b-488d-a414-3817696e1736",
        "cursor": {
          "ref": "5d8856e4-ef68-46f8-9eb4-1cc5e92dbdbc",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "2a62f0cc-4446-49ac-afe2-08cd9727ce12"
        },
        "item": {
          "id": "2b2a7888-519b-488d-a414-3817696e1736",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "22c45147-6db8-4226-9ca0-8dd0dbe6e003",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 366,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a754eaa7-2bff-49a5-9f65-638c7160f210",
        "cursor": {
          "ref": "2f95af55-e39e-406d-a3e8-b810704b8701",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "27a0e1aa-590c-4dfa-8c2d-3d045a00fe84"
        },
        "item": {
          "id": "a754eaa7-2bff-49a5-9f65-638c7160f210",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "b2c731a9-db17-496f-8ada-bd2f6f0aa638",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 373,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b741fed-b092-46a3-a3fb-d22606cc3189",
        "cursor": {
          "ref": "8b59f420-affd-4a41-82ab-05c9670e6742",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "a2d7ec73-cd34-458b-8f6f-0c81e52fb655"
        },
        "item": {
          "id": "8b741fed-b092-46a3-a3fb-d22606cc3189",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "d0ef17a5-a0cd-4d8e-89bb-d9291383f6f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 360,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aa7b32f-b747-4d3b-abdb-26ed2982a3dc",
        "cursor": {
          "ref": "a7800022-b7a0-44f4-bdea-ab900dab158d",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "e8a5cc95-11c5-4e6e-a382-9bd785e4515c"
        },
        "item": {
          "id": "4aa7b32f-b747-4d3b-abdb-26ed2982a3dc",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "a68bf81e-85bc-4f04-93b0-e9699450ae2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 378,
          "responseSize": 1874
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "017cda56-4dd1-4a7b-a7a5-702622b3e7e8",
        "cursor": {
          "ref": "765fd103-e9bc-44d6-95b0-7d3f9e7eb0f6",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "75333769-1dc8-4977-9d8d-f549f2955e83"
        },
        "item": {
          "id": "017cda56-4dd1-4a7b-a7a5-702622b3e7e8",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "96448503-b2c6-4ef9-96e2-fb64284ec2bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 368,
          "responseSize": 1673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "351b1a5e-c74f-48e5-91d9-8727ecfd6c98",
        "cursor": {
          "ref": "6194034b-fa6e-4329-9cc5-8ed2d0dfec7f",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "3a2b455f-2d4a-4174-bcf0-1d24403be292"
        },
        "item": {
          "id": "351b1a5e-c74f-48e5-91d9-8727ecfd6c98",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "6091cf10-8af1-4fa4-ade9-5d5cefbb76fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 390,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "494c965e-e8e7-4103-bd64-5677b7b03c1a",
        "cursor": {
          "ref": "4f536daa-b7bc-4957-9f4a-c8f016221ebe",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "5b343264-18c2-4c1e-a11c-a326d538e031"
        },
        "item": {
          "id": "494c965e-e8e7-4103-bd64-5677b7b03c1a",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "9a7af2bc-ca65-4635-8eaa-b33871a1dbb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 374,
          "responseSize": 1672
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18b774a8-45fd-4c91-902e-7cbebd134dc0",
        "cursor": {
          "ref": "25b00977-d585-4495-8745-43b30e52e7d4",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "d89394f8-ba0c-4ffd-9fcd-c9fdd45ccaff"
        },
        "item": {
          "id": "18b774a8-45fd-4c91-902e-7cbebd134dc0",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "329cab1d-aa2b-46d6-97cb-2a68add088f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 355,
          "responseSize": 1685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9797f7c-d141-4de9-b8cc-2298b9038797",
        "cursor": {
          "ref": "3a194277-3f7e-4242-8442-7feda8bf1b9c",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "03af6398-e5fc-4bd7-a0a1-bab68e73c0b6"
        },
        "item": {
          "id": "a9797f7c-d141-4de9-b8cc-2298b9038797",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "5c7459c4-8b93-4f28-89af-22ee03922924",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 368,
          "responseSize": 2209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffd3e016-35f4-4c2c-b029-d8b1595ea9c7",
        "cursor": {
          "ref": "8ef669b2-a008-4f70-b957-52188bc8bb06",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "e336c625-e5d7-4571-946f-0f68da21188d"
        },
        "item": {
          "id": "ffd3e016-35f4-4c2c-b029-d8b1595ea9c7",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "69b89e8c-563b-4e1f-af36-aa529328bde0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 353,
          "responseSize": 2195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ead23c51-4b01-4806-9898-596dc692c916",
        "cursor": {
          "ref": "a1cfb63c-bd7b-41a2-8eb5-73ee11b52fcc",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "b2616e19-5fa3-448b-9a77-9826be0d0744"
        },
        "item": {
          "id": "ead23c51-4b01-4806-9898-596dc692c916",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "ecc10e8b-be3f-4882-9722-52e1c4070bd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 368,
          "responseSize": 2193
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c69b2889-38db-482d-a2cb-32e03a2a3ae7",
        "cursor": {
          "ref": "86d2ca0a-ab44-469b-9924-9ceb10fe0bcc",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "9d03fe24-82d1-41b8-aaee-a47b5e9f58df"
        },
        "item": {
          "id": "c69b2889-38db-482d-a2cb-32e03a2a3ae7",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "9a19debe-f34a-4cbb-ba68-a5b593d14441",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 364,
          "responseSize": 2194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c99a6f5d-911d-47a6-8d84-d8177cf7361f",
        "cursor": {
          "ref": "3dff7fbf-9eab-4aba-b251-c3f8746170b1",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "e699e145-9c97-4c32-a930-e1694f822d44"
        },
        "item": {
          "id": "c99a6f5d-911d-47a6-8d84-d8177cf7361f",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "553b2d83-dc55-4f6e-be38-65d322cb6a01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 358,
          "responseSize": 2215
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58c400eb-5483-46bf-98f1-0079e5639c01",
        "cursor": {
          "ref": "790bb641-93e0-4b75-8bec-93efb2cfd3f5",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "56f54245-a2ed-4043-a595-ced41b8c7544"
        },
        "item": {
          "id": "58c400eb-5483-46bf-98f1-0079e5639c01",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "6c68145f-d229-4f3c-9019-1abf4eb24b30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 371,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8d945da-b73b-45e7-8f82-ea620456644a",
        "cursor": {
          "ref": "c798a602-055d-4124-b7c8-0550ffb0fa96",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "1318401a-3fe4-41d0-a28b-614c80032a4e"
        },
        "item": {
          "id": "d8d945da-b73b-45e7-8f82-ea620456644a",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "a1031105-b6cd-4870-99e2-983fb132047c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 358,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "326abb0b-b499-421e-99de-46b6fc7b4a3f",
        "cursor": {
          "ref": "a87161a6-5ec9-4200-b450-039ee75090cf",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "5c093bdc-16cf-447a-b729-34fd1839cc1e"
        },
        "item": {
          "id": "326abb0b-b499-421e-99de-46b6fc7b4a3f",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "9dae6736-52a5-4e44-9adf-1bcd36d29962",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 384,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb38e7c4-960f-461d-8b32-6de66e8d2143",
        "cursor": {
          "ref": "742c1d46-74de-47ab-bb70-b77bf2c4a134",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "807d2bfb-2285-4bdb-82e5-4969a49c8591"
        },
        "item": {
          "id": "fb38e7c4-960f-461d-8b32-6de66e8d2143",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "c4473276-0b80-468e-a29b-eedbd9055000",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 360,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22dec4b3-4bbe-4779-a4cd-ba32f51025b6",
        "cursor": {
          "ref": "eb39c6d0-877f-44ee-a9c2-a79c0297d07e",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "64baf3f4-0902-4520-b9d8-3a5ba35a3672"
        },
        "item": {
          "id": "22dec4b3-4bbe-4779-a4cd-ba32f51025b6",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "a8a8361a-9a4b-4c6b-b10a-a7521467fdd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 367,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4b4cf0d-c7b6-427f-8014-be020108f561",
        "cursor": {
          "ref": "8dc5dc0c-1e3e-4353-96a0-9b087303ef68",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "cf4b0cc5-d07d-4ec9-8b06-121cd745c844"
        },
        "item": {
          "id": "b4b4cf0d-c7b6-427f-8014-be020108f561",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "c3466361-994f-40f2-9fad-900864a5d1e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 362,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d51f4a2d-152a-4420-8903-0b25e2b9e4d4",
        "cursor": {
          "ref": "b436a335-0355-4ec9-9c24-86bdcb362f72",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "0eef0fa4-66d1-4292-bc16-1b6fbb946ce2"
        },
        "item": {
          "id": "d51f4a2d-152a-4420-8903-0b25e2b9e4d4",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "f7626feb-db6c-4aed-bd3d-6a80f2b9b49a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 362,
          "responseSize": 1307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfffdb76-7d3c-48ae-8c75-f6a47d0bdc45",
        "cursor": {
          "ref": "476c3cf5-3314-456f-8584-ec2941af318a",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "e394bc6c-315e-45fc-b589-815472b5a051"
        },
        "item": {
          "id": "bfffdb76-7d3c-48ae-8c75-f6a47d0bdc45",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "bf529ce3-a09a-4feb-8995-b6c58ed06db6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 376,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cd01e08-f5a4-4a2f-a57f-21ea2bfd09e7",
        "cursor": {
          "ref": "43797b69-8f6c-42e6-81b6-fdfa14f3c495",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "27620540-4ae5-4ce6-9add-f905272a88a7"
        },
        "item": {
          "id": "0cd01e08-f5a4-4a2f-a57f-21ea2bfd09e7",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "07efa5f9-db44-4df0-8d19-2405d934440f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 354,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0e3c345-1dd0-408e-a238-de4a694e9d6e",
        "cursor": {
          "ref": "e1723347-4ed3-43c5-9164-622f7500fc90",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "08dc858e-62e2-434b-bf80-919a0622d30f"
        },
        "item": {
          "id": "f0e3c345-1dd0-408e-a238-de4a694e9d6e",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "6068062b-423c-418e-bbc6-5216656a7c9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 388,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d3d4742-f15b-42ac-a228-c10ba298fa8f",
        "cursor": {
          "ref": "f08e2945-32f0-4a04-b5f7-c26aeb481f34",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "951b1586-7067-4d07-9b91-f94f152ca644"
        },
        "item": {
          "id": "6d3d4742-f15b-42ac-a228-c10ba298fa8f",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "019930c3-3faf-45ef-be30-069c189edebd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 359,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cafca610-acbd-4847-8ff4-fac18bd1970e",
        "cursor": {
          "ref": "c213f731-1f45-4ec2-9a62-6a4d0890fa70",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "e3e0b65f-134c-4dcf-b945-0182181a6a15"
        },
        "item": {
          "id": "cafca610-acbd-4847-8ff4-fac18bd1970e",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "b178348b-d161-48f6-8c27-53ea399825bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 379,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24f33bab-598e-4f23-bf82-c3559ee98ffb",
        "cursor": {
          "ref": "fba5a9b3-1b60-4e37-9562-640a9e56ba8b",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "7604ae09-9e70-4a1e-8a9e-951679116cfa"
        },
        "item": {
          "id": "24f33bab-598e-4f23-bf82-c3559ee98ffb",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "6d72e976-5f6b-4328-8c26-8c9f9d3a6790",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 359,
          "responseSize": 1344
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abd54892-8a74-4639-9f42-d82f63f8c3fa",
        "cursor": {
          "ref": "9e931748-4336-4ce5-baff-4ffe7356bc2d",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "b33646bf-528b-44bf-8a10-28a475d6db37"
        },
        "item": {
          "id": "abd54892-8a74-4639-9f42-d82f63f8c3fa",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "f5624db8-03c2-4cbf-9531-ed7891f86668",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 377,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "618fd5e6-a11a-461a-b2d0-8fd13574795d",
        "cursor": {
          "ref": "5a0b5d13-61c5-4f0c-b5c7-340b931c1133",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "24716651-18d8-4c10-9849-e6a37ac5dbff"
        },
        "item": {
          "id": "618fd5e6-a11a-461a-b2d0-8fd13574795d",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "86681561-1e5b-4062-9fd3-847af830f734",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 381,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "658c5a80-f5dd-44ed-a84f-af534324f1ec",
        "cursor": {
          "ref": "6a5c03bd-9aa2-4f92-9157-c8124e3ccdd2",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "32d6dfc2-6654-4357-8544-5634707c4d31"
        },
        "item": {
          "id": "658c5a80-f5dd-44ed-a84f-af534324f1ec",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "6e8c2f40-b7fc-4c62-b034-48c30581ca05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 364,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c78417a-73cc-4ff9-b219-e8efd8c1de0b",
        "cursor": {
          "ref": "b4da24a5-2c57-42f1-816f-e2234de16bf9",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "b3a08549-6df5-467e-8d23-858634ba562c"
        },
        "item": {
          "id": "3c78417a-73cc-4ff9-b219-e8efd8c1de0b",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "292941d8-777f-4d37-8419-b89f6e4b1867",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 371,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a7f2a62-ecb0-42c9-b606-4c11e7a004a1",
        "cursor": {
          "ref": "b3cd68fe-1f97-4b0c-b342-0bb6b1ec81ae",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "b9b7a5b3-4b91-4575-adb7-aecadfe4cc5d"
        },
        "item": {
          "id": "6a7f2a62-ecb0-42c9-b606-4c11e7a004a1",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "667f6041-74ff-4f52-b3a4-19f2111c7a0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 355,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "641b4365-d87a-4818-9c79-79cde7ce0892",
        "cursor": {
          "ref": "25edb35f-bb10-4727-8442-2c5fc496e46d",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "9f9bec1e-f656-43ae-9976-f4895cac4aba"
        },
        "item": {
          "id": "641b4365-d87a-4818-9c79-79cde7ce0892",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "d2f0dd99-fe56-4052-8243-d218a9d4cf14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 378,
          "responseSize": 1298
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9b7bc4a-ef13-4456-97de-0b80adf1c59e",
        "cursor": {
          "ref": "def1bb2f-0b44-4e6e-8eea-15965fea6773",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "86ffe321-9956-4f7b-81cb-c8a78436fb97"
        },
        "item": {
          "id": "a9b7bc4a-ef13-4456-97de-0b80adf1c59e",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "90cce705-6638-46f5-91d8-c0ea39fffa45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 373,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4127aec-62e1-40e0-a112-fbf819bcd190",
        "cursor": {
          "ref": "5dec4647-a610-4b1e-bd25-76cf57379214",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "c57dc109-5522-41cd-bb7f-304d506dfd21"
        },
        "item": {
          "id": "f4127aec-62e1-40e0-a112-fbf819bcd190",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "35c348bc-5f3c-463c-8961-1ef178ddff2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 354,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce5508e0-adb1-4273-98c2-5b8ac9d3e14a",
        "cursor": {
          "ref": "561cebca-ac3a-4678-9463-133783f48962",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "47a0524f-0b35-4dc2-aabe-293a8fecbfcb"
        },
        "item": {
          "id": "ce5508e0-adb1-4273-98c2-5b8ac9d3e14a",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "93468806-2e00-4ded-88d2-a6186a16b219",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 388,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fac3ab54-1a2b-4629-9e07-56c0058eb010",
        "cursor": {
          "ref": "e67492dc-0587-4207-9f26-917052dc438d",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "17d9189f-f971-4210-8618-f14580de222c"
        },
        "item": {
          "id": "fac3ab54-1a2b-4629-9e07-56c0058eb010",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "37a2b77a-62ca-42e1-b7e2-7042cfb6839a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 361,
          "responseSize": 1304
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca12c1fb-7b69-4b48-b362-017cefd14ca4",
        "cursor": {
          "ref": "e25c6dd0-63e1-428a-bf04-5b1c4bafa4d1",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "7c79aaf5-f172-4b62-9f07-0705c02ef735"
        },
        "item": {
          "id": "ca12c1fb-7b69-4b48-b362-017cefd14ca4",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "4b40a17e-3003-440d-aba1-90ce72ec984a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 376,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "399aa3f8-8c81-4dd5-84e5-ddfac89b3f4e",
        "cursor": {
          "ref": "5152a193-7fb6-4bc3-b935-8ab7668d05a9",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "5b125ec4-e275-4fe6-956f-fa25c8c5d075"
        },
        "item": {
          "id": "399aa3f8-8c81-4dd5-84e5-ddfac89b3f4e",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "17c7e38f-f102-4433-bb3c-304d031f9f3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 366,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba6abe85-7628-4a3d-a054-014a888607f7",
        "cursor": {
          "ref": "1e0b8d9b-7f5f-46cb-8be6-47c7363746e3",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "562645d6-5933-4679-a07c-644f7ca8d257"
        },
        "item": {
          "id": "ba6abe85-7628-4a3d-a054-014a888607f7",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "d95d60b4-78f3-466c-8d7c-33d6777b5255",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 368,
          "responseSize": 1194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6015c861-1dbb-4a22-aa7e-8857225ea2fe",
        "cursor": {
          "ref": "9d9bde77-c2ef-49c3-9018-14c8d14ce3db",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "55501169-8c59-448f-9722-8bc6cdaee269"
        },
        "item": {
          "id": "6015c861-1dbb-4a22-aa7e-8857225ea2fe",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "4210a327-8e20-4b74-aee7-75aa736f9cdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 359,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbf2bcae-3114-4828-aa15-8f479744267d",
        "cursor": {
          "ref": "12ea00f3-dcc9-4d10-abce-934960b3e08b",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "d461d82f-84c7-4380-a459-071389eafbd3"
        },
        "item": {
          "id": "bbf2bcae-3114-4828-aa15-8f479744267d",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "257f97f5-9613-44b6-8877-20c047a5b968",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 760,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24dada41-c179-4576-adfc-2d956bc2589f",
        "cursor": {
          "ref": "b6175cf6-3242-4d02-a30a-675fa5fa5b5a",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "5ebb8ac6-22fb-4ac9-8b19-a614fc5ed5dd"
        },
        "item": {
          "id": "24dada41-c179-4576-adfc-2d956bc2589f",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "63f4bce1-9973-41cf-9e1e-1415f2064de5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 955,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "594c5585-0b8a-44af-b35b-492cc3682c79",
        "cursor": {
          "ref": "baedadc6-5a83-4cd6-994d-bef955a9878f",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "17dfa552-58db-4f3c-94ee-2af22b0d9859"
        },
        "item": {
          "id": "594c5585-0b8a-44af-b35b-492cc3682c79",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "8635ab08-83e6-466b-b021-0239fa0c74bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 616,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4631cf51-ac78-4144-95bf-df5afae566e5",
        "cursor": {
          "ref": "2bad41ce-0073-4f8b-aec5-dee2f46a90c4",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "8c329d05-6b03-406b-a755-4de5c657b7f2"
        },
        "item": {
          "id": "4631cf51-ac78-4144-95bf-df5afae566e5",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "969b4cd2-bbd4-4b7e-9ef7-74f4bf4d18d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 839,
          "responseSize": 1323
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25a8b442-1c10-4521-8a18-77062e82f9b7",
        "cursor": {
          "ref": "e1c3cb2c-459b-4246-9932-e73e09f820e5",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "51c47174-a4cc-4c1c-9e84-d78afd73687a"
        },
        "item": {
          "id": "25a8b442-1c10-4521-8a18-77062e82f9b7",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "69218a97-a268-4a07-b7a5-6da16c460173",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 666,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82c9fc0c-46ef-4a7a-801d-e42daf494229",
        "cursor": {
          "ref": "37f949b5-ab20-4317-85b2-22750c47d47a",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "3b6eb883-4185-490e-a450-f69b4093033e"
        },
        "item": {
          "id": "82c9fc0c-46ef-4a7a-801d-e42daf494229",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "2aef1edf-f9b1-43d9-8060-8281958002bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 633,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "870b525e-6342-4661-916f-00f069fdd3fd",
        "cursor": {
          "ref": "2feab6e5-1016-40c4-bd69-0049e5053c79",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "bc915794-f702-4d57-aa95-13efe7cd9a3d"
        },
        "item": {
          "id": "870b525e-6342-4661-916f-00f069fdd3fd",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "f4538a3b-7f8f-4e0e-96b1-2096fdd0efb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 704,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bdf52e9-8b9c-4aed-847d-7046c94d285e",
        "cursor": {
          "ref": "10182b76-4618-4d86-8ece-6f061e046d36",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "5d1435ce-2e85-408b-b60a-b6224394e8db"
        },
        "item": {
          "id": "4bdf52e9-8b9c-4aed-847d-7046c94d285e",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "a56024d1-1b97-4b89-b1ab-f543e258859e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 74,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff1de47c-36aa-46ab-838f-27803128f92e",
        "cursor": {
          "ref": "b397b140-586b-4f90-b75d-afd2a0ab1012",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "f1a64ec5-0d48-424e-b0d9-1a68649edf13"
        },
        "item": {
          "id": "ff1de47c-36aa-46ab-838f-27803128f92e",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "7e5188a8-769e-423b-be56-9ed534368034",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 640,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7b0a5bb-ed4d-4665-84b8-eb852e594206",
        "cursor": {
          "ref": "8b79e04a-da9a-4bda-bedb-e96526a82f9c",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "8e48cf55-af3a-47a5-8044-9b1e64f2f6f0"
        },
        "item": {
          "id": "d7b0a5bb-ed4d-4665-84b8-eb852e594206",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "207fceec-9f77-444a-9fa4-18e57efa9bc9",
          "status": "OK",
          "code": 200,
          "responseTime": 844,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "30dd42f9-8ff2-4286-8de0-ff6d60e59fcf",
        "cursor": {
          "ref": "28ab476a-533a-4667-b959-10eb2abcbb67",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "c014cfef-419f-4829-a0a2-42beba5daa10"
        },
        "item": {
          "id": "30dd42f9-8ff2-4286-8de0-ff6d60e59fcf",
          "name": "credentials_verify"
        },
        "response": {
          "id": "e2cb51e5-941f-458e-b1a6-e2c61cf97a23",
          "status": "OK",
          "code": 200,
          "responseTime": 2213,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "1367faa1-975e-44fb-b84d-2ee2b10cb363",
        "cursor": {
          "ref": "e172e5f9-60a2-4e23-ba08-cc930528004e",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "a3c85651-ed8d-4f06-ae18-e159c0e2848f"
        },
        "item": {
          "id": "1367faa1-975e-44fb-b84d-2ee2b10cb363",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "6e8d89e0-a735-4986-9bba-6531596e0203",
          "status": "OK",
          "code": 200,
          "responseTime": 1878,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2658c67-29b9-4e43-9c3e-9141ec9ccb56",
        "cursor": {
          "ref": "8e3a3805-4f4a-4c50-a266-22c812d11660",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "29953e77-3d64-452c-85d7-229a32ded975"
        },
        "item": {
          "id": "f2658c67-29b9-4e43-9c3e-9141ec9ccb56",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "8b2fd2e4-f5db-4bdf-a36c-d410c1e4bb9b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2658c67-29b9-4e43-9c3e-9141ec9ccb56",
        "cursor": {
          "ref": "8e3a3805-4f4a-4c50-a266-22c812d11660",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "29953e77-3d64-452c-85d7-229a32ded975"
        },
        "item": {
          "id": "f2658c67-29b9-4e43-9c3e-9141ec9ccb56",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "8b2fd2e4-f5db-4bdf-a36c-d410c1e4bb9b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2658c67-29b9-4e43-9c3e-9141ec9ccb56",
        "cursor": {
          "ref": "8e3a3805-4f4a-4c50-a266-22c812d11660",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "29953e77-3d64-452c-85d7-229a32ded975"
        },
        "item": {
          "id": "f2658c67-29b9-4e43-9c3e-9141ec9ccb56",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "8b2fd2e4-f5db-4bdf-a36c-d410c1e4bb9b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a59e8b2e-748e-4c96-8eba-489a0364c92c",
        "cursor": {
          "ref": "86b4002b-1370-4b83-9a03-057bc8b3904e",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "f5947432-eb99-4443-8174-9875a3023509"
        },
        "item": {
          "id": "a59e8b2e-748e-4c96-8eba-489a0364c92c",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "55c76175-67b1-4b8c-b7c2-355bff9479c4",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 699,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc293515-3c59-4005-9224-7155147201a8",
        "cursor": {
          "ref": "5e246f7f-b18c-4a85-9138-46a61494b0f4",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "17391f1d-f153-4fe2-a5ef-6322c9454a2f"
        },
        "item": {
          "id": "dc293515-3c59-4005-9224-7155147201a8",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "1b7d9723-2be8-4904-be91-7ff2e21d63ed",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 69,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc293515-3c59-4005-9224-7155147201a8",
        "cursor": {
          "ref": "5e246f7f-b18c-4a85-9138-46a61494b0f4",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "17391f1d-f153-4fe2-a5ef-6322c9454a2f"
        },
        "item": {
          "id": "dc293515-3c59-4005-9224-7155147201a8",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "1b7d9723-2be8-4904-be91-7ff2e21d63ed",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 69,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b700d08-ff92-4ad2-85db-efdc1a7e18fa",
        "cursor": {
          "ref": "154d8d73-840d-4858-a86e-bc38abf158fa",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "296b1e46-6790-40c4-ae27-ccc1e7372b57"
        },
        "item": {
          "id": "5b700d08-ff92-4ad2-85db-efdc1a7e18fa",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "27e77fd0-6f85-4cd5-9c66-dc4c3cc6f27c",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 1055,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2bd09dc-3145-437a-a5f9-028f06e69b77",
        "cursor": {
          "ref": "3f3c449c-01f7-4067-866b-ce7bf0c6cfd1",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "4f77b225-5137-4ad8-8f71-402c16bc39dd"
        },
        "item": {
          "id": "c2bd09dc-3145-437a-a5f9-028f06e69b77",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "411fdb7f-414a-4a47-ab0f-422dc12b7e0a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2bd09dc-3145-437a-a5f9-028f06e69b77",
        "cursor": {
          "ref": "3f3c449c-01f7-4067-866b-ce7bf0c6cfd1",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "4f77b225-5137-4ad8-8f71-402c16bc39dd"
        },
        "item": {
          "id": "c2bd09dc-3145-437a-a5f9-028f06e69b77",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "411fdb7f-414a-4a47-ab0f-422dc12b7e0a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e3d358f-c6f5-4b12-88eb-d418b70bfaa9",
        "cursor": {
          "ref": "ba665995-9f04-4096-ad4b-f6944997ef05",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "b26d7fd9-ec31-40b1-abaf-2664816ac950"
        },
        "item": {
          "id": "1e3d358f-c6f5-4b12-88eb-d418b70bfaa9",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "aba795db-cb92-4814-8876-50b9fbd131a1",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 956,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}