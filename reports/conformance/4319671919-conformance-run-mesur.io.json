{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "c1449bbe-ffe8-412e-9a57-f67e2c95129b",
        "name": "Clear Cache",
        "item": [
          {
            "id": "ba62880f-45f5-4cd1-828a-347049d16ac3",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "bbcc0ab2-b7a8-453b-9e81-52be26bc6b46",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "d43a44bc-6998-463a-83da-b9f647e63b9c"
                }
              }
            ]
          },
          {
            "id": "fe6ad982-5cc9-42af-908c-ab1601dabd21",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f02ce136-a65a-4067-8b01-32ea37aa5f98",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "fd4b7794-d84a-45c7-a946-a66f3ea878a2"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "1aa441a6-5d6b-443e-98b3-46b53d20d2f2",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "b104d496-ff21-45d6-af42-82a01534aac6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0803ffca-c481-41ab-af10-1c7f91ca339d",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "644977dc-bea6-4422-aa0c-99c804f85bf0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "88bebd9b-b44f-4d5c-8b43-876c78c1d732"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d00dc55b-13d3-4c17-a413-02c08e5ac06b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8e224793-dc25-4b40-8f98-129468441254"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8c73a090-8901-4718-913e-1d6b0de1c832",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e3935565-8424-410f-b5af-daaa8a955771"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4b459cd5-8469-46e5-94b1-ef02e7434e13",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "039735f1-3a2b-4f52-b931-05f3e107b1c9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f82e2642-21c9-4ae9-892c-1181ac2b9903",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2867d757-fec9-4e25-af06-cb2c0e6583d5"
            }
          }
        ]
      },
      {
        "id": "7c60ef73-746b-46f2-a5a3-4c9eacd4a84c",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "075f6a7e-0b53-4838-84f5-e11031807c69",
            "name": "Negative Testing",
            "item": [
              {
                "id": "544e5c4d-31a6-4f78-9134-2a5f1a2a988b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f6f20e0d-87d2-4efc-b038-0156e7580916",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90730373-0063-4852-bd12-ec7d3e427607",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "aa5b7829-c4f8-4055-ae11-9dda29bd6b4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "778e23d0-acf9-44c1-834c-2ad266e34fe5",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b409d2e8-20eb-441b-bac3-33acefd7f5dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3c7e86d8-9c11-4f4a-bdeb-45ad5636fb0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a20484f1-914b-40ce-9e06-8e50d357284f",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "557cc03d-e38a-4a79-8913-9a353dd689b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "887e9d44-b2d1-4489-a4c7-edc9a5a61687"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2a3ffff1-b7aa-4b8c-a869-800823093c20",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2ef3c145-53d0-4973-8fdc-736ccdeb0e04",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1cea605-f032-44a3-ba08-171aff711096",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5eb53d43-b1a9-4931-b942-4e4e60b701dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c06192b9-7e5a-44a8-bc02-d942b8625709",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea4fc597-dd84-434d-a768-4c4505c88fb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52114c54-5bad-45a9-8fb0-e704d5598242",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b52aeb0-1b9a-46a6-b7a4-3423534557db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d9a1e495-3e8d-4e74-9629-d50e09974367"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf9747b7-73ae-4314-80bd-f814ed6d80d8",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "b573336d-a81f-47ad-9523-eb16b4f426ad"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "5c18f323-31b8-4e6c-bafb-ea489ef972ca",
            "name": "Positive Testing",
            "item": [
              {
                "id": "80937ed0-c40a-4073-9dfb-2e5e825b99be",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1112c7ac-005a-4347-8cef-a1806ddbab2a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "765a811f-7d9a-481e-99da-17abd632425e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "91ead8f0-35b4-46c6-9bf9-04fca0ed4192",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "53fcda4f-082d-466b-b4cc-c5318cc62fc5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "54a3468c-ea3a-48a0-8555-397c92a5c4e1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "65969082-d4c2-4b6c-a889-06e90018c6a4"
            }
          }
        ]
      },
      {
        "id": "74cb03db-bb69-4517-bcca-8f64fd494033",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "54f50bce-d4bc-459d-9957-cce71fa18d08",
            "name": "Negative Testing",
            "item": [
              {
                "id": "16c79ca2-ae4c-4042-9814-966a2b7f87df",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "f02059e6-4205-4dd9-993e-1217f7b3b039",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2a90264-0cee-4256-ae08-2b916ebf982e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74191a3b-03bf-46d9-abb7-a4af176d89b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcb0a730-9880-426e-b3de-aca4d52b29bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "747edfc9-fb41-4ba2-a5ce-af18a0026ddd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aae3b780-f081-43a8-bc65-75b5515ab185",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b7f60d8-7c6e-406e-babf-971e6246ae54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba36a944-7fba-4d4d-af90-d0e91f5bb5e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6d01ef9-d6d3-441f-8dd7-8f419c7c1502",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eff8a4f2-0a61-4966-ac9f-329cad536494"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21d81fa9-22a9-4161-b7cc-a77628a0edb7",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "979f8b53-e224-4ba8-abd8-f5e083e3a6b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a7a9ff3-2083-41d6-a7a2-069a63f4e023"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "997f0c30-3c32-41ab-9248-78cfd7655e88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "27d78694-0867-41b9-a7f3-d43fc99c9722"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e95e7d5-9165-48e1-b1b9-5c72fe605cfd",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd9e7846-4efc-4e89-9ffe-ad18185271db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06a8d3c4-ce7d-40f3-9693-19dbb640d501"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0952fa39-4b6e-4739-aebd-e74ea66c2002",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e656a291-5413-4b4b-bdd8-f5361077251b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e8e9a68-1067-4660-80e7-039a1990cb0f",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71ef94be-de34-4f47-8df4-7967fb9f9745",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5690da9-666d-4c9d-81f4-6914840d459d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ef2b45e-a1eb-4417-8009-8b45081d5206",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "608c0b57-3e0d-4de7-95a2-8ee829e8057f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fb2b70e-add3-4d4b-bb81-b616221a4ffc",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b48972d-2628-496a-93d7-9b4b54a83ee5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a5b1228-6568-430e-bf32-2a79188f633a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa9b4601-5242-4e1b-9d05-fa0141b64b34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "00373597-6db7-4c98-b5fa-73007ae609ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d632945-b6c7-44d6-ad8f-7ed8d91e15fe",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "790915ec-4a0c-4284-b39f-024068c5d52c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e42f0061-c0bb-4ca7-991c-1cc74af70203"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cc5f119-2a5b-40b3-b3b4-48c37ed184cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6e820ac8-321d-477c-9e95-77d949ac7eff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96b19447-5038-4b30-9214-17a52a98a323",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc99ac69-8a7a-4fa3-96da-3706ee51d48e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dac5193-5ff4-4a02-9192-b7a2cbc92080"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af678e7e-8e43-4d4e-ab8b-821fa0692163",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8c92a603-a6bd-49ad-8d73-fd0a1965184e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b623ac5-961b-499a-b924-719555ef133a",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "079ba282-52a5-48c4-adf7-a5cce611cc95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd2b15dc-989d-40f1-9050-31a3ca183307"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca3755db-7657-4de7-b5ab-8e52ce8fef7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d514d89f-bd04-4f06-980e-aaa11ec5e6ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5baa00c-09aa-4a38-8695-b793c496ecfe",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9763a9e8-6645-4dcf-a78c-f4e13e63530d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c0fd48d-9aba-436a-af84-340348dff9ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b79d33b-7f5f-49dc-ab53-c3876d5ed29f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "84b7ba31-5385-4eb1-a773-baa0b3eee98a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d518749e-e71a-4c46-8904-dced99a42219",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d74671e6-74d1-4ba9-a4e7-918682b036ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4181478-68c4-48bc-876a-89f7214f3d70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c0a6510-f778-4a35-9d73-83cf8b002a40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3f17b6b9-96cf-4034-9669-7f64c296a900"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6348655-e3ea-4561-ae9a-9030e19fb516",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d35bef26-64c0-4738-9131-cb58acc379bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8099bd41-5cf8-4bc5-b7fd-e45f8bbbf90f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f7c42fa-a5c3-4a52-bc1a-02f684a570a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c4c2c170-fb1a-4577-aae0-2b59d35b8f29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adb7de1c-811a-4ebb-aa98-c69255b1d5dd",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0b5ce13-1323-462e-adca-e890e8dd4376",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "435f84c3-caad-473f-9f2a-5ac7ce2fa161"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cff72de-38ea-4eb5-ac1a-6c2c48083048",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5b18eb16-3e5b-4d51-9086-cd4c5687d9ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b04c70d6-2017-4619-91ed-8857b6799268",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e206040b-b664-47d1-ac23-71c8aa48c4bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "319a26fd-b81a-4898-a8ce-f70a8d7a0e54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cfaabc3-7853-473d-a54e-be885d5dd74f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "81697dfa-90cf-4076-8516-b34641ffb509"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf511ba2-211b-43b7-be34-b0c4a5f94f14",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07690093-2523-4706-8450-47af35258b6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e12b7da-e399-4793-bae3-2f8c8abd6fcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77da3851-d4d3-4a95-932b-e9fa8ad5e081",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8a03b990-7991-4a4f-b4bc-02a2ca63199e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8413023-9400-47a3-9836-4ec36969da6d",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "863f00ea-2df2-4d54-8ce6-a63316d1443b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ded7200-deb9-4cf1-91c7-5055264baf17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de5f39e6-258b-4034-be52-f7b361930a06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bd1ad7ff-582e-464d-ad74-a387fd382be1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abd7f2db-b31c-4e61-a210-8c46b1ba4e51",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5b2e134-5826-4ba5-a4b2-dff8f1094a50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3320aa4-d11a-415f-9c87-970575949279"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5907f52f-9c5a-4cc8-bff3-894ae43d5fc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "82148408-5a96-4c53-a386-62cb98a9dd31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5843dee8-1c73-47fc-875e-c08c6e6be942",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7685a8ba-9e03-460c-9b6d-a638c4652f63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b67c9d2-670a-45dd-93b9-6a4dd5473ee3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0675e5d4-54bb-4bd5-8e27-c8b157f174f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "5fb7a152-afcf-4f3b-b468-4d49b3c67182"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb02f7d8-0ad1-4781-9eb0-ca5f8a7900f5",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acd205e4-6c20-4e81-91b2-7eae80a487f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d989029d-9fff-44a9-93ba-7d6355d7812b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84eb8956-311d-4caa-9643-76d0b221ff76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "144a8a22-e4cb-47f1-9c08-7720faa1c1f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c9711ac-313e-4e53-b456-8152e1498e36",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6d81a5b-3492-4184-8db6-6520eea0eadf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53758b73-447f-4dbf-91d0-32b5401de06f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60a92c65-a2cb-438b-bac6-4a0eeb3a4a22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "844578d1-f0d0-4a37-a6ce-d8e54a0f533c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "204f3c4f-dd72-4381-93a5-ace218de363d",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c839dd30-51f0-49ea-9ea7-a5e65fc4a42c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b6924a8-a009-4b52-a965-af0b78a91be8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ee93539-d183-408a-9593-8f501a09115d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa4f0c08-8f9c-4fc0-81e6-2d94b5e7c117"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb5b8a2e-0b87-4e0d-ad83-2e6849b56068",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85f17055-bbc4-4283-805c-647b10983bd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37163774-e2ed-4e1e-b445-3be8397c6dd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c7ee751-dba4-47d3-a557-2a36492941b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "81661bfa-2c07-4f4f-ab2d-fe8616056d1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5bce02e-6fd0-4581-bac3-2503751a68f9",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdabb31a-2aa8-4025-9952-39ef07d366ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "787c01f1-4c0b-4731-8d89-c50453c3b83a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed05ecf6-3c0b-4d96-a2b1-79a3619f371e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fca293c9-6da8-445e-abbf-3e2e01a37e17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13c52be1-2938-4794-85a9-39ad917fed5a",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99606c75-1575-464a-bb87-e50de2192d5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82a44100-7410-4d2b-a2d8-583a8375e94d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de96585c-0fff-43d9-9d04-52f5f383df8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "366fdbdd-af6a-49ed-a417-7d088cfbab9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36c10e33-fcb4-42c7-a0db-6a6ecfeb4eff",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e28ebad7-2a87-4ccd-9cb2-4b60cdeb063f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01a1692f-1369-42c9-a0df-d3bb1dd6014b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f59b3786-25aa-474e-b7b5-4b153e3ba507",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b4b7886-a98b-4a59-8fa4-c58a519848d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "155dfb50-cc85-41a9-97be-b6033d558816",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46a0b146-38c4-4ef8-9f0e-cab581508eee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "104608c0-87fa-4d7c-ae89-1ffdd4fe142b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43d15794-37ad-4418-a4dd-74fe43d6ac61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9311f850-da7d-4efb-86f3-e214ae445a2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5721a9ee-ebc0-4958-9b20-4acc653ce72a",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86a64b47-26fa-4276-af72-50fdb270608e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b1761da-4724-4d4d-8355-9a8952db0270"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6e06e4d-a445-4d8c-a3c9-c22e3c5f2979",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8c7f3d2-46aa-4f56-98e5-fb34c80da71d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cfa17a9-e6e1-4602-bf27-e0ef920f023e",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "206f7106-dd29-48f1-a097-aaf4a085f5e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03357905-e3c2-4088-8136-7867355e026f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85147ffc-2023-416b-90a7-e909d62af107",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a7251e7-d8f8-48c9-b9ca-5b25d3ca8340"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca6c3e25-256a-48a9-8d2d-cd8abbb7dc44",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79f24d05-9717-44fb-b2f1-01aca868d666",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ed0d278-f7d0-4f76-941e-df21a0a22a20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b81e24f2-8f5c-4bbc-8657-772b7dc6822e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "459fac24-f949-4fb5-9e02-acae8b8a2d7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "300839e9-80fd-484d-9e4c-1625689c6fff",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "232e698f-f02b-4230-b48f-fe7a1e6a0437",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "391ad211-dd19-440b-99aa-51fc20b07bcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62f3eae7-5bbd-4b79-9cdd-6d136fddddc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc54cb67-0f6e-41a0-a732-5caefc16d921"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2e9b3e0-c9ff-42f1-b4d4-e596bdef0a7b",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9433dc3-3a05-4178-8d44-d80530e28dde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6325fb4e-d759-441c-a1da-7d6b96d7c29b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fc8e325-21b1-477e-b461-0ffd3f98a8fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "87b3f7b1-3556-4621-a0c4-c64419bec304"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaf8788f-b49c-4b32-9ec3-cb9c30c53c61",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d7b9174-9f7b-4813-8878-af5079380183",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4fec0b4-e8b4-473d-8788-a1220dda2c80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4ed2083-0129-4d01-b73b-da75ce8e28a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a0477a4-93e7-45cd-bf94-7270b633f3ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14ceb553-840f-4e5d-93ed-4b18b3d9461b",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8db3ea8-2db9-4eb0-8826-e62123ccdea1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "874bac1c-04c5-49d3-b5b4-74630bc3b3ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5078fa4d-c78e-4781-bed2-9e3c37784dd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd49e7e3-fcc2-42b0-a95e-d420b0f6fe42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "def1084c-f572-4bce-a38a-cd1e251e6588",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e5830af-14fc-4adf-91ac-a577acab39c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7a6ea64-d089-4628-8a91-1b4b69db2b53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "001302fa-02f6-4320-8525-c5db132cd23d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "09d8676d-2189-486a-8881-6ade697b1b83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74874f0a-0fbf-47c2-b7e3-4cf520d6e037",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "feea73ce-774c-4501-8e5e-4583c03e010c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f66eb7eb-34ee-41b8-a072-78d513dfc200"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5e28b3b-bdb0-435f-b940-9c63958cc02e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "6dcb317c-729f-44e3-851b-fa9339254fcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0d0a01f-775f-4bf6-bb4e-7bb7fbe73101",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e49f545-4106-4590-b8fb-bb03f4787eea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "af844091-6ece-4c56-b2fb-a9f47932272c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73cb5fc5-107c-4aaa-a103-0ef64ea6bf84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "26b10989-0c60-456f-a5b0-b9e75603712d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea670820-0605-4370-af1b-5a45c87fe068",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c3135da-778c-4f8a-9dfc-1818b5609046",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b22dfd2-5786-42f6-b28a-a79754711362"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15035f6f-a004-45e1-8f79-e92a9db81528",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "80540a77-a63d-48be-9463-461b5c28a1b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80220df0-c354-4d04-9ffe-edd038fa04e7",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb1d5c82-fd42-4cef-a961-48cff6c321e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bac9511-373a-4b20-8408-994c721d2952"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "740107f6-bfb5-4cda-ad95-2dd118751e14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d59d9f37-36ba-49f0-a213-663c34ec9ab8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b33fb906-1226-40cf-a3c1-313aab6f29a6",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27582c07-6fe2-4fea-b90b-a0f8beb8e843",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ecc627c-91b6-442f-b20b-51cb0b0d7eb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9431e2f7-37a2-4978-ad06-7b10027fff0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "01b54a35-2505-4d89-8068-d7be7f3d410c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cb0ed9f-ca60-485a-b182-5d6d73c35b8a",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "042a682a-6086-47a1-8f87-3d994a604ed1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9202d4e-0dcf-464c-8750-7cde9abfbcdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b43de975-8a4a-4c66-ab52-f989066fce7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "24aa96da-9f59-4921-b9d0-9f675ade3a6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4947d41c-fb85-4c10-a37c-986672b8a3b7",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00764059-626d-4fb6-9b44-6c8b533d5070",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e483de9d-062e-4531-8aa2-3550727d61b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13fb4bdc-9d29-49c8-8549-aaf641de1f11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d2760278-fe8a-43c5-9525-3148e14f8a86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33a3c68d-98cd-4327-a768-34a8bd0fafe2",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ad152e1-79b7-4fb2-86d3-df9ef0772638",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d751b96e-4b55-49cb-ac48-c1a6dff23131"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "458f342a-6808-400a-b568-15b7b12b802d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "72724ae0-d55a-4c8b-bf42-3cdc13cee222"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ca8140f-a124-4f42-9c8e-6694a4740ec1",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0980ad19-0ed5-4879-8904-8f2d0faed903",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d4b0cab-c486-470f-9a29-a613a78ad4df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2367bc1b-f1d5-4f28-ad4a-0513c1692c0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "142d4988-ec2a-44c9-b72b-1eadc817bb06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe2cc90d-8893-4d33-9ef3-0ca0a251a1b8",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59990706-6563-48b2-82a7-ec3c1bb58ebd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1b83846-377a-4e01-b33b-653d66a3caf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "419133bb-64d7-4c23-a5b5-4bdb6648d911",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "b75fea8d-8842-497d-898e-449022869b9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0b04744-1924-4099-b88e-b1d170e124dc",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0441842-9d0f-4681-8fe1-71f549234dc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d4ed38c-6ba3-406b-89c1-8ca6aa2f84ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9fc4c64-0c28-47bb-9d76-fa5ff58d2ca8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe6389bc-d250-46bf-a8ed-abf2c7652e9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "702b8dec-9ec3-4d80-9c68-a00b430f0bab",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac99a412-dc81-4eff-9ec0-f575db1aceb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bac0ebda-4c7d-4a56-9efa-f19d7b4a2c17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd129bc0-4c74-4248-bc4b-4288dad5c676",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fbb7468e-b1e6-482d-b4fe-a2dbfd6f266d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a51eac81-21e8-4bc0-acc0-d7c207514dfa",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7719f0fd-db5c-45e0-af11-51bc03c9c694",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb23b728-48d5-4d4c-b41d-13db8d2f0f25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5eeb27ef-dd0a-43ba-b45e-b4e83df034d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea82b6b8-fd8e-4315-9304-8e5f5cbafe10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e95e72d-06ea-4a19-a14a-6e5066f59046",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb7da17f-a45e-415e-b392-006afbac4420",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d82f4ab-fa86-4db7-afba-3e053136f837"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef6edf7f-1b1a-4b4f-b541-00940536f33a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d9ff2ca8-0ae1-4de3-968f-4df402b7b9ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d42f5cda-c869-4aae-a32c-59e16bb02597",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37c498bd-efc4-4d75-9197-427767029675",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41d674a8-5d11-4273-ab48-0f307a7e5d13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7ad2bd1-a480-49d7-99d6-4737c899a98c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "95509439-6ef6-4bf6-acc8-9760fc54751d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6b13608-c9c9-42d1-9185-5d84535ba5d5",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c81a283-0945-4299-9047-7d7d8d727220",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d63c178-12ad-45b8-ad58-4c923a4581f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33e3ce0b-c6d6-4253-892b-7a177c609e25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1f76cdcd-cd2a-4252-994e-d11cc34a0cdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a656359-b428-4eb6-9453-a84d087d89e8",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c390aaa2-7301-47dd-98c6-51a2db7a4a98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "559007b3-826b-45d7-964b-3d1060eb030e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "727886f1-3f74-4820-9ccb-d4a0ba078084",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "cdfbeb0a-5208-4898-85a6-f13db1258b5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dbc8194-612c-4a51-9ec0-ebf47a0d859e",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33edcaa0-0a1c-456b-bf2f-f44557d1e538",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a62fbc5e-dc6b-4816-b6ee-f296a90dd5ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d713090a-67e0-4fad-8cab-5c29ebcc9729",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "09a963a5-3be0-4e2b-ae5f-3575990a0aff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7540c09d-b89e-46d7-ae61-0cd0a16bc08d",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47c79db8-bc6d-4ba2-b7b8-854212d6b513",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1efed59d-d75a-4451-b0f9-272457b668f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66a0f6e9-49d6-4fce-a51f-d08657d5b051",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "89e7a4fe-d6d6-466f-8ab9-96d93b2b02db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fff0ceb7-c3fe-4f38-b9e0-c485769df033",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "966392db-f7bd-400b-8cf7-8b4931be2f69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5422c991-70da-45d9-b06c-20b49a52a372"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4eaf396-22ed-4623-9546-e044b1ba96a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4561bc86-49aa-4eeb-86c2-1aeae94a7b94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "388a8baf-2530-4000-bf9f-897391e2bbf7",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "882ffb5c-9808-48cf-ba44-432c7b990c47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cb996ef-a7c0-4d2f-929a-ea2f02bace96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f64477a-df8f-4368-ab9f-cb729abbd280",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c87f894e-33bf-460d-885e-ea8ae6ed5c4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0403510b-9dfc-432b-959b-871ea0bad46a",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4f3e6d5-eb80-4366-8b01-593fd97cbb29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d403044-faf8-4ca9-ac1d-0ddda50a6bdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d05f0934-318b-462a-ade8-a612361e6aaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "24401993-f277-4ee6-a60d-2ec3c9f56c8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16d5bf74-559e-475e-a415-3b592e6592ce",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbbc1f33-357d-46a2-8b68-dd2e2689f58a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd3995bd-21db-4fd4-b09a-59f0c70834d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8a114eb-22c3-454c-aa39-c182e9a40e93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "bb41a986-13c5-4ef5-b81b-cf669150b833"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b549af3-307e-41e1-8c1d-73dde5202e78",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d92b4d0c-8ade-4fe2-985b-0d756bedc7f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5676eebf-bae2-4097-a6a9-4e0040f4e8c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b816159-1f4d-4794-9493-10ffc82df0a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "633d6a7b-d476-4bc9-bdf1-3e5174a143de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97bf89c8-74af-4135-986b-a1c8dc4fd9f5",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09eb87ea-843e-4abd-ae30-228b207a1e48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdaa3d99-c41a-49db-a373-f183024988fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "703101d3-50a3-4c65-b1c4-8b5d3a7bfd17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f14408cb-720b-486d-85a6-f61aeb153e7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bcd0d88-1550-404f-a59c-fcfd5beb8312",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e5cbba6-2d7e-43bf-aac6-c28f69196e34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78abb8cb-4f56-462c-8741-8c8f26653686"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9986f5e-f447-4936-b5f7-8c27b83507bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a840937f-3e18-4d1f-9504-468558a0aafe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ec15e3a-9fe2-4bc8-ad81-9c1d30e38572",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f54353a-029c-4f28-a59d-ff939705d10c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d46265e1-5216-4945-bec3-9af1bd735441"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "896a5ccc-195c-4d31-8f12-6bb84f597af0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "12349bf1-5e3c-4dfb-8cfd-e6a1d19e2c22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afc0b7fd-dff2-452d-8b31-6421a4bccae1",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56346012-e0d9-4317-b183-f657773d6214",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9e913a8-280a-478d-8354-3cada7b6cd5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "773b31ff-5d2d-4d90-aeda-5a9fc5674da0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "493878f5-6c74-491b-a6a8-12b0da3c56e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f9b5e57-8d6f-4497-8d98-8005201e4751",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de3f4bd8-bb90-44ed-9a04-e381da2db673",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c62a7aa5-bfe0-481a-a5cb-7cf3ead6c11e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81b53646-3ad2-4db1-bdef-fdf451e02199",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "0fbc10aa-51e4-4023-a526-838823756e9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fae5f15-646b-46ad-bf2d-7c7686569718",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10961997-a75d-49db-90f0-b403fcccef9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afbb90c6-7c93-4068-891e-f70a24214dcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02cd49d8-5234-4628-b454-a09f6ae92d34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7fbc0775-3c09-4c61-8552-c81a52d2d753"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b755f6cd-9427-4c32-905c-395f12016f34",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49b56d0b-8f38-455b-85a3-bf4b2269a35f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b144b0c5-22a7-40e1-a9d9-56c97e34b4ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d937698-21ca-4bd5-95c1-248e13c5e806",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "19559fcc-698f-4321-8370-272b632e41a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "754ee18b-adc2-4ed6-9a03-33ec3d032924",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1fb82cb-706b-4e7f-8685-781d325b14e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a088f706-d1c4-4f4e-9fe4-61b3f4681144"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1def0450-7a51-4a20-a1b6-7477196d204d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d779b768-d1bf-4ccb-9168-d54238f8faef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83631d29-5622-424d-b070-75ccbc32c926",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27a48b05-0bad-4532-a902-942374535d59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe5750a2-ba27-4c07-8c53-e9b0d542aade"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09ca35be-0461-49f5-9479-ef56638ba394",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "35c8e656-30fe-4517-82f1-177c3066e1eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "104e982f-c73b-477d-8fe2-e0fd6773cd48",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75e5f775-4088-4be6-949b-e61489343c08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9596ab65-11a5-4e17-ab5b-e9f1aaac19a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "916592a7-1c94-41ae-bf2a-734e44b3642c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "58b34f08-6498-4b5a-81e7-99e333ac86a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd6442bb-ba03-4564-a419-3cccde169925",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78c7c348-69b7-4965-8dae-55b000dbae3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b63b8859-7b22-410c-a343-1280da8aa72b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36c7ff1b-4fc5-407c-90a6-5438de7d78be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "37bf9389-fe31-4ffe-8a3c-0c2e45e473dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b270d556-bd72-4cc1-a79a-91ee64c920ae",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f2ff231-ae91-454c-8e4f-e2e5ac154c0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00235011-c8ff-470b-955d-9a1fe0a4f4e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55c438f0-4b1e-4df3-87ff-f5d66becd1ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "39cd9174-81cd-459b-bc41-0d433b15030c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8119491-09fe-4de3-be9a-a85214435aa7",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a14e083f-7d87-43b2-b308-bf8b2fb2ae76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afe68dbe-cef0-45d8-a9ae-dd9f0783c267"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "914cb48c-1f40-4b6a-af10-ce350b4def50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec6f000d-ae3a-4e62-bf9f-dd06e1813aa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "379a398d-acbc-4076-a11e-96624cbeba54",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7487ebf8-e95c-4c5a-9439-9a24bae84a57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8aa180df-a256-4adc-a5bd-7bd14aa23600"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83debbde-bc44-40f6-aa30-53eec13220b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ac5f02f-766a-4cb5-92cb-152f3a41ac7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9b341de-107b-40d2-8722-6f6dba100f80",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa013d58-7ad6-4139-b2aa-4b59ab573268",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7186117e-c1d0-4f7d-8600-58f59799bf11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b816ed7-5177-4701-80b4-57057ceb4e47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fe283acc-1c50-44a6-ace2-433213c221a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f84187ca-d939-4a60-9ff8-49e78bb671d8",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8871b13c-3519-4251-a8a6-9846a0de9f75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc5ba752-b5e5-4be2-b383-4a379760486d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61d9540b-eee0-435f-9e50-1445920ec128",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "243d8d00-e383-4054-81fc-76cd44750c82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53b9860a-9e43-48e1-be5b-cfccf5097590",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93b16f08-f35e-4b06-bc5b-fbb9360456a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b55dd192-8ca6-45f9-9cff-0c1433fe398e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "049c3b2f-0a09-4411-9330-2ba5723b32e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b1ccaca-2541-41b6-a323-aa2b9dfd4dc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50bf6bf3-971b-4081-a62d-e69da63eefc4",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c40c427-4207-474e-8937-e2960f70e729",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b86e5809-3fa6-4dcc-a4f9-9d4c89fb6b76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89d712d3-84a4-4149-a50e-63e16c887773",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6cbf629b-4a43-400c-ac93-da54519a57d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5adb8e8-6e75-44e5-b568-9d307eebc754",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46a4d952-3487-4226-bd94-abcd7b5b2eea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "397d4c84-a427-4041-8ba1-75f0a3289853"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3efd620-a236-4009-a2fb-0696a2c972cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "68bf1036-e27b-4c38-b752-014698b057af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "700ed7cf-23a1-47ce-99d9-1044fb2f29db",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0257821-609c-4e73-b489-fd2dab3df7e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7750ec0-bed0-4b6a-b282-3c896d11c970"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bbe874e-73db-4397-9828-ee8d4cf10f9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b21612b5-b861-437f-8ae9-e92ad64e8ad1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0050a5cb-0233-4cc9-aedc-b175cbf33954",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37136616-6726-4bc7-9947-ae3996674493",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0173becd-01f1-4bf8-8eb8-42b2f8f9556f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ffe3c20-20aa-4809-ab6d-7b99cbf96c57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9a744440-a9c8-4871-b64d-657f69a126b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a45d3119-0627-4de1-b7a4-d8e3150e4779",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "043fb4a0-6c00-4254-9033-05960f49615d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26b6a896-0888-49af-b781-c3e56e77d55d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15ae6651-e960-4164-96b7-1e4783bc6cec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3e3719ab-530c-4b8a-82d7-ccc8d1c151e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e102a02-f366-4004-9e21-823a59de6128",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb17ae7d-da93-4096-bfe2-945d0fad926a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d49d8e8-2f95-46b4-b6fb-3058eaba5425"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "622de330-98ea-42fd-9550-f58748831ea7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c779053-f9ae-454a-a1db-6b5f077cabf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f62ff050-3d23-46ca-be51-f3aea4716fe9",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "317fd076-e182-4ff6-9952-4abaead8e587",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e57e7ab0-ba20-4484-92f3-e1540fcd8ece"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e96da2f-12d5-424c-a13d-e1e677ae2936",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9bb19ead-a205-499b-8d47-8a5a43014bc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f0dc1a1-b91d-4088-ba4a-7654d7174b44",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97a9a4a9-fe66-406a-85ab-1f5135f8727a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e214556c-d628-42dc-8bdc-b3146c1853d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fa07c93-12a6-4e00-b950-b69623732a43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "28773d7f-4890-49d2-a1ed-ecd3528c0423"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59cf6e74-54ce-4478-8653-95fa175d60e9",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15184fc1-4c92-408d-8370-bd48c3d447e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92a96bd8-7b7a-456c-9899-8e45a78451b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "085c9f90-dbfb-45f7-b9ca-d5bfafd3ff82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c582a069-aba4-4dc2-800f-7b9bbabcd2fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8d19271-8ba3-4b0b-b7ed-e361d5e69ccd",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ba78985-01f8-4440-a2ca-2a1cba1c6961",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37c69a82-ccc7-4bc8-bbb1-27622403700e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ad9a3da-e3eb-43eb-8e3e-12ab41c99d5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "572f45c6-b173-4275-b68e-9a4887d9452d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05dc6129-2d69-4674-983d-6616d630f4cd",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7c3c5cb-ffcd-493e-8ae6-f6cc91329f05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d237ff40-40e9-488d-81f9-d66170b911a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6141881-0f6a-46a1-892f-3f957567455c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2a9c7853-66b7-47d8-86cd-27978c60a18f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da8c5cda-bd04-4864-9587-2acdda4b29c6",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9c8094a-1401-4c4b-9844-1f9899ad8ab0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c47a17f7-e8f6-4c1b-8332-8425e38c94df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41ad726c-cffe-49bd-b1a7-bf147e1b5c67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ed81a0a4-e551-488e-9b9a-897ea3e2c6cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41d83f9d-17f6-4b0c-8fa9-6676edfd1730",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "614fc2fb-d1ea-43e9-9c95-55838efee481",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9cdeff0-3ee0-4bb3-a030-c32ebad8b2a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d123f0b0-a224-41d2-997a-fda9607b2e78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6adcdfd9-d6f0-48ba-8cd8-2f61345713f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c242ae90-3196-4687-babe-5ef834345eeb",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c8e9e57-fd08-4854-a71f-fc39f6b7338b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc65141b-8d43-4222-a4d9-c2fe586b6eed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b85efff8-ff53-4b70-8dde-219f981ea135",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b2a95df9-ede6-493d-9f4e-ce250a0095b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe6d0174-2e8f-4700-88fb-257c6e627426",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4af32b2-350f-4bc3-81d4-3646e3affd9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e86dbfa2-3bd6-4bc6-b201-253e83152391"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ddd8793-fe5f-4dd6-a01c-5dc11e1765c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "cf3127ca-2f4c-4807-a221-3e591cbc45c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2ba661d-96e6-4477-aa4a-7fe6e44073fd",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c4d6c51-87d4-49f2-ac90-d35d611bb118",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be392cf1-f9ae-4bd0-a3e5-113e9e007510"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94da31b8-1271-4ecc-8d60-d55800cee580",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "c3cc24b8-ed4c-46f0-af12-534330ded47e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66f0c481-8e62-4cb1-b375-acfb9b648b67",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fc59366-53bb-435a-9cb1-e10641aba13f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "34fc0b99-a588-4dec-b026-d2fa5c62af4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c13a3eb1-165b-4c9b-94c3-e648690a7b3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "a3d0b0e0-d09a-46eb-9cb9-fff52a8fc79e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "73bda446-16d4-456a-b50b-3811d55cbd51",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ba693e55-b76b-49fc-a88c-21a0ee6ba033",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26c741f6-8edc-4832-a17f-898178ad6ba4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9a70bcdd-d798-4a2c-96f1-6228dfb045dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2dea6ac-51a0-4597-a5c6-3f817e30c097",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "addd4296-c581-46fc-b54f-aed3ef0cc52a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07d94602-a922-46bd-abab-68acaa13fc9d",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12e2f203-960a-4ee4-aaed-f73d18af0fe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d31afc02-8099-4735-9583-962fb89e5b9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15c92310-a491-447e-9aec-d72d1f237559",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b2e02f64-a6b4-462e-8cee-d8cb1ce213ef"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dbb50c35-c236-41e3-a4bd-be3e1a08b8bc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cd721af0-f152-4c4f-b36b-38e117b9e5db"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ddc94b76-65e7-4ffd-b043-912dbad23015",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7f4f742a-f63d-4d5b-aebc-88b71716df12"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8f41a1c9-fb36-4d68-abf0-b5571c4b2da4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "aafaed88-f38f-4b15-bab4-99aa024ab0fa"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e19bee91-94b1-4771-892e-6fba340e8103",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c5f0b544-5a05-43fd-b1a9-24504e6b8519"
                }
              }
            ]
          },
          {
            "id": "3b725c4a-4f94-4bdd-91cf-72cb4d1d2e96",
            "name": "Positive Testing",
            "item": [
              {
                "id": "23068bea-64cd-42eb-9c56-55958dc8f559",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "10e9a7e5-af1f-4fb3-a3af-eeb4124c8b8b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fa6660c1-1a28-41b9-93e1-d2dda2bce710"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "19c9b0dd-4d52-4e2f-a29d-f75eade85d95",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8cd8a99c-3bed-4257-ad27-3c1790778d41"
                    }
                  }
                ]
              },
              {
                "id": "2c538056-7353-49ce-8db7-1341d0606363",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "26b67c06-f94d-4867-a671-556ff8903678",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8d596a9c-5812-4c43-9903-ec89b6fb6649"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "17862840-cdea-49b5-beec-68e69fb586d7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e48d77f2-8708-485d-a919-d20eeaa6fa32"
                    }
                  }
                ]
              },
              {
                "id": "d14c92fa-88a8-444e-b1d9-cc56fe0495d5",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "215f365e-64d6-467d-bb07-86d8eb046b5b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2fc1c5e4-9fec-4c3f-98e8-6fe45399235a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fd130df2-df70-46f8-99cd-1ee32891ac03",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "9d29a16a-d333-41ed-b50d-ea619b1ade46"
                    }
                  }
                ]
              },
              {
                "id": "bfa56d57-7a52-4f2f-bc3c-6868b835d35c",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0f5d4588-1977-47c4-b095-3425027284b0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3e056118-45c4-4ae2-8ef9-3063ae1e218f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f3c29fb4-3e85-4803-a11e-63ac1fbdd5d4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "4ac6b111-a67b-4316-b027-50a9c1958426"
                    }
                  }
                ]
              },
              {
                "id": "8244d26d-c7da-44c5-8d4f-1f428d678d18",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fe3256fb-ec0d-41a4-ae60-4d7d764303c6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9b7e10a2-92af-496a-844e-354391eb6f4d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9713ef7f-27dc-4524-a8b7-449736a08aeb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8a7b8936-67de-4949-8043-856491989e40"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b62acc6c-91be-48c4-8ba5-055b4378b296",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1ed3e1fb-ba2a-4dc9-87d6-650aecdb330a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ed57683a-66dd-4583-90fb-fbc39207a633",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9b10c61d-445b-43ed-992f-3a4ccb32ea83"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "400ff9df-3b5c-47cd-a86b-05b8d9c67a64",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"id\": pm.variables.get(\"credentialId\"),",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "69e82b9a-4890-4139-b066-49f6ef70bb06"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "32952b7b-e382-4434-a1ce-36ff4e584edb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "95b9111f-196f-4738-84d5-f77c22e4f2d1"
            }
          }
        ]
      },
      {
        "id": "4bb1c779-0380-42d5-853a-33140ad8b2de",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "40d7728d-aac2-4be3-b5f3-96e799920d2d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "92ae61c8-2aaf-442b-8ea3-35f5f5ab75b1",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f1f565f7-bad5-4990-bad1-cd4f31b82653",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8903056-6fec-4021-a285-1c3d15af4eae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36735030-a361-41a9-99c7-a48af8d64e6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66ca9cb3-bac7-4a62-8dc7-f5ee04ec2992",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e029a4f-b096-4dad-bc32-b38beb0063ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c0775b6-a213-4aa6-ae09-3a0d4be3b305",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d55afd6a-b937-4823-a45f-d596713b8330",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a87dd81-208b-4629-ab6a-0b8a91b5e84a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03248101-f5f1-41d3-93cc-2ab2787eddff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "134471e6-2bf9-4677-bd89-7032d5d79af0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2300254c-7c47-4119-81a6-9209fefa88d9",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab20eb7e-bdb4-4f5f-9a7f-cfeb357a166a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bd270a2-5586-485b-9c38-7e65bf3b2cb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99ca2fc1-92af-477a-8917-b59ff47ddf95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a605cd33-4c4a-49b0-91c9-636f49459496"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e60629e9-c7a0-4f3d-b934-32c8868214b3",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "650b1eb5-80ac-4981-b4c2-c27d97a0e5b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "636f8792-e62e-443a-81d7-e1be356c3302"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "700847d3-9a15-4322-ac8b-bd40f19855e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b0406e2-5056-4e8b-b113-507078975854"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e97495ad-2614-422d-a7d4-02ca86eeac0b",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe766016-e1c6-4bf4-be5a-75fb3c363306",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "294a6a9f-6829-4726-8b3f-f15c694bbcb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97123e8c-b6f3-48b0-a9e7-c8c7409329a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a66c12f-b825-48af-bd52-4451ca68590a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a254b2e0-cf8e-4993-84ee-c624cb70f2ba",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1dde008-e0c9-45fe-a3fe-9e52322d6c68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2915624f-b4d8-4a6e-85fd-fc5e5a6d4e2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a58eb0c-5093-4f09-963e-54bd4488af72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ac327878-a276-4106-8864-a0a0d5a1ad3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8c33e49-1983-4c71-952e-07aed47f00ea",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4e4b6f2-0d7e-48ab-8107-4ac92c47f72d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c166c2ec-384d-4c2a-b126-d68c6a896b10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78504e2b-cfd2-4705-b0b4-b4bb44a2aad4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "1dac3a4f-f83d-476d-9959-2b2b60b334c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e069840-8941-46fc-aaa1-9c1035d591ab",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ee72842-6104-47eb-b5b0-e27e8193232c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dd3a04d-5e0a-42da-a249-606889c36a65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8215e237-fcf5-4521-9e48-f20290382edb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2da65824-5001-468c-bab7-165ddc1b8779"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1bf153a-a5e6-4745-9eb0-76c64bb62b01",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "779df1b8-a421-46a0-817a-cd6751d01655",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c84ec3f3-3418-48fd-95cb-0e1911848452"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7583c69d-cf74-466d-a8ae-dd690c355aea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4de5886f-2bb8-4332-9f49-920b024bddf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da2a0bd3-9ae5-4de3-b491-d8720785e1f6",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a88d4d54-7c00-447b-9a4c-0aebd62927ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55fd9f93-9992-44ac-9fc4-881485347d0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee4daafb-bf17-4d1f-b34d-0f21c3021a5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "784cc83a-e6d1-40a7-8fa7-c4417df5ee13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "963392c2-590b-4cc1-a950-b67adf0eb6f4",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34f216aa-9424-47a3-af4e-8ca890032517",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c76f620e-7b0d-4799-84a4-5c5e682549bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f5477d9-a70f-4778-b54b-1d98c7ba1663",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "39827f82-661b-4c2d-89ef-90ac40b64f48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "589e3531-6d89-4b0c-9683-b4848a954cc9",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cd9c6ee-e9a2-4b10-893c-5e5cd1978e43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20b1c9f0-19bc-40b7-9b7c-cd8ae4b5606f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b475b75-acb2-4960-b8d0-3575bac07a70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "be5b6200-9877-4f01-ba2f-46310bf09130"
                        }
                      }
                    ]
                  },
                  {
                    "id": "508a6f4d-4a15-4750-ba20-f489e97b913e",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dc2c6ab-c66c-4e4e-b31d-689ace335b08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "587afe3d-cb51-481e-9e65-ae85a222940b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb3438b6-c839-43b4-8836-7fa380d88bc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e4af193-024a-4b9c-bb61-680b55caee3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "102f5869-5fc0-442d-851a-374d9356fe56",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4403d4a-af9a-489e-ba92-c33516f0baa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea263d87-9289-49a0-bf67-b1356ea111d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db3bcd6a-a713-431d-bd59-a12cfa25f019",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d10307a-09c0-4d4d-91ff-08fa7ad23d54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3cd3e68-2c9c-434a-b7bc-9da317b26221",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c260f236-3070-4a14-81ce-d627befcfdcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "035452c9-ac63-4152-bf7f-421f88b3017d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf885589-fbeb-415f-9566-397f457d40ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed20e372-cbc9-40ca-9e1f-d03b096e41b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62164c16-6b00-4e2d-b71d-70ff90244333",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc2aac9c-495c-4bbf-b456-46609259f09c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3c01b33-a345-4ae9-b8d2-5827e49a70dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "461c29fe-edbf-4d8c-a831-44b93bec74d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "4af9a414-24dd-434c-8539-bf391c3a1395"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d348c65b-960c-499d-bbdd-afaf673b270e",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37a08967-d170-4cdd-9f9b-7245b88307f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c38e4e53-f44c-4181-a018-ce0814d4332d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37eead21-8869-4ad5-a2d3-f0110dfab38c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "963ecf75-b82e-4968-978d-f5db7c7c8272"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77c8a9df-d45a-4d73-8e1a-17192f55981a",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4852d67-5eb1-4a7e-90cc-a607d5946430",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e048b1e2-4951-4b98-87d3-76d0cabf5e4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c2bbf39-30fb-4330-bbe4-3b053bab312f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d35b26c-d2cf-4d9a-8561-5c8f030d00f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "140c5a8a-2296-467d-9dc2-f06fb868a802",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c634d659-8b99-42df-b7e9-08982837dfc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e728260-a415-4535-a464-df81e1fd1b29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b22f25bd-e7e3-4ae0-bb18-48b722ed0e67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "762fb81d-94e6-41c9-b658-6aef8a8b45b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dd46b03-7c7d-4796-9a82-a69980bd44f6",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02dd13f7-4403-4347-a6c7-51e5ca19a0a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab438a60-891d-4aa2-8477-766668d88cbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7668886-d6ff-4a18-8789-eb2300d54bc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "09ec5dc9-40b3-4fda-970d-d96440dbf6c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7f1bb38-30f7-436b-96a1-f0683510496e",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b15ecc7-6321-47d6-9e29-8b9070ef4cc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "704dbb7f-3df1-4e01-b7fd-16c68ec3322e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd8afc29-efeb-4c37-8bab-e5a7c3349540",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2202e561-127b-42af-afc4-8343e121ea79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50315ee5-82c4-4aac-8eec-444ba4d357ff",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ec7124c-03a5-4337-9c56-0412c6311121",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b51e1980-600c-4bed-9f93-96ec967c3b97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acc773c9-0638-45d2-91ac-3435fd62843f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "572aa03d-a105-47eb-8ac1-690a83c9dada"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90ba3053-5513-4ad8-8485-5afb990aa1b0",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "703a2697-eb43-43e4-b455-ee243facc2c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6346d3c-a7a8-400d-95f1-b9a468dad1c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3efa4c4f-6c7e-4c5b-9b2b-8cbff8a0b3af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "af588ae0-6c36-47cf-a212-488694ae838b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e54461fd-7773-4a54-931a-b1c9c2f64c9f",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "579311d6-afbe-46c9-aab2-090275daca46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "269ac41d-f47f-4ac7-8642-ef19bf7e5a15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97123d22-f53d-44f0-bc50-b72a5ede6276",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cde9696e-4478-4b8b-9969-3ed3f40cd7fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5616942-f898-419a-875b-7b8567376b88",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bc538b5-17d3-4cf6-bd48-2630ad967d75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00521937-e63e-4cd2-a0fa-021708d31233"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "418e3fb7-570d-403f-a3f9-234f78ace905",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "58f80107-d1f8-4f00-9ad3-0a803d67bcca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d0d003e-dc00-4c19-940c-cacaf527bcd7",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7d4568f-898e-4450-af7c-3d44c30cd8ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97b77252-2477-49cf-816a-e4ca384d363d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc129e43-60b8-452b-bade-b58034502767",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "45e9d5b6-e780-443b-aa62-f0eaf2927c80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3a657bb-b2c4-463e-bb3c-263cc4709647",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "185a0a1d-d650-496d-9731-7eeb53cbaeb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa577b76-adae-42e2-987b-23d79776ef4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9c4cda6-ad55-4195-94ad-7971132f41e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "73753bb5-f733-4223-ac9b-8c9ee47628d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1739ec5c-c029-48fa-a9b3-4825ffa087f9",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a902a40a-66d7-4306-aa55-6964315e6bd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a858a8b-2043-4e5d-86bd-1302f5333e90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02d46eb9-cee1-4aa3-b3fb-3e486c499924",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "33203b48-d850-4d6c-9988-8e4ffe9ebabc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e513bb53-0079-479c-89d3-f45e0ca00592",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f4da39f-2745-476a-99e8-89b66e3329ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1699fe7e-a106-435c-8c2a-6da24efd604a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a66aeed9-05c6-4dbf-9ae6-ff06e6a6be55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "85184f6d-d246-41a4-9836-6e265f21d1f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ffbff42-9b26-49b0-9ca2-cf38d764074a",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dad81e79-fbf1-4819-9efd-cf262f05c4b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2467ead6-9989-400c-ab5e-0edbd475eb56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a851e771-5f89-4210-bd49-1129ff7ea984",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c96fecfa-84ac-49d8-a5ed-49d32e53997c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ca62ac9-d29d-48e0-8ad3-22fa3a5c0755",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec85d15b-495a-4307-9775-8e59219a6114",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "661489f4-c4ed-4cd2-8107-f078c0cf1aae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ba8985e-4367-4c16-859a-e3062f422169",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f0c800f-85cb-4da3-9e44-c0267f0bd47c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "445c3b9b-1e98-4b82-828f-2a8dc75c7e08",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc3225fb-04c4-4d94-b9ca-7dec7c8532a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcd9ee79-18e9-42ae-8b8c-4dad7720a545"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a82b928-d3b4-41a9-a7bf-bbe74a67fe30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a020ae51-863c-47a0-b7ad-c223eaacf35e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6b86292e-a5bf-46d5-a7b8-d9a37f5bfe34",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "00ad33ec-a459-45d0-89a0-77b9b1900e94",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c51255a1-84d0-456d-ab59-01b0abb52b79",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "cc6f138d-6e4a-4be7-9df7-23cd6e8c5d49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4499a06-d33a-499b-a9a6-839b1d6f2cfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f4cd53ab-e460-4254-b6e0-9dc026f8f6a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11f95de2-713c-41a9-a74d-deddc103bd2e",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a80c79b-d55f-4cfd-b8e5-bd46e875aaee",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "90f42597-da21-4ac5-9506-f716e14bd585"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83ac1380-3071-49f8-9dfe-5fd0622bb38c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "aca0e912-1247-4292-911f-6f42e2a403c7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f7596a01-78cb-4cae-92f7-f2fa396d29f9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9dce26c7-8f59-47c1-9b3d-213de60dc3b1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "010e7e24-ba03-4d43-ad9a-8efe65bc0719",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "21f64485-fca4-480f-b6a7-fda81d178c9b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7363adc1-43d3-4a9e-98a0-daa04bb53509",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "698585a5-53f4-4420-b171-84cdd88b516d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d88ba359-7625-4631-aef1-6e93421830d1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fe2617e8-6d39-4ffb-94fd-5788f4daec72"
            }
          }
        ]
      },
      {
        "id": "c73de7ef-2f42-46f7-a4c2-7611f464cfd6",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "003e4679-fedd-42f5-85b9-85d61f0f91e9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8e46e0d7-9260-49cb-8754-5b9a537cfc4c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "58dbc926-f19d-4c82-b1a9-fe5e2f0bd06e",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cfb3a5a-7491-4797-8eab-f98182f7021f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a0bd67f-0169-4efe-a773-1935d2fa3430"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c968915-0983-48af-b015-6881b36c95ff",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38590269-97b8-4edd-9c62-aa441aaf1c6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "125a85ba-91e1-4542-ad8d-11a02da87b1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4ec947e-6ce2-412c-a5ea-e0c80b70f883",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a5eb9f9-b5ec-4b95-8f9d-120e1640ed39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0b83819-1c49-41c5-8865-76d43735751f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a90ad9cf-c33e-4f77-a1ee-0f36e3f12428",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27b445b2-cf50-4437-b12d-155eca17407c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67ac945d-0176-4e60-b28d-5dfb5828955d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac0aae81-0044-4132-b92b-4cbe2c6737d8",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fce246e6-0329-4665-b585-02ae64071db6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b958063-488c-4afe-8fcf-b483cef2e65b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b188971e-e996-48d4-b2de-a833d6c7f689",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72d367e5-9122-4760-8626-dd8e20e3601a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee3fddb0-f54d-4040-beea-3884178c10d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63ddba50-61b2-4481-ad6c-d2865084d043",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b98b7777-3a3e-4bc2-8cf1-089cdeeed12b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f29037e1-1c88-4cd2-994b-082b0ebd64ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79a45b6c-d0a2-4374-b498-470edbae6576",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8540a8e4-9dd0-4cb9-b532-528b8203ccb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52b13a29-e4ef-464a-a2eb-6ceb6bfa6241",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7abe3f3e-8ed5-4147-a88c-7a6875d82ffe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "270ef5b6-8bc4-4381-b870-17959ad398b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40a375fc-0ab3-4e62-b5c6-a79922fc8567",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "167b617e-36c3-498a-81cd-6a4b4e97a50d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81ab9097-7cef-4ae7-9b28-05fc713fda98",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f71a4e84-7d67-40f1-97f3-fa19cdda4da2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68e9282d-43c4-40fe-86f7-c87998e28080"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a003446e-888b-4982-be33-00a6052e3183",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d349834-4cd6-45e8-b894-8513f7aa2c29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da179c7f-b4b7-4346-88b7-ceb4bf748431",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63b5194b-f78a-46af-9636-0f51078fd6a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6246d187-0095-441e-9505-7b93c76654aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "720a0f92-c1df-4a8a-9707-dbb3532d1067",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a83658e-e82f-4887-98df-4340cad0e5de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b4a07ea-f63c-42fb-8d88-17940378a9b1",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ee53aed-b35a-4ac8-8de0-7c4889297e4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "651fe43e-7a10-43b1-a2a0-6e4508266e0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5df9dde-b00f-4ca9-9404-660fe4b98aa5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae094f6f-36b4-4ad9-ae18-39aea3dabae3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6da4a21-abc5-4667-8ff1-c0be4943f1ee",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "446b3dff-4dfe-4d6c-a093-799d897b425a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bfb68e9-bebb-435f-91ff-b979159b18b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f3eb5b8-abb6-4d74-a009-87256c759dcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5043819b-7fae-4203-a919-11481ca865e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "409584b1-6839-458a-9021-0b77888538d9",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14b5a0c0-e488-45c6-ba27-35765373540c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "426d9661-da0b-4096-964b-f08c3453d621"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75fbfc4a-e88c-4425-b1b7-9a934415aa9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "569bef43-2086-4b32-a3ec-d9e20af7e759"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ca3e6e7-23d8-47dc-a8cd-555a74efc47e",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c04cd46-3a7d-4c53-a6aa-d57d0c3cb943",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3405a48-5807-486b-9fbf-4b0f6b4e8a90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d68fcb85-f546-4e7e-94b5-5148880049b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d6bbd04-009a-4198-990b-ffea67fb315c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70191ff5-cc0f-4a2c-8c51-e10998c366bb",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27728869-842c-49e6-8ec5-77cb5f762d6d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ec77bed-7a1a-436d-810e-83d48e81c7a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "322c7e21-da34-498c-9993-262b1def8982",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58b859a8-ff3f-40de-a01b-6b9fc2dffb86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aef7c58b-60fa-4e06-8353-6f5ea7045bd8",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73f763cf-8a47-4a8c-9ddd-40c2e6448b97",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9aecd8c0-fdff-471c-adff-32da60c45406"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60381ffa-3d39-4a04-b52c-87466dd57398",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34116735-addf-46b2-99ff-9b46ad0ef735"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c58d8c6f-1168-4b09-b8bb-a6303aed230f",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4271f4b8-3a0e-4c42-b3fd-3970622b8a62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a361c88f-b1bb-4f17-8b49-3f1a7a42d66b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3fd65a7-0255-4420-924b-11469ebd6631",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1059bc22-db0c-43f1-a8cd-e239115742a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "638a9c33-ccbc-4fad-8b68-8dcf4e2d859c",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b680536d-1d39-43da-b632-9a422c20715a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a73e955c-1e5f-4348-a6c1-58478d811070"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9335337c-3d93-4a8b-86f7-ef8680d70edb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9148f30d-6909-4de9-beb4-abf2b6012615"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44a84ca0-9233-43da-9c8c-51d7bebae6d4",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dab2035-2136-471c-b550-9f1be43b0829",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8599439-fac7-4974-b11b-2e9d675a3e70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec0885e1-0e51-451d-a459-9b36b4441aaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "404d0a5e-80b9-4067-9c86-01f82773cbd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdbf054e-cdd4-4968-8cea-520c30d2378b",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32d5e100-d706-45bc-96bb-1723f720bc24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89fa1b9d-74f6-439c-a454-08acdecec03e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c81f22a9-8c5f-4cb3-853c-91c73516e4f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3effac20-73c5-419d-8c5f-58f671ed7d1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03fd7c70-c674-493c-8a1f-da2bbc04adea",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c534cfee-cfeb-4f9d-8b85-cd94bf90f09e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "180733ed-b7ca-4a26-803e-e36243e8eb0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6e67bdb-e15e-438a-96ae-47e2e93c7dc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17bd520e-50ea-480d-ac3a-28946805cf7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ca0006d-55e4-4c44-92a2-33f94561628a",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e46fb420-dea4-4b3b-adbb-a32d8a2bba06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "539246f0-76ee-44e7-bc73-7ebf65d2c4e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f8bc403-6f14-4662-8bea-ef218c0632f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bc08048-5b74-4a6f-8f46-36956e80370e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "370ee74f-44f3-4d27-aac2-95801f3b5a4c",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fa6a726-582b-4dc9-b2bf-e03a19d40931",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "850f7d6b-6684-4d10-83c1-229c67f568b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1198d7d5-e2dd-441f-98c8-27dff14069d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6ece609-3e19-41fb-a0c1-c470d773a9bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0be9dc93-30e3-4690-9b8f-16ae33b5183a",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a5aa830-69bf-4712-b171-39e30ac33da4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93ee86f4-82a7-4055-b42b-c62b85881020"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf456efd-b44b-4770-959e-c282c9c739f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1be8ab5-8f89-4dfe-a7bc-f4bd0e61978a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "465f7072-96f8-49c1-bf16-717f07854f7e",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "606d9c9f-e004-417e-a570-ecc52b704852",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7709018-9555-49ec-926b-d8767ef51ccb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8e6cdf5-3af0-4d33-bc9d-1b401fdd4315",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "840f3ac1-b9f9-4150-b553-b1e39da9f6ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd178c6a-ee16-462b-9c94-2dedc0e7ff06",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a23bc33-035d-49cf-91c5-916180c69612",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42adb210-e032-439d-9dc5-0b2ce90fb247"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35bfbc2a-3cc9-431d-9448-f5c94a49f975",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21507c1f-6953-4cf4-984b-eed3ec57da90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ad68ab3-c9ae-4c76-b27b-2003d3d3c42a",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3428552-c16f-4031-8583-b68a9b9d0277",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd5e321c-550e-4364-a325-7a0ac74c942b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "965d2fac-a956-4904-945c-207418dc408c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c9fd6da-b6b3-425a-be77-7e5bd3f82b60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c346a0d9-e2f7-4c48-924b-f9e117f479c3",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10e7f7bc-e988-4223-97f8-a0cad6f8e527",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8966535a-a052-467a-a18a-87d5d53e407d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05076a53-929a-4fe8-b291-21603ba19c19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50ead163-b5c5-4907-ae6a-24594cfae8ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08f28aba-1b20-4862-83d6-13d8e10c6cc4",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3a7be70-847e-4f7a-9420-bb172300170f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59fd8a29-8611-46d4-a635-33e34fcde450"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2e325e6-b8f4-4cb1-b8de-f2f1bf05f4e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3eafe2ad-79dd-4266-8a7f-143fe0fd8b58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dea4e7f0-4b2b-44e9-a7da-afa88e0f9814",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14835412-f8e5-4421-8dc8-e19c2859a313",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06966cb2-f62c-49c9-be63-d50063fd1f98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fea4a490-ab29-4cb8-9381-8266b30cde20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd2ef449-b634-4f79-ac1e-509e82127d07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "711f4098-bf6b-462c-b1bc-d66dcc2778d3",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a647cf0-2b19-429d-b346-c2e18b7a7f62",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "864800e2-3225-465e-a7ca-5196df362806"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76ee1b74-38b6-48b1-8fa0-37b9943d7f68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdccacbe-b6d6-400b-975a-a4a1dcdde196"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ec381cf-5301-445c-b675-7413134fd820",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bd79eba-3a52-4e31-9a2c-b85c1a3d491a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ddeed94-a9d5-4bc8-8a74-ca27189184dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4ab1cee-d614-40b1-af4c-cc585829c103",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f83038c4-bbfa-438d-b841-99b44ac7e92c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9898244d-0379-4895-8622-f08d410d8970",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b463e9a-676e-455e-aa06-d3a54c317657",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ba26aaf-8520-4f27-ad59-5f57086d0ea5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c712959-62ff-4d57-8685-e7b915b6a836",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "973f5e84-dabb-46d0-bca9-ef4a2e723851"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bdbc24e-2a38-49b8-a86b-b31b25fea304",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de7a2dd7-4f98-4b01-a3e0-b86a5ee27e19",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb7dca8e-3d70-432f-8b25-51d3f5239a00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53bf111c-4a09-43b4-8632-29ea49831fe7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14041126-59e9-4d30-9b20-9e110d006dfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afe8fb4a-10d9-4a9b-81b0-ceeccdf6bfdc",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91b9f506-0f20-4a4a-8eb2-c45be2e8ffa5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8450b88d-4d51-4d43-886a-a4252e10aac3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80ecdcc8-bc33-4d48-9cb0-63271d1e3a20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bd6fc6e-c0e5-45dc-b32e-1b56efd410f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a683d36-7667-49dd-9456-24dab1bc82b6",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef568788-6039-466c-9b10-be98e8899aff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7805304a-e61e-428f-85a0-6c278b449b89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b31fc285-1da1-42c2-9c28-2a82114736f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ec4faed-88af-4f44-b85c-2191945a2fd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f2eadad-bc43-4399-845c-349a31266a33",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79a5c521-9683-4b68-b78c-bbfce65799cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52c3fbd4-f679-430d-9a38-01d901bf77e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d96f2684-6ff5-4753-9cfa-39c0087edaba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9174b6a0-4c19-42c4-b8c3-15964aa4d27e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f5beadc-18ff-4210-b555-ec4c1e866d31",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0beba05-0ac3-40ed-9df9-a8787bc41c9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2cd9a15-d50c-4061-9608-782da322aa9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "047e50b9-cbf4-45ad-931f-354f1f780663",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b2bd1c3-c665-45d2-ac4b-7917402f347b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0d60628-40ea-4a02-8638-fffe188647bd",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9b6db06-83fe-4f97-9fe5-e6d76ff5b56c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36c7e521-6544-41a9-81d8-04691ac7baa5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d41bb79c-4693-4f11-aa9c-f56c7bf4700e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be6df8e9-6fdb-4bda-bc8d-f802139dfc08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad10fb24-08f2-42b2-b6af-c07be0ef4a8d",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08d1df7f-45d3-4ea7-990b-7d986554db04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3503f71e-2831-4f5d-abdf-b365d7488b6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a289d9a8-80ae-4daa-b894-19bf2bc9e157",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2498a0b3-eace-4640-a4d9-df9fcd4692f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f281bf4-81ee-4525-82f9-107099d5eb8e",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bea2f798-3047-4971-b57d-796214201346",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddf7b383-c509-4404-a754-556c15a918a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cff51ac-8025-455e-960a-3aa218843103",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38ff5251-d665-42f0-bfc2-63bc77ca8f56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32239dd8-e4e7-4a9a-b165-5f14a20e8358",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1336467-9ef5-4ecf-a565-7186520b9e89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c783ef8c-b7b7-46a0-abc9-f35f17d921e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fa154f0-338f-4eb6-b21e-c9dd48ae03cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1d3e9dd-a5cc-4313-8d15-cf7fc4e56493"
                        }
                      }
                    ]
                  },
                  {
                    "id": "849bc833-db9b-41bc-b384-8464b881fba5",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c15ea4af-1eb0-4afb-a6da-3eccb495c2f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7b4b80e-204c-4bb9-8811-9fb6804895c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a92ccf63-128e-4d8b-af3a-6a18741c635a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99c4ad8e-972c-4c5e-bf0d-71bc3016e688"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c8af807-0510-45da-9ab3-73d962cfc4dd",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "816529ef-e6db-4fc0-955a-e58935ec607a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65cbb0f4-c7b5-4979-a47c-4a243d7f8842"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb4f7381-c01f-43fb-a0ed-72ab5edeeb82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e52b423a-bc40-487b-8075-f266d846087d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eeb7cb31-bc95-4631-91b0-336b58fdcf6a",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bc2092b-eca0-453e-8626-612e941e598b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "379fb3ae-8294-4a77-a5f3-cf2f01836968"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6360814-cce6-44a8-888b-f98d4120cb11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eaaa93f7-7403-43d0-90ce-15a437ca51b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67ea525b-c64f-4f80-8724-34202d683759",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b58ff63-bc55-4ddf-8e09-2933468f0171",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dad1146c-0e27-4774-a430-2faaf171c617"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b409613-d23d-458b-b214-e405de7f039d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e5a8fda-b8fb-4d2e-b7b9-23d9f9ca5798"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e72ace24-82e1-40bc-a984-2a5604802578",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96ca32cf-6c29-48e4-a18b-160c8bf6a7b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "930cdb67-6060-497b-8018-ff80d959b958"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea1ab882-9177-4020-9daa-08df6255c9b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea21695a-aead-4dc1-b9c4-4fe1c147ba04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "965221b8-b644-4053-9a2a-0d21223a8203",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9bb5b6d-4c56-47a1-9587-1336fd6ba707",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dacf9359-cea7-4fcc-8c48-406740d6002a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7c71c7d-7136-49d0-afc7-b3315f3c6727",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dc0afa1-c9cd-4f1e-90e3-b8a911450eda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4c46be0-2395-4606-bad7-defc50639953",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e32851c-d37a-440f-bde6-4e3314e9768f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec244b81-2603-4e2e-8e82-6d02743a18e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d2820a9-8d56-42c8-b23e-d4b44592c9b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd5e09c8-bb0b-40ea-8ad0-c66b8bae0c3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7257386c-abe0-49bc-b118-cd1a5f7e1874",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "897ddaca-d425-44ae-bdc4-f625f0067867",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e26d65b-a090-4b1f-9311-f10d6d074a86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "943784ee-c843-4ed8-9b62-6c7e5e5fb768",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5be3f11-efd9-4430-a2fa-4b53204a432d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d90c4d57-8085-4e26-a686-864e152ff34d",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5d93f59-d0f2-4e6c-9c98-302fc7b7f74e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c792a91c-27a7-4501-b499-b3fd5dfcbd07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d8eac8d-1bf8-4ed4-8a5d-f41ca6e3f12d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0923846b-0c60-433e-a00c-f276e89f50bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a604ef75-0327-453c-9fa2-80bf0824149d",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8747010-a9b2-42c4-8ed8-df32ee09380c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdc5037a-84a9-42d8-bf29-d8eb687c43d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21a5b91d-eab0-418e-9414-7eef2f319f6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8865262-b51e-414d-9b24-1c05e30b942a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f1b55c1-e6aa-4852-ac4f-bcbbcc30cb29",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aedb6c6-5ee2-48f4-a2de-37b74382e104",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7569f862-3493-4f74-bf96-a9e1b3cc9d5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1f7ca22-89e4-4e8b-97b9-8969cb64e3bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "069fe013-0c79-4fda-a475-ef96cdb75521"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ad2ae43-b9d1-4f6f-a0eb-ca07294d41b2",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89a32154-9b9d-4749-a12e-b889b7e22d57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd9214e6-f0e3-4675-a0ed-65dcc680e04e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d4c68ec-e491-41ef-9be5-2022877bfd7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b1344e0-4921-457d-a532-9586a6f36e53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4fb4f9b-071a-455e-8d6a-3749e26cc74b",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5fe4917-d29d-4f99-8e40-bdf842452c2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26021425-073f-484a-b5d0-0897254e555e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58ea8651-f50c-42a8-911d-7077ebc274d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "976635c4-0d45-4ae9-a0ef-e8169411080c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "467a67bf-3810-49c2-a252-eab7f62a5352",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1231035a-71af-482f-8dfc-1da678a0f116",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbc32daa-73e7-4dd9-87a1-9af44ddfb939"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd0f3304-1116-42ef-93d2-1265404a3cf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1483e062-d68a-4014-a5d4-fadb451c2a91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6ed0f59-9684-45a7-b3f7-be61bd323572",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a69128d7-81c6-4159-88ed-1d04c4be7dc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ce54de1-9837-420a-9978-3a6ca256a541"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7af2b370-9530-42d3-a7c7-3ec56c8d8b40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38de7c59-d76c-41d2-9d6b-7db9ef6c9b21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "328f0a41-19a8-4f8e-ac02-4ee1faa8d58f",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "505cc6d6-aca2-4db1-b06c-7a917ed8ba97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a665182-68cb-40bc-82ad-274acbcabe48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2b72c80-c63e-458c-8621-99a8c04cb939",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6028ba93-eb07-42fb-bcd5-d674bf6ebfdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10d22ea5-3845-4ec7-be1e-ffb4c20d9c81",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c2759d5-2548-4e6b-9c9f-c1af18d09bfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e7f5fd7-7708-4b10-802f-6ef9fb5e35f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ad45e41-7b0b-495a-96a3-4a7579a022c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a02070b-648f-475b-b11b-277fd82f924c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df0c89c6-c2a6-423f-9924-cf0e6a5375ff",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "208ec239-d135-4dfc-a3a5-1fcb69747761",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbb4b381-995b-42f5-a2cf-0055578cb7bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cafda40d-0c91-47a4-933a-54362ed2e266",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b822953-637d-4145-8885-c77e13815ac4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23b4243e-14dd-42cf-9b07-807625445958",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "589e8282-0112-49d0-a5e0-2f5e0f1fa87a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e8da3ed-7d06-40bf-a203-3de1407e8aea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "380bf7b1-a62d-4e7d-9abc-c57323fd2c03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47cb7ed3-7776-4233-81e2-dedc23d76b79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97e2988d-c28f-41f5-a935-54cd68782f08",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2df35143-3169-4eef-beeb-ece6ac55dfa7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1766222e-2e48-4f4f-ba5c-14353087da21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd23b3ec-bddb-4c8f-9d46-f35c99a4a5d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf581af2-c855-4818-9458-e76f65c55692"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c16b2f08-e996-4ecd-b703-70e0e2b21c50",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34bf2316-5e11-4fef-919f-c81eb16264f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d75b14d-0784-4077-a700-ff1dfa5058ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77f812d6-18b1-46b2-853c-d5a885f4c18b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc496edd-f830-4a13-b3c4-f0f9f8a7eb95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcde74a7-0d88-42e3-a5f8-464623ab4721",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d7e465f-81f6-49e1-bd2c-be543e76fab0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "938b2066-6e6e-47c8-8e97-0b8189deef3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c022816-a246-4799-91b7-fdba84dc0042",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec01f1be-1ec4-44e8-ac24-baa9932c1150"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dd6ae3a-db19-424d-b168-c90adf5ae24d",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54f0565b-8c45-458a-92ae-62141c62eddf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "049bfba7-7adb-4b3e-9647-e1fd2d3d33c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "098ef660-d30b-46b6-a656-596ea8cc9b0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b113fef9-62b4-462b-8f68-ee09d08c3668"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f572445-d96a-4e25-a4c0-0d35ed50bdde",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "435c6620-e564-4b7a-864f-950cac9e2dee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d34c34a2-d34e-4ae5-ae83-c84aaaa9d945"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "780ac5bd-e297-4ad5-b69e-fb66deab5d1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ae835f5-cf17-439a-a2dd-18e06a9b6ff6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74b787ec-afc3-4f66-8dae-4b63d83be5e2",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7a18e4b-5b37-4f41-8b2f-b308bd4c2377",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4db3940-5775-419c-817d-be9cd6890f19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1683f76-8d6c-4c23-9d97-387e1af519e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "963f444c-f308-4c53-8aaa-4ba0eb84e747"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff236b42-fe3d-411a-9c7e-689a3e755458",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb46daa5-d76d-4d5d-9f36-6207889014a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37af19d0-897a-448e-8d6e-0c15b5dbbbf5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4dc927d-0f76-4c72-bdb0-c0a62ba51ce4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8362ef5e-666f-4488-8105-ac6521054a54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b3f3223-1275-4c1b-8c1c-fddeb1b797a2",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a435523-dfd5-4275-9fd0-da626abdceca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dfab55ca-bf80-46c9-9420-a7db903e030c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83db72c3-0e38-4067-a71c-624ca176ed5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a84994c2-63a5-4b71-ade7-8fa25ee84d61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "044cffdb-02c5-43a3-a02b-62508e76da7d",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e502019-c8d5-4168-b215-c1152909c7ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7020d468-6a72-4164-b13f-1411ce50d627"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b5202cb-0094-4c4b-a515-5cb6ff6fcdb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45af1fb1-517d-44e3-a565-5cc0a0069826"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3da8994a-b336-4eab-baa4-e89d2b0bfce4",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c4b60dd-3d32-4279-9429-c88acfd3f43a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9702d1e2-114c-42ae-a8df-075a8d48f1e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87f18a43-65cf-4747-9303-531937d4f0f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51e87f92-7888-4356-8695-ae5dbfe13bcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6fe52e2-a544-4f8b-b5c3-9347a21ce93e",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5428ea6-fb97-4057-a73d-fa750ddfccc5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c067505-8337-4f09-8b49-f894b767cc0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef85796b-cf41-4177-8cf6-27b5f90445f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cecf9be1-19ec-4ee7-a65b-cc4a2052048e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a19a5be7-a8b5-471c-8d42-99573dee2a69",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0b1363a-bc11-4453-a1a7-877cfe38fe8d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e992bf45-728c-489c-9aec-336b5362fae3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3d7d359-7a5a-48f1-bffd-5dac4d449cb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86811ada-cba8-4eb0-b1fa-832f656e05a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94ec49af-83ae-4e80-bd2d-2fd73a1d8f86",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8e4e4f7-0f8b-47e8-921f-9053da22e7b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e44eb582-1640-4966-9168-83be3f0e22c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1944de95-f9f4-4c8b-b5fa-d730246e03b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3482c0a3-20bf-46ab-a7b4-3cc5e5e6537d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17281d1a-4771-4204-acdd-f6e00151e8fe",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b9e692f-ef9c-4b10-909d-dafa7caba7f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "913429d5-e3d2-45fc-a441-3ccec420d317"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a633648-7bbe-49d2-a3bd-8e85c60024ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28c9fd09-cf3c-4602-bad9-c6c138331d49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72b47247-ae56-48ba-983d-9f5fadc82831",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98cccd98-0514-4758-b627-c89cf69750d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8dbd96f-0280-4b75-ac3e-eb5ab7b0fbd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ae093e9-c751-4eb9-b76f-509e7e2d2963",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4664bbe9-6ec4-486f-bcee-c6e53d76776f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34d3304f-bccc-448f-b8f5-f1eca283b486",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fe5096a-75ba-4a22-9f7f-38b68fdced1c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9cca2290-b286-4b3b-a871-78486b05ae39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7171596a-7168-47ad-a1f6-18353560a19c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ea4eb78-c31d-4bc8-a19d-f14bccdbb4ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85cbce18-bfeb-4a36-b614-afb29344dd2d",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48a649ff-a886-41c1-8723-23e38497b6d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "065f6166-d467-4c30-8464-9b5abf420b66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3698424f-c698-44b2-b1f4-5b4f8d88fb75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b77861ce-173c-44cc-ac1a-31e669354599"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64248cbb-ae00-4150-bf3e-ef81c70a26a8",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a10b5dff-cd62-4f4b-b7cf-25a2a55e26ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e8d9619-572f-41be-920c-d2e8c3d33d6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80d712f1-4773-4617-8742-058310ec605b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d880ba7c-bbe4-4c8e-93d9-302b06e2c5f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3301ae54-707a-4c7b-9fa8-b3087326a2e7",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04bf3fb6-eb58-4621-8689-54ce9d9970c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4674842f-364a-4bfb-b8ba-cdf3d1c57795"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39c26ab4-7c7b-4e46-aba6-d92cae43473f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0d18e24-c3de-4982-90b9-cdbd7a60ee93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83ec5a3a-0ea6-43c7-955f-ca5d75fa5c8e",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b141a9b2-7544-44f5-9660-67b5e05022f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b586db8b-c8c0-4c3d-83ac-d8d703212642"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "378f446e-3d3d-466e-ad7b-a7936d7f6932",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "108c2929-ea15-4abb-97b9-f5a5bd1326ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41cd3844-e52f-4ea1-b388-3d8c19849f3d",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f3915fe-f08d-43b7-8399-9b623a36f699",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4da4f99c-1537-43e3-a36c-46038eb82eec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c0370b3-a916-4e1b-b497-85d595436c64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd3fd706-c8b4-4f34-9a64-cdbc112e5771"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90954d72-4e54-46f4-a53a-f0857f843b05",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cea20519-94a7-4be6-b9f9-6213353f45e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f70f60a8-0c57-4911-bcf8-880c0e06fce9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "566f2449-88ae-4822-9460-d2c62f3571fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f353a6b-ecdb-4e8b-a83f-c2e212bcde14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b51f5a7c-b9a7-4609-87ff-e6079113f33d",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de832339-093d-4e70-89b5-14ef35451132",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f116a46e-4d6c-4344-be24-80eb6dde1946"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a90f2a53-f277-47d2-ba62-5b8383698136",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e2fe6c8-14a9-49be-8bfd-0a749209e9c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f27dcd5-a339-4d7e-9c2b-d63be6fbc7e9",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5487e32f-8ee5-4d40-a040-093593287c5c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e4225c7-d497-4a96-bd3b-d896d17df1ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abb71980-f4b0-41c0-a3ee-49b9769d36e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2aabe540-2f22-4a7f-ae4f-046307413398"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b164a63-36c9-4f77-8f26-ff10f59cb0b4",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b858f001-7ecc-46e5-9eb6-6e1e05214f10",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc95c381-74da-4d76-928a-c5d11ff73b29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b77ecd35-2bdc-43ea-9099-f81e1cb77155",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ee93ada-ca53-4fc7-bb3f-b62c615d2763"
                        }
                      }
                    ]
                  },
                  {
                    "id": "748e4f6d-672d-41d9-8b82-7815828f9600",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fb21618-3de1-47e6-bec0-8e011ff21d08",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "077e0434-5b0a-4cc2-b94e-409c1e02db53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44188d1a-9c15-4dfd-92e4-694d8ef5d4b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e933699-07f9-482d-8b25-deb11033bea8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20725e87-3669-49c3-a67f-f3a795dacb3b",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7c991b0-d3b8-4ce7-92d2-b81d4ad00750",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "353b1eea-1e19-4ae5-a62f-559bfe3628f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea057b1c-6ebb-4114-b6ad-53a355a23010",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "def2312a-0d21-44ae-8c48-e2ed305f89fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42f92abe-53e6-4086-b97c-33140a68b907",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04e94152-f04d-4d03-a4e0-53b83e4142f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b55ada66-0db4-469e-8128-084fc87a0b35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eddc551b-76cf-418a-a5f6-69a94a6afaa3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "192eca46-1b2c-4b02-b9c3-78fbcf0da9fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03792039-333e-475c-934f-2a07943d178e",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "918b2529-8130-4796-aeb3-708e13f1f2a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25982fe7-63cb-48f9-9a5d-0d4eedde67fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ec63dc7-ef7a-45e2-a9f0-b216f8671a80",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "696ac772-6651-4002-b5ea-73b5f940e28d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "439f1190-05cc-41df-96f9-54219256cd98",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9847ed8f-2289-4433-841e-e0a0812e6d7b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e597885c-ad1a-4f21-af87-6aa606f981ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "239387f0-64b2-4119-8f6f-acb4266b4ce4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53e684ea-00b5-4a92-bc6a-69d9eec9bf8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee1d95e2-6342-4b2e-afb4-5be64c305441",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45eb915f-cb61-4261-9191-145ad8b8b9c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4eb93212-de4d-484e-817f-13e35995ffc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79407b08-6caa-439f-8733-53afbb107296",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5712c8a-9288-4540-910f-c740b94fd944"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce77ee7d-ea5e-4208-b802-01a01bc592ab",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad6ead3f-d3a1-4e89-a7e6-2fe7d3616d53",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2ef8b72-d98e-4d27-b037-d62d74c7376d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87abba4b-0705-4ecc-aef4-f68791b74952",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e13be4b-85d6-4754-9949-1a2c9b7beda7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c605024d-dd16-4077-8f6d-2f09b622dc51",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5623a0fe-7d7c-43b4-a284-21a32d0117fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "781a4296-0f56-45e2-bb05-4c34de1ce9db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06f9fcee-daf8-448d-9de9-9ab9064a6800",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e9de649-2ea8-47c6-84e8-013ddb9125c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78e76e47-2eb3-4e48-bcfc-b6e724c25151",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20f8115e-9e1e-4ca5-8ab1-72189ad62a77",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94b8dcee-4055-4276-a34c-6851d9432da1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efb991ae-3238-487e-96f9-9b01c48a0440",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fedbe724-e234-43cc-9f2f-bb6636173259"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5be33573-f7ca-49e6-abf0-f586bb3d4eb6",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7de01184-3e9a-4259-8d0a-fbe00b6a1620",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc9c3665-a4d8-4007-8337-493c3415148e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd472a96-119f-4c87-953e-34d743ba2891",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9da79bb0-5889-41d0-a940-05be4903dff0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "673c0cf7-da95-47a6-aa3b-c8d1e5e4f38b",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccd83849-7af3-4568-ba45-21d72e29b2bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eaa1fccd-eedf-4862-bab9-12b52c9d417a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "628426c5-8947-42d6-8495-6d3fae2f4759",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d7ad721-f558-4f9d-9e15-156dc366e901"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c0446bd7-d4a3-4a9b-b507-0ecfbd724209",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "55b04cd3-a346-47c7-8043-824bcdbec5d2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b954e8ba-16c0-4136-9181-95aacd9e7205",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f8694dbd-24db-4e26-9f77-145bc1c7da4a"
                    }
                  }
                ]
              },
              {
                "id": "3dd1d156-0365-4092-bdf8-eedf74251889",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fdf5ad7f-ded2-46b0-8c19-5472fe0b59f7",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84176646-e607-4c5c-a126-bc14b8f81a23",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "a40c2e4c-bdf8-4e0f-9bb6-1815d0a22679"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5924ca89-e2f2-41a0-9999-150cc4d159a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "341793d5-0ed1-49d7-b3cb-d712d65b7404"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d52738ad-2ca0-4dbd-adbd-ffac33ff08e3",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8c39877-4001-4770-be0c-645fe6bddc12",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "e39af2ff-c213-4b2b-8df0-d4aa02ebbf54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c79bf961-440b-412c-bcb1-e891bc012a6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9224d4f2-8e49-42b1-8086-f4a8ab3be491"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "670847c2-f04a-4ded-86b7-b0ef24bc10b0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "82c57cbe-d621-4dd3-bb0e-3a4942223af6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "db89e327-f90c-4b07-89d4-7017a72bf139",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f40d647f-2b07-4521-bbf2-946821e75e97"
                    }
                  }
                ]
              },
              {
                "id": "8f3310c4-a10d-4be9-b838-e98415435316",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "9c3c1309-d841-4ecb-b124-81e95d0ffed5",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "565d3894-4eaf-4547-91fa-a4a743909031",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "626151c6-ae69-4e95-9f90-5b2b2ef3c9c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b86c48bf-5ee0-440a-9389-f432a7384aaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41e72eda-aebb-4b8c-8714-22c23b526d07"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "3915e2c7-3e98-4b5b-ad69-06df251a3762",
            "name": "Positive Testing",
            "item": [
              {
                "id": "51b22e7f-d0ed-4255-acbe-eee07922bf72",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c278afcb-d512-4838-82cc-3511a412f71e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "5a73eef3-9f86-4e2c-93ee-720415b31fe2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ccf83fd1-ef49-4000-a011-b0b84abe7a7e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "23661d77-fc50-4885-98fa-149946dba55e"
                    }
                  }
                ]
              },
              {
                "id": "edc546cb-ef8b-4fea-8d7e-8561c0d83acb",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d9b13a2f-29b6-4364-8ef4-67430fc994aa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "92fa9b58-efa1-45bb-beac-8ded2f49e040"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1ffd28e0-b869-4df0-8ad8-1a75a988a38f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b65670a6-104a-49eb-9f8b-8dc8b9692c39"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "88fded8a-5d40-454a-b4c7-60c4265e1fdc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "738d9252-a06d-4461-9735-772b0c0f7ef6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "10694236-03f1-447c-a0f7-c628f5f913fe",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "42d027b9-96a6-45fa-a144-43a032c52f76"
            }
          }
        ]
      },
      {
        "id": "0e6b3c20-5206-4c69-989a-a29d00792ecb",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "a044614e-3f61-4e32-b938-730b0520c85f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c17c0118-d478-4c6d-aa59-1054850ec1e5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e3fef69c-9d64-4334-8e38-724f110cefca",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eb89da3-4c3c-4c38-b138-8f0f3e2695a4",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "85ea33c2-55a8-4c69-88ed-a10b2ef1bd5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dec50ae1-4100-42e6-8a9e-42eefcd5a852",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "93b7e2dc-a4d3-430e-acf7-882032ae30ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a1157ef-1114-4d93-b552-c5a25b19edd6",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d59130e-375e-4500-bbf3-8344fb079f08",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "6e49563b-31f1-4daa-b765-8c08cbe1b6f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83b938f1-a2cb-4a0c-984d-32eb6eb10f46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ef37a0e4-c858-4890-a689-45308f0eb3e2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2d0a6efb-900e-419b-bbfe-b108df84b361",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d88fa451-abe1-42d0-bfa5-3dcb17378ad0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "08621f4b-95f3-4f86-9047-b6359fcf4d37",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bf1a2264-1a41-496b-9b56-2be8d1e14222"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e3349072-738b-4351-b122-05bbce09b9e3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "9e5783e8-e3b1-41c6-9e7b-5b97858e6731"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6e7b1bc8-6731-4cf5-b1ec-3ca8ddfc661e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "31739b03-0457-42f4-b5b1-cf739c8dde54"
            }
          }
        ]
      },
      {
        "id": "b90a2c1a-73a3-48a7-8f0e-aad557184509",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "7dc259e5-0666-4e06-9ff8-1c7443443127",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c2d54d23-e65f-43e9-94c8-5c71c79abc3f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "81a1d44b-4ba4-44ae-b90e-822d7665d258",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55a487f0-97c5-4f9d-a81a-b4736b6a2b19",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c5ff5e86-d70e-46ae-8227-389af5faa886"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c315671-4cda-4c7f-88c4-24d16eb1d9c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e1803b0a-a144-448f-bb53-8eabe9fc8f1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29b588d9-d4d7-489d-9879-ead595dbe859",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83767a2d-dc4e-44ad-beea-b49cb7a47c5a",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "761eac94-7772-45b9-8545-61c69ea43e24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "916276fd-5053-4312-9286-185693acc150",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5ae4af83-ce24-4313-aacd-37ed774a3a07"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "33157a5f-9f3c-4c96-b7fe-3e10d9b3c39b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d25d0195-f1a4-41b9-bc67-ba4720f4e695"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0f698be9-5273-401c-bce0-6c8135b48be9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8685ae11-21f2-47b6-8806-a9bc28eb1ad2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c2c8d868-d8b5-464f-805a-b0d0cda70b40",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "405ff3a5-25b5-406f-82aa-d5b444265180"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c5b66c22-fcdc-4721-82f0-9a78fad4558d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "db1688fa-862a-4f31-ba22-903dbdeb3b83"
            }
          }
        ]
      },
      {
        "id": "19c2be60-09f8-40dc-9f4d-c5894a2c00d0",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "120fb11b-4049-40ae-8249-28c462404a83",
            "name": "Negative Testing",
            "item": [
              {
                "id": "927628b7-df0b-49ae-a767-d2e0f83479cd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c91f45b8-7722-4c1b-b253-cf97d2db3e8f",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "742af6ba-c7d5-4a2f-b011-61c992286370",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1055c720-d903-400d-b78c-1ff713ea3cec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cf84744-04d9-4616-ae5e-47d963d8ad9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "49844284-7fd2-445d-9510-f7300d1e55e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d4e852d-2931-41f6-a9c4-810630d92f92",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "242bcffb-d3d4-4b98-876c-d495b8640984",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "64e97ec8-7a26-4bee-b3ab-fd5fcb99c3ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6af4cab-6a2d-4a65-aaba-eb05ee34a655",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "635210fd-892e-4bd5-a3e1-9acaae63d669"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3f61c2ce-c82e-4404-b3d4-2d613f3a01a6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4995a656-42fe-4e14-8366-1ef5ea1c9f22"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7f0ac7e3-816e-4682-91aa-010e5b1d1b18",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "45ff68d0-6194-430b-9c8c-c4798db723c1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3981e316-9050-479c-84bb-761faf34e8c8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "069b4617-36d4-4319-b6ce-286097ea1d4b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d751ce9e-b911-4d56-b06b-2b9e5b6211f0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d08df380-ff80-4361-9a63-dcceacca97df"
            }
          }
        ]
      },
      {
        "id": "80cdfc8b-e540-4282-880e-fee1c6ac9d14",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fa41f768-00d3-492b-9ac1-4586edb54717",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "affe07c6-ed4b-4235-aba6-914fb3cc329d",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "7a21c1a3-762f-42ae-9298-93f3512cdb92",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a98cd282-efae-4158-867f-e62ae3657559",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5a754695-8806-42f3-8fc7-662f0946f61d",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1901,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 259,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 511,
        "pending": 0,
        "failed": 4
      },
      "testScripts": {
        "total": 955,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 946,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 40.8957528957529,
      "responseMin": 17,
      "responseMax": 337,
      "responseSd": 40.02075645478323,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1677810853070,
      "completed": 1677810874286
    },
    "executions": [
      {
        "id": "ba62880f-45f5-4cd1-828a-347049d16ac3",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "9244d3d1-a99f-4876-b91b-7c25ef9ff6ae",
          "httpRequestId": "28e397a9-e031-4143-a128-ca5dd78977fd"
        },
        "item": {
          "id": "ba62880f-45f5-4cd1-828a-347049d16ac3",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "e0e4131b-f3c1-4983-ad04-f295146737b6",
          "status": "OK",
          "code": 200,
          "responseTime": 120,
          "responseSize": 0
        }
      },
      {
        "id": "fe6ad982-5cc9-42af-908c-ab1601dabd21",
        "cursor": {
          "ref": "5c0bb997-5838-4179-b2f2-15ce3f51e8a0",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "d2fee40b-d18b-4b7a-8873-edffb1dacfcb"
        },
        "item": {
          "id": "fe6ad982-5cc9-42af-908c-ab1601dabd21",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "91d50da5-65b0-4f11-ad1b-5c27d32c1324",
          "status": "OK",
          "code": 200,
          "responseTime": 17,
          "responseSize": 0
        }
      },
      {
        "id": "0803ffca-c481-41ab-af10-1c7f91ca339d",
        "cursor": {
          "ref": "85a2e6ff-3f7d-45b0-a37e-57f87fabd9b2",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "d7103844-b614-4eff-912c-856d5b0a75c0"
        },
        "item": {
          "id": "0803ffca-c481-41ab-af10-1c7f91ca339d",
          "name": "did_json"
        },
        "response": {
          "id": "ec2f3b62-8f41-4269-9f81-78bd813e6021",
          "status": "OK",
          "code": 200,
          "responseTime": 152,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6f20e0d-87d2-4efc-b038-0156e7580916",
        "cursor": {
          "ref": "3580260b-1f66-4a72-a13c-502750f46a13",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "eb66b286-925a-4a68-87e7-04b297b76410"
        },
        "item": {
          "id": "f6f20e0d-87d2-4efc-b038-0156e7580916",
          "name": "did:invalid"
        },
        "response": {
          "id": "e401bfa2-ff0e-40c1-82c8-1dddc2c675d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6f20e0d-87d2-4efc-b038-0156e7580916",
        "cursor": {
          "ref": "3580260b-1f66-4a72-a13c-502750f46a13",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "eb66b286-925a-4a68-87e7-04b297b76410"
        },
        "item": {
          "id": "f6f20e0d-87d2-4efc-b038-0156e7580916",
          "name": "did:invalid"
        },
        "response": {
          "id": "e401bfa2-ff0e-40c1-82c8-1dddc2c675d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "778e23d0-acf9-44c1-834c-2ad266e34fe5",
        "cursor": {
          "ref": "b9a24669-a66c-4269-b1c5-a66336ac1ea0",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "2d21a72b-0429-4029-93c2-252b15cd1a7e"
        },
        "item": {
          "id": "778e23d0-acf9-44c1-834c-2ad266e34fe5",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "f42ee390-8411-4345-8a2d-f2b1851c4716",
          "status": "Not Found",
          "code": 404,
          "responseTime": 71,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a20484f1-914b-40ce-9e06-8e50d357284f",
        "cursor": {
          "ref": "b639be3f-6e43-4e64-9c59-8baed8e7c0a0",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "a7c3f61a-2e2e-400e-bdf1-8453d3ea6004"
        },
        "item": {
          "id": "a20484f1-914b-40ce-9e06-8e50d357284f",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "4785b0d0-6b27-43e3-b1e5-805ae62e2ccc",
          "status": "Not Found",
          "code": 404,
          "responseTime": 31,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ef3c145-53d0-4973-8fdc-736ccdeb0e04",
        "cursor": {
          "ref": "38b1ac64-e1f0-4952-921a-5cb2c6ec5943",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "8a67388a-2979-48bc-8025-5ffc88880d1a"
        },
        "item": {
          "id": "2ef3c145-53d0-4973-8fdc-736ccdeb0e04",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "575ec4b2-2dfc-4cf2-a4aa-4084d2f5cb85",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52114c54-5bad-45a9-8fb0-e704d5598242",
        "cursor": {
          "ref": "16450c1b-0d13-41b7-a797-62cebe1597c9",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "8d7d7613-3c3a-4988-bc28-21f77de33318"
        },
        "item": {
          "id": "52114c54-5bad-45a9-8fb0-e704d5598242",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "2305902c-ef5a-4583-9613-a055cddec0da",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 30,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52114c54-5bad-45a9-8fb0-e704d5598242",
        "cursor": {
          "ref": "16450c1b-0d13-41b7-a797-62cebe1597c9",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "8d7d7613-3c3a-4988-bc28-21f77de33318"
        },
        "item": {
          "id": "52114c54-5bad-45a9-8fb0-e704d5598242",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "2305902c-ef5a-4583-9613-a055cddec0da",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 30,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80937ed0-c40a-4073-9dfb-2e5e825b99be",
        "cursor": {
          "ref": "ce4fc565-435b-46ca-b23c-c390202d0a73",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "f20ab93a-900d-43f0-83ae-8181eb87dadd"
        },
        "item": {
          "id": "80937ed0-c40a-4073-9dfb-2e5e825b99be",
          "name": "identifiers"
        },
        "response": {
          "id": "be650dc8-b78e-4b95-89bf-e01b970a5b3f",
          "status": "OK",
          "code": 200,
          "responseTime": 109,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f02059e6-4205-4dd9-993e-1217f7b3b039",
        "cursor": {
          "ref": "af84b907-5c33-44b0-9013-28d874803f35",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "d6096d5a-ddc2-40d1-95c1-293028e28ac3"
        },
        "item": {
          "id": "f02059e6-4205-4dd9-993e-1217f7b3b039",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "e609d132-90eb-4c96-94f3-8c2cdaf790d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f02059e6-4205-4dd9-993e-1217f7b3b039",
        "cursor": {
          "ref": "af84b907-5c33-44b0-9013-28d874803f35",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "d6096d5a-ddc2-40d1-95c1-293028e28ac3"
        },
        "item": {
          "id": "f02059e6-4205-4dd9-993e-1217f7b3b039",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "e609d132-90eb-4c96-94f3-8c2cdaf790d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aae3b780-f081-43a8-bc65-75b5515ab185",
        "cursor": {
          "ref": "56194e48-ac7a-47a3-84f8-18349f4bdaa8",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "285dcf41-78df-4c76-92cf-fae60fd9c9b4"
        },
        "item": {
          "id": "aae3b780-f081-43a8-bc65-75b5515ab185",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "139fca6a-351d-4416-a3c1-75fd4884e516",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21d81fa9-22a9-4161-b7cc-a77628a0edb7",
        "cursor": {
          "ref": "ec299de1-d105-4908-aba0-1989eed563af",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "393767f7-8fe7-4e80-aaa6-a7ae23649a72"
        },
        "item": {
          "id": "21d81fa9-22a9-4161-b7cc-a77628a0edb7",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "55b58fb2-0562-4e18-9301-a171bef41c82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e95e7d5-9165-48e1-b1b9-5c72fe605cfd",
        "cursor": {
          "ref": "2da7d83e-f1ee-4570-af23-bf23ee166918",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "e65c2ab6-725f-419c-8d20-2d30e769bce0"
        },
        "item": {
          "id": "0e95e7d5-9165-48e1-b1b9-5c72fe605cfd",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "164e3171-356e-4e6a-95d0-d46de97c6f12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e8e9a68-1067-4660-80e7-039a1990cb0f",
        "cursor": {
          "ref": "fce7f141-5cd4-46ba-b60e-9e423976d40c",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "94b44330-359a-4e3a-9288-009006f109bc"
        },
        "item": {
          "id": "6e8e9a68-1067-4660-80e7-039a1990cb0f",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "d29ee1e0-9c06-4792-8505-fb3430eea910",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fb2b70e-add3-4d4b-bb81-b616221a4ffc",
        "cursor": {
          "ref": "b364c7ec-cfd3-480e-9e21-b8946d5987db",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "be17fa06-7892-45d1-81d2-fcef9115b3c8"
        },
        "item": {
          "id": "9fb2b70e-add3-4d4b-bb81-b616221a4ffc",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "e3021b77-6a92-4635-87f2-e6b1882415fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d632945-b6c7-44d6-ad8f-7ed8d91e15fe",
        "cursor": {
          "ref": "544c62d2-784b-4e71-83bb-36545fcde527",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "2a9b953e-4f51-40cb-a283-f1a61392af88"
        },
        "item": {
          "id": "7d632945-b6c7-44d6-ad8f-7ed8d91e15fe",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "9d14e49b-a72d-478d-8237-abd26e0a1de6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96b19447-5038-4b30-9214-17a52a98a323",
        "cursor": {
          "ref": "dfaabefa-ba2d-4f68-9631-220b4a5e27dd",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "9622275d-90a0-48ec-becb-c82bc7c30d3e"
        },
        "item": {
          "id": "96b19447-5038-4b30-9214-17a52a98a323",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "61f8935d-7552-443d-8b0e-198fb7991199",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b623ac5-961b-499a-b924-719555ef133a",
        "cursor": {
          "ref": "a60425ac-9ca6-490a-ac63-9cdfaaa2761a",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "4d5cbe08-2e92-418b-b523-1accf71b28af"
        },
        "item": {
          "id": "4b623ac5-961b-499a-b924-719555ef133a",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "cfe8a6fe-d0d0-4ba8-a806-b2aa18a09036",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5baa00c-09aa-4a38-8695-b793c496ecfe",
        "cursor": {
          "ref": "4e015ef0-36c0-43a5-a2d5-d27e7063e595",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "ba271b44-d1ee-4d55-91e7-9cb34105d18a"
        },
        "item": {
          "id": "a5baa00c-09aa-4a38-8695-b793c496ecfe",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "5f41192e-d417-49f5-8929-75cb5a6ac339",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d518749e-e71a-4c46-8904-dced99a42219",
        "cursor": {
          "ref": "95a67a7b-e3b8-4743-8977-e20fcce16b56",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "43f8baf1-c388-477f-b632-1cc15ce0a543"
        },
        "item": {
          "id": "d518749e-e71a-4c46-8904-dced99a42219",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "1c1c7eec-33de-4098-9b05-5dcbeb6aafc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6348655-e3ea-4561-ae9a-9030e19fb516",
        "cursor": {
          "ref": "d6c7c827-16e0-4acd-9a3c-0c40e40e966b",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "7de528dc-9202-4b5d-b770-92f3716108e5"
        },
        "item": {
          "id": "c6348655-e3ea-4561-ae9a-9030e19fb516",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "775c626f-b94b-425a-9f80-d479d347a98d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adb7de1c-811a-4ebb-aa98-c69255b1d5dd",
        "cursor": {
          "ref": "dc1a136b-ebbf-4759-bad1-1c4dde47bdf1",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "fa551af9-dd54-4695-a5a6-3a9c1b9f0d9a"
        },
        "item": {
          "id": "adb7de1c-811a-4ebb-aa98-c69255b1d5dd",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "25abde8d-bbd1-4f33-bd0c-b760edfb0d8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b04c70d6-2017-4619-91ed-8857b6799268",
        "cursor": {
          "ref": "292f7e34-13c3-45cf-abfe-4be30f54cbaf",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "8711440d-c133-415d-b5c2-a9133336f270"
        },
        "item": {
          "id": "b04c70d6-2017-4619-91ed-8857b6799268",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "83cf434c-aa92-4c4c-bc79-3557970a0bd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf511ba2-211b-43b7-be34-b0c4a5f94f14",
        "cursor": {
          "ref": "f45d6901-fd6b-4365-b498-326efdf14faf",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "ce27473f-cf12-405a-bccb-f38d5f3931db"
        },
        "item": {
          "id": "cf511ba2-211b-43b7-be34-b0c4a5f94f14",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "38cf21f7-7cc6-47d7-aa16-10cceeae16b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8413023-9400-47a3-9836-4ec36969da6d",
        "cursor": {
          "ref": "10b54232-4319-456c-8838-13ebc3672e42",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "22a12923-6212-4bfa-b612-e04bed750cc6"
        },
        "item": {
          "id": "a8413023-9400-47a3-9836-4ec36969da6d",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "dfd1689a-3196-4334-a311-d91ee1ed19c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abd7f2db-b31c-4e61-a210-8c46b1ba4e51",
        "cursor": {
          "ref": "6bff2689-4872-428d-a2ef-8319c71f7382",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "945a44f6-6168-4b3e-a010-4a28ca139104"
        },
        "item": {
          "id": "abd7f2db-b31c-4e61-a210-8c46b1ba4e51",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "d413d694-36b5-486b-bba3-8432465ff96c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5843dee8-1c73-47fc-875e-c08c6e6be942",
        "cursor": {
          "ref": "e4ed331d-74ba-4218-853d-ee418a83b41f",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "1cc8b3df-3c73-422d-959c-493dfcffa0d8"
        },
        "item": {
          "id": "5843dee8-1c73-47fc-875e-c08c6e6be942",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "88d36185-32d2-4ae4-ac97-1b3adb9add36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb02f7d8-0ad1-4781-9eb0-ca5f8a7900f5",
        "cursor": {
          "ref": "df8204e3-b06d-44b2-b447-d9e93744857e",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "efb2bc51-ff32-4461-aeaf-f1530a9be293"
        },
        "item": {
          "id": "cb02f7d8-0ad1-4781-9eb0-ca5f8a7900f5",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "b447db22-326e-466d-8504-6fb000804685",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c9711ac-313e-4e53-b456-8152e1498e36",
        "cursor": {
          "ref": "e3108fb0-a698-4dc9-9d98-dadc62b027c5",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "9d49955c-75dc-4e58-9c1a-c279726a814a"
        },
        "item": {
          "id": "4c9711ac-313e-4e53-b456-8152e1498e36",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "1da78954-9980-4d60-9f1e-e93b52724980",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "204f3c4f-dd72-4381-93a5-ace218de363d",
        "cursor": {
          "ref": "e6f70037-76ce-4586-82aa-f4356162655a",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "a3194a41-1f31-49ad-8316-3030e3f11cce"
        },
        "item": {
          "id": "204f3c4f-dd72-4381-93a5-ace218de363d",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "f382856e-0510-4408-aa68-7ae54123edde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb5b8a2e-0b87-4e0d-ad83-2e6849b56068",
        "cursor": {
          "ref": "75d7c0a1-c391-4899-b836-eb6e06230e7d",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "274ee9dd-0aae-4043-b91b-2ea1971a84ac"
        },
        "item": {
          "id": "fb5b8a2e-0b87-4e0d-ad83-2e6849b56068",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "83a36b96-1c7c-4943-bb2e-701b17d92b0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5bce02e-6fd0-4581-bac3-2503751a68f9",
        "cursor": {
          "ref": "0ed2f5e4-2e51-4431-9ce7-b07798ca4fcd",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "b9fbc764-1edc-4cd9-9a52-d6af0aaa8e94"
        },
        "item": {
          "id": "d5bce02e-6fd0-4581-bac3-2503751a68f9",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "dcd57d92-c73f-4c1e-9b4c-1a8f2ee047d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13c52be1-2938-4794-85a9-39ad917fed5a",
        "cursor": {
          "ref": "52fa9f1d-e58f-40a0-be64-07d680150c8e",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "38fc07aa-4d49-4d53-a959-00c65a44cffb"
        },
        "item": {
          "id": "13c52be1-2938-4794-85a9-39ad917fed5a",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "f649c95c-c393-49a6-aecd-8a69e2bf5413",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36c10e33-fcb4-42c7-a0db-6a6ecfeb4eff",
        "cursor": {
          "ref": "6a5aec7e-00eb-46da-9a14-d2d67db4cf90",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "35ff3cad-139e-44f1-8e3f-72ec1937aead"
        },
        "item": {
          "id": "36c10e33-fcb4-42c7-a0db-6a6ecfeb4eff",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "d508e1fd-622e-4c09-aeb2-1c92768500d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "155dfb50-cc85-41a9-97be-b6033d558816",
        "cursor": {
          "ref": "8b0ef968-da58-40db-839e-2a08b4ebc861",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "4d62a772-bd03-4521-87ac-afb267ea8abf"
        },
        "item": {
          "id": "155dfb50-cc85-41a9-97be-b6033d558816",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "a38e6057-42b7-46c3-a0c6-f361abc2dd2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5721a9ee-ebc0-4958-9b20-4acc653ce72a",
        "cursor": {
          "ref": "230a7c13-84eb-4d01-b623-d3a2df1e0b9c",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "5adba438-83ed-4f49-beb2-56cb7a6a2644"
        },
        "item": {
          "id": "5721a9ee-ebc0-4958-9b20-4acc653ce72a",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "f363346d-a008-47f3-9d39-cae85166fb95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cfa17a9-e6e1-4602-bf27-e0ef920f023e",
        "cursor": {
          "ref": "186a22c2-bac0-4715-8f8e-be1a98a0c725",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "65df91ee-18fe-4506-9066-7ab9f10a0075"
        },
        "item": {
          "id": "2cfa17a9-e6e1-4602-bf27-e0ef920f023e",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "c87830b7-d97d-4554-b576-b2ab64c83c50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca6c3e25-256a-48a9-8d2d-cd8abbb7dc44",
        "cursor": {
          "ref": "656a4c87-13e1-4ba6-8ed1-d79fb90ca997",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "95f68e41-a017-435b-8701-0d8e6f412ea5"
        },
        "item": {
          "id": "ca6c3e25-256a-48a9-8d2d-cd8abbb7dc44",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "5aae8367-42ad-4622-980c-4ed52c358a20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "300839e9-80fd-484d-9e4c-1625689c6fff",
        "cursor": {
          "ref": "c21b99a2-d4c2-4bb5-a404-9874095b3db8",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "0669929f-1188-4f05-af51-81351436759e"
        },
        "item": {
          "id": "300839e9-80fd-484d-9e4c-1625689c6fff",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "cef9694d-fed0-4ae4-bf0d-eb227e64c264",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2e9b3e0-c9ff-42f1-b4d4-e596bdef0a7b",
        "cursor": {
          "ref": "e9a5833c-008b-4685-a8d4-ac673741575b",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "81a261ad-34cc-4e14-bf0a-2797395daf2f"
        },
        "item": {
          "id": "d2e9b3e0-c9ff-42f1-b4d4-e596bdef0a7b",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "c4ea26c5-257e-4783-8463-e7ab146e88cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaf8788f-b49c-4b32-9ec3-cb9c30c53c61",
        "cursor": {
          "ref": "b529bd2f-c81c-48b5-b073-b3c06bc55753",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "3d56701d-4228-42cc-8d2d-926254071689"
        },
        "item": {
          "id": "eaf8788f-b49c-4b32-9ec3-cb9c30c53c61",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "51073687-ffc9-42b6-9e59-535be50bfd6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14ceb553-840f-4e5d-93ed-4b18b3d9461b",
        "cursor": {
          "ref": "cf2ebd12-8bc7-4945-8f46-909354ee13a9",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "8a5e1029-7ec8-4578-9cef-21aeea3a4627"
        },
        "item": {
          "id": "14ceb553-840f-4e5d-93ed-4b18b3d9461b",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "9e489509-af91-4be9-bf07-855250e0d406",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "def1084c-f572-4bce-a38a-cd1e251e6588",
        "cursor": {
          "ref": "883e5ffd-d21d-4d20-af9c-338f2411b173",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "1be2d448-2703-4c29-926e-02345eea97c0"
        },
        "item": {
          "id": "def1084c-f572-4bce-a38a-cd1e251e6588",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "fffc2134-26cd-44bf-a7f6-d7939750839a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74874f0a-0fbf-47c2-b7e3-4cf520d6e037",
        "cursor": {
          "ref": "4b9dba1f-0964-48db-a497-ae848e5ff4c7",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "b8d13f50-103e-4a94-b107-1c575c0a96cf"
        },
        "item": {
          "id": "74874f0a-0fbf-47c2-b7e3-4cf520d6e037",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "8e207d4e-acdd-4e47-a394-4401bc474443",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0d0a01f-775f-4bf6-bb4e-7bb7fbe73101",
        "cursor": {
          "ref": "cdfeabff-aa3c-45a3-9a17-4fa524a4acc4",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "a74e2050-3ae9-44ec-84b9-fc58bcf2b7d8"
        },
        "item": {
          "id": "e0d0a01f-775f-4bf6-bb4e-7bb7fbe73101",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "3af13ae8-c49f-40f2-bc3c-4fa8bfda39f8",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 38,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea670820-0605-4370-af1b-5a45c87fe068",
        "cursor": {
          "ref": "aa56916f-f54f-453b-aaee-9a37d4034265",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "ce849fc4-430a-45e7-90e7-392dea4a0436"
        },
        "item": {
          "id": "ea670820-0605-4370-af1b-5a45c87fe068",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "77290ce5-ea13-4754-90a1-3ab94fa219bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80220df0-c354-4d04-9ffe-edd038fa04e7",
        "cursor": {
          "ref": "28c9922f-8775-4eff-b8fa-37ac0b06cbc7",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "f46d802e-2a57-4c86-a6a6-16824a0e20e1"
        },
        "item": {
          "id": "80220df0-c354-4d04-9ffe-edd038fa04e7",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "936a8b8a-50fb-49ef-8465-79a56e0d172d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b33fb906-1226-40cf-a3c1-313aab6f29a6",
        "cursor": {
          "ref": "b5bc3081-df68-4f0d-a729-f219c79c41e2",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "ed2fbbbd-204d-4e5c-b90a-e6a7a35b3346"
        },
        "item": {
          "id": "b33fb906-1226-40cf-a3c1-313aab6f29a6",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "4be09958-fcb9-4739-8c61-af78a66f664b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cb0ed9f-ca60-485a-b182-5d6d73c35b8a",
        "cursor": {
          "ref": "44cf5bf3-1667-40f7-aaa5-319c1582895b",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "d6aaa21b-8860-4e5f-87be-2981b498bc07"
        },
        "item": {
          "id": "6cb0ed9f-ca60-485a-b182-5d6d73c35b8a",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "9dbf2090-43bd-4a9b-b9fa-8986b00c85c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4947d41c-fb85-4c10-a37c-986672b8a3b7",
        "cursor": {
          "ref": "1ae02d9c-800e-47e0-af21-2443c67cd385",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "fec2fce1-f122-4121-82f6-c1d7129763f9"
        },
        "item": {
          "id": "4947d41c-fb85-4c10-a37c-986672b8a3b7",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "7dbf12e0-16af-413b-a956-151f74e3ca22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33a3c68d-98cd-4327-a768-34a8bd0fafe2",
        "cursor": {
          "ref": "43105f57-4de7-4ee9-b2b5-e1bf33b4bab6",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "f7f6cb15-944e-44bb-9ce3-2a74bfcff6d3"
        },
        "item": {
          "id": "33a3c68d-98cd-4327-a768-34a8bd0fafe2",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "bb3b8cf4-1cea-4b33-8f9a-66d6d64f2918",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ca8140f-a124-4f42-9c8e-6694a4740ec1",
        "cursor": {
          "ref": "531d0d8e-995e-4778-9ec5-e5961c8dd250",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "fa14f8e4-c95e-43f7-96ec-ef477f93ec83"
        },
        "item": {
          "id": "8ca8140f-a124-4f42-9c8e-6694a4740ec1",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "ebb983d6-ff93-4aab-a48b-3945287150b5",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 39,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe2cc90d-8893-4d33-9ef3-0ca0a251a1b8",
        "cursor": {
          "ref": "27165bf8-2fcd-4d34-9ef4-7bb42bd3da2a",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "ef2ab7b5-3f4c-45c0-8fd8-e3561abd2b4e"
        },
        "item": {
          "id": "fe2cc90d-8893-4d33-9ef3-0ca0a251a1b8",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "78ee77d3-0769-4270-b147-f7bc8af5d634",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0b04744-1924-4099-b88e-b1d170e124dc",
        "cursor": {
          "ref": "e2014d22-7d36-4df0-8374-055ba642d8ef",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "c87fce05-711e-49f7-9ce2-094b572bcae8"
        },
        "item": {
          "id": "c0b04744-1924-4099-b88e-b1d170e124dc",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "90d7081b-2300-4edc-8256-54b5e5ff391e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "702b8dec-9ec3-4d80-9c68-a00b430f0bab",
        "cursor": {
          "ref": "b747ec10-da3f-4c2c-bb7e-2a1cd64d219c",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "510b8625-9fe5-44ae-9c5a-a56c5af3f426"
        },
        "item": {
          "id": "702b8dec-9ec3-4d80-9c68-a00b430f0bab",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "ae49a74b-6db1-478e-b5de-d7c35a00f632",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a51eac81-21e8-4bc0-acc0-d7c207514dfa",
        "cursor": {
          "ref": "79720781-2851-424f-90e4-c587fbbd1127",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "30e0af23-af43-4ad8-99fe-e99fd1306766"
        },
        "item": {
          "id": "a51eac81-21e8-4bc0-acc0-d7c207514dfa",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "492e9e68-16b5-4cf7-821a-cf902c5de325",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e95e72d-06ea-4a19-a14a-6e5066f59046",
        "cursor": {
          "ref": "bb5a3d28-91fc-491b-9283-5c702ec01c22",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "382602da-df04-44c2-9b51-3a1805926a31"
        },
        "item": {
          "id": "7e95e72d-06ea-4a19-a14a-6e5066f59046",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "87283b78-9b53-46b5-a07b-d7b42201fdc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d42f5cda-c869-4aae-a32c-59e16bb02597",
        "cursor": {
          "ref": "532f4a29-adb2-40d2-b77e-6ff6766cc984",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "295aaeb9-651d-49ee-85f1-2d62f0bdd270"
        },
        "item": {
          "id": "d42f5cda-c869-4aae-a32c-59e16bb02597",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "051a3ac5-25d7-429c-aa83-002c41f93016",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6b13608-c9c9-42d1-9185-5d84535ba5d5",
        "cursor": {
          "ref": "41d7d7db-1abf-4aab-96e2-3a0598ed14d4",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "b4b50892-d223-4479-ae7f-4760bc1448ff"
        },
        "item": {
          "id": "f6b13608-c9c9-42d1-9185-5d84535ba5d5",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "a8a67a45-23c1-4923-b496-cafe9abc9885",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a656359-b428-4eb6-9453-a84d087d89e8",
        "cursor": {
          "ref": "1a0199a4-5a49-41d3-8326-8cca8163e732",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "79778195-77a4-48dc-9917-d50b4269b5fe"
        },
        "item": {
          "id": "1a656359-b428-4eb6-9453-a84d087d89e8",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "b9ec7a3c-0ce8-4889-9ddf-a6bb39e0ed28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dbc8194-612c-4a51-9ec0-ebf47a0d859e",
        "cursor": {
          "ref": "567e3f8a-87ad-475e-88de-f046a7616087",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "c548c074-7250-4872-81a5-3d1ecf5aae15"
        },
        "item": {
          "id": "5dbc8194-612c-4a51-9ec0-ebf47a0d859e",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "fef91e02-38c1-4d32-987e-2452636d5689",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7540c09d-b89e-46d7-ae61-0cd0a16bc08d",
        "cursor": {
          "ref": "d5890f1e-70a4-4b81-bd3d-de103cb180fb",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "be666cfe-0b9c-46fb-ae1b-3f4e5abea16c"
        },
        "item": {
          "id": "7540c09d-b89e-46d7-ae61-0cd0a16bc08d",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "48ade306-a0a6-480c-9e97-3adda483a492",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fff0ceb7-c3fe-4f38-b9e0-c485769df033",
        "cursor": {
          "ref": "be6c9dd7-e22d-4bab-9e77-16dde82c554f",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "414001ac-80db-4fe0-8839-eda987f05eef"
        },
        "item": {
          "id": "fff0ceb7-c3fe-4f38-b9e0-c485769df033",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "8751b10c-1689-4af7-9f85-fee4144b1bf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "388a8baf-2530-4000-bf9f-897391e2bbf7",
        "cursor": {
          "ref": "0d7a0ccd-6f3c-4baa-a133-5c88a957e83b",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "47b1a809-cb39-4583-876a-c007f5e19d4f"
        },
        "item": {
          "id": "388a8baf-2530-4000-bf9f-897391e2bbf7",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "ac5ffd63-3d9e-44f4-9681-67a3060f1183",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0403510b-9dfc-432b-959b-871ea0bad46a",
        "cursor": {
          "ref": "bd7e2534-a41b-4c6c-8ee9-b6dd60fa887c",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "90b43878-5370-4fea-bef0-a56a06f76da7"
        },
        "item": {
          "id": "0403510b-9dfc-432b-959b-871ea0bad46a",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "2701c956-9ee1-4c75-897b-d776b341dc0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16d5bf74-559e-475e-a415-3b592e6592ce",
        "cursor": {
          "ref": "37277d76-dda0-4d04-adaf-00ea02fb44e5",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "c68dac32-9684-47b5-a66c-5abc87fbe16a"
        },
        "item": {
          "id": "16d5bf74-559e-475e-a415-3b592e6592ce",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "3ece9079-a147-42c7-b502-ce77959074b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b549af3-307e-41e1-8c1d-73dde5202e78",
        "cursor": {
          "ref": "d3535e4a-179e-4557-be61-e150260cab95",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "47ae6736-bd5e-4a77-a333-c5de894e3391"
        },
        "item": {
          "id": "4b549af3-307e-41e1-8c1d-73dde5202e78",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "c444c20e-3a49-4b0f-acc5-60cfc1741688",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97bf89c8-74af-4135-986b-a1c8dc4fd9f5",
        "cursor": {
          "ref": "284f9161-f84a-4126-a74d-5ac928c82e2d",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "f485d860-22ad-493c-81f9-ac566613de4d"
        },
        "item": {
          "id": "97bf89c8-74af-4135-986b-a1c8dc4fd9f5",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "f1ca62fa-5e9b-4c2c-8cbb-671ab2205af0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bcd0d88-1550-404f-a59c-fcfd5beb8312",
        "cursor": {
          "ref": "de1605ec-5e90-4c57-84df-7f0d1c61211a",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "1e9fb47a-44db-4265-bcfa-5dc25286ca4a"
        },
        "item": {
          "id": "8bcd0d88-1550-404f-a59c-fcfd5beb8312",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "336bb675-ac67-4400-93ac-ff16139e1887",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ec15e3a-9fe2-4bc8-ad81-9c1d30e38572",
        "cursor": {
          "ref": "0e69440f-3718-42c3-8397-53816bc16c19",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "45e0d700-2ad6-4538-9091-cc2ab26a3c8d"
        },
        "item": {
          "id": "1ec15e3a-9fe2-4bc8-ad81-9c1d30e38572",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "8c85f474-42d3-4842-8200-76c31b621114",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afc0b7fd-dff2-452d-8b31-6421a4bccae1",
        "cursor": {
          "ref": "94f5e2a0-05c0-4e5c-8b75-a535ca63d52d",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "0ae6f2f6-27b2-4ce0-93d5-34b9ac5c2843"
        },
        "item": {
          "id": "afc0b7fd-dff2-452d-8b31-6421a4bccae1",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "44532c20-826c-4623-885f-3ffa39a3ce25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f9b5e57-8d6f-4497-8d98-8005201e4751",
        "cursor": {
          "ref": "a5739b32-f355-4912-afd6-a2963d82645a",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "51aab653-24e9-436c-b635-ab5c340197ea"
        },
        "item": {
          "id": "4f9b5e57-8d6f-4497-8d98-8005201e4751",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "638fcb3c-309d-401d-b2c5-fb26c4dc4f06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fae5f15-646b-46ad-bf2d-7c7686569718",
        "cursor": {
          "ref": "b01fa360-56bb-4e12-85f3-f707356f4d46",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "31461b48-9a2e-4acd-ab99-f53523ab21d3"
        },
        "item": {
          "id": "4fae5f15-646b-46ad-bf2d-7c7686569718",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "81c9d15c-376d-4c4e-93fc-ff1a7e82b4b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b755f6cd-9427-4c32-905c-395f12016f34",
        "cursor": {
          "ref": "8abe0e6e-887b-406d-a0b8-40a6cc2ea407",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "bd9669bb-dcd8-46e3-915f-f4a379521364"
        },
        "item": {
          "id": "b755f6cd-9427-4c32-905c-395f12016f34",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "e881a0c2-6300-49bf-be7e-c45fada79525",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "754ee18b-adc2-4ed6-9a03-33ec3d032924",
        "cursor": {
          "ref": "4bca43d9-32d5-4a66-964f-b990dee5c1e1",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "7c19f839-91e2-4aac-a1ad-43728358f620"
        },
        "item": {
          "id": "754ee18b-adc2-4ed6-9a03-33ec3d032924",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "adef33e4-725d-452d-a98f-34670f9170d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83631d29-5622-424d-b070-75ccbc32c926",
        "cursor": {
          "ref": "1721bef3-35e0-46fd-846f-49805a3e8cc9",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "7a345705-522e-4ccb-9e34-b20e864cf96d"
        },
        "item": {
          "id": "83631d29-5622-424d-b070-75ccbc32c926",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "d10d7ae9-4ba9-4ea7-851c-5ca3719b4dc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "104e982f-c73b-477d-8fe2-e0fd6773cd48",
        "cursor": {
          "ref": "1b615bec-d822-4dce-8791-92cfadcddbc4",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "7a06e8ca-4c15-471b-ad4b-0fe7bbca4f9c"
        },
        "item": {
          "id": "104e982f-c73b-477d-8fe2-e0fd6773cd48",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "8fbf3828-5182-440f-b8c4-7068da61213b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd6442bb-ba03-4564-a419-3cccde169925",
        "cursor": {
          "ref": "6e65dcd8-5383-439f-924d-00539a22f660",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "ff60dff5-82d5-4179-a644-44ff2d1d60c2"
        },
        "item": {
          "id": "cd6442bb-ba03-4564-a419-3cccde169925",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "497b486d-0abd-46d5-9c49-e6d9d17078f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b270d556-bd72-4cc1-a79a-91ee64c920ae",
        "cursor": {
          "ref": "d35f7efe-7c92-46ca-9240-b35b32cb129d",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "62ababe8-9213-49f7-8c2d-c97fd2b33143"
        },
        "item": {
          "id": "b270d556-bd72-4cc1-a79a-91ee64c920ae",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "e4d6e207-e3ed-47e5-a321-935316419e55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8119491-09fe-4de3-be9a-a85214435aa7",
        "cursor": {
          "ref": "dead57ca-f8b5-42eb-b2f1-0372003afeee",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "87809dfe-d2f8-4dc0-8928-5c7db9f0d306"
        },
        "item": {
          "id": "c8119491-09fe-4de3-be9a-a85214435aa7",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "75402f2e-a541-4242-a428-9c80230d507a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "379a398d-acbc-4076-a11e-96624cbeba54",
        "cursor": {
          "ref": "5e12af30-810c-4b76-a1f4-e33f54c6892c",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "53e800dd-9496-4480-96ac-0e2b736610c0"
        },
        "item": {
          "id": "379a398d-acbc-4076-a11e-96624cbeba54",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "44b6649a-162a-40a4-a58f-b799a86de2ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9b341de-107b-40d2-8722-6f6dba100f80",
        "cursor": {
          "ref": "0d1aff4b-6d8b-420e-8559-34e052b058c7",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "7e0b40c7-5d8f-4b68-8c79-10e3621706a6"
        },
        "item": {
          "id": "d9b341de-107b-40d2-8722-6f6dba100f80",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "f3aa23bb-df98-4da8-b3b5-04bccc83b310",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f84187ca-d939-4a60-9ff8-49e78bb671d8",
        "cursor": {
          "ref": "119ed5d7-1883-4c11-b35f-ca2ff94f3b9f",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "6e363a56-83c0-4fad-afe6-bcf30e2e0627"
        },
        "item": {
          "id": "f84187ca-d939-4a60-9ff8-49e78bb671d8",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "40329703-1d95-47ea-af0f-51297bacb954",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53b9860a-9e43-48e1-be5b-cfccf5097590",
        "cursor": {
          "ref": "155724e9-569d-47d6-83ff-ad23eeb64004",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "41fadae8-52c8-4e6c-bab8-a13f23568df5"
        },
        "item": {
          "id": "53b9860a-9e43-48e1-be5b-cfccf5097590",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "9f78818d-9e44-4951-8326-5a79dfbc45e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50bf6bf3-971b-4081-a62d-e69da63eefc4",
        "cursor": {
          "ref": "ee5a87b0-9184-414f-a0a6-517a826e0e08",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "ed34def0-602e-401f-9fc4-d33155ad6672"
        },
        "item": {
          "id": "50bf6bf3-971b-4081-a62d-e69da63eefc4",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "6853f245-d759-4c6f-ad73-54dd14779d15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5adb8e8-6e75-44e5-b568-9d307eebc754",
        "cursor": {
          "ref": "e39221de-7872-4988-b303-f0cdb0491921",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "5f7ddc61-0996-49f4-beb6-d2d9404f280b"
        },
        "item": {
          "id": "b5adb8e8-6e75-44e5-b568-9d307eebc754",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "8e41b3d3-e57a-4364-ae8c-365930e1bfed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "700ed7cf-23a1-47ce-99d9-1044fb2f29db",
        "cursor": {
          "ref": "ea623a6c-2092-4a63-b912-f235647be453",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "47c42e45-4aa5-4057-b622-ac0b1c9047d6"
        },
        "item": {
          "id": "700ed7cf-23a1-47ce-99d9-1044fb2f29db",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "41dc119f-1ffb-4dc3-a805-49ad246fca77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0050a5cb-0233-4cc9-aedc-b175cbf33954",
        "cursor": {
          "ref": "81268ed4-1100-42c0-af3d-0a84f7c23f96",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "086f46eb-03cf-45fc-954d-ce11a4c85e26"
        },
        "item": {
          "id": "0050a5cb-0233-4cc9-aedc-b175cbf33954",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "f0d0149f-780c-4b6c-a029-933b7c51fed9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a45d3119-0627-4de1-b7a4-d8e3150e4779",
        "cursor": {
          "ref": "69103a81-6884-4738-8f2e-4e47ee796e8a",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "9d496b31-cd06-4320-8999-44a1a69b1d14"
        },
        "item": {
          "id": "a45d3119-0627-4de1-b7a4-d8e3150e4779",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "8db97975-eb56-49e8-9492-11e71d26de73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e102a02-f366-4004-9e21-823a59de6128",
        "cursor": {
          "ref": "31a53a68-a465-4ff0-9e86-4c056d1bbf11",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "032046c1-1f47-49a2-8087-d367a9d63736"
        },
        "item": {
          "id": "5e102a02-f366-4004-9e21-823a59de6128",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "63509588-b3d9-45c5-a48c-7d824cba1110",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f62ff050-3d23-46ca-be51-f3aea4716fe9",
        "cursor": {
          "ref": "cf7b030d-7da6-488c-9d72-525fbb0a1640",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "01334f66-22f8-4e21-9c94-26a80766c4ac"
        },
        "item": {
          "id": "f62ff050-3d23-46ca-be51-f3aea4716fe9",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "6b82c27c-13f0-4025-9f78-2f3ad2580b68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f0dc1a1-b91d-4088-ba4a-7654d7174b44",
        "cursor": {
          "ref": "6a4e4965-40ce-412f-88bc-3543e8df31eb",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "dacc7b96-024f-4b3a-b86d-b87f7c9b8705"
        },
        "item": {
          "id": "7f0dc1a1-b91d-4088-ba4a-7654d7174b44",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "5f637b55-195d-480d-9088-1b43a517e4d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59cf6e74-54ce-4478-8653-95fa175d60e9",
        "cursor": {
          "ref": "1e34c001-fe81-4714-a06f-faa4d05956a4",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "e5c41879-9efb-424d-967d-34492f1deeca"
        },
        "item": {
          "id": "59cf6e74-54ce-4478-8653-95fa175d60e9",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "60a15e9e-4a3a-4aa5-b1a6-af45c6591d7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8d19271-8ba3-4b0b-b7ed-e361d5e69ccd",
        "cursor": {
          "ref": "9cf9d091-cedd-4154-93e9-9ac1cc643b03",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "400bd05b-158b-41f7-9ef3-145f142ad36a"
        },
        "item": {
          "id": "a8d19271-8ba3-4b0b-b7ed-e361d5e69ccd",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "e2565555-4be8-4e25-a7ca-03a17b52d11f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05dc6129-2d69-4674-983d-6616d630f4cd",
        "cursor": {
          "ref": "247462e1-7a5c-47bb-aeda-985d0117a500",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "d7b9c46e-823b-4dcf-9d30-5aa8ee40293e"
        },
        "item": {
          "id": "05dc6129-2d69-4674-983d-6616d630f4cd",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "e7396f05-8ca7-4605-a4eb-bcc186bfd1c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da8c5cda-bd04-4864-9587-2acdda4b29c6",
        "cursor": {
          "ref": "24a29b94-e3bd-4fb6-880b-108d473a1055",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "98e6cc71-2fea-4e6f-9381-da906ac9be15"
        },
        "item": {
          "id": "da8c5cda-bd04-4864-9587-2acdda4b29c6",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "d99f3b1f-1f3d-4357-a1ce-75fd782f351d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41d83f9d-17f6-4b0c-8fa9-6676edfd1730",
        "cursor": {
          "ref": "c1024bca-7fc4-4bbb-83b8-f076a8e94760",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "2f696751-0de0-4f5f-96e6-f4da8ee60299"
        },
        "item": {
          "id": "41d83f9d-17f6-4b0c-8fa9-6676edfd1730",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "ff6dd642-f811-4340-9b19-6082cb3a44b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c242ae90-3196-4687-babe-5ef834345eeb",
        "cursor": {
          "ref": "7f700606-c400-449b-b171-cf7644ec84e5",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "d008ae36-99b3-45d1-8393-0a6335af0ee3"
        },
        "item": {
          "id": "c242ae90-3196-4687-babe-5ef834345eeb",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "2ac16eab-77bd-4d54-92f7-9478c8c9b2ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe6d0174-2e8f-4700-88fb-257c6e627426",
        "cursor": {
          "ref": "837cd118-945c-42ae-a0b4-0d374c0397e0",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "2da60e06-2b0c-4048-8253-1d08c4262788"
        },
        "item": {
          "id": "fe6d0174-2e8f-4700-88fb-257c6e627426",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "b8657b6e-565d-43c7-8241-529a61962373",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2ba661d-96e6-4477-aa4a-7fe6e44073fd",
        "cursor": {
          "ref": "2b67524d-1e16-48a2-8f3c-0a91021be91d",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "e26bf5b1-742a-4c0e-a2e3-96575e0f520d"
        },
        "item": {
          "id": "c2ba661d-96e6-4477-aa4a-7fe6e44073fd",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "6d7c57d1-d55f-41ca-a72c-ab75d9d50b6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66f0c481-8e62-4cb1-b375-acfb9b648b67",
        "cursor": {
          "ref": "79bc0efc-eb41-48f4-821b-6b3cfb7d2f02",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "26b4a3a5-9e9a-4147-a5d9-817de5f2ac6d"
        },
        "item": {
          "id": "66f0c481-8e62-4cb1-b375-acfb9b648b67",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "a18d54e1-0d19-46d4-90e9-e33b44820f15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba693e55-b76b-49fc-a88c-21a0ee6ba033",
        "cursor": {
          "ref": "3d0d0734-adfd-43c9-96c5-1e7862c1ebe2",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "fe54d738-7218-4045-ab16-4da013ef3611"
        },
        "item": {
          "id": "ba693e55-b76b-49fc-a88c-21a0ee6ba033",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "bfbec9b3-87f3-4bf2-8c27-0ad48f36bf07",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07d94602-a922-46bd-abab-68acaa13fc9d",
        "cursor": {
          "ref": "8a0a1072-900d-43b3-af4f-a8aa8562791b",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "0ab68267-7f37-4d3e-ba75-0af19c16cef5"
        },
        "item": {
          "id": "07d94602-a922-46bd-abab-68acaa13fc9d",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "62914fb9-2aca-4f88-ba21-852d20e2e94e",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 136,
          "responseSize": 162
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23068bea-64cd-42eb-9c56-55958dc8f559",
        "cursor": {
          "ref": "fa77c548-cb7e-40a2-b09c-b3759eeb372a",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "334ec1e5-9064-4feb-a4c7-9f24fef38906"
        },
        "item": {
          "id": "23068bea-64cd-42eb-9c56-55958dc8f559",
          "name": "credentials_issue"
        },
        "response": {
          "id": "83e72c98-0eb9-4e0b-adf1-5cb0f47495e8",
          "status": "Created",
          "code": 201,
          "responseTime": 51,
          "responseSize": 862
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c538056-7353-49ce-8db7-1341d0606363",
        "cursor": {
          "ref": "aa24673d-ecea-4657-bddb-b3d49392eea0",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "e09be236-8d48-4043-b9a4-6a5145eb4786"
        },
        "item": {
          "id": "2c538056-7353-49ce-8db7-1341d0606363",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "b08527e3-b68a-40e3-82bd-d637c59a522f",
          "status": "Created",
          "code": 201,
          "responseTime": 211,
          "responseSize": 860
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "d14c92fa-88a8-444e-b1d9-cc56fe0495d5",
        "cursor": {
          "ref": "1a985b51-8cbe-46cd-b0bd-898504cd4d4f",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "6eba48c4-5d4b-4689-8352-abbdc8cfa6e2"
        },
        "item": {
          "id": "d14c92fa-88a8-444e-b1d9-cc56fe0495d5",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "1b26cd07-4af9-409f-845c-59e474e6faee",
          "status": "Created",
          "code": 201,
          "responseTime": 49,
          "responseSize": 884
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfa56d57-7a52-4f2f-bc3c-6868b835d35c",
        "cursor": {
          "ref": "4d591ad2-6493-4990-b1a5-146d14c5112e",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "fbe17236-1d3d-4520-9329-dafbfd131b60"
        },
        "item": {
          "id": "bfa56d57-7a52-4f2f-bc3c-6868b835d35c",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "bb03964a-18b2-45ed-a22e-11ad243aba65",
          "status": "Created",
          "code": 201,
          "responseTime": 50,
          "responseSize": 850
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "8244d26d-c7da-44c5-8d4f-1f428d678d18",
        "cursor": {
          "ref": "b92b159a-011b-4c5e-90c3-e9cf43dac751",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "0208b601-dfeb-4fe4-be27-98f8ceb524a0"
        },
        "item": {
          "id": "8244d26d-c7da-44c5-8d4f-1f428d678d18",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "b0a2dbec-8123-4446-ae9d-e3c992979d69",
          "status": "Created",
          "code": 201,
          "responseTime": 48,
          "responseSize": 862
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1f565f7-bad5-4990-bad1-cd4f31b82653",
        "cursor": {
          "ref": "082cc1e7-88ee-447a-a1c8-11d4cc03f4e0",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "407501d2-9c8b-44cb-8cd0-85ca8c7c8fe6"
        },
        "item": {
          "id": "f1f565f7-bad5-4990-bad1-cd4f31b82653",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "6d2881a4-ec76-4456-8748-01a8978e129a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1f565f7-bad5-4990-bad1-cd4f31b82653",
        "cursor": {
          "ref": "082cc1e7-88ee-447a-a1c8-11d4cc03f4e0",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "407501d2-9c8b-44cb-8cd0-85ca8c7c8fe6"
        },
        "item": {
          "id": "f1f565f7-bad5-4990-bad1-cd4f31b82653",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "6d2881a4-ec76-4456-8748-01a8978e129a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c0775b6-a213-4aa6-ae09-3a0d4be3b305",
        "cursor": {
          "ref": "c821c71e-d69b-4600-b92f-905d437b99db",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "363ce08b-580c-4c6f-a45e-cf3773b56f07"
        },
        "item": {
          "id": "2c0775b6-a213-4aa6-ae09-3a0d4be3b305",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "3956144f-4dae-443a-9c6f-ef9d446f5b2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2300254c-7c47-4119-81a6-9209fefa88d9",
        "cursor": {
          "ref": "35509eb1-9a0d-46f8-955b-2c146d20b870",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "d7ad9d10-89d6-4cb0-8bfe-e465c001acb8"
        },
        "item": {
          "id": "2300254c-7c47-4119-81a6-9209fefa88d9",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "902b809e-75ea-4cc5-9fb4-df3798b99653",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e60629e9-c7a0-4f3d-b934-32c8868214b3",
        "cursor": {
          "ref": "d14b6d0d-d646-4fb3-9bc1-d273b4afff4b",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "195b2d7e-e726-4812-a678-d7e3389f841f"
        },
        "item": {
          "id": "e60629e9-c7a0-4f3d-b934-32c8868214b3",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "8fd060f4-fe88-4fe7-becc-bac6addfb34b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e97495ad-2614-422d-a7d4-02ca86eeac0b",
        "cursor": {
          "ref": "bb0a2b29-bdf2-4d32-a981-3d2885a9fe2c",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "08f28cfa-9cb4-4067-b41f-c3923fb93c48"
        },
        "item": {
          "id": "e97495ad-2614-422d-a7d4-02ca86eeac0b",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "15919a41-5385-4774-86a7-c5b88c4deb44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a254b2e0-cf8e-4993-84ee-c624cb70f2ba",
        "cursor": {
          "ref": "e118a911-07df-4545-b570-25aca7b0a5ef",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "e650377d-20e7-4197-b334-787d895bcec2"
        },
        "item": {
          "id": "a254b2e0-cf8e-4993-84ee-c624cb70f2ba",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "c4a9d2d0-0cbf-475c-b920-66b8d1c2ed61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8c33e49-1983-4c71-952e-07aed47f00ea",
        "cursor": {
          "ref": "0cba2f0c-4bcb-4de2-ba17-5c93cb2b03db",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "aa05f906-1daf-4fed-b5c0-7e4470c517ed"
        },
        "item": {
          "id": "a8c33e49-1983-4c71-952e-07aed47f00ea",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "a6e9f169-8a16-46e3-8d0d-68d7c7b26611",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e069840-8941-46fc-aaa1-9c1035d591ab",
        "cursor": {
          "ref": "379129c5-047b-4751-8706-a21b77b5f615",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "928f3b06-d022-4045-804a-51125bd19282"
        },
        "item": {
          "id": "0e069840-8941-46fc-aaa1-9c1035d591ab",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "6eb45426-79a5-4565-988b-12b4873741a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1bf153a-a5e6-4745-9eb0-76c64bb62b01",
        "cursor": {
          "ref": "df04b922-1820-4e98-9bbd-87f2d3ebe226",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "eedf3fc1-f22f-4830-9294-662a1605269e"
        },
        "item": {
          "id": "d1bf153a-a5e6-4745-9eb0-76c64bb62b01",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "d872bf61-c6c3-4daf-8b0c-e3e040d61014",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da2a0bd3-9ae5-4de3-b491-d8720785e1f6",
        "cursor": {
          "ref": "f894519b-3860-48f4-aeb4-323ff71f2a42",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "ec300b7b-cfd5-41f8-b7eb-cb0fef00f41d"
        },
        "item": {
          "id": "da2a0bd3-9ae5-4de3-b491-d8720785e1f6",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "2cbb562a-edfc-48bd-93c1-a5e864d3f5a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "963392c2-590b-4cc1-a950-b67adf0eb6f4",
        "cursor": {
          "ref": "a2ce9248-ec72-46b3-8bea-c5c734ca1e4c",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "15a11f73-d964-4db6-a223-b15dd439e8cc"
        },
        "item": {
          "id": "963392c2-590b-4cc1-a950-b67adf0eb6f4",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "a33f5cf0-87fc-4979-aae0-caab7daf24a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "589e3531-6d89-4b0c-9683-b4848a954cc9",
        "cursor": {
          "ref": "72a5c11d-8aef-414e-a9e3-ca9e9c050a20",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "f3957b05-6739-40fd-8742-b3c9e636a093"
        },
        "item": {
          "id": "589e3531-6d89-4b0c-9683-b4848a954cc9",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "5dc4c1e4-90e6-44a0-b139-7b9f1d335188",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "508a6f4d-4a15-4750-ba20-f489e97b913e",
        "cursor": {
          "ref": "1c080b49-5335-4953-8394-d2aacd996dda",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "628dcd02-7012-47f6-9142-ed7f276c18fd"
        },
        "item": {
          "id": "508a6f4d-4a15-4750-ba20-f489e97b913e",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "aa7434ca-7d56-45b1-9c4d-3178e0b10cf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "102f5869-5fc0-442d-851a-374d9356fe56",
        "cursor": {
          "ref": "2de6a76f-fa08-4e3e-8d1c-4140901469c7",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "d90647c6-a5aa-42e5-8eda-b51a49b06378"
        },
        "item": {
          "id": "102f5869-5fc0-442d-851a-374d9356fe56",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "13b03b1c-41fc-4dbb-a9e4-e5fe86110201",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3cd3e68-2c9c-434a-b7bc-9da317b26221",
        "cursor": {
          "ref": "0a5b3783-8d9f-46a2-9077-ad5b14e2dd21",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "27114a48-064f-4e06-8d2c-209546886d80"
        },
        "item": {
          "id": "c3cd3e68-2c9c-434a-b7bc-9da317b26221",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "8adfe07f-13f3-46e3-ac28-c930e1b81f3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62164c16-6b00-4e2d-b71d-70ff90244333",
        "cursor": {
          "ref": "00e3e96c-e475-4fe6-bfce-dad03a74e8e7",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "014c9163-954b-4609-936a-0afd0db6b19f"
        },
        "item": {
          "id": "62164c16-6b00-4e2d-b71d-70ff90244333",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "8646c013-d79b-4fc3-a118-22f019c4978d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d348c65b-960c-499d-bbdd-afaf673b270e",
        "cursor": {
          "ref": "5d56bf17-be93-4407-b923-e8c15e2d221d",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "4a25d95c-219b-4a4c-a139-012b7409149c"
        },
        "item": {
          "id": "d348c65b-960c-499d-bbdd-afaf673b270e",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "f38159a9-dce8-4c28-8e90-7f030183cebb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77c8a9df-d45a-4d73-8e1a-17192f55981a",
        "cursor": {
          "ref": "1773314a-fee8-4dfa-817e-83a44b25d21a",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "8256f245-a28c-4b52-aea0-b622acf1daad"
        },
        "item": {
          "id": "77c8a9df-d45a-4d73-8e1a-17192f55981a",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "c7e9f254-0876-4467-81b0-4ae746a1c50d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "140c5a8a-2296-467d-9dc2-f06fb868a802",
        "cursor": {
          "ref": "7076afb4-d40a-4ced-9e5f-366a627f7632",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "429a2072-55c9-443b-85dc-dccf30fc45a5"
        },
        "item": {
          "id": "140c5a8a-2296-467d-9dc2-f06fb868a802",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "b350d3e7-aef0-4746-9cf2-d7502642465b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dd46b03-7c7d-4796-9a82-a69980bd44f6",
        "cursor": {
          "ref": "8843787e-5f34-4975-85fe-f22040aea7eb",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "bc17cdea-1532-47ea-8635-6c5f845cff93"
        },
        "item": {
          "id": "5dd46b03-7c7d-4796-9a82-a69980bd44f6",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "d7269ab0-6bb1-44c0-8c81-bf20fd59989d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7f1bb38-30f7-436b-96a1-f0683510496e",
        "cursor": {
          "ref": "69eca824-e918-4271-af05-f84ff9f3bb09",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "55be7d18-3c59-41bc-9bf4-5ea8886c930a"
        },
        "item": {
          "id": "a7f1bb38-30f7-436b-96a1-f0683510496e",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "6e3ebffd-c4c0-4fd6-a6e2-bea44627311f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50315ee5-82c4-4aac-8eec-444ba4d357ff",
        "cursor": {
          "ref": "e1287a53-e08e-43ae-b7b0-c87ec5b664ee",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "e970dd1b-8224-4ae8-b8cf-0bcda8881456"
        },
        "item": {
          "id": "50315ee5-82c4-4aac-8eec-444ba4d357ff",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "15b42c08-d2a3-4c5f-b0c8-51d1a07fe457",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90ba3053-5513-4ad8-8485-5afb990aa1b0",
        "cursor": {
          "ref": "618a6d48-01ce-4556-b173-6a9f53a6e48a",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "cd22373a-100f-41b7-93a7-7bf89476fc54"
        },
        "item": {
          "id": "90ba3053-5513-4ad8-8485-5afb990aa1b0",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "a0374b6e-e228-40ed-8ea7-ec3aeb78a655",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e54461fd-7773-4a54-931a-b1c9c2f64c9f",
        "cursor": {
          "ref": "83b0abff-2edc-40be-b3fb-58dfff8aa5b6",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "6d2cbace-82e4-43e8-885e-db5ba45a8d4a"
        },
        "item": {
          "id": "e54461fd-7773-4a54-931a-b1c9c2f64c9f",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "0e7c041a-9d75-43ba-b6d9-93479f730bc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5616942-f898-419a-875b-7b8567376b88",
        "cursor": {
          "ref": "efc0bace-e6b8-4c79-af74-d87d6fd972c5",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "5fa53dff-e0b6-4496-976a-11a85bc6ebfc"
        },
        "item": {
          "id": "d5616942-f898-419a-875b-7b8567376b88",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "d01a105d-846a-423e-8120-e37dc10167c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d0d003e-dc00-4c19-940c-cacaf527bcd7",
        "cursor": {
          "ref": "4365d66b-1a2f-4e9c-972c-9fde90ef0a02",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "36da4aa5-0cb2-41a6-aad3-3d94f6ce8f3d"
        },
        "item": {
          "id": "7d0d003e-dc00-4c19-940c-cacaf527bcd7",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "69e13ede-94b9-4650-9078-f69df72ad41f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3a657bb-b2c4-463e-bb3c-263cc4709647",
        "cursor": {
          "ref": "b1270d29-fde2-4f6d-96e5-386c00cb3a2a",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "c2704575-1bcd-4c50-b8b3-53ba8c93a2f7"
        },
        "item": {
          "id": "f3a657bb-b2c4-463e-bb3c-263cc4709647",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "7b8a1168-3b35-40f8-b7d4-d28489ff55dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1739ec5c-c029-48fa-a9b3-4825ffa087f9",
        "cursor": {
          "ref": "7b29f7b8-0718-4527-b7da-a1a1c9e78df8",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "f1773e67-3e2f-4376-9433-c9e21072dbad"
        },
        "item": {
          "id": "1739ec5c-c029-48fa-a9b3-4825ffa087f9",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "aa9267e3-e060-48dc-a22b-c40e3233b02d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e513bb53-0079-479c-89d3-f45e0ca00592",
        "cursor": {
          "ref": "f6b3fc50-6863-4b15-87f2-bb26394b4c03",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "2945437d-8515-4d00-b0ac-d180697510d9"
        },
        "item": {
          "id": "e513bb53-0079-479c-89d3-f45e0ca00592",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "f5a692e5-77e3-4837-84db-688eca6243f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ffbff42-9b26-49b0-9ca2-cf38d764074a",
        "cursor": {
          "ref": "f4372b62-876e-4ff7-84e2-d1d559a6a758",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "bd629110-09ce-4dd7-b6d2-13e545b38d00"
        },
        "item": {
          "id": "1ffbff42-9b26-49b0-9ca2-cf38d764074a",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "cf84ee84-0214-4630-a291-bced98bac88d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ca62ac9-d29d-48e0-8ad3-22fa3a5c0755",
        "cursor": {
          "ref": "81b1f9e9-d9c5-4db5-a67c-995a89b02c7b",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "d9fefbbf-24a1-44f5-bc81-d811cbed7f1e"
        },
        "item": {
          "id": "7ca62ac9-d29d-48e0-8ad3-22fa3a5c0755",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "00c5e7a0-0d23-4940-951b-1db0d8325f4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "445c3b9b-1e98-4b82-828f-2a8dc75c7e08",
        "cursor": {
          "ref": "ce134714-9c40-49a9-af1d-31e68082f1b7",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "bc7cea4f-c826-4aac-bed4-ec893f97433a"
        },
        "item": {
          "id": "445c3b9b-1e98-4b82-828f-2a8dc75c7e08",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "0b90feb6-2dc4-45d8-af4a-d50deb70a879",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00ad33ec-a459-45d0-89a0-77b9b1900e94",
        "cursor": {
          "ref": "adf57202-fed7-4b50-a799-503e9a396b0f",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "71859032-dbe4-4cae-8354-fe704b440552"
        },
        "item": {
          "id": "00ad33ec-a459-45d0-89a0-77b9b1900e94",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "4f297761-80cf-4462-a788-1099eb7b2c74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "11f95de2-713c-41a9-a74d-deddc103bd2e",
        "cursor": {
          "ref": "356705e4-c13a-4662-90e5-fe65cd95533b",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "0f214bce-ecb7-4f2d-ac9e-f41948027405"
        },
        "item": {
          "id": "11f95de2-713c-41a9-a74d-deddc103bd2e",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "aadcb32d-b3b3-4be5-bb77-4237fa7b6013",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 403",
              "message": "expected response to have status code 403 but got 400",
              "stack": "AssertionError: expected response to have status code 403 but got 400\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "58dbc926-f19d-4c82-b1a9-fe5e2f0bd06e",
        "cursor": {
          "ref": "53081983-5ef0-4317-bb02-0f8d4f7bded0",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "9d9430f0-e363-417b-94a9-346fc06689f8"
        },
        "item": {
          "id": "58dbc926-f19d-4c82-b1a9-fe5e2f0bd06e",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "9485962d-927d-4019-8f2c-aceb6456a7d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58dbc926-f19d-4c82-b1a9-fe5e2f0bd06e",
        "cursor": {
          "ref": "53081983-5ef0-4317-bb02-0f8d4f7bded0",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "9d9430f0-e363-417b-94a9-346fc06689f8"
        },
        "item": {
          "id": "58dbc926-f19d-4c82-b1a9-fe5e2f0bd06e",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "9485962d-927d-4019-8f2c-aceb6456a7d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c968915-0983-48af-b015-6881b36c95ff",
        "cursor": {
          "ref": "98d63f39-f59c-4244-9d0e-1d9c7c43fac5",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "1f54edfa-641a-46c0-92b5-3c60b3fbc276"
        },
        "item": {
          "id": "4c968915-0983-48af-b015-6881b36c95ff",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "3f57f1a2-0f1b-4bc7-a68b-6c491a9945ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4ec947e-6ce2-412c-a5ea-e0c80b70f883",
        "cursor": {
          "ref": "c0fa617b-7de1-4832-8456-9ff488fffa1f",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "b613f397-2fe0-42f8-8a38-f2b7f3e7fa75"
        },
        "item": {
          "id": "c4ec947e-6ce2-412c-a5ea-e0c80b70f883",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "cb021249-6577-44ee-9752-91a165a83538",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a90ad9cf-c33e-4f77-a1ee-0f36e3f12428",
        "cursor": {
          "ref": "cf57d314-e5b6-4c01-ae81-772c8cb1c29c",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "ab36583b-750d-4ca6-857b-4af0a3cf06b5"
        },
        "item": {
          "id": "a90ad9cf-c33e-4f77-a1ee-0f36e3f12428",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "57942631-3195-456f-b101-be9d62d5a5e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac0aae81-0044-4132-b92b-4cbe2c6737d8",
        "cursor": {
          "ref": "b6395ddd-450d-48c0-b552-976e0472977e",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "e793af14-203a-4f4e-bb34-4a88a60ede4d"
        },
        "item": {
          "id": "ac0aae81-0044-4132-b92b-4cbe2c6737d8",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "785c8f90-6d5e-4f49-8e3c-33bb835e357b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b188971e-e996-48d4-b2de-a833d6c7f689",
        "cursor": {
          "ref": "e8c18b5d-9c4f-470d-a957-30fda6bd8eeb",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "8172db78-b4e9-4fe8-818f-a14b1b8184d4"
        },
        "item": {
          "id": "b188971e-e996-48d4-b2de-a833d6c7f689",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "7b3cb8b9-2b0d-4a9d-a226-ec3f4d1e87d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63ddba50-61b2-4481-ad6c-d2865084d043",
        "cursor": {
          "ref": "f2728e0e-70ce-419d-b6b4-27820ff029a8",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "214f977f-ff0c-4b5e-b830-a556236c15dc"
        },
        "item": {
          "id": "63ddba50-61b2-4481-ad6c-d2865084d043",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "1e296dec-abfe-4f24-a043-89be130e7eca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52b13a29-e4ef-464a-a2eb-6ceb6bfa6241",
        "cursor": {
          "ref": "73104def-1e0a-479a-b8be-2454f3825c77",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "8c3368e2-6ab5-4ec5-921a-10bb83e66de2"
        },
        "item": {
          "id": "52b13a29-e4ef-464a-a2eb-6ceb6bfa6241",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "4e1974f1-294e-4e29-b96d-3a5777dd9214",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81ab9097-7cef-4ae7-9b28-05fc713fda98",
        "cursor": {
          "ref": "e083e7e2-e806-4a0a-8a92-8cc98e28f7b9",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "1f8dc6dd-1d7b-40e2-bb83-10c3456528c1"
        },
        "item": {
          "id": "81ab9097-7cef-4ae7-9b28-05fc713fda98",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "54c202b6-bf02-497b-ae09-dbb579f2d961",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da179c7f-b4b7-4346-88b7-ceb4bf748431",
        "cursor": {
          "ref": "6a693564-e8c3-438c-84dc-0680cc1e8456",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "ac9684de-1aba-44f4-a12f-ef91046c52e5"
        },
        "item": {
          "id": "da179c7f-b4b7-4346-88b7-ceb4bf748431",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "9069c0c5-19ba-4a56-85e3-29011b3c999f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b4a07ea-f63c-42fb-8d88-17940378a9b1",
        "cursor": {
          "ref": "898a37e8-9270-4756-9a63-aa313b62411b",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "7acb21a3-af2b-43fd-9bdd-c863a970c33b"
        },
        "item": {
          "id": "2b4a07ea-f63c-42fb-8d88-17940378a9b1",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "5e4d5794-2bdf-4c64-8ca7-e514c03a15fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6da4a21-abc5-4667-8ff1-c0be4943f1ee",
        "cursor": {
          "ref": "1d10bd1b-8d44-45d8-a3e0-57023c07c016",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "83a43eed-de22-46b3-a55a-0d3678fb26c5"
        },
        "item": {
          "id": "f6da4a21-abc5-4667-8ff1-c0be4943f1ee",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "8983192d-044a-4684-8588-20f6ba4a86f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "409584b1-6839-458a-9021-0b77888538d9",
        "cursor": {
          "ref": "41008139-2d53-40b2-a805-3489c934d43f",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "1f3fd620-c14e-48c8-a105-688f9c3bac4c"
        },
        "item": {
          "id": "409584b1-6839-458a-9021-0b77888538d9",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "f91f4203-cd69-459c-85eb-6119cc20b0aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ca3e6e7-23d8-47dc-a8cd-555a74efc47e",
        "cursor": {
          "ref": "a906a620-c701-4f52-bd4e-7d2c24c2008a",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "b1cc3c4b-45ba-48dc-a1d3-da570f53a012"
        },
        "item": {
          "id": "5ca3e6e7-23d8-47dc-a8cd-555a74efc47e",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "90ed46d3-b3ee-448c-97f8-3721c080592a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70191ff5-cc0f-4a2c-8c51-e10998c366bb",
        "cursor": {
          "ref": "455c53df-66fa-4502-9f48-56d50e0bc840",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "8fa51f5f-b341-4793-98fb-84fcf5087acc"
        },
        "item": {
          "id": "70191ff5-cc0f-4a2c-8c51-e10998c366bb",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "cc8ba64d-baa5-48a0-b5ea-c55168307a5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aef7c58b-60fa-4e06-8353-6f5ea7045bd8",
        "cursor": {
          "ref": "f471a393-0ed5-4f65-88d0-f2dd2516a3ce",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "b289d679-2181-4a43-8bb3-dd098a95cccf"
        },
        "item": {
          "id": "aef7c58b-60fa-4e06-8353-6f5ea7045bd8",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "e5fc5a1b-2084-46c9-87f5-a05f881ff653",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c58d8c6f-1168-4b09-b8bb-a6303aed230f",
        "cursor": {
          "ref": "01fab597-f271-4a5f-911c-bc324d7436e1",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "81855818-f4b7-48de-a5e9-2f1589629786"
        },
        "item": {
          "id": "c58d8c6f-1168-4b09-b8bb-a6303aed230f",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "9bc54690-4f10-431f-818f-c07e4e01c4c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "638a9c33-ccbc-4fad-8b68-8dcf4e2d859c",
        "cursor": {
          "ref": "b6c35c4b-58b2-4108-83eb-d1611c302f3d",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "48f97fe1-84a9-4658-8673-19544ae2e8a3"
        },
        "item": {
          "id": "638a9c33-ccbc-4fad-8b68-8dcf4e2d859c",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "6453526f-d0de-4f73-80c3-e1a488287100",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44a84ca0-9233-43da-9c8c-51d7bebae6d4",
        "cursor": {
          "ref": "7030f90c-8da1-499d-93eb-9ede165e2085",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "798c77fc-d97b-4dcf-a764-99fc8fc9fa54"
        },
        "item": {
          "id": "44a84ca0-9233-43da-9c8c-51d7bebae6d4",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "d36b12a1-86dd-480a-afb4-84695d3397fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdbf054e-cdd4-4968-8cea-520c30d2378b",
        "cursor": {
          "ref": "d4522ff2-1e0f-4297-82bf-9d60e05bb1a5",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "e4e739ae-1ce9-482b-ba12-46abd803b535"
        },
        "item": {
          "id": "cdbf054e-cdd4-4968-8cea-520c30d2378b",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "4e56d6b3-a494-4a8e-9106-7855639523a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03fd7c70-c674-493c-8a1f-da2bbc04adea",
        "cursor": {
          "ref": "9e53310a-8adc-4f2a-b2a6-72bd26ac61df",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "7fde4681-6858-4b87-a214-7c6beb9dd638"
        },
        "item": {
          "id": "03fd7c70-c674-493c-8a1f-da2bbc04adea",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "b9260bd7-ea75-4745-8571-ae359addb0ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ca0006d-55e4-4c44-92a2-33f94561628a",
        "cursor": {
          "ref": "809cba04-9c69-4b6f-a16b-86684d297d60",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "d611cbac-60d5-446f-9567-e55cb796b969"
        },
        "item": {
          "id": "4ca0006d-55e4-4c44-92a2-33f94561628a",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "876b4e2a-f844-45c8-ad9a-b31c82421db7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "370ee74f-44f3-4d27-aac2-95801f3b5a4c",
        "cursor": {
          "ref": "16fd7890-a056-46b3-8221-6cf35b191c30",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "8a57f4d3-2a9e-4c05-be38-1243b1dc8fad"
        },
        "item": {
          "id": "370ee74f-44f3-4d27-aac2-95801f3b5a4c",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "ea29117d-a030-4c6a-844a-94312fe36975",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0be9dc93-30e3-4690-9b8f-16ae33b5183a",
        "cursor": {
          "ref": "0c5ffc7f-9e24-4b91-9998-ccfd028eaf1b",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "ec69be01-6c65-410b-90b1-883c950855a8"
        },
        "item": {
          "id": "0be9dc93-30e3-4690-9b8f-16ae33b5183a",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "1ceb1d4e-b56f-4f36-b0c5-0d671bc9e1ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "465f7072-96f8-49c1-bf16-717f07854f7e",
        "cursor": {
          "ref": "0cb0fc36-a519-4d14-a042-b858dd65014c",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "27845845-7bba-43ba-a09e-089b4b5537ad"
        },
        "item": {
          "id": "465f7072-96f8-49c1-bf16-717f07854f7e",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "54bfa8b4-56f9-4193-b150-6655403da57d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd178c6a-ee16-462b-9c94-2dedc0e7ff06",
        "cursor": {
          "ref": "1c9b1a48-4733-4b11-b392-5eb31daed5bd",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "849b8af7-2a25-4f90-8c97-4e481758f996"
        },
        "item": {
          "id": "fd178c6a-ee16-462b-9c94-2dedc0e7ff06",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "c91639fa-7828-4c5b-ac15-a2812b194205",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ad68ab3-c9ae-4c76-b27b-2003d3d3c42a",
        "cursor": {
          "ref": "cb26b710-e7d8-4c97-86e5-fd8ffd1bae49",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "36e8d291-f1d8-4e65-b31d-57a226927077"
        },
        "item": {
          "id": "8ad68ab3-c9ae-4c76-b27b-2003d3d3c42a",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "95d58066-5e5e-4012-b749-fa058e9cb6b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c346a0d9-e2f7-4c48-924b-f9e117f479c3",
        "cursor": {
          "ref": "c226772d-23cc-4af0-9fe3-8765bac40841",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "9139defe-f188-4a85-9f4c-a1f0f5d73d74"
        },
        "item": {
          "id": "c346a0d9-e2f7-4c48-924b-f9e117f479c3",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "844d0835-9a4b-43d6-b7ee-ab627756ca38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08f28aba-1b20-4862-83d6-13d8e10c6cc4",
        "cursor": {
          "ref": "5d11494c-0e66-49cb-bef4-927677eac8cf",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "a61fad2c-e42b-4319-a5e1-bae7ce1f33d0"
        },
        "item": {
          "id": "08f28aba-1b20-4862-83d6-13d8e10c6cc4",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "6ff03eca-5c04-4fef-88dc-49c1335e9526",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dea4e7f0-4b2b-44e9-a7da-afa88e0f9814",
        "cursor": {
          "ref": "bbad0ff5-2b80-4202-abb3-db610153a866",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "c130ded0-409b-487c-84cf-3a3295c9bec9"
        },
        "item": {
          "id": "dea4e7f0-4b2b-44e9-a7da-afa88e0f9814",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "9f0a048d-75cd-4435-8b9b-a102a41570c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "711f4098-bf6b-462c-b1bc-d66dcc2778d3",
        "cursor": {
          "ref": "a1d8d3c1-a7da-4718-adfb-4a8420bc1662",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "b0020ef8-6292-412a-9b55-3e20fb7463e3"
        },
        "item": {
          "id": "711f4098-bf6b-462c-b1bc-d66dcc2778d3",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "9786b595-2597-4ef6-9841-42e8dffdba65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ec381cf-5301-445c-b675-7413134fd820",
        "cursor": {
          "ref": "73a8ea04-0df5-4b05-b986-276c0e538ed8",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "6bc73adc-1dd2-4ca8-a331-e65ae982021e"
        },
        "item": {
          "id": "3ec381cf-5301-445c-b675-7413134fd820",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "5fbb1f1d-166d-446e-8c03-53b18e144105",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9898244d-0379-4895-8622-f08d410d8970",
        "cursor": {
          "ref": "eda7680a-c4d0-43ae-9d54-b511ba8e4c69",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "0e2c21e5-9bbc-4f5a-80f6-f56e2de6b046"
        },
        "item": {
          "id": "9898244d-0379-4895-8622-f08d410d8970",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "57949b52-ba32-42ea-82b8-581bd08e7dcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bdbc24e-2a38-49b8-a86b-b31b25fea304",
        "cursor": {
          "ref": "98429257-39df-48d6-8e0f-fa617664f476",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "2ce383e6-805a-4e1a-86b8-b91dbcfc621c"
        },
        "item": {
          "id": "7bdbc24e-2a38-49b8-a86b-b31b25fea304",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "f9ba6039-4d60-4029-8ce1-73e73018d336",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afe8fb4a-10d9-4a9b-81b0-ceeccdf6bfdc",
        "cursor": {
          "ref": "c82e6046-1146-4561-b638-7ad43a845614",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "9b464d12-a07d-4f0c-92a9-32386ea71b2a"
        },
        "item": {
          "id": "afe8fb4a-10d9-4a9b-81b0-ceeccdf6bfdc",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "b4166ab8-a7c6-4333-a4c3-ef4b233b8a58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a683d36-7667-49dd-9456-24dab1bc82b6",
        "cursor": {
          "ref": "9e4876b3-38a1-4276-b1eb-a58af8b6d607",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "577717f9-dcf6-40ca-a5a3-b7253bfc4d1f"
        },
        "item": {
          "id": "9a683d36-7667-49dd-9456-24dab1bc82b6",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "46e05ba0-d6c1-4d4b-93fe-c2358faec2ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f2eadad-bc43-4399-845c-349a31266a33",
        "cursor": {
          "ref": "9c627a41-2fa7-4724-a5f0-4971fccd5885",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "c47105e0-96e4-40a4-b408-2e052193393d"
        },
        "item": {
          "id": "5f2eadad-bc43-4399-845c-349a31266a33",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "c913c2bf-b5fa-4175-8449-aea5cd4fdb91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f5beadc-18ff-4210-b555-ec4c1e866d31",
        "cursor": {
          "ref": "a65f2ce4-952c-4379-922a-e201646b284e",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "43a65694-6307-4271-85be-797d1090453b"
        },
        "item": {
          "id": "9f5beadc-18ff-4210-b555-ec4c1e866d31",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "4cf05644-987f-42d0-9f4f-66fc2d176170",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0d60628-40ea-4a02-8638-fffe188647bd",
        "cursor": {
          "ref": "b41df650-336a-4c3d-9a1c-5e927dacf95f",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "6235fc1e-66f0-4146-bded-5dc5ebc4db5e"
        },
        "item": {
          "id": "f0d60628-40ea-4a02-8638-fffe188647bd",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "af38d9f8-62e0-49e1-bd3c-1c57a915df16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad10fb24-08f2-42b2-b6af-c07be0ef4a8d",
        "cursor": {
          "ref": "b0430a05-046f-4343-b13e-aafdf5b3694e",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "d7578d2e-b36a-4387-a1af-990454f313b0"
        },
        "item": {
          "id": "ad10fb24-08f2-42b2-b6af-c07be0ef4a8d",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "0b103ac6-c938-4648-a35b-d739515f8147",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f281bf4-81ee-4525-82f9-107099d5eb8e",
        "cursor": {
          "ref": "3a51ea33-1d1b-49f4-bf57-67a126c5e5ea",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "4d7eb33c-5e7e-4253-8c76-5d24a5af41ab"
        },
        "item": {
          "id": "6f281bf4-81ee-4525-82f9-107099d5eb8e",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "986affe5-1f32-4045-8fdd-ad1afc97ba25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32239dd8-e4e7-4a9a-b165-5f14a20e8358",
        "cursor": {
          "ref": "3362c1f9-8494-46fc-aa2d-de4a7dd9a8fb",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "c8428051-ff30-43e3-a3c5-e3efea0abfbc"
        },
        "item": {
          "id": "32239dd8-e4e7-4a9a-b165-5f14a20e8358",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "06a6b689-a19a-4b3e-a844-dc134eb0306a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "849bc833-db9b-41bc-b384-8464b881fba5",
        "cursor": {
          "ref": "9f63d4f3-3113-4f61-ae53-f8163edbfcfe",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "287dfb35-b621-410b-a6b4-6611fce79369"
        },
        "item": {
          "id": "849bc833-db9b-41bc-b384-8464b881fba5",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "13f284e1-ea5a-4406-8f0c-0f077d1e02d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c8af807-0510-45da-9ab3-73d962cfc4dd",
        "cursor": {
          "ref": "295d8da7-e7e5-4b40-8bea-8f53b5f3772c",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "9bbd5a18-c99d-4cfe-9861-e9d12ba52d23"
        },
        "item": {
          "id": "5c8af807-0510-45da-9ab3-73d962cfc4dd",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "acd48324-1589-40d1-aff8-a983664ca161",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eeb7cb31-bc95-4631-91b0-336b58fdcf6a",
        "cursor": {
          "ref": "58cf79bf-29f4-48d3-a54e-14f198b479e3",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "5691f365-e30e-44d4-8cd9-67755b40c678"
        },
        "item": {
          "id": "eeb7cb31-bc95-4631-91b0-336b58fdcf6a",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "1260eefe-5578-444c-b224-a8a66bff0af3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67ea525b-c64f-4f80-8724-34202d683759",
        "cursor": {
          "ref": "e3dbb5b2-4dbc-4613-ae5e-0940219578fd",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "590f26cd-f225-4fea-a24f-f2fb9267cbc1"
        },
        "item": {
          "id": "67ea525b-c64f-4f80-8724-34202d683759",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "3ba4b9e6-8683-43cb-9d5d-4309fa1a5bc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e72ace24-82e1-40bc-a984-2a5604802578",
        "cursor": {
          "ref": "60788e31-22d0-4769-a01a-4ac92a2c533e",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "14c6a8ed-a220-48ed-8466-7ca706026419"
        },
        "item": {
          "id": "e72ace24-82e1-40bc-a984-2a5604802578",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "2fd6ea25-59e5-4d55-807c-b9845a4baa34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "965221b8-b644-4053-9a2a-0d21223a8203",
        "cursor": {
          "ref": "eb233c35-cf50-4f24-93e3-811559e16009",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "9c4606ad-c5ed-4279-855a-7cb4309e00f2"
        },
        "item": {
          "id": "965221b8-b644-4053-9a2a-0d21223a8203",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "15bb72f5-40a3-47bf-9ff1-a2fc3b5b2a1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4c46be0-2395-4606-bad7-defc50639953",
        "cursor": {
          "ref": "978b5660-1a59-496e-b6e1-b819b5acdd8b",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "4fd443cb-82e4-4097-b159-ef3f4e6a4eb6"
        },
        "item": {
          "id": "d4c46be0-2395-4606-bad7-defc50639953",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "17d9dd26-be2c-4a5f-bb5a-f60c7190e9de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7257386c-abe0-49bc-b118-cd1a5f7e1874",
        "cursor": {
          "ref": "89cd623d-6e46-43d1-b22d-b43efaa4abf0",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "c95b2fd9-67c1-4991-a32a-b6df4feb6bc6"
        },
        "item": {
          "id": "7257386c-abe0-49bc-b118-cd1a5f7e1874",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "4ed741d6-7d23-4646-8df3-1d0eb6bc75f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d90c4d57-8085-4e26-a686-864e152ff34d",
        "cursor": {
          "ref": "14b808ef-def7-48ac-a971-29d7d05c6149",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "17ab4cae-9748-4cb2-8cdd-7b4e2465e5a8"
        },
        "item": {
          "id": "d90c4d57-8085-4e26-a686-864e152ff34d",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "93f68b77-9a38-4b73-9a62-6b88fef9cc04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a604ef75-0327-453c-9fa2-80bf0824149d",
        "cursor": {
          "ref": "c5105125-1a82-4635-a1de-a2b74a16df68",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "5b95bf74-44e5-403c-ab7a-7c60f95fe502"
        },
        "item": {
          "id": "a604ef75-0327-453c-9fa2-80bf0824149d",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "01404376-87f5-4cb6-a0d2-7e4e89ca657a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f1b55c1-e6aa-4852-ac4f-bcbbcc30cb29",
        "cursor": {
          "ref": "a51d07dc-fc66-434d-b4c0-82f9954e1f69",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "8b4d2930-e776-4cd3-95f6-55f34e697cb2"
        },
        "item": {
          "id": "8f1b55c1-e6aa-4852-ac4f-bcbbcc30cb29",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "72734b59-3096-41a9-8565-dd609f9d83d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ad2ae43-b9d1-4f6f-a0eb-ca07294d41b2",
        "cursor": {
          "ref": "5a4f76f2-51fb-4903-a637-98b4a38d32c8",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "112bf213-8945-4ec6-b928-4292be93bb33"
        },
        "item": {
          "id": "4ad2ae43-b9d1-4f6f-a0eb-ca07294d41b2",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "a45c8e1f-be03-426e-a713-fec400b5d36a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4fb4f9b-071a-455e-8d6a-3749e26cc74b",
        "cursor": {
          "ref": "6dd78431-71c0-416f-b047-504ea3f5eeec",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "3819ef44-8eec-441d-844e-f36c0990b17c"
        },
        "item": {
          "id": "f4fb4f9b-071a-455e-8d6a-3749e26cc74b",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "e4903e51-560e-46de-94d8-11937578be06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "467a67bf-3810-49c2-a252-eab7f62a5352",
        "cursor": {
          "ref": "10c50687-fd9f-40fe-b3d7-48d96402e841",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "8074bfee-b6f4-4a30-9c77-b7c7a62963f6"
        },
        "item": {
          "id": "467a67bf-3810-49c2-a252-eab7f62a5352",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "5aca983c-526d-4804-aee6-493042143755",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6ed0f59-9684-45a7-b3f7-be61bd323572",
        "cursor": {
          "ref": "3995919b-f3e5-4002-888f-361b8e63386c",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "350e0ff9-4158-401e-aa59-c00c9058362a"
        },
        "item": {
          "id": "b6ed0f59-9684-45a7-b3f7-be61bd323572",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "8d22d3fa-b393-4c5d-98bf-03b66c4f0a53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "328f0a41-19a8-4f8e-ac02-4ee1faa8d58f",
        "cursor": {
          "ref": "f3b59538-1ae3-429f-aa35-dcbe3b0857cf",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "33657a78-c2ff-477a-bd7a-ddaa8243f215"
        },
        "item": {
          "id": "328f0a41-19a8-4f8e-ac02-4ee1faa8d58f",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "0929f70b-8cc4-4524-995e-7fe377bb2807",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10d22ea5-3845-4ec7-be1e-ffb4c20d9c81",
        "cursor": {
          "ref": "5d6a9a77-86fe-4e8f-949b-3aabbe940ce4",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "9c367090-3b0d-429a-98e2-6938ab7d377d"
        },
        "item": {
          "id": "10d22ea5-3845-4ec7-be1e-ffb4c20d9c81",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "43e97cf0-191f-4a93-b45e-c943bb1ed787",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df0c89c6-c2a6-423f-9924-cf0e6a5375ff",
        "cursor": {
          "ref": "cea63ada-5ce2-452d-9df6-4dddb809db02",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "dadfedeb-e9c3-4ef5-adaf-96f75c20fb58"
        },
        "item": {
          "id": "df0c89c6-c2a6-423f-9924-cf0e6a5375ff",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "6fe0b23e-e389-48ca-8a3a-c5eda330f4eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23b4243e-14dd-42cf-9b07-807625445958",
        "cursor": {
          "ref": "aee33d19-823e-414b-a56e-97c2a6464f92",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "91e31a23-1384-4bdb-8eeb-bd7b1b21aa16"
        },
        "item": {
          "id": "23b4243e-14dd-42cf-9b07-807625445958",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "1a0ee5c8-4037-4cf8-859e-e6d6b683afbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 166,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97e2988d-c28f-41f5-a935-54cd68782f08",
        "cursor": {
          "ref": "eb4bd6a4-583c-4b45-90c2-e74dd7ea0b29",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "3934e1d0-841e-4972-abcd-1c25592e8661"
        },
        "item": {
          "id": "97e2988d-c28f-41f5-a935-54cd68782f08",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "43b3315c-7f4d-48f3-82c5-ef1603fbfdf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c16b2f08-e996-4ecd-b703-70e0e2b21c50",
        "cursor": {
          "ref": "289e8f7c-bef0-4941-837a-e0647f6484b4",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "269e97a2-d7a0-4ed1-81ad-5ac8162387cc"
        },
        "item": {
          "id": "c16b2f08-e996-4ecd-b703-70e0e2b21c50",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "177686e8-efe1-4125-b161-d759e9de5d57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcde74a7-0d88-42e3-a5f8-464623ab4721",
        "cursor": {
          "ref": "2f08c8d6-9b84-437f-b2ac-5c4b6b6d3b12",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "ae04c955-7648-4b89-b45d-38fd50f6fdf8"
        },
        "item": {
          "id": "fcde74a7-0d88-42e3-a5f8-464623ab4721",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "1667a8e2-4d45-4264-a64c-fb7febcd7ca5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dd6ae3a-db19-424d-b168-c90adf5ae24d",
        "cursor": {
          "ref": "ef7468c9-f464-4237-b36f-95baa7a93b7b",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "40c9ba19-2e7d-4ae8-b836-64bb9a755dcc"
        },
        "item": {
          "id": "1dd6ae3a-db19-424d-b168-c90adf5ae24d",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "9987972d-92fc-4564-94ed-ab1d6eb1d506",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f572445-d96a-4e25-a4c0-0d35ed50bdde",
        "cursor": {
          "ref": "36e21c70-a9d5-48db-bea3-3ffd4ab558c8",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "7a9bdb28-7b40-438e-862b-0ab94190ba1e"
        },
        "item": {
          "id": "1f572445-d96a-4e25-a4c0-0d35ed50bdde",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "b6ed9d02-ae30-4cc8-adcc-a8c675e857c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74b787ec-afc3-4f66-8dae-4b63d83be5e2",
        "cursor": {
          "ref": "b7e2608d-4f20-453f-bb0d-b9ae19db7575",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "aeaccd41-18af-4aa9-8425-b6ea5c988807"
        },
        "item": {
          "id": "74b787ec-afc3-4f66-8dae-4b63d83be5e2",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "dca31a6b-7ff0-414f-a19a-1027c4ceed82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff236b42-fe3d-411a-9c7e-689a3e755458",
        "cursor": {
          "ref": "79f421fa-1599-4b15-962e-c0831449f3e5",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "26f8bc4c-7935-42e3-8fe6-0182451d5792"
        },
        "item": {
          "id": "ff236b42-fe3d-411a-9c7e-689a3e755458",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "00fc1222-9a11-4dd5-bf9f-4bec08e647a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b3f3223-1275-4c1b-8c1c-fddeb1b797a2",
        "cursor": {
          "ref": "93bfb871-1854-42a1-a285-4864c77e1a21",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "7db36e0c-b07d-4ce1-a58f-fde28d3d63f3"
        },
        "item": {
          "id": "5b3f3223-1275-4c1b-8c1c-fddeb1b797a2",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "2e4bbaa3-f876-4bf8-a3cf-84eccde48d30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "044cffdb-02c5-43a3-a02b-62508e76da7d",
        "cursor": {
          "ref": "aa54c48e-b021-45c4-90fb-fe3ba81b52ff",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "efd038a2-bdfc-46e1-bbcf-aef5a3c9a8d3"
        },
        "item": {
          "id": "044cffdb-02c5-43a3-a02b-62508e76da7d",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "58f9c3bb-bfcc-4e87-bce1-44068a8327e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3da8994a-b336-4eab-baa4-e89d2b0bfce4",
        "cursor": {
          "ref": "948f018a-b5a7-4cb8-ad91-8e15bcea99af",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "64695683-4a56-4639-97b9-1bc2f03382aa"
        },
        "item": {
          "id": "3da8994a-b336-4eab-baa4-e89d2b0bfce4",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "22ab7455-0822-4877-8181-63717cc29304",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6fe52e2-a544-4f8b-b5c3-9347a21ce93e",
        "cursor": {
          "ref": "1eb815b7-1826-4aad-b3c5-39e0e2529a0f",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "3e114a3b-3b70-4435-ab5f-56d9194696b5"
        },
        "item": {
          "id": "c6fe52e2-a544-4f8b-b5c3-9347a21ce93e",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "fdae4ff2-160d-4bcf-9353-815ed25d7b96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a19a5be7-a8b5-471c-8d42-99573dee2a69",
        "cursor": {
          "ref": "b1c6b0d1-2d1b-4ef3-89af-b173444ebd0d",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "c93d554d-0440-4ced-942c-151daa9e16c7"
        },
        "item": {
          "id": "a19a5be7-a8b5-471c-8d42-99573dee2a69",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "11722622-26e7-45b6-ab23-e0177cd6db7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94ec49af-83ae-4e80-bd2d-2fd73a1d8f86",
        "cursor": {
          "ref": "f805104d-85a0-434c-989c-8870d624bba6",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "4b13c92d-e1b8-42de-ab39-5ee7e8326464"
        },
        "item": {
          "id": "94ec49af-83ae-4e80-bd2d-2fd73a1d8f86",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "642bfc53-4ca8-4399-8e2e-139782a8db7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17281d1a-4771-4204-acdd-f6e00151e8fe",
        "cursor": {
          "ref": "f0dff3f2-e713-48a4-9598-08785c266679",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "dc3547f5-ff49-45dd-b59d-bccc59cf508a"
        },
        "item": {
          "id": "17281d1a-4771-4204-acdd-f6e00151e8fe",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "e520aebd-a728-424a-816b-47c8356ee996",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72b47247-ae56-48ba-983d-9f5fadc82831",
        "cursor": {
          "ref": "b10ab419-97fe-4314-9e21-2abec6bdd82b",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "f3a21a2c-0bbc-4ae6-b7cc-4e21b71ae39c"
        },
        "item": {
          "id": "72b47247-ae56-48ba-983d-9f5fadc82831",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "f20ddad5-d1d7-42f8-8e1a-46265c528fb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34d3304f-bccc-448f-b8f5-f1eca283b486",
        "cursor": {
          "ref": "f26013f4-c6b0-42dc-9c87-3dbcd6b2c8af",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "c6ef7a3c-5586-4a52-ae91-bfed00e49d9d"
        },
        "item": {
          "id": "34d3304f-bccc-448f-b8f5-f1eca283b486",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "31f99d08-e3dd-42cc-a98a-a577bb6af4c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85cbce18-bfeb-4a36-b614-afb29344dd2d",
        "cursor": {
          "ref": "51e947a5-b9e9-49b9-bae6-53cb65b6e775",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "a3672c94-27ad-431d-94be-cb6d6a56a4a6"
        },
        "item": {
          "id": "85cbce18-bfeb-4a36-b614-afb29344dd2d",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "4b772d56-8862-4265-acea-e90f3d95c4bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64248cbb-ae00-4150-bf3e-ef81c70a26a8",
        "cursor": {
          "ref": "4d030125-cd7c-49cd-a806-78a2a54cc430",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "b851091b-88fa-48d2-ac0b-d10ad6c86243"
        },
        "item": {
          "id": "64248cbb-ae00-4150-bf3e-ef81c70a26a8",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "bf57410b-f0a6-4687-93fe-26ba6a3a4cf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3301ae54-707a-4c7b-9fa8-b3087326a2e7",
        "cursor": {
          "ref": "f7168aa8-a6ab-4f51-ae0d-1277f174d966",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "6bdf9554-beb5-4c00-bd80-e6877e67eaaa"
        },
        "item": {
          "id": "3301ae54-707a-4c7b-9fa8-b3087326a2e7",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "064b81fb-b143-41ca-92a9-afe5c984b41f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83ec5a3a-0ea6-43c7-955f-ca5d75fa5c8e",
        "cursor": {
          "ref": "74fa6ffd-50f9-4af2-9a91-22452a9a73ff",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "63fbca51-8825-4d1d-8338-535c322f9fd8"
        },
        "item": {
          "id": "83ec5a3a-0ea6-43c7-955f-ca5d75fa5c8e",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "cc1ca898-c164-4e9c-9c9d-6a9736c46a22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41cd3844-e52f-4ea1-b388-3d8c19849f3d",
        "cursor": {
          "ref": "09780e02-c924-4493-9f18-45f3bbfe73e0",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "f99c80a8-43a9-4044-bec6-316e648ba36a"
        },
        "item": {
          "id": "41cd3844-e52f-4ea1-b388-3d8c19849f3d",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "4a031714-218f-42bc-b80d-e100b54329a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90954d72-4e54-46f4-a53a-f0857f843b05",
        "cursor": {
          "ref": "f392e904-37d8-4b2b-8892-c2a3e9dfcfd3",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "d0837bdd-2f5d-4ec0-87ab-4e6c938d5c15"
        },
        "item": {
          "id": "90954d72-4e54-46f4-a53a-f0857f843b05",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "c73e4fec-ecad-4b33-b589-fd92cd8efe35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b51f5a7c-b9a7-4609-87ff-e6079113f33d",
        "cursor": {
          "ref": "c023344d-4aaa-4122-a2df-be30a5a22b5b",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "912c47fa-3f74-4e96-b320-d47f24d7d101"
        },
        "item": {
          "id": "b51f5a7c-b9a7-4609-87ff-e6079113f33d",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "6513df9d-6e50-4fa7-ac06-b42b1926c6b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f27dcd5-a339-4d7e-9c2b-d63be6fbc7e9",
        "cursor": {
          "ref": "38aa666e-6795-40ab-9188-64289997d16e",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "c9117beb-a532-41f7-9449-67cdde2f3b3f"
        },
        "item": {
          "id": "4f27dcd5-a339-4d7e-9c2b-d63be6fbc7e9",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "23cdedeb-b53f-4e3e-ba41-b04e48ff092f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b164a63-36c9-4f77-8f26-ff10f59cb0b4",
        "cursor": {
          "ref": "b286c352-a18e-4cba-ae45-a211451108ca",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "3ba631e6-b7ad-492b-ac91-242f50818e59"
        },
        "item": {
          "id": "7b164a63-36c9-4f77-8f26-ff10f59cb0b4",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "788499bb-c9d6-49c6-833c-723ccba44bb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "748e4f6d-672d-41d9-8b82-7815828f9600",
        "cursor": {
          "ref": "a028dfd4-129c-4dff-8310-c5686d30c462",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "efbe1e4b-7fdc-45dd-928c-7001774946f1"
        },
        "item": {
          "id": "748e4f6d-672d-41d9-8b82-7815828f9600",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "d9dc4771-b1ca-444f-8cd5-9ce7401bd932",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20725e87-3669-49c3-a67f-f3a795dacb3b",
        "cursor": {
          "ref": "7e57128a-fcf3-4a8d-8be1-6ea283bdb523",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "81067d56-81bd-44a1-9d7e-528003ed8997"
        },
        "item": {
          "id": "20725e87-3669-49c3-a67f-f3a795dacb3b",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "e71cfa08-772e-4cba-99ca-222816b31ac4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42f92abe-53e6-4086-b97c-33140a68b907",
        "cursor": {
          "ref": "462a53e0-aa29-4d6f-bc91-9c1186a8b873",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "5cdf591c-8592-4d0a-83ac-d43a524e4a6e"
        },
        "item": {
          "id": "42f92abe-53e6-4086-b97c-33140a68b907",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "072b45fe-cdcd-47f8-8d19-b60dd6dbb76c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03792039-333e-475c-934f-2a07943d178e",
        "cursor": {
          "ref": "8976f9fe-8a66-4a90-9d85-337e7e2f014b",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "c29eec71-b3b4-4bea-9ac4-f3d3aa5a3a07"
        },
        "item": {
          "id": "03792039-333e-475c-934f-2a07943d178e",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "251e6ee8-3986-4cd4-bbfb-2f540aadaf1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "439f1190-05cc-41df-96f9-54219256cd98",
        "cursor": {
          "ref": "04c73013-d9db-4935-8c76-6113f22debea",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "d3e5c54b-e6d3-48de-b6ce-0589ffa29c96"
        },
        "item": {
          "id": "439f1190-05cc-41df-96f9-54219256cd98",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "fd3aacac-283b-465a-b33f-e103027e10ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee1d95e2-6342-4b2e-afb4-5be64c305441",
        "cursor": {
          "ref": "5e02ba9f-49ee-4b9b-98bb-3590ffd463bc",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "bc4329e5-0f5c-478f-be20-9dbe509bfbdc"
        },
        "item": {
          "id": "ee1d95e2-6342-4b2e-afb4-5be64c305441",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "6fd0b90d-42de-46fa-a52b-65e996db0d1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce77ee7d-ea5e-4208-b802-01a01bc592ab",
        "cursor": {
          "ref": "8a7380e7-13f5-482d-87fc-df1224b0ab65",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "88278eb7-2971-4e07-a5aa-2a7b91cb228d"
        },
        "item": {
          "id": "ce77ee7d-ea5e-4208-b802-01a01bc592ab",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "0e6cd4ba-79fa-41f8-8ef9-6e0fd31bd9b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c605024d-dd16-4077-8f6d-2f09b622dc51",
        "cursor": {
          "ref": "ea01fcc0-f117-47a9-bad1-f23bc2fc5332",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "e0a6f516-94c7-457a-9ac2-bf00fae47bf6"
        },
        "item": {
          "id": "c605024d-dd16-4077-8f6d-2f09b622dc51",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "e4a378d7-c2e6-4b73-a908-380e81aad5c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78e76e47-2eb3-4e48-bcfc-b6e724c25151",
        "cursor": {
          "ref": "3525302d-51ca-4de2-9813-11e883cb4eb2",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "4299da0c-09b0-4bb5-8d80-250c55e55de7"
        },
        "item": {
          "id": "78e76e47-2eb3-4e48-bcfc-b6e724c25151",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "e2b5cb87-a4e9-4dc1-b689-44de2fa7399a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5be33573-f7ca-49e6-abf0-f586bb3d4eb6",
        "cursor": {
          "ref": "a776e5a3-b3a2-4bc0-afc7-6f20adc05f11",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "e6b2bee7-f62a-435f-94f3-a4511ec6ca90"
        },
        "item": {
          "id": "5be33573-f7ca-49e6-abf0-f586bb3d4eb6",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "a04af7bf-08bb-4282-a383-b785420c7dda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "673c0cf7-da95-47a6-aa3b-c8d1e5e4f38b",
        "cursor": {
          "ref": "200d1beb-2a2a-4ebd-846d-d86ff9e4cdf1",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "5b5db2e0-3b4a-4240-ba7b-1505707c2332"
        },
        "item": {
          "id": "673c0cf7-da95-47a6-aa3b-c8d1e5e4f38b",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "7ec3342c-5ac5-4cd2-a9cf-a21833a92345",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdf5ad7f-ded2-46b0-8c19-5472fe0b59f7",
        "cursor": {
          "ref": "09249e39-fd76-443f-aec1-d9612ddd807f",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "2fdd5dac-1aef-42fb-a849-bf84d6a726d8"
        },
        "item": {
          "id": "fdf5ad7f-ded2-46b0-8c19-5472fe0b59f7",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "e217f805-b5e7-40f2-872f-5691b5380167",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d52738ad-2ca0-4dbd-adbd-ffac33ff08e3",
        "cursor": {
          "ref": "a9e616e4-3638-4b80-bad6-f39f15ba24a5",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "47c721e9-6e04-4347-b90e-8147aa046cf1"
        },
        "item": {
          "id": "d52738ad-2ca0-4dbd-adbd-ffac33ff08e3",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "0c5c2c2e-5faa-4eef-9897-0baaf6cad56b",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 34,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c3c1309-d841-4ecb-b124-81e95d0ffed5",
        "cursor": {
          "ref": "1b551d82-416a-43c2-afdc-b1e5f8d9b4af",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "fd0bf001-d1cd-490c-a4a8-e2d28d5d3502"
        },
        "item": {
          "id": "9c3c1309-d841-4ecb-b124-81e95d0ffed5",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "6f9211f3-f36f-4636-b2f4-31fb4b8e0a69",
          "status": "OK",
          "code": 200,
          "responseTime": 36,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "51b22e7f-d0ed-4255-acbe-eee07922bf72",
        "cursor": {
          "ref": "ccc1b9e6-24c8-4ae0-a86e-cfaaff0ee785",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "1b201ef2-9773-4276-b4a1-183b2211bce5"
        },
        "item": {
          "id": "51b22e7f-d0ed-4255-acbe-eee07922bf72",
          "name": "credentials_verify"
        },
        "response": {
          "id": "92711b9b-780f-4224-a3cc-92b5104038ab",
          "status": "OK",
          "code": 200,
          "responseTime": 49,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "edc546cb-ef8b-4fea-8d7e-8561c0d83acb",
        "cursor": {
          "ref": "a71945f6-0a7a-40dd-aa28-6d5270c553ee",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "9d52b2af-9227-4a5d-9264-d8e93c6f13e5"
        },
        "item": {
          "id": "edc546cb-ef8b-4fea-8d7e-8561c0d83acb",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "6e6f5a64-ab8d-40d4-8b41-917cc1308ea4",
          "status": "OK",
          "code": 200,
          "responseTime": 49,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3fef69c-9d64-4334-8e38-724f110cefca",
        "cursor": {
          "ref": "312182e7-4f0c-454d-9e69-4852faa810aa",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "2d03a1cc-7a9b-441e-a138-e36988f1d782"
        },
        "item": {
          "id": "e3fef69c-9d64-4334-8e38-724f110cefca",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "cff04caa-b676-426b-9ec6-79b7563cfb2a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3fef69c-9d64-4334-8e38-724f110cefca",
        "cursor": {
          "ref": "312182e7-4f0c-454d-9e69-4852faa810aa",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "2d03a1cc-7a9b-441e-a138-e36988f1d782"
        },
        "item": {
          "id": "e3fef69c-9d64-4334-8e38-724f110cefca",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "cff04caa-b676-426b-9ec6-79b7563cfb2a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3fef69c-9d64-4334-8e38-724f110cefca",
        "cursor": {
          "ref": "312182e7-4f0c-454d-9e69-4852faa810aa",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "2d03a1cc-7a9b-441e-a138-e36988f1d782"
        },
        "item": {
          "id": "e3fef69c-9d64-4334-8e38-724f110cefca",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "cff04caa-b676-426b-9ec6-79b7563cfb2a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a1157ef-1114-4d93-b552-c5a25b19edd6",
        "cursor": {
          "ref": "97ea46ac-7fca-4d4c-88fe-afe2335ae677",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "a9b50575-a73b-491a-a077-4bf97f663d9b"
        },
        "item": {
          "id": "6a1157ef-1114-4d93-b552-c5a25b19edd6",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "f5582262-af4e-45ca-9b40-98f27be1e0e6",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 36,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81a1d44b-4ba4-44ae-b90e-822d7665d258",
        "cursor": {
          "ref": "93df2aa9-4da1-4a66-9f89-4bb34998d61a",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "cea9d9f6-cd29-4326-b187-150bf67e1720"
        },
        "item": {
          "id": "81a1d44b-4ba4-44ae-b90e-822d7665d258",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "e8d0e9dd-46a3-4dd5-bfc4-376bc0f890f6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81a1d44b-4ba4-44ae-b90e-822d7665d258",
        "cursor": {
          "ref": "93df2aa9-4da1-4a66-9f89-4bb34998d61a",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "cea9d9f6-cd29-4326-b187-150bf67e1720"
        },
        "item": {
          "id": "81a1d44b-4ba4-44ae-b90e-822d7665d258",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "e8d0e9dd-46a3-4dd5-bfc4-376bc0f890f6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29b588d9-d4d7-489d-9879-ead595dbe859",
        "cursor": {
          "ref": "c9cbc0ec-c4db-45ef-87b1-20ba7ef8b4c6",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "41818440-32ec-4915-9504-2d1addfbb97b"
        },
        "item": {
          "id": "29b588d9-d4d7-489d-9879-ead595dbe859",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "6ae99da0-56f5-4479-aa4f-2049480de00e",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 34,
          "responseSize": 164
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c91f45b8-7722-4c1b-b253-cf97d2db3e8f",
        "cursor": {
          "ref": "6ac6e582-a8ee-4505-b0e3-49cf8fb08114",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "06b81984-6078-4772-85fc-5c0361209bcc"
        },
        "item": {
          "id": "c91f45b8-7722-4c1b-b253-cf97d2db3e8f",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "96eca90e-fc13-4cd5-a679-a117ece960b8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c91f45b8-7722-4c1b-b253-cf97d2db3e8f",
        "cursor": {
          "ref": "6ac6e582-a8ee-4505-b0e3-49cf8fb08114",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "06b81984-6078-4772-85fc-5c0361209bcc"
        },
        "item": {
          "id": "c91f45b8-7722-4c1b-b253-cf97d2db3e8f",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "96eca90e-fc13-4cd5-a679-a117ece960b8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d4e852d-2931-41f6-a9c4-810630d92f92",
        "cursor": {
          "ref": "bc18bf54-cffb-46e0-83f9-7b5fd374a80a",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "5895c088-a007-48a8-bcfd-b0ecc19be971"
        },
        "item": {
          "id": "9d4e852d-2931-41f6-a9c4-810630d92f92",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "79b53c65-3871-4b4a-9984-0d37a552164a",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 34,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}