{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "5a89ed5c-25b9-4ca8-895b-e695b0c1715f",
        "name": "Clear Cache",
        "item": [
          {
            "id": "ad3fef9e-ee60-4893-9ab7-2feae9c275da",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7735f28c-3677-4d20-a0dc-fee3c4d90d37",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "aa941b63-a8ba-47dd-893e-3dfab56189a7"
                }
              }
            ]
          },
          {
            "id": "2f6ea6bb-8b41-44e8-a3a6-d34def28d810",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "641d461e-046d-457c-b906-fd6ec9a97617",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "59ad8c8c-527c-4951-be5e-016907cc3e00"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "3987498a-5dd2-4380-afee-d8c9460a511e",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "fc667717-620a-4f7b-9d43-7f6dfb40f47b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "49d6ebf7-500c-43cf-b27e-41b71c209e15",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "85cbf32e-2480-4dfe-8e22-e8681f603c08",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3cb73f6c-1734-41dd-9c52-b2fcd3ae799f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f7946314-0146-404c-a7f3-7778f82fca1a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "35104f7d-c335-4615-a293-0640c24defde"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "eea33f16-fa61-42b6-9ea5-3811ad46d6ce",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0abd4fc7-fec2-4968-83fd-09019112d8a1"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f980cb80-11bd-4e5a-acc4-3f804edae716",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "7fa78101-d233-4f49-b6cd-5fb323184a04"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9e7707e2-d2f7-42a0-90d6-a0437d409258",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "33dc37e1-ed79-43f1-8125-367bc408702d"
            }
          }
        ]
      },
      {
        "id": "472e45b2-c2fb-41fa-942d-f78f91ab6aa6",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "92dda29d-20e7-42f4-ae98-746f23696c04",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bde53db3-6e33-44d8-ac11-f600be7be6ec",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "71abe46b-4dfb-4e7a-bea6-f9484c36cc97",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aa9dfb3-4aff-4ac5-8b4b-fd3cb635d67e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9d4a8d93-86d4-4bea-bb69-246333e2c4e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b713c35a-ce8e-4b74-a620-789f3402a40c",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad4410cf-7ef5-4d98-af70-b970d7d76aa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b73ff7b9-fcee-48f2-83c1-275fbe0b14d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c469b90-29a0-45b1-8d4f-331957513196",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae890001-13b0-4511-8fa1-0eec822d45c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0031aae4-b47b-4c32-8a10-3e14c78a150c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1c8c2054-8bd3-48d6-b876-cf9c8a398389",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0ed200d7-61b5-43e3-9091-4e566017d0a0",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "730666ec-87c4-4870-955b-521a83847ae3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a0da1478-8ed3-4dae-903b-dc7611ac9d7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01845fb2-7bb7-4e8a-a129-5043f6b92049",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "874f91bc-a721-4e57-9eb2-8d7bf62669c1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "c87a73c2-99a5-49f5-95ef-00fb46d613f9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3e094092-0b35-4930-8b9d-866ee2b81dd5",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "200cb7e6-0408-4add-89e9-8e6b424e5e63",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "cfbd9f8c-cc5f-4a0e-97a0-83fe186bfb1f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4c11a3f3-2e81-4729-82bc-58152623220e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "c3345dfe-2de7-4d0d-9bc2-54cd8bd74974"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "50d812e3-1eb6-44ff-be68-42e81524bb8c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "200e0713-7136-4563-be32-8aba1b3a3dbd"
            }
          }
        ]
      },
      {
        "id": "b3c1a15f-1cb3-44dd-8516-c54d400d0cad",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "0258717e-9d71-4c0c-940b-398d661c00ce",
            "name": "Negative Testing",
            "item": [
              {
                "id": "08028846-2056-497c-be62-49d0074b9bdf",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "17d25b0e-8542-4129-850f-8f53e7b009a4",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48e9b215-6671-4065-b743-bc43e9199a67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58ce7932-68ec-49f7-8497-e40b8b7cbef0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a01f6d0-a664-44c3-bd00-0deb424eb871",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c9739f58-20f8-41ab-948d-b9b74e8a56cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77018151-d395-40ff-a6cf-c61e78698e0d",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edcb43db-4c91-4c03-a010-7d2a5e8ea87b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29228910-e086-491a-861e-1bda8f3aaa09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4e75047-0a4a-4556-8a05-ea524cfc9d6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d863ae93-9c54-41b7-bd39-d49a82fb9b0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5850d8d5-c68d-499f-bf94-f161502b93b8",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "307326d5-cf40-4693-b30c-6311d9e3b7c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7677573d-b59a-40ae-91b9-ec0a6c12885c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6088e0a7-9041-4bf3-a722-6f5ae989b307",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3fc0afd5-9ee7-46d2-9782-81c950b6e15d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faf3bdfb-f4e3-4fa6-9c33-1efc9020cebd",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e4cab21-e0b3-49be-8c57-7b0157ca9eeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "236e7e8f-8cc6-4377-bdb5-55dcd6985998"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa162b89-bc1a-446c-83a2-a99739829a72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8f6220bb-56ec-411b-a38f-c4d590ad2bad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fed9e20-96c1-4855-b2a2-0c6814042fd2",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4a311a7-4889-40a9-afb7-d24183f39364",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "506b5a1f-fd8d-4deb-ae7f-9f0b76521638"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62bace38-f2be-4f46-a308-13185ed8e988",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bbb8b482-81a7-4d1b-873a-516a3135ce6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "474cdcc2-560e-4229-b462-7ad4a95093d2",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d2ffcf8-9b16-48b1-b014-1db4a5b68a7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18535c0e-0f0d-4ffc-8c28-d21165de1c53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2297ab0-31c1-4a7d-b6d8-b49f5301879e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f27edb61-80e2-4d13-9ba0-baed06007081"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94061500-127e-4722-86ef-ed8fd0410b78",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d790599f-afba-4244-92bf-9df505fccfe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad15d75b-3922-48ee-b9f5-088b9517807d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b57b7137-b44c-4eb2-95c8-d6b964f97f45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6198d0c6-cdb4-49eb-a6c5-b4bcceb91ac2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51ba98d5-3f75-4843-ae13-3ec2d657a93d",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3163215d-0cf3-4890-8193-0a4a5662d58d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d4b9e70-fbec-4136-add5-f2c7b21a4359"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90a68be1-94bc-4eda-b273-42bb684d673c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4bd78278-fad7-489e-9e3e-504d3984ad11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a77eeef-3f94-4cef-af77-76558537f941",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b06d6ce7-8c7a-4128-9e1c-f47bc321fefd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73f15c62-545d-4384-a212-7c350247ff95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1876bf9e-f95f-4657-bf84-fbbf58367aec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dfd46083-84c1-470c-bbf1-ddd1fa5bb8cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "423f4b6a-0484-40d7-b4d6-c723f5e7e6ed",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f135933f-f9d6-42a5-bd4f-bf06ce9d3c5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70ff3ac4-30ce-40b7-b762-225439f1fa73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "734082b1-c372-4741-8a21-874362b1713a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8bb0c2a0-9e81-46bd-b3b4-345568cced05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79000ba5-ef41-4e8f-a486-90a5e87c8c40",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c8aeff1-7d4b-4d00-befa-ef022d6d76e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16806bc5-ac3f-42db-9bb8-524d35ba4b88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "111c585f-1113-4a36-8ebd-5ec6e2c6a147",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2034271c-590f-478d-af97-f520dc6274ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f14c609-2c86-49fc-99c4-37581f6df325",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "496cb572-2c62-4395-a1d6-848ca48d9466",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "737cdcf0-9283-4fd3-9b3c-56444060e565"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79740751-0227-48aa-8c33-5e96be492295",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "97b19b5a-5182-493d-a84f-cf9a82b3f290"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c98cc92-83a2-4b96-96eb-e0cadf569186",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03822274-3299-48bf-91df-02728ade048d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fc90f99-0b03-421a-a9c4-ae0338ec2461"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a876e567-5d75-4548-82ef-8c4f373fe935",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bf535d99-52fc-409e-b05f-bb2e8d672341"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be3c4582-953b-46b0-a47f-fff2537cb4cc",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e3af525-ee16-4a65-8426-9b4df2d87ce4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b45ded6-35a3-4de1-9959-1e39bf8b3bbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf996f54-ee88-42cc-bed6-0d67200d41a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5549a2aa-ce99-484c-987e-d85272781c8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18d3e265-7db2-4833-9cf9-cb6b8d858153",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2caa628a-3d2f-4591-bf45-22e54d39e371",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf460753-515b-4a1b-9199-fafd1c65714f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b338800d-ba3c-4388-a717-97127a388928",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "36a5668b-2d91-4aff-9228-241660583b33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db3e0baa-9f31-441b-90b4-b3209fe7bb90",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adabc34b-3385-419e-8c50-f57fddd38a16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8ce39e2-dac6-4d11-903e-bcd5ed040944"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94391e08-dcc3-42d3-ad93-31e7a85760ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4210e232-4510-453a-8d1c-5e163f48dfa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04e55318-c08d-43ba-bb33-1a30c6e2535c",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e96909fd-5b59-4bf5-980c-75d95ecbbb2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b7a3c42-8d33-4b0e-930b-486d614a1de5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5379050a-8722-48b5-bdf4-53a126212385",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ff285c90-4aaf-4d4e-a897-6ea05daebfc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f94ae81b-c607-4fea-a468-17dc48db7e27",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "911281fe-3930-49a7-8cc6-247af40f78a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e28c764-dd43-4491-922c-a309c59effc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62abafa7-775a-45f3-a02d-851f1e29dec8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "764a1981-3d7d-460b-9380-71faf1a96fc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e7304d6-9b4a-40e9-9307-2f988c22ecd8",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e349fd13-73aa-4e13-bb38-ba8a0e05692d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06578ff2-f28e-4444-843a-9d528f589340"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bf7ec9d-4d23-49da-a542-4fe4cf739bc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed4b7a78-dbbe-4c4e-b9e5-754bfd192914"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f8f1cd0-0291-4994-b844-7df98b3e200c",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dcb1578-87ee-4979-bec0-3ec9ce40bcc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c58e19a-00ad-47d8-882c-2907d0743bf7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0f00fa0-e8a1-4468-ba73-af4369d032ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "89ed083d-ec3a-416c-9fad-632b513ccc7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81101148-eb74-4839-a237-767f503dbe16",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db937b62-2fbe-48de-a0a8-1a3bb850c363",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72b15345-b5a4-4f4d-99ac-0b045e9a1010"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82695ecb-9854-4037-a506-04ce4a2cdab0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b8d807bf-b378-4ae7-9d57-166604d8dc2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96b81ee4-9322-443b-bec8-4e9b925b0b47",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00ecafae-e543-4ff6-b09a-4148fc02bb7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc577a6f-0733-47ff-bc7d-0457680d30dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1e923dd-6a1d-497f-8f8a-b120604a1993",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a9fcf0d7-0260-4e15-a09f-fc2bdbf01cf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73c661ce-7b0a-42f7-8f1f-d59c2562a57c",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68554c9b-5d0f-4f57-a8a1-876bd7979e6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1a02732-0dda-4779-bf30-791d67f9de59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0b0dc4c-16d2-4712-9556-19e0f2621fca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7d52f045-91a6-4b41-9fc1-ae2e0d11faab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6abe5607-897b-4b93-b176-ddedc6b90cf7",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5ec1290-2f64-4f75-a7c5-250115815c86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "676b069a-76ca-4dee-9e75-0c2f9efc345a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fea5085-45f3-4037-a6cb-9a71a4ab2c2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c544c02-8933-452c-bbe8-897368ec2445"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1443e41e-303a-4ade-b0f1-b95b6c412dfc",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65ced7b3-da5a-41f2-b39d-169aa503a53e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb332341-cf76-47d0-a94e-46482dcdcefd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "080d32a7-05bf-4702-a1f6-5e3f38eee5f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d50e091-58de-4318-b324-ddd49e4c2a19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b7f3565-5e3a-497d-9950-c93a44d6cc0d",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa94adf4-1d75-4873-babc-5ac09f2be0b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b80cb58-0260-415d-97b5-e4d39b3c63a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3f660ea-fc78-4543-bcd1-4834eb65f363",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e04bfaae-d274-410d-beef-f6dafb2c37e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a76508a-a2c8-41c2-a5d4-f5213ca1d6ba",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca646507-374b-452f-86c1-c476f2e19bc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "903b38c0-f8e6-42c0-8627-1831de03c314"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2f6bc9c-5a8f-4d22-901b-429b87e3287a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cfecffb3-4c01-46ae-85d6-8ef35fa6d695"
                        }
                      }
                    ]
                  },
                  {
                    "id": "910c40fd-bdf2-44de-b91e-3dbf28accb47",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7876dcb-29b1-4112-9476-757099a9b97a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6da18956-72f6-4bf2-ac24-53e4a248ec97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4018b819-d5b5-47d4-b463-7c4de3de2187",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "be407f3b-0e33-45b0-92eb-88cf7cd49b99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72aa6df1-e66f-481b-9327-aca12508f4ae",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae4522d4-6f04-4135-939e-58cf0caf57b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a274cabb-5086-407c-b15d-f8f21843c9b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88d3279d-28c7-476d-bedf-85378c185852",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "113ad257-247a-447f-bc9f-122aafa38f06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad01a502-8185-483c-ae7d-2fedbacf9f09",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "584f7fe4-a9b8-4404-8d88-caef03639df1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52879a95-cbe3-4954-be74-b90325c57698"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82abab0d-4209-4bd2-8224-4598769b25db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "7dd0b70a-be4a-4180-bc46-94674ecead10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d20e557b-86a4-4909-8fcb-049b30ceddb9",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95df5da3-5309-402b-8aff-bddbe91b8b77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9d8a138-503e-4c76-a720-a25beb61609d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ba84a27-ab47-4bcc-97e9-26de3aa93bb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1005d16b-b3fc-43dd-b209-699646cf6824"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16df5ee8-58f4-4065-8b93-a4b00964e34a",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df7ea35b-311f-466a-9ab8-5664a89597b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "102427ed-8ef9-4901-90a7-e245b27d82cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e546214-a62e-475e-acc7-e7e10abb85a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "53ee5c5a-802d-49b9-846b-5132c098f63b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91be703c-a552-4710-8224-0a2030dba35a",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcb89d3e-e710-415f-ac22-e084e8cdc4f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7960113a-2547-4e5f-aaa9-f4a419cfc073"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b2b2fc9-5f10-4736-a7af-7d2da6882649",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec5556ef-ea20-4a3a-a401-3ffa93cf2439"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84677bae-d351-4381-80bd-d496a9dfc1b1",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3fcbb60-44e6-4d36-866f-20a11e70c16c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e0fce36-647f-464d-bc10-90e3873799c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4a3a57f-85bd-4dc6-8d5a-bbb063c322d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "40090654-a418-4bd8-8ab2-4a7e1c13c3d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "986f3562-ecc2-431f-81ca-38dca13a9ec7",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1f1606b-63a4-4ca0-a4c2-92ef3a5fe6f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68818cc2-4456-46a4-9bc3-134da547cef5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c898e20-930a-4b9e-9e1c-16326a41a100",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "db852b3a-9812-49ef-9f1b-2fc0bfd8d4b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ef893c2-acc9-4f4d-8933-441d6409496d",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b572b98-0efb-4784-b0fd-4bb36a8531bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "df32702e-4c84-4693-b74b-07de4bdb3278"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee6499de-a9e0-49c6-8de4-51283aa81b10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "32fe5e5e-2cbf-4ee1-93e0-fd5814d60de3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "621decb8-eedc-4fbe-91e2-fef6382479fd",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e9b0180-f1bd-42bf-aa59-ab4cf36f2e2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3007d17f-4176-4e1d-b342-35cb9665b746"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "197255ba-c297-4a6d-9448-95b7a1537c99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f7251f32-20f6-4915-8abe-62a78c983301"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa11c7a1-5693-448c-b86f-6224efb32e93",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80d94026-92f0-4d5e-9e72-75bec676cae4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66da957e-6afb-4b20-aca0-322d2dcf2ea1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eadafb40-859b-47c9-9be1-8c9e514a75c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "949af893-1272-49a5-ba4d-8b58b9b8dac7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91daf649-fee7-4e4d-bec6-2f56f12e2108",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c7f1a17-d55e-4d2a-9720-c08835687cf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c090a87-775d-4b0c-91e5-cc77083abb8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23e7dc21-d0c9-407c-8875-789fb6b5c728",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c994b350-edb4-45aa-abb8-7c2390b8d92f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f19c3b10-a6c4-4222-a60c-11b3cec65e08",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39817f03-edb0-40a3-bc02-2a943aaae064",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c924cedc-61f5-4406-928a-cd3e05bfe05b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e6c4ae9-b458-42f4-a4de-edf067fb4ee5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7578e629-b551-4755-9d06-277e341baca0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "635451de-48d1-42f4-a75e-64328aecf4df",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7732e364-6051-4334-a381-2ded9eeaec75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a57cd06-8e25-47b2-b1f8-d862d8672fa4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db3a07d9-853b-4eb1-b217-ecd0cb76e008",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c0c7009a-ebe9-4fed-83bd-382aad47ee52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daf95e87-c3ac-4714-bcfc-fbb0cb6a632a",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4509028a-28cf-46a9-8a16-229a0de946bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6851f4d9-890a-4724-a54b-8302fb439d41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbfbb9a2-da33-430f-8ba1-af33204df52c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "249968f5-40ee-450a-b705-76c1144b7aea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d31bf8a2-9bee-4021-9e4c-b397c1a7fc55",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b72b0966-d4ea-4585-bc87-541fe1aaca7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "182f1890-2a0d-4b80-b320-fe2f4cb20e99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8d57c5f-cae7-44aa-ab63-f5ce7895ff8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "db191b93-0461-450e-ad68-dc3087cdeef5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e06bc550-1b36-47cb-b447-04939f049346",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "672dc922-0af7-40b8-84a0-f8744a019c8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca27451e-90ba-4f52-886c-90c520a71556"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3437b83-a0fc-4bf7-a6d4-f1af366133f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "90e5cef1-c6bc-4882-a702-a44af83faa97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "167eaa9e-c09a-4d22-99bf-ea8675b32bab",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e89030f6-f3c7-4319-bc17-971cd137a653",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebbc4507-8d6d-4e98-80c1-e4298052bde5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a56ce3e8-08fc-455a-962a-25300c8fe735",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "456508df-ea9c-42c6-9c2e-bce93924240c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4dd1c9c-4f14-4ba2-b5f3-860a3b7f213e",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8215383d-227b-4139-b472-db67b87450ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62bf14b9-152c-4c84-8073-7f6e3490d79f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5348ef46-c9f5-4e63-b722-f1299edd8895",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad5fa9ad-e4ad-425d-af55-484b0cc36d3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffa6cfeb-f85a-4532-8790-04cee67d6a2d",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b923e034-a4d6-475b-beea-5e83b7dec506",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a2aa47c-ae78-4730-9892-1743cd84e09f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71bfdc4c-f8d4-46e8-9c7f-a99ff7b639b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "988358d7-ef7b-4d36-a4ec-33f9da30e95e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf7f88ea-8c53-4ced-86e7-5969ba65da35",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb9c264f-4c13-413c-b4ea-a2bc451b05c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42aedf08-9e8b-4c45-a557-ee6262f15668"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4365ebb1-0905-40dd-a552-b4921eba05da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a40cc60-bab4-424e-9c37-7d03b38ab2e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59b52268-ec08-4914-814f-498a378649c6",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b94e5f59-66b5-4ad1-8990-1c1251a980f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9102fc92-c07d-44ec-9cea-bef7482a46c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "476efed3-ffd2-4027-a3ff-3c0d45b6e658",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "078f8dc3-ece8-4cb3-b2f4-8847d600624b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b341fb58-4ee3-4aa4-841f-7b352d933a90",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56f3b2b7-2c25-4133-8eee-89bb8e7397d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9f5261b-7a0f-4304-b36a-b0adc74be842"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68ea113f-928e-4e91-87f8-82ff2982f9c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8cc75197-4895-4e38-b1ff-1a7abdf2da96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1746ebf-0114-4cd0-8b09-f8b642f4a3f6",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83f37abe-5dbf-4573-a45e-8b75da13b4fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dae558f0-0b70-4d2f-a66d-67a385c216c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4888fc66-9889-4b90-b0ef-ac6f2f89ec1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "06946882-f5e5-47e2-85cc-8724cd605199"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1a89231-8bcc-424c-9eaa-dd472e66e8f1",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "996b03e0-9f6e-4f5b-9529-209bc56c6584",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7120113e-054c-4c6f-8f6c-51eed8f438ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e37ee439-f794-4e63-8958-4df5da46aa16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f63da918-0ec1-474d-b0d3-32e1b4f54960"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9931dc37-b449-4bcb-bd8f-e5de7622ef3f",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be0d9bf4-76f7-4deb-b025-b3c696e41a15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f2efc06-d22c-4783-903e-d153964b32b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "804c7360-7fff-45f5-afe8-6d88d32044f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "170ec893-ce7e-4a95-9e21-000cc3d15b92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5c35555-091f-49fd-8a90-8f9e21806e4b",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e71c83f7-d1d7-4c7e-b522-9c37801c5e3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f588a640-0985-4f0d-bb51-f5ac4d266565"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "850feeab-8a9f-4bad-85d7-f28c37ba2c8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ac4f245-be51-432a-83d5-16af8ad18930"
                        }
                      }
                    ]
                  },
                  {
                    "id": "216d070e-3622-4e19-8d24-ad9f4ca99d7a",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8320b8f6-8bef-442d-8174-23137e743eed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68517f90-da77-4e2d-9867-b816d828d46b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24073e3d-63e1-4bed-8a15-0d575fd7f890",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "866d981a-6d8d-4c6e-846d-1aad66ae6988"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29efd08a-06ac-4c03-a8f3-d18f2a930193",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd302ccc-765b-454c-b22d-f170a3ae0ca0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b1c9ab3-e691-4e75-83c1-f94dcbd82794"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93c3e5e9-e033-4227-b653-01df766ac7d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "f6438372-b984-4f8c-8164-ff7ebe9f8c02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b0ee828-136e-43df-986e-e2f8c806717f",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03128a15-2a0f-4c01-bdb2-9af51b20f773",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "409deedd-92cf-4df7-9e79-33336b4c67dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9999d2b8-4076-41ab-8d28-9307f89cf94f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f6046568-ee97-4e1e-8eee-6465a41c3fa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "519df273-415d-42b8-a987-2791a4449f80",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab0b3dfa-ce2a-49c9-8831-a33f23adde27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d49eea40-0112-4e7c-a32f-9ed4038f7e40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1d1ad48-6d12-40a0-b260-6728df9eea40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "91476903-1b41-457f-9e56-f3f77c179262"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7830aca6-4b99-4893-857f-32b4e3be1c51",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d92eec1e-3e02-4afa-8bd2-0429fc0bd8be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a39ffe3-dab5-4546-8df1-6d1331449f5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d694a82d-a09a-4052-a0e2-7bb799246409",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e71a19be-05cd-4ac6-9585-6cedd9ae9dc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d30c13a-60e3-48f5-905c-1a8c14524e14",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73fe3d7b-8a31-4b35-8ab7-2569628fa423",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad24ca68-fd17-495b-a604-ab23d5a52111"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39cf2a02-f6bc-432c-9045-9979b7db7297",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "9723ca9f-7343-4cd7-8783-b2ee1affe9f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "881ac000-c3e1-4152-b2e1-03ac5581dc90",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "891bf8f7-0989-4cea-ab1f-8e7a814854e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc10b859-a64d-4936-8da3-a33c55fb70fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e3fdae0-d29a-44e2-baf9-0dd0797a4ea2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "c20c6d38-2ab1-4843-a823-f7cd45e82807"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4297b650-af96-4b04-b9de-ccf69266aa63",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2b603ab-2f2c-4c8f-8a0f-1126ba96058c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac940cc8-6eda-4e13-84a1-41b0c4098509"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ce3d81a-4860-4e62-b81e-1127962f9617",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "035f2db8-0028-4109-a32f-e8b3346a53c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a265824-aa1e-48f1-aaab-f40fe6c3b611",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "537d273b-4b04-47fc-986d-cbaa03ee9f3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1de3d522-a440-4954-9688-246503bfd867"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c75250cc-968e-4767-aba2-e9029c215ad5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4be1b35-ac1a-4279-8271-89ebf98b0786"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9579ecce-8272-4432-a28d-4b5c7ee2efaa",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2b6d09f-9d2f-4d3c-ab62-caee55872c4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e65d967-8029-4cbc-b7ad-dcc7cfdb7489"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b08d3c4-6d6d-44c7-a722-8d60edf7b7c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f1d130f7-6727-4cf5-befb-3cd2b31feb4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd1b2ea2-7ead-48eb-8da4-e570159e8c3e",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "deaef402-62b5-44c9-b85f-decfa8a9e3cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29927dbd-3db4-4ce7-b12b-9cb718c35ab1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8a1eff3-85bd-4660-a73a-ccacc0350f00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "72fefed3-d432-481a-b56d-c7320a6ed02c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "648d23f7-89d7-4818-a0d6-73f5971ca463",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28598df6-13fb-4d33-ba2d-c9513cf9b13b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e00a6c3c-b644-4aaa-a482-de87e6d8acc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a2bb21f-e5c2-456d-bdc4-22c639b44452",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f3d1dd1e-ec8b-4349-a717-fa627b7daf92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9246527e-ceaa-40cb-b075-14b9274c718f",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11112287-08dd-484f-86ea-a8ed56170976",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d981c09-2b86-494d-93b5-49ea6f9de0c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf32ea43-8218-4d17-a4c1-15afe501d7f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a3e3b57f-8747-44a1-a7ea-4d97e15376fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "498b66d9-34fe-4b77-9f0a-a25a9a371060",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "502c86a3-3791-4ce4-a996-0bd3ccabbfcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec93285a-811a-4841-9e2d-9b41b298cc0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bcc4855-9321-453a-8f95-355eb3cd2716",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "c053d4ef-54f7-4291-ae6b-4a4dfa56388e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f9bed7f-e79d-4913-9e6e-d5c5df1fae2d",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e733a89-1644-453c-9a14-29e783b5d6f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4399361d-3526-497a-9b06-615ad4a8d898"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "875931e6-21ea-4367-aceb-1fd9e81bf535",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2afdeea2-09cd-4008-bbbe-bcc32fbf0fa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "340a1100-3d6f-45b8-a6f8-641334311a76",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa2809a3-e186-47c1-986a-21caeb12816e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a80ab57a-91ed-40a7-9cb0-d7540d21830d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "062f6b76-1d58-4f57-a20e-60d3bff150fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "350b192f-0648-4366-a3ec-30b96f9b39c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20255482-16de-4588-98e8-14d4048c23d5",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da1427cc-8723-4764-91b9-8a5f7e39625d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43f60c4a-7380-4ec6-9a8a-b50759a9fe07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce877a99-2ac8-41be-88e6-5eaafb78e762",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4fec014d-afe5-497b-974d-db90bb003be3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f65e767d-47c4-4aff-ac6d-cd5251025593",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9ab8ec4-1995-492a-b3c9-baa396f57804",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35158753-f5b4-40c0-91ae-80c31b7b931f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b1e96a1-2269-480d-922d-0989c1515e94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e8da5860-e682-4725-a1be-ecb97968ac8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf308f7c-9fbb-49fb-9afd-f24c73f20733",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b1313ab-1234-4779-ab5a-bc690abb9cd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa96b18a-8158-4821-a04b-498083755e8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d23e701-a85d-480a-ae25-f8fa0aad29f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b50db753-ebbf-4d0f-9af9-ee01ffe466db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "216a0439-7a17-4692-ac8e-effcd4b6152b",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51944501-67f8-4722-9843-da704ea0efd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "caf74000-0a69-4423-a174-57a51759bfbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cfe4edf-5e59-46cb-9049-8cd8467cc0dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "27f0dc66-1e05-4ee7-93de-8f6c03977a95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a770c136-e12f-4b08-8aab-9bdf46eb5755",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9564a391-cf13-4580-a176-d0ec6d96f45e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "435f3b12-f39e-4143-a325-1d6306579e26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "514783ca-bf26-43be-8788-d8300e35d66b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6ee64f8-281a-47ad-a376-8151c86e3ab5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "211f0a1d-0707-4c54-8dd0-ce21f7e6f4f6",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e870e750-9939-470f-9d81-dda4a616a4fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d819358-a0cb-494a-a26a-6313bbd9d026"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "443ecbbb-7a45-4ab4-aff3-ef12952d601c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e0495e3-f0f0-4348-b869-f129d0e684a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44b9fe3a-9ae4-4e4a-bcf2-9b5817eab193",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abf3cd48-cf28-407d-814c-cc78f7ed3214",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "516d064c-c447-4b96-87eb-8e596c05d1ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8016ae49-79ce-41f5-897a-41c2b27ef5ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c654431-2077-4366-8a53-a35d03a023f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "039f473e-687c-4232-beaf-717690e9638a",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1636c727-8d37-408c-bd8c-505df4176e6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d63227ac-64d6-4856-b4ce-b1b74566c205"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73ae7f50-8659-40db-8330-5bc8df69f3ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9547a4ff-73d8-482f-a99d-ba6197e9d52e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3261dd5-510f-48a7-b44a-e211db22c64c",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7252a3b-ce66-4d53-a252-987680d85fe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d35542c2-4d25-4def-8ada-d64a02c43d3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c786449-d39d-411b-bfe2-0593b15f8009",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d228a899-9a01-4b23-91ef-ec404680fefb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49be9bd2-a792-44e0-b098-9488e95a6bd9",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5036df6e-96b4-4b44-bcad-fb9b50856823",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8066c484-b25f-49d8-b8d2-7a2de457a593"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2362cd74-9aa5-4c5c-95a1-9a2e55162d32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "93d9a4f7-4eef-4e8a-89b3-1f6fd8c4de53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f668a849-3de2-44cd-a3c2-d3dc3653c1b4",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5534a03-3bdf-4a6b-8a28-c95d8aa643a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70fbce8e-c064-4bd7-9ebf-b7420e96535d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59419546-0414-4d6c-aec8-8f56eecb7c05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "48ac1dda-1ed0-47e2-9154-50dec05ac1c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3b1e521-c292-4110-a56e-6baf829f3ece",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6e62657-d2ba-400e-bc98-b68c04c6b97c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f74ed7d-476c-47fd-9ec6-fb35b948cd56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc4c0f72-9049-4638-ac5c-960b474978d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c9f30ad-6e70-4081-9784-292fbff821ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39500910-e9f8-4122-a030-293eb4cb63cf",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65fc15f3-c19a-4632-8ca7-89786f842f0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8fadda6-1468-4a4c-bb9e-d1141ce2d06c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "723245b4-1c50-491d-9498-dd3b96a4d451",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a4c57a5-80b5-4015-99e5-08be7517d8c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "164c6b40-c113-4914-8fe9-942a0eabaca2",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e54b9e1c-c7bd-4af5-a7dd-bcb14da906c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3884d380-9be8-4bd9-b3bc-d3d6fd18f6d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5d7cf94-9a22-49ab-81a6-70f00d2a96cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1439cbb5-7a76-43f8-923f-9d40881fbb5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0d0e33e-0c40-4e86-91a3-bd6ca77d5807",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "378a9723-2cb9-4160-91d6-e4eb4c6ca1ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20cdbf6d-81ee-4f7e-b283-1268f19e77c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3517f1a8-0a40-4100-a078-b4ec743f0c6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "64f19e68-f5cd-4eb3-8182-234ada32c67a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34ff6a59-ca3b-4520-91b4-1da2920010d9",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ccb91f5-af6f-42fe-bf27-644cd7bcb998",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e3e0221-cf02-42fa-8430-41609c11ce57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1982ca12-60d9-4ecd-b3cc-eefd417395b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2a12ce0d-ac2c-47ec-a744-982bac1091ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f1f31b9-90e4-47d4-8c7e-c3b018d14831",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30fa2fb0-2c48-4c4c-80d6-b86c87e2f355",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b34c13bd-2be2-41a6-b24b-5fe3c0101d74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ce7f18c-68b1-4aa0-8029-2c1d9fa2bdb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "72bff73a-fd2e-42b6-bf23-39293e0273bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d48ba21-8c4a-432b-b369-dc640615f620",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5a74cd4-4c31-4941-87df-d5ea396e2ff7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c18514a-a82b-4e54-9a58-dbfe809ffab0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f61147b-5f1b-44aa-92f1-15f4f0ff0bc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e6dcd2c6-2f77-4a26-930a-399b323f187e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9892c09b-b382-43c0-8e88-2165b99ead95",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e91dee3b-ceb4-4ce1-8b48-ff467463484f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73fe9973-ff2a-498f-b5e5-7391b0a48892"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7924d969-dfbf-401b-9ee9-0d6950c4b0c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f8eb3482-2627-4f05-956f-4a6ce68932c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72675611-020a-4fb3-8206-0f3a307f5a07",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0ed58ec-68dc-4feb-a29d-281867383f76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47bd601a-e1cf-4bc2-a722-41880e3e0a1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "743d7e14-c77d-4eb8-b089-7593b18131f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8416079b-e6dc-4cfd-bad3-5c1110d3dde3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd7f8bb8-e2bd-45b2-9291-e7cd8a34512c",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7d2bb7f-3415-481c-a941-b4d3ec689ffc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43312b3f-7393-4969-9316-aaf00e22cf08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4334d8a2-058f-4356-b9ab-65e006d0035c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "a475fc10-42c3-4ecd-916b-be21bcc7d6ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ada126c4-4e07-43f1-89cd-c4995a8fe163",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03c6f978-0cd1-4b3a-81cc-1fac953dc5ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "12dcd751-56f8-4e9c-b043-6d703b5cfe85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0bc96df-7563-48e3-8474-155a82706d76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "afb410c1-5d02-494b-ac39-ad8c90acd043"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e55f9e4f-1830-4b4f-821d-adb3d1f9fa92",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6bab80dd-cba1-4958-aeee-8c2006fbe3ac",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "316dc853-7d59-4ef5-ad4b-a44e8e0927e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4998b733-3755-471d-84ba-f64418303831"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "355838bf-dfc1-49f7-906e-ccb15b460f63",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ed33bfdd-75f1-4e53-b40e-cf9a7c75264c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "15b34353-d869-4a42-875a-b7c8d101b0e4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fdb3d9ba-87c4-4f94-8abe-f06830accd7a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5e8fa2cd-d2f5-481b-a412-8517e4f5b171",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b71b8c42-26bd-4116-bc32-5856c3b3e321"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4af234e5-94d3-4cfc-b639-5a2906fbe924",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "21839e8f-2308-4afd-96c1-9f84306e18ea"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d9f1ff3d-3d0c-4369-884e-d0a0b63c1520",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c970dd92-3342-4655-9b24-c10d7792be10"
                }
              }
            ]
          },
          {
            "id": "e8e3dd7e-76ef-4d1e-bcc6-90d1e67aa3c6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c2bf58ca-2093-4ded-8fd1-6b919026a749",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "449ec621-2fbb-4249-a724-33acb41a7f71",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5335e094-8359-4107-a834-f6f38a287ba4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "aba76ea0-0123-4a67-b5d6-7b48c0ce70f9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f55ff3cd-e45b-4492-b0c1-7501a4f90bc1"
                    }
                  }
                ]
              },
              {
                "id": "c4d7b11d-e14f-424c-9f1b-fe09b6b7b131",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "99480027-66ae-4afb-82c0-af0adef0e3e5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "28b0f81a-e623-4a59-8b94-22d57d204187"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dd61e2bd-4352-4cd9-8c8d-db6768666a69",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8fbec3a6-8023-4500-b668-e04c8f4127e1"
                    }
                  }
                ]
              },
              {
                "id": "42ad794b-717d-4e28-b736-18cc71633606",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ab10466e-6559-4df6-8dd2-f271c34f5194",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f2633b6c-04b3-4a81-9132-fc777e5cb190"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1e26d6c1-0ee1-4c22-8c23-27bc7948cf4d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3cbb7f46-7b4d-43a4-8eb1-ccbe335dc849"
                    }
                  }
                ]
              },
              {
                "id": "e55978ef-ba23-4892-aa1f-f264c47a0555",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d1be9b49-766e-4bf8-ad86-4936e0d0e663",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d8cd753b-e9a8-4c21-8a06-5ec176f164eb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "24279634-e203-45da-91b8-bc5533156720",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "587f58f8-5a80-4cac-9f5b-f9b077c5ba19"
                    }
                  }
                ]
              },
              {
                "id": "fb3f4a1a-313f-434e-a3cd-bedad254d300",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ac3b29a9-0566-42ba-b714-293f924daf24",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "12cad609-1335-4df1-a2a3-a959fad4055f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1811dd37-bbff-4a16-bf41-44db88cc1a5e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "506ae7dc-488c-4720-9f49-98b7103f5c8f"
                    }
                  }
                ]
              },
              {
                "id": "8a543085-785f-4575-881b-2d525a6ac907",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c94356c2-d139-4804-9879-02b7fa4150de",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f7bee77c-859b-4025-9bb2-d9120af538dd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "91019581-a1d9-425e-a2a8-f6725b7d2a0d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ff5a4450-ace5-453f-af8d-305d27e05006"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2c8d7263-5a67-4478-9aaf-7ff2ce38f015",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5f4ecdc2-f379-47b9-a0a2-3af6afd84de9"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b437a75f-d738-4513-89cb-39ef754bf168",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8db562ee-0044-4014-8e95-0aab22da7652"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "765d9c98-3f00-466d-966e-6498c34ceaca",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "183ff065-73d3-4f3c-9197-78ce66c33e86"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7b3dc35b-1c09-43f9-a2f2-ccc144d4559a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5678b4f2-3991-4088-88cf-9822074ff303"
            }
          }
        ]
      },
      {
        "id": "a1d7ec2b-55b9-4177-9e7e-332bfe31a339",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "b9436ffa-e0f0-42b1-a00f-2596d7d97a0c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9177d1ad-0eed-48cc-8568-79a0c8cb33da",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c70c16e6-1224-4994-9223-237bc14d0175",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "464b4f07-1f80-4ad5-88b5-b1e7674d93c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb309334-391c-49b0-a3f7-30acd3bb630b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1304a88-209a-4c11-a020-c9ae47032af8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "1487e48a-2aca-4a04-b694-eae5eca11c12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c48b18c1-3281-4e11-876b-1ed20add4118",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7faf4ad7-c868-4b73-a307-1e62936ec7fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e6ea4cb-f737-478e-9254-f2484f578b98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6499123-13fc-4f3f-ad51-2b25768a284e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a678057-5fa1-4c18-ae15-587ac824e42f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c740b2a5-8170-4e7d-a15a-adcea259aa73",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6191cf91-ab37-4ab7-b812-4343b22281d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aff054cc-82f9-4507-ae20-72ef4a378ba6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2dcc127-f04f-4bd1-a77b-2a93128791f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e8dd970-a0af-400d-b6bb-98089b1e8181"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7678773-4bf0-4fa0-a2dd-b503afd15fb2",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b3205ca-cc25-4e5d-b8a6-9f5df8707cfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38565fa8-9fb4-408a-9234-d3d8c4d1264d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2387ff20-7ed5-4b1d-aa5e-c34bcdddbd03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "68f21a48-937e-426d-baed-21664670c20a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "287ab757-f177-41c2-92d8-0144a0622ef2",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15f0df8e-cd7c-4e6f-a13b-9e20ec5b4176",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de59a67f-27a1-423f-8dc2-3bf20a7dcdc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3abaffa-6c7b-441d-b9b4-5e026da58c95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "56c5b8a7-fd77-4697-b218-2e9dad36189e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70535345-6f7a-4f47-a163-c67654ba7d03",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3714799-d726-40ce-8d1b-f3562627bf05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4efa5f0-5c6f-4f28-99d7-01fcc66d70fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57d03ba0-2ecd-44f8-87b2-416d920379a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c41bef6c-5133-46d2-b11d-f56642ccf4ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b698c2b2-146c-460e-9dfc-aa721759c367",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "431e5bca-55d1-460f-97fe-a56eef16b494",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b5d044a-054a-409c-a038-9cbdc96f9bc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b9b9eb5-621e-4e5c-bc1a-70f74d58d50f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee1aa520-181d-4529-bd8f-f1e96b83c889"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f54a287-b96e-4499-a46d-72bccb75f3f9",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ccbd2b0-aeb7-4e24-ab1c-f30f77a76424",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd17d408-674f-4041-9213-ec2b958aefbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdbb6f2e-f208-4eee-a128-93b7b68951e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "05e65fe3-47b4-43d2-8cae-6294a892f6ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acbf7514-36a5-42cf-8af0-1031400ed553",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc7523c1-c031-444a-b1ca-083115b7443e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcaab8e9-2cb9-4175-b84e-7dd338bdeb65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0602c7b4-f994-4f10-9ff4-7f5d4ef853bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c9ee4c2-cb19-4285-8727-cef202c513bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12b3932c-07fe-4d0e-8698-27013e605d0e",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49d27b37-4060-448d-be2f-edf5f44d50c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61ed632e-4fcb-40ef-a4e3-f1d8b996d0e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e03f6fd-acd9-44f1-b0d2-40edc44f2953",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae1e0623-cc4a-440f-966c-0f4580b45f03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99a433de-a990-466c-b352-b8f678624f45",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19351008-cafc-4b16-b670-7196999f0130",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ad7a592-261b-4db8-ac15-44119d16e1c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9715504c-b88a-4f93-80e5-363489955595",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "934f2608-49f0-480c-bd6e-fa356525fc91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b803b13-6237-46e8-8896-3fb3084b64b0",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ec4fba8-08f5-4798-9478-1896d2276da4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84a19496-6eb1-4cee-b0ae-b6c81c08061d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ea09fd0-fd21-46ba-ac1b-a782eec2c110",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b570d71c-e70f-4078-aa90-cadf7718e607"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a23883de-fe09-4bcb-aa73-b7187aebd3af",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c98cfb28-632e-458f-8543-4dbbc0d84d7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c0b2f12-b431-41cf-9f1e-5bb64461aadd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f75bebcb-65b0-49ff-a69e-90d66b2c157f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8617414e-6252-4d61-a569-4f143e90cc09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a641b992-a5b8-4a44-846a-3da612f27fbf",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27dfc798-902b-41b7-8631-af24df6c6061",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72dc9243-56cf-4692-bd2a-7edf066c2d51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a98012ff-ac1c-4592-9ada-312fe34e6a18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ef52440-da7c-4aa3-8784-3f841ec8e738"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5bcd503-4744-4425-951b-1e291377e9a9",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "938120e7-a990-4fa3-a495-312756611ce4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68958de4-65f7-486b-80ba-661ff573c051"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dce8dc59-fdf3-4af5-bfbe-f88b9105697c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "f2c00947-9f3f-4fdc-93b7-d3d6541f565a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2739bd70-3404-4469-bfc6-abf2517ab3af",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ba31ab1-41ff-45a5-912a-10d1e829daf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a05129a-d288-4b66-b523-0b40733fc97a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74a7ca3c-064b-4809-9a61-b21b1c7ed524",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ddce1ff-1793-4c12-a858-cfc426782eb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2496ea6e-fb58-43fe-8f90-f1e8527f5c0d",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6ea5788-3b37-42af-a286-0130fedc5ba5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c05bc28-aab7-4a28-8b65-2438e2e03a9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "248999c5-ad77-422c-8b15-6dfd3afd9981",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "735d10a2-fa1d-4240-a715-8ec551b6beb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "582b6153-2f03-4445-9d50-ecd50469d7e3",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8e2feb7-b555-450d-b315-87058ac7b8d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4af1d1d0-6194-43ff-a941-1f6fb11424bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50c131b0-b3e1-4d00-830d-b7305133ff12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2070dde3-3d4d-4231-95e4-80f932362941"
                        }
                      }
                    ]
                  },
                  {
                    "id": "398d1c03-9680-4c1e-bc5d-1d18b44a3a9f",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43adf1bb-625b-47c5-99da-6c5a6cef8585",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16c0a2e5-5cca-41a6-9a5b-d534775c4283"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c506fa93-1769-4a20-ba55-d09d5f712d72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8a8ea6e-1aa0-4f2a-8721-be3767626c5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95734470-b5ab-464f-b00a-03b915b27b50",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f4c8c82-f15e-4545-899f-302b24cafa76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c246319a-d9c5-4d43-b52e-3682425f6c95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fdec52b-454c-4dfa-8f05-d6ef145b5843",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3f393c9-d383-4082-8664-6ae720879cd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6378e82a-eb10-4613-b63b-29cc214e0a58",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "778cf610-4c93-432f-8d07-9c51a8c1e033",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33527a2c-dfc6-46aa-a407-a8148d7eda4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c456881-aab9-4d34-bfe0-f7da33f5a9af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee3b188c-97f0-4111-9460-6e9dc7356485"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50f067cd-a577-45cb-a945-955f60ab41be",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b31a146f-2ab1-4d07-85e9-32d4277e0723",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "639c980c-d2aa-48f5-8367-99de2ec178f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4529eac-6aca-4f1e-a44a-5327771dd0f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fcdd6b27-9289-4fb4-a04f-467ac8d8c9d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6c5fedc-60fe-48ca-abb6-fd86971bce07",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f999ef3-d4c8-4370-8224-b43637b362f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa148656-e370-46a4-929d-0ecd3f47e7d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3890a723-241c-4a85-9202-720ec4b4fea0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5bb79cd7-e4f3-433b-b8b3-1876b9ba3572"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe79ee04-0f25-4895-8834-6b6fc84492ac",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cda79833-13cb-447e-aee4-26f94c9a0eb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4d36aff-9b4f-40be-a248-fec0196d3ba1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39c40900-9a40-4cb8-9d2d-b6b7d9ee6fa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0507f9ff-f0d3-40da-99e3-5e601f6d6f13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "070f13a1-ae1b-4ad0-aa4c-728ac224de87",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "646a873f-5cca-4e0a-8d5f-7d404113cde8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "930a475b-57d2-4fd7-848f-bc631a199f6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68afeaef-5315-4163-897a-4033f8624b56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "045d3cfe-cd07-4bbe-b803-46b281c07b0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d806b072-180a-4ca4-94b2-3d9b2525904b",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2f28d73-cb5a-41ba-a4ef-8581943a0092",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "591a32e5-9c73-4ab7-a117-1782ee9de604"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5051c991-a0a7-44f2-acd9-540111616e7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "57e27396-cd71-4b88-92af-14632aa56b1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f0d2694-ade5-4e26-a547-392cc6ca4e86",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7600437-f942-43e4-bdcc-ac2e939930f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7618bc06-7874-4049-be22-e2d2c5323686"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1146755-0c4e-42ed-843f-0011e0cd6d57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "621c2656-51bb-40fc-a707-c94d6e8f0bf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c3ed028-33be-4eba-bdc5-78d29f26bfd5",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "257854da-16f8-4205-b944-5c353749affa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f3b092f-7a2a-4ce2-8330-b9a3b346b019"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a24a88b-93b2-4522-a558-ba736d294125",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "280dc1b5-b094-4f5d-bd41-bfafc04395b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be2de3cd-1ddf-4820-b5b1-ffcffb6645f3",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "331cac5a-61b6-47e0-9377-026874465cc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2504030b-77d2-49f0-ba2c-0ae0df6a3a6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95112e43-e2a7-4783-a3b8-ef01eeba0bf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b388554f-cd85-406a-a771-a697e86806c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18cb9210-b8ca-4639-a688-9d0eddbaf46b",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e1f9822-b544-4f30-acd0-0ac55126530a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1e8c089-26b5-4b07-be8b-bd1fcf58bc93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b353a0b6-76c0-492a-9979-2fdef5605b78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "509cb333-06d3-4e28-98ed-dd2acec53f9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11e2aa90-62bb-49a1-8b20-f4e65325e274",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23d7aeea-1305-46b2-8b73-ef16b770758a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6e5c764-b9ba-4be6-9e6e-c50079653d2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04e5f1c7-d9eb-48fb-930c-877a1301bef5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a3370e9-295b-4e50-937d-fdc55aa80a8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7236d08-26e7-4467-945a-310e3e673299",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa9263cd-4af1-480a-a1e9-e575edc9a84e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2259774b-a2e4-43ed-a440-534c194b04d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29cdc94d-38be-4f49-8840-e0b038b4d64b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "36440f62-a047-4387-bc53-aece11a16a22"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5f07bfa8-9f3e-46de-9b6b-0f6d6a913c90",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "24922d19-0bdd-4ec2-92d0-23d5b3af5b22",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6424437a-c1ac-417c-90e9-9052a45f1541",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "5ad7cc6b-931b-4527-b6b6-f372d41b546c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "250bd2c2-801f-45e5-a0e3-1c13f97df536",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "845405da-aa30-42b2-ba5b-6ab7f89162de"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "15ba8e48-6add-420f-bee9-5bb7510a6283",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9cf30651-a58b-4e36-9fa6-72dac66e774d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2cd806a9-7530-4030-9f41-c62ef137499d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8bb212f7-e855-4c2b-851c-cce042d764b4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2e02b1c6-9704-4da2-9ab9-72cb47167c36",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1fc9a387-1117-4834-b311-0337c6f047f7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "11f7d8a4-94c2-4994-9cfd-8a3cc3a0a861",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6ba0d68a-b835-4fa3-8fa1-ec050299117c"
            }
          }
        ]
      },
      {
        "id": "78946f90-e85c-42a3-8ed6-6b2a7b8f2de2",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "fccd249c-f24a-4ea1-a687-c70bee61c814",
            "name": "Negative Testing",
            "item": [
              {
                "id": "817f7363-4475-40b5-866a-8c0212ef883d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "dd18c9a4-7999-4492-b4df-2a7500babab2",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d8fb278-b646-47ec-8caa-1f0cb43f141b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "936d47f2-f631-44ef-b64c-800089132a6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c99146f-4615-4a76-89ff-1bf7f581fe43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "223a45f0-d9b2-4249-9c10-192b4e977303"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaec88a6-14a5-48ff-be6b-f67a60a7a365",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36dcbd32-e38d-4510-938f-c35231e84bd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "400f06d6-a795-4b21-8e61-5d66a936026d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e2a6b14-fb41-42e5-b283-15fa439a7ced",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4996064d-2afe-4d07-a471-a56b196894aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d00f7fa-ed76-4130-a883-60e5facb70e8",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "874db50a-4218-48c7-8ca2-cdb6580ff7b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff8694ce-5f5c-4eba-8ec0-bb7f5548e617"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc116639-8e48-46ad-af4a-c9d28d7a8153",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b71ed682-ae23-4f0c-8659-a318ba44ce4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f3e697f-db4a-4002-8523-79ce46e2a70e",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59c6fc0b-19d3-438f-b0a3-eb34cfac2294",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d87432a7-8066-408a-8fa3-469bfb3b7c54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d029e218-1389-491b-b181-e84c8da56daf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "055b4654-a594-43b1-9f42-3f21a1225289"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9601c90-2bd1-4df6-8fa1-a5a9a431a456",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ace176ed-9b07-4482-85e3-6ba572707d98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1896993e-53f5-4e4f-bd9a-c4e75d2ae695"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "359f2214-bd34-415c-b8c4-38731a8fb12c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "587a05f1-52a8-464f-b3c7-97795c405107"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c22a5445-b140-4d9d-997c-308dd202aaeb",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87da09c2-19a8-47ba-b182-189482b231cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b6646ae-13bd-4100-ab50-76d13aae3d85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1848d5b5-af95-42f3-97dc-2096b66f6d0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9255a188-a502-4dd3-bac9-d5e5babaf6e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "810e10cb-5a7c-465d-9076-a586216d5d99",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "608151e1-5bc0-417d-8947-b41593626879",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9246cbe4-80a4-4a13-ad97-72583a8ec099"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdde97a8-f23d-4ea8-9164-e8e74b47551b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8e0c493-41f1-4f03-a891-5b53f7aa6c8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cc4a45f-4d77-4398-9da7-11630543a5c0",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4283f5b3-36d7-464e-b80b-add446ab7df3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbccf540-13cb-4e99-95db-2df78c04ad9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "958b5701-c146-4b27-8860-d2b64f5b4b5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b26590a6-255f-4c54-a2bf-32e5d9ad7671"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f55f33c5-9c27-4f15-b7d8-5336ac940a3d",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90c760d3-35f6-41a4-8a68-b1603eceead7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "673597df-10dc-43a1-881f-f9f0e291e3ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f0b2293-9040-4751-a86f-614ccc27c252",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d759f69b-8124-4deb-8a05-035523219bfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a3a8ee0-0fca-416b-bfe4-2557f1371458",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c89f228a-9138-456f-85ef-be365552b934",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00fd9fac-fbfa-4a60-bce9-9ea124291bb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11705cd7-fe89-4666-abde-3244bcc84e09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e93d687-f834-4aa8-a2e3-4c2324434302"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb3f3d1c-6f19-4ffc-88b4-1f51eb5790e1",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43e8b934-1122-4c23-bf63-a852d91dc8ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddda8aab-551b-4aae-a38c-fe865b55cf2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08c3debf-1a67-461e-a4b6-67780c771a5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "c141b646-8e01-4df2-b0d7-1227c098a6ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c835160-5d1d-499c-b6e1-e3a5c14ccb13",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "503eb49d-5b56-435e-9703-395f16140f25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4587af4c-5954-41e3-a2ad-1c72c460ef86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e3c483c-16d2-42ea-951f-04ffe5179ecf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f60df952-1287-4f2f-8b79-7c02f44a39f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb4fc9f4-1bc9-41ab-a600-ae46f956a6e5",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09f90f81-4c85-4790-b780-ecdab0914432",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53b495b2-a9a5-4992-9db8-6526df9cff21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6fecb5e-d2e0-418c-acc0-660ade81e1f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3bf6876b-c34c-4c70-81d2-f6f45b00d73d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "079fcf4c-6fd7-46f5-9f3d-8fafa67a7570",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a58f5496-9f23-40b6-93eb-efa99c373a39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abc48352-3610-4aa9-8736-f250b966b47e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "775d1644-1de3-4a30-b71b-bdb9b3e08252",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "81daa4ab-c5e5-440a-9d50-ca20ea2c1d06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8bb1990-a870-4fd3-b6e1-6467a1138827",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74d89edd-df20-484d-91ed-06a3c4a44a1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7edc140-e918-495d-a352-faafdec99bef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8a4a2c2-6c07-4187-babb-8a0083f3270f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "47fd612c-9571-406a-829a-db7c135ffcd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c73bbf9c-5715-4789-943c-e42424974238",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0748c63c-732f-493d-8f48-0447318bd317",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c64fc51-e45e-4609-946b-eb98e7f77fc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47e9155c-f171-4333-bc8f-d7ed2fe8fd51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab1e131a-6e86-4393-b7e1-703adaa0ad99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19546224-1dc1-40e9-a6ec-0c2fb19b1aa7",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e3dafe5-8043-4b42-9853-b7546f6bda9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71df55f5-9e4f-4b48-b06c-4b393ecd72ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae436935-a7e3-4ec1-9fb6-50f0702debd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "6923c290-16ca-4369-a339-95eaab2450b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abf70564-4720-451d-bee6-f5b413ec5f63",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f31ce13-f197-4f58-b330-654ec5f79609",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "953f98c8-029c-4dbf-a947-a9c78a07a791"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "304973f4-4f0a-4a52-908e-5b2df7ee7c6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "886e95c0-002e-46c0-ac41-79bccce85834"
                        }
                      }
                    ]
                  },
                  {
                    "id": "077b527c-2c21-4f12-9013-2e806eecf5ff",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c6872c4-e39b-4048-a058-9d6acc305b13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45c7e7c0-ef72-4463-9115-57ed0ee8747c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6b68d03-7ef6-4feb-9bf6-a50a8f089c48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "04f15dbd-35a0-41be-882b-c63029a0f3d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a803c2e6-e763-4495-ad34-c9ffcf202c51",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "005937a2-f58e-48c1-a268-d612a4ca6697",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6129996a-55fa-4fba-a913-ef17c32f3448"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d36bb3d0-4543-471d-99bb-4e33b3cae3c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "32f47e8d-754a-4dd4-952c-275e5dce9cc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "989bddf0-13a5-404d-857a-6de88a3ea08b",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9346bb58-6671-4af0-bb68-8ca4e2fbbfdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0be07093-a27b-4300-b038-c164c7262c45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7670f687-7762-4025-bfca-7e9d42c682fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e4e558e-c3ab-436e-8723-066119e60922"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44526f1b-1af6-4b47-92ea-fe8aeaffcaaf",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "572c03aa-8ebf-4b4c-8b57-0204543c4957",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d707da7-a28b-43ca-8cf0-af79e10b39ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c943e683-2d99-407a-9975-b1f44987a983",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f525bef-1dea-4483-ac0c-51a2a2a4b0da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "968fd521-10f4-4f34-b759-8ad80756f7e9",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aac8ab8e-d150-40e2-9499-21d2ad9e4995",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "feabffdd-7bb0-425b-9f1f-20d4198c6992"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22b62812-a79c-47ea-8ccb-7f4ae564cf2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4428d197-b354-4273-961c-189519f2841d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e31e357-d50d-42e1-8fe2-95582a864c0c",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebc7fc4d-59e4-4f09-9c3b-d0e9294de761",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b8dfb4d-8a80-43ca-b74e-4d58f32b844a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6625fc9-5bdb-4255-a8a4-c092dbcf5adb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1e9b1e8-6c66-4930-81c1-40558303464e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5085048f-566a-4be6-af37-e5e7353ffd3f",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5931c919-4bb3-44b9-8b7b-9212a4a89bc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54073e83-fcb3-41a7-b38f-4ae2a7d09488"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32ef9b8f-5654-489c-ad50-6fd53efeda6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d15bf4f8-5179-4971-a56e-cd5e758cf212"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13666da5-d79e-449a-b215-9114433b8ec3",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e40ed46-ad39-4fa9-aecf-beb9bf743d48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a629461-a439-4b9c-970c-46a8b38132af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b165ec2e-a040-4c28-ac11-730766d555f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "22e5a8d7-f563-425d-a877-eeb087f766b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "361c51f7-4633-4b56-b57f-eb09d24211a6",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "905c807d-49c5-44a2-a370-f899d1f506f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00d134e6-9852-4ad7-a0fe-7260d023b8e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeffc475-e215-433d-955d-be7035d13578",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a2d2bca-183e-4d9b-8525-208f0486fc6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "016939c9-0b20-44ac-929c-947ee48b16ea",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2998da76-75b9-4e97-bf6d-751260224067",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a99ca9f-90c7-44ee-9cf5-430667522e69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25ee48c9-5fbb-46bf-8633-c707ef2ee0a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d94343dd-fc60-44ce-841b-6cfe8d296002"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33cf97d1-fefd-4196-a60d-c15827654057",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21f3d508-6411-4dc3-92fa-00e12160828e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c11b07c6-c902-4676-9602-1f76cb67a733"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bedc18c-944d-43b3-8ee9-ae08afe7f36b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "29963e85-c978-427b-b84b-3ab2bbdb91e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d418a220-d8cf-4cdc-a49d-e7b6d6cb52a9",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf95d6aa-3460-488a-8083-ab6f18fc89ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d7a97f1-df68-4bf1-856e-06f418641751"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63651fb2-b1fe-470b-abd9-72a9cd3de95a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "12eab44f-f3f6-42a0-9219-fdc86871ef30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ac85fb5-6f87-43dd-8751-83efebb658cc",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6449d8ca-2d40-4f70-8440-3e59637da001",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31372768-8521-44f5-a3d0-1fede4dab4b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34dbda00-c5bb-4c82-81ab-acc0bdd647fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a1c40d3-0316-4afc-9cff-ab3a8ad29476"
                        }
                      }
                    ]
                  },
                  {
                    "id": "007cf133-c1b3-47b2-a65b-65bd556a85bc",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dda03baf-59ab-464d-bcb7-f47a39f6ea96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64a0c84a-1ad9-4d10-a045-87dfd5ba2512"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6e28c22-3c41-49ea-9e5d-0b19b878c29c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f85488c-906a-4454-b15e-5f84db1410ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47643b5a-50c5-42dc-9e3d-0f0a1e456114",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92d4229a-2537-4964-a835-eb0ed4a83199",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bf52361-3786-46f3-8cf5-c20071816800"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6e58349-36c0-40c3-9063-efda72e5cd3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "096ef05d-9704-4073-88dd-af62356f966e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca6d4a98-3238-4bc0-9012-19a7709f2f81",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd217f3d-acec-46b5-9f91-7adc2a1660a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5011ac1b-16ca-4fee-9a03-7afc1a8195b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a3d3330-af7c-4d25-beef-787dc3f60cf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "64da0bdf-2e02-498a-94c0-ae2f7a88d96b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73bc2eb1-c4a2-4e2d-9167-a9564afb1982",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8728d46-30e7-49a7-b966-c04776a3d2fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b6f2b44-0280-4211-b5c8-14b59758b440"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9c49dc1-2430-4d49-9ce8-70556b09a31c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "073b0f09-9f03-49a6-aa08-0ea3c1dafeb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e207abf5-f039-475f-9109-3c34e0aac07a",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f24f7566-1488-4999-842f-bacdc131d4d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c6b85b0-aa55-4bf8-89c7-637b0492338d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfe05fad-93dc-4020-8f80-792e1b5488dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "66a7c3ed-be9e-4a02-bfe2-2bf91f5e542c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5e52d1f-d737-4dd3-a556-d844502a6626",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c512acef-cc8e-406d-8597-b65b4ae4fe57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abbedd7c-22e1-44e3-9307-7e9a6d267ada"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a262f84-3e31-4986-b349-a7522bb79659",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "18da499f-6ea7-44dc-894d-fe7b76f066b9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "bf856df4-9fbc-4816-8446-916aa81a112f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b964a1e6-0bac-4cdc-9e99-2e8c5d9920ee",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0413ae09-97fb-41fb-8e3a-789b97af17d2",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "f701a031-ed78-470f-ba87-989283e3b8bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "945ab8a9-452b-4461-ab73-116066476f89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f3b537f8-df00-4fca-8dbd-ed33be73d90a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6224e2b1-46b9-453a-8212-499ae3b32a4b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "df6b5c99-abf4-4404-959b-15b78966fedb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4abfd230-d9bb-4077-84a3-d25094766ffc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0ee58afc-b839-43f0-b817-6b97d2f80807"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c252e93f-0d37-468a-b0c2-781eef5c70e6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "15117802-29dc-4d91-8c85-8f358b28ca6d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2cfeb1e3-6e9c-48d2-9185-b38924b9b283",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9cd5a755-e90b-459d-be7a-d3eae8d9cb9d"
            }
          }
        ]
      },
      {
        "id": "92f09a15-58ff-496e-ab80-88d51636caa8",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "71b9b2ff-39fa-4996-a1e5-dc619ceef0c9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0a146c75-40c2-469b-9ec4-d4ce8f08def9",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1d903ac6-6e1a-4130-a1a4-9a029a437283",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5e0c9fd-0fe1-49cd-a712-df40f8050fc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cd68a96-c92d-40d1-a85f-9dee3e00ed02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd6545de-538c-47a8-a627-0f35b5985a8d",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "984cb187-5350-4286-832a-4af7ec40be1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50a88a3f-c2d6-43a5-98e4-70513f2e9522"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19743226-a322-4139-8681-c50bf7531c1a",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0c5d6ef-d619-44c2-b685-831f1fb7977d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "584cfc56-d7a8-4839-adbb-ae067ad82b38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cd2688d-44ce-4a06-a10b-41a17ed7bda9",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbdd01ea-f540-4180-ace2-3023d5165eb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "207155ca-d10b-4419-8028-00229136d0eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcb63ee1-3b49-492e-9c6f-6da599406872",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5adbbc38-4624-4d23-b705-094c16374a0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b283f1c-7622-4f04-adec-551f26d5e793"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23473aee-23d2-48c6-87d3-e016f8ecd493",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89ae7c7b-ed6b-4ccd-9de5-ee320f7068f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "366d5f04-396c-4c4b-bc6e-fa0f09a8ebe1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c80632d7-ae6f-4d34-b9a1-3fa9befe33ff",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2c32719-4d83-41ea-9d01-004ff30b91a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "539a884b-c746-46ad-a8b0-3a7138884648"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c04500a4-5721-4104-a41b-86c35bc1fe25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e4f1267-05e0-4eed-a985-ed2534e332cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f2743f5-8ef3-4605-8e38-ccc5f4bd2887",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c7638a9-1ff2-4654-a3f1-e61ee684cbb4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "532fb898-3b21-4adf-a41f-099541b9ed71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aa81f71-cdf8-4d1d-a848-72a4ae4783ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5629c22-5c24-44a2-b319-5cebfcca41ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dad94c8-53c9-49b9-a8de-fd0b70217dfb",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44e800f0-3f53-4408-a6c8-8048bc6bf051",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f993fbe9-77b7-404d-9bbe-be5d7a203276"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62b9e988-5343-4eda-b20e-f4d25f31fb20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac35ca97-2397-45b7-b893-4482e598297f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20be7ea2-c092-495e-8b6d-75a60c5d58a9",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b333a3e-4d4e-44b4-a28b-be6fc7768c79",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59c7739d-4392-48d3-bd0c-a0b5788bb6bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abe7d0c4-e298-4302-93fb-79f7abe33930",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e8c5dd0-744d-4826-9574-2c433673c813"
                        }
                      }
                    ]
                  },
                  {
                    "id": "572ba241-2d46-4f98-ad56-58a092ea4b74",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aae0732c-5f8c-4331-b8db-b37fcaec0e3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52708c89-ff2f-47a6-84ef-55effc02fe9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abee22d4-ae91-4b79-ace6-16fc738129e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d33b099-a88b-4675-8660-c2a2dcea1d3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c162109-0806-432d-aed8-4dd18973d56e",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f4e7494-ffd6-454c-ade9-8c9ad6b3c03d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a42406a-59dd-4eb9-8da5-dc8334f40e4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1781726c-40ce-4880-a3f4-f37ee31398e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bf6a2d5-0064-4f25-b747-0badc4293459"
                        }
                      }
                    ]
                  },
                  {
                    "id": "854f151f-05bf-4993-8eef-53f7d1fcb0ac",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2428e4f-3143-4262-8266-3f8c7596de83",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "671c2570-73d8-4b8c-bf54-0eae18a558d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edc2ccba-c539-436b-8093-1c92696ff99c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90298e2f-83d7-461f-bd7d-f7591cc2d856"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c91c139-6555-469a-b8d4-64d681d4b775",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca2568b5-caec-4f61-98e5-c806e245d1c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1ccdf9b-f9e9-4f31-b160-64e95d49cf45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4d33e7a-0eac-4cd9-a9a3-d030d7fafd1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66dfa858-ea53-4e11-b612-65f964a69ae0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0ff70fa-4e57-4d8b-9379-3e99dcc57c9a",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbf06a62-d2e0-42eb-8f84-3df393ca97b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38bb92e5-7a7d-4b75-9656-218040fb3fdc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57408dc0-3557-4269-a08f-c8a71beaa86f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7393e40d-7766-4a7b-b329-d286529eeb9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65e4890c-9ae0-41e4-88a9-379aea2c4892",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a870f8ae-86e0-4c2f-8fcf-3dd74ccaba0b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9da511d1-b03e-42f1-897a-3a572609a359"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c57b5a2-d834-4f96-90bb-bd51b92efa08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "272d82ca-f51c-4115-afd6-b594269c26b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9f50ab8-06e1-4653-82be-d3720c6b04e4",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5a97059-214e-4c0f-8e8b-0306864b1bae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e36deb2-7817-493a-a8a9-dbdcf39e84c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ac4ce54-edd4-438d-97e8-374b05742a73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75d6c405-61c8-4037-8014-e6652345acb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d7ba43d-54d2-49b5-a5e4-ce6079f76487",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91fec635-11b8-4cfb-ac05-1893cb57ef7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9039c5a2-d5d6-4543-affc-06b9882743a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "caa5f339-acda-4a00-93b6-fc1b309fe18e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f21c7683-3603-4f3b-9f54-d810cf398309"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14029629-d6f2-465a-97c0-812874a0a634",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d88263d7-fd51-41c6-a638-67a7028adde4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c98b6889-5774-476e-88ed-4e125fac1006"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95ebf3c3-53b8-47a8-a2c2-c69778622760",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ed8a27f-24d6-461d-b71e-cf950f7089d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6f61950-96e2-480b-b736-e4ff93f0a8ae",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7404e91-891b-4bf2-8e50-401a093418ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22f65091-e44f-44f6-b777-7a44b034c8ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d8fb59c-fc85-4f68-beb4-57ad836ead3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1804793b-6f53-4226-b197-696a36f5795c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd598949-c8eb-4c76-804c-fdb19f66500b",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f196a73-3b3f-495f-b60b-6bdf134666d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb0d2490-3630-4825-9046-dca67def3d0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c00b5550-d728-4493-b344-636bb4897013",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9536942b-17c0-4821-81ce-a0f454da07f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73381fb4-0225-4de7-b1f2-ab69d7ef2709",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c095b46d-17c9-48de-9bab-a5efef5c3c9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83d28903-3d8a-4b67-982c-10234278ffc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b672da9-a94f-45ee-8402-103a61b91542",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6db36ff0-5dc8-416a-ba0f-3e95ce0cbd8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6986191d-83ca-40ef-a5de-56ecebc8a9d3",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a58be55-ee46-4c44-a147-ab870ea53931",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16387266-d891-465a-910f-6017aee36918"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f548427-89eb-4c04-b004-fbd75d476fa4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1e8d028-b5a2-4f8b-9495-937d287bf76e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d5983f1-eeaf-403b-aff6-627e92c37e70",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fc36b06-974c-49fb-9d26-26a366aa3583",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4fd3377-d5a3-4152-b6e1-142becb51b9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c92b7945-4ab6-4844-8d88-85892c10fd94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc6d7c18-6dd5-4d43-8e57-e5537ef75d64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fa90d65-5574-4531-bdf2-16e741829274",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fc4e764-9b4e-4b42-be09-9c7bc764d6aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20e6d93d-b607-4866-91e5-4969ce4bbb8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f5a2307-bbff-4e98-b75b-334c0a8ab1d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35a5f03f-1497-4c42-8a84-13f491761d1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8d51c4b-c75f-4571-ac58-2ce1c78590da",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9068b564-11f7-4a6e-b44c-93025ab70df0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5039ba5-d395-4f09-a8df-52dd6204d7c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "105dfe1c-9b52-4b77-875c-d7ddcfb85fe4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1910c840-f132-4ce0-8ca0-eea28f2d212d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "410e9ccb-c5f4-4693-a388-d919f7ea3ac1",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ea16406-47e6-4e0a-b7f5-5eabd37433ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "716fce5d-4b5c-4ab5-b951-84112e2a508e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1594fcb5-14e1-4e17-a38b-b54a1e50f647",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e900724e-465b-4f34-9e5d-1e04f9a54bd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ff03139-44a7-4b9a-a35e-bdc2837076b7",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b00cb7a2-4fd5-4999-8e65-97c180c2f689",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7e230f9-313e-4925-b888-1372e35842d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69551545-26d9-4b8c-90de-8af8d9838245",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce5ff447-74dc-4f6e-b6df-0ba127548a96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b21807ff-5657-42a7-9c36-8c9e110bbf89",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b8d0b9f-3982-4dd1-b3a8-22024605e36a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6dc135ba-6dd2-4e93-b04b-4d6ad08914f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bce4b03-04f1-4b2f-8e79-f93084dd2915",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b0e4061-131d-4129-96fe-5ca772684c05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e5db7fe-5af8-4fd6-84ea-9882d6b9cc6d",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63c3fcfb-e475-4ab1-ba77-59d38e91e86a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "666f2b40-2d1c-40f7-b342-440ddb403d23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b90bed98-d82f-4dad-b92a-aac9c2e6b244",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b81328ab-f2de-426a-ab60-98d14e568711"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c11060c8-22fe-4f9a-a456-cf9bb19bca7e",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9cd4cdd-fe39-4bf1-a77c-656814b64bbc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e6461df-c92a-4b0e-9a27-90783d022947"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9269931-873c-4ef9-bb55-e6b21deb6d94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2aadb743-8c7b-4708-b331-104f39f8e6e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9951d23d-9c06-4aef-9365-018205b7515b",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f374b41-16f8-402f-91e4-597a5ef6b8df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "139d5861-eab8-4e99-bf76-ab855dba3a74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c5eb889-5237-429e-b408-e712786fd05c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd31dbfd-8a98-4d88-a166-1872cbf763d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a44fba33-7ef2-488d-af01-7d78e5cd69d8",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39f38f84-b323-46b4-a54a-bf384c57b9ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01016ea9-0c83-46ff-b69b-5b26ff4a7c87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab48e241-2897-429b-9149-7b4367c81114",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7536fe7-148f-454a-96ad-667999b98a60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "818d093a-db42-45ca-bb4c-e608fe145f5f",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "653b5f0c-a37f-431e-b1d3-7e9ec169f0e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4198ed7-1910-451c-a9ed-5cdaa9d0311a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf67cb51-8e85-441d-88be-4694847c0266",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eebf0d8b-cc82-407e-8a8a-046d7b7ed6be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6007738-81ad-442d-a74b-4dec01e99a35",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04ad8025-3327-461e-8800-bbd2d3ee7017",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d650bc9-b6a9-44a6-a0ac-813d08def537"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8e1d351-cf91-42d1-99ec-c2dee5482967",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f80c3833-4fb1-4464-aad8-6646419494bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc390517-b052-4d55-ba49-f1dc54e29e4a",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da18c607-ad08-492b-9367-771b1f6d7e08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ba08f88-5aff-41ce-829a-b231d76187ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27ad54ff-cbc3-4f1c-b001-87c2e64996a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e80182a-b0b3-4aee-b8e9-e0bdccbe5320"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb1dc2dc-3b79-4fab-a1f8-3839439004bb",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fe3f2bf-889a-4888-907b-faae37c04ec9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3962e2f-2cf8-4016-b3ef-991fbbb6fd8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f9d1ed9-fd91-4f4f-b845-dc858f1e4f81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fc7d67b-dc05-43c6-abee-7a71864c92da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2917eda8-53e8-4505-9a3e-79e99112ce99",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b77c83fb-e67a-4753-9ef2-64166b8abd02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77c7b69c-e762-48ad-93bb-5ab74595bbef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4ac1dae-2e74-4c5a-9ff8-632ac394d294",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4d820bd-aa39-4bca-a250-1554686ee7a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ed35046-eea7-49c2-afa0-87cb593f2cbb",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f16e66dc-41e9-4319-a34e-2220c6b1a64f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be2951fa-0755-49a5-9e65-d854fabf826d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c4b2d59-8fe9-4852-a2da-5e4bebb7485e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "020236f2-c80d-4242-981d-3c6d70c14f18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f299f839-8468-41e3-bc73-8c7b1ab1e3f9",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40a0b284-1fbd-48c0-b8b5-ee4cbd346162",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f9e35c9-f3d4-499a-929e-c2b2a0a159ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd034be2-4341-40ef-abeb-b8c606586f32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2aa25f78-fe55-4246-9cab-c497f4c19cfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57c8088e-13c4-489d-b838-7ecf1bb1038a",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9b4721b-72fc-41af-8291-20488c633f8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3976d98-295d-4f9d-80f2-b477bb98e29a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa40feab-7bff-431b-8d14-5452599bd38f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d072c4a-1b7a-475c-b641-74fc9833b2b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74862f05-af67-4dc2-b185-ebd9344f8dc2",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85206f09-7824-46fe-a741-e7a901dc7adb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "664a2dec-526b-4adf-8810-78f7b3514a20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cce99535-e686-4557-836f-9fa9331bb8db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "076374ed-5dc7-4a5b-b9b6-0a7baaea87ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7050b0fb-0f49-492e-881e-c5e3eb1ec8d5",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd87b96d-568d-454f-b76e-22a772b0ef4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fb2cb9c-2dd4-4b08-9ca0-2eb80f716e4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "206861c3-751b-4d7f-842b-14f92d876d18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "558c7211-15f2-4071-9445-753e46d31872"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55bd1312-1362-4f3f-92f6-324eefe0da75",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b42ddc20-a69c-4d83-8627-bcb34e9b1541",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e7635c8-44c8-4b3d-81ab-b982b7f08d81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "459da903-ca32-438a-ac14-4b28d0ace3aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bef60f37-8c58-4b99-b1e7-54acea8bff49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff932e12-51fb-4153-a299-5f218d915e22",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90a688c1-a2b9-4543-9e68-8157be9f592d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4aa283fe-a5b7-467b-b7c4-5010d123eaa5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00ef27ea-cc39-4827-876e-e37a6f226401",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba6c5e4d-1cc4-4749-97c4-8385e278c8cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0a0026f-f514-4083-b3a6-6d806f47876f",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02c1ae7e-06f0-48a9-a049-f271940151a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07e78226-c941-4060-91a1-376f6b740329"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9428c81-c75c-41c2-b130-52a20185feac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "451b149b-1752-416f-a67d-5a3dd80f014d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e24380c-4b11-4184-8f85-641a12bdbd8e",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdcdd5af-0039-4a7d-af70-3b0077234bcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad9bd1ad-790e-455a-b869-8e88014cbe2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e56303c1-3d13-4c65-8449-37760583f08c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1eaf5f0-cf59-43c1-bf05-2a11a4e39baf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4733b708-23ce-4011-9638-5425a9cbad3d",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc05f751-d7d0-44ec-833e-79257683f30d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "578f1c55-2354-4e9e-b3c7-8bcffc31146a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd48c015-8f0c-49ad-b5be-09cd3d8f7a9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "deab58ea-3434-4d46-bb03-8cdcf5ab6ffc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bdb241a-a7df-44ea-9950-5e6a56ff5517",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa9e6825-c8d2-4aef-9978-59b55efc7de1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a783754a-2f47-4ecb-8f41-09e4c208774f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5635104f-29fa-4df4-b6a5-f3aa4f66c1bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86ecbc14-5141-443b-bc22-94b713c16a52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "263b20bd-fe49-4e7e-a071-eaf8f39d41c7",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22018516-b157-42b6-ba01-21b53c4db58d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3407f62e-3842-4f2a-8c5a-f8e59b685b68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebb5aa88-2501-4074-a1da-84c2350e4b2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc6c8b14-cb60-4d05-9c4b-99fe71916fe4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fdc1f1f-6b1c-407d-a41b-6bdc8be0ae19",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50958df7-c438-4a2d-a7f6-150d7ac71375",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c874ca2-f9ab-4a61-a531-333fe0c318fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88163213-24b6-409f-8dd7-d512f858720c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5e98505-0062-44eb-a8c4-9227776a784f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6da4fe3e-8468-4120-9715-53d926eae060",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fee7152c-010e-423e-96f1-6e56f34cb803",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5441dc0e-2ea2-4147-98c7-105a4108cc78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "613e281c-c89c-49ee-b29b-823d64999150",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ddf9f00-7bdf-40cc-b4f6-3e43de4ebc28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36e7f47c-2b99-422d-88ea-56ea87eb6d8d",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d429d957-9129-4782-88b7-150701454d18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4959cb22-995d-4d16-b043-d1550508eff7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f05e1c4b-4664-47d8-a1a5-6c362ae96a55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2452ef4b-ddfe-4fa3-9a22-c292298ad2c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "041229a0-89db-4d9d-8c31-c3e2f006cf37",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dbe9f56-04a7-484a-aab1-0677a90d4394",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2910028-b564-4ac1-a8bf-848ba3427327"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f978c4f-d226-45f3-9aea-795a63fee923",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47f89168-ae6c-4029-a5e1-744b915da62d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08669418-d15a-403a-974e-f56a038665f2",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eaded4a-f456-4cad-a2ef-1bbfdc0c3279",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a828bb99-83cb-45b2-a761-9887a021aaba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d32ac16a-c67c-444c-a7ca-63ced32ae90b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "009e7547-05fa-461d-8402-2d1f5a7c3049"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc22da56-fbfa-42bc-99e1-bbff237645e8",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "376d99af-a3e9-4e9e-b7a2-4170bb2580dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24fc7cd3-6c25-4493-a681-ce8e8fade896"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b86c0ac-be9f-4701-aa26-2d6876e22adf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a944136-375c-40f1-9c1c-319723046f63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31a03f3e-eac9-41da-b5f9-bb693e74afe3",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bdc32e1-aa41-421e-a8cd-05da2945ee3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "496cfb48-8a56-4217-8922-a446bd517f3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "795896a2-cdf1-4048-bc2e-f2f849b24b5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6b08a50-743b-437e-ad06-001cb9bc73cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a491dd3a-68a9-4cbe-a44b-2f7c806a5a01",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef7ecdd4-3df6-4b65-b09a-ee716567da0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49c92fa9-0770-40cf-9e37-5eb40de82348"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dca6d8e7-237b-4711-bf6b-0f7a4f50d6e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5327ff1f-a08f-4512-a278-236a847d1fb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf4ff5bd-7afd-4bdb-9161-2d9adbf91a47",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "201bbef8-5d11-484c-82db-69b9c72aaf86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f63da712-4d51-4d64-9205-58f03d100347"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0b709a1-8676-481b-8fd0-5a3271d93f9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4491d536-fb29-4bff-b6ef-95ee936e55e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67b23dd0-3acc-492b-96ed-a60d9d8ae3cf",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d932e27-cb95-45fe-ac31-9d43f7b4016b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5c7c25e-ee89-4f98-b223-735101a9abb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38caaa24-375f-4359-ade4-e1669ff1e7e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45d2cf36-bcbc-4aee-97f5-352a17d0dc88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e89c4675-6443-498e-9fb9-63f320463d37",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9697e789-0f31-48d6-85cf-802a95d75029",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1bab142-d2ec-484f-874a-1f305a267328"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f67707d9-0dcb-4f24-9932-0c09b71be93c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b65c458-f08f-497f-8230-7f01a151b998"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d0b6244-285d-4b25-a887-1c0d67ef9219",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a80f331-400a-420d-9a23-a009c52fdac9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19e4407f-59d0-4b18-a9e9-d0f8e7ad3faa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b00a4d6-351b-4497-9a4a-ea9daa98039a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de28cb85-db65-475a-8db5-b9989f4e2b8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "742a2175-6be8-4688-a591-b31ef62f552e",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fd27439-5a89-4719-8bb9-94e795fbce35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4a0996c-8788-4640-81dc-c90b4acb8801"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "225eb2b4-1cec-46ab-bb2c-96d1f29d2519",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d960dbf2-9f02-47af-b07d-d18ed6f06d31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd504c0d-8cd0-4aa5-b203-8ecdad6081dd",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0be72a40-f4b3-4d99-9e72-27c36092abad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bfee80df-81d9-40f7-897b-df4e6359daa9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96ece7ee-dfaf-4f58-a5da-6f1d85a409c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "212aaeef-f066-42d6-8fcf-591e24ac7613"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c0caa12-9104-4a3d-9c8a-4fad639c51a1",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e18acb5-8695-4457-a5e8-3a3bdcbda097",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f127245-8433-4ed7-9c0c-8a7edff37b80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0654e22e-f61c-4d7f-8364-0c63365b0197",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bcddb50-0d54-48c9-8639-06df71c34e16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99d53960-b0eb-42f9-a0a3-349aa4a70d02",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cd8985b-6fa1-4d20-a3c4-a91e541b6c23",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e18854e-1c54-4cc5-b8b9-aca1af82d6fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "115dc9c4-b877-42a6-9173-b6878f788d92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e819afdd-8b68-47ea-9e03-dbeb7349d8d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ad887be-7813-44df-a4cc-50ab5376bcc3",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f2a2a77-2862-4871-809d-29f5e801daef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ec05c62-298e-4152-918e-876e3368a394"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71c50e8c-1e12-4102-a8f5-9a12c8e253b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5625c82b-d8b4-4bcd-a7a4-d0c7f13fe25f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "408de65b-dbdf-484b-a502-90d115475cf6",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb83f29b-c586-42ad-a962-9b243e41ec37",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "804cd0b5-a241-4ab7-a86e-13fbebf98f92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3419fcf-9e41-4420-b8f0-53b9a0873873",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb9893d8-c152-4ecb-ae85-4d70d2c9a098"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e22570c-6534-4a21-83d5-7ebfd79b9180",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "266e5527-5214-4dba-8d29-43cfc685a554",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9476e496-664b-4be1-8f50-f901015e6146"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c4c3534-6de1-4c86-9d33-7154a8c93ba0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6bec894-db61-4cfb-a8a3-c7c3452a5ef7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b581e02-3aa2-4c20-94c5-e2fb310c3d0b",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36fe2b13-1360-4433-8ae0-eb09c2ae712c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a61a26c-9d17-4cdc-ad82-9508b8ff95e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d821aa18-4515-4f66-b19b-17bbce7d387a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0afa841e-c548-4819-9ea8-54229057925c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41abe724-2c49-42c3-bf6b-9fea912bb57d",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82446cbf-8c71-4e52-acca-780b57f1332f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a28062e7-3c7e-4582-a896-59b16092a2c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de633647-c577-4008-a31e-7623e389c0c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "502e511c-2ae3-4439-9e86-1e6ffd0e77e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e082eaeb-16f0-493f-b72d-544188a7dc08",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58554128-31d9-4c54-bdcd-3eb6629b6579",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8eec06fb-2c5c-40a8-94b6-a4fd16eddba3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44711072-e4d9-4b47-8e16-86f50e4c7458",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcf0652d-745e-4af3-aa2c-98443dcab684"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0a8875b-7452-4b97-8995-9625a24f986f",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a89d4097-7082-4f86-8bed-68c98292d9c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c8011a3-495f-41a5-b5dc-3391addd5033"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2be2ddb5-a169-4916-a479-a8f8534668f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6f3c0d4-0adc-431e-8e0b-f8d1f14287e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecaae812-efd5-47e2-b181-b1e362a5be1f",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "599e6d86-7b06-4233-83b4-eedfc31d2b5c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3cda8bc2-1328-4793-ba88-9c313c98f3a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69693ed2-464e-4171-8e29-3ea9be2b1047",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e316f2ca-719e-4c93-b5d1-ba5a58872f4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "000ebe3d-883f-4019-95a2-2ffcc2cb198e",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2ebfcc8-eed8-426c-8e91-3ce23462ee96",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2d4eb1b-046c-4485-acd4-6d374b334acb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "586890b8-ff05-41ad-ae05-6da776911b6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea83bb91-f420-4864-8bc3-107ac5a1eeb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97f5de8b-f00e-4dfa-986d-9e88f81d2ea7",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e379a202-e7ac-4962-a01d-52a2a34de41f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f63ee48-e402-43e8-81c6-66a929d9ba75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aed724f4-4c19-4582-9632-6cc84dbd9602",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c3e58e0-4cc9-42e3-b8e4-c6e7ecc9692b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e45447d4-a7e1-4c34-87ee-a0b88de7a324",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30c26425-1db8-4806-b0c6-baad0a366956",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d3eff1f-15e5-4df8-bf71-4605875c77a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "537832a8-6838-4b53-8f8c-5640fbc19c0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25078d2e-e902-468f-8a55-4a3a4656a7a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75c9c875-cff4-4b6a-aea2-cf63a6b3ddb5",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1080a64-fbeb-4538-be69-ee3334c0128a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d46993bd-7248-4565-b19f-2accb327cb70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77b03ff4-3260-4938-924f-caca8ce88578",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55f9a3fb-e136-4410-92e0-1e7aab2e0d5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e575f218-4fa4-4732-bd87-be0e12e631a2",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fb84ec2-71d5-475a-b8fd-55164d4aec80",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e381840-1d98-4160-92c8-d56e2fca896e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e83ed8be-54d6-4c93-82ae-a98fbf134dfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dc3b95b-3c8c-416c-81d9-ee8e9c07ef9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f396d9fa-666c-4859-9517-6dd59edd80f0",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc995f95-2bde-41a4-9e6b-93bf9b3c38a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9cbc0a6-bbee-4d60-afc5-92b57184124c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5034fef4-e7aa-4738-8867-337af5701822",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e93e947-cf17-4a21-b391-5a4cbad3d634"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61ba4f96-7a91-449d-8a6c-1b0c257d7747",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc635372-6985-40fe-a483-9870392af932",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56fd3819-00d4-40fc-81e7-6db58687d0d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62d1fb21-f72b-4bca-9541-96e6951662c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01d6837b-38b1-4184-a97e-29a3bdd14908"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dddccba-e890-4158-9450-0b64c584f8d2",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2a592af-2078-4646-877a-e75e538df660",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a172dd91-e570-42cf-b6c5-c2011cc34ba0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "036f2f9a-f666-49b4-bb63-777486de1043",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34002026-c4c9-458b-950e-493a418ad86b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f667c6a8-5a04-41c6-9faf-b2e024e9e7f1",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24181aa4-c749-4a1c-a511-c3531ecb21fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6232d83a-4b39-4278-9ca3-e849d6b3bf9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b72dba47-c027-4294-af6a-4fa17b0bad41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af264a78-d8dd-4e92-8402-e29863580f72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f47d0b6-c2bc-4335-bd2e-f3a7b21b13ec",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c223bc87-0ed4-456b-83cd-024a7da54f78",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42b38790-e722-42e5-9d39-354d714ea2ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "448f7aa4-7b36-4d96-a960-5e1af062eea7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdd2c89e-4fa7-4224-8b7c-1adb16f9f9b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "740bb245-6e59-4fa2-a19e-884ac0e239ab",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff4d451e-019e-4b0a-a447-695fa7d0d722",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f501dbfc-3115-48e7-855a-bdadcb31f00e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b73ac60-eed5-4b85-88b4-f69119105cdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76f585a7-6d0c-4df6-844d-577f06a3081b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4df22932-dac0-44b6-8cd5-d2c2640c4014",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c20d2c0e-3fd5-46f6-8931-75c5708a8796",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec6047b8-72f0-4224-a274-5c2223a1a929"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53f5894a-6914-46e1-b263-98f41af6cafe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e539de2-7ca0-4666-bcaf-949b51954901"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53af5a49-9458-4864-b6ee-fe583c198ee4",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9165e9e1-cee8-4cb7-b057-7ed8f04d68a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1db788b8-941b-4300-9ab3-ac401da542d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4fb7d6b-5ec0-4887-a27d-7b3e56fbe8cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfacdda1-45ec-48bf-b614-fc5693e31ee5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70bfd7c6-ce01-4a95-abab-4115275315bc",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c537e702-5442-4df6-bb5f-ce3c0153ed13",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea5ad61b-48d8-4d34-b5aa-d45bd280b5d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05557bd5-048d-403c-ab55-69aa9b63561f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c3f1b95-f7d3-4fc1-874b-606623afaadd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfeeb2ce-c95e-45cc-95eb-643274e17dce",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74558891-0e03-4bea-be1a-08fcaec0e1e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4296ea48-6dc8-4da6-b233-8acf0ce6f995"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "666d9012-779c-4ac2-b482-dce4b49e8453",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "946353fe-cf91-4142-8a47-11fc32991285"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a255692d-e6cf-4c18-aa4a-c0dff18b5dbc",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b7a6063-c2cb-4a19-b654-2e76fbad7cc0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b4186fc-d5c5-48c4-ad11-521989a6d335"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f088493-746e-4b28-9f44-aca89cd66a6f",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "940e53cb-28c5-474b-be7f-e4ef0e6fa755"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa022b47-5c9a-40ec-97b2-1bd97648d1a7",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc99bc70-7400-4f6e-9eb5-f238c1866301",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e8eebcf-ddf2-4e72-834b-39dec1c42290"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df2104da-3885-47fb-856b-0418d6a4a40f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51200d2d-0a80-4c10-bef9-bbe2cfc99111"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54dfab93-d17d-49d6-9cde-ddc5a5666ff9",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15b3c534-e1ea-413c-b21e-765b8624048f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0a24c81-26ba-4a6e-918a-bf3508c89032"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c1fceb4-864b-4f3e-af1b-dc481b81c891",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f8089cb-522a-481b-abc0-cc403fd14553"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09cefb47-9bde-4fed-8ab1-88c899b07b9b",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "919c4adf-7396-4ed3-95dc-52163161359b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "647a1019-d5da-476b-a91a-336a6b44de21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d6d3f1a-e704-483f-a50c-77ed0a05929f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b9c9915-34e9-4bba-b378-d14c8538ab40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e31d36c-a7e6-4ff4-a0ea-19fd29caaa66",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3457e94b-01fc-4f5d-b856-a1eace9ef496",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cbc3090d-9d97-4afe-a1be-7c0ff31a58fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6fe38af-ce71-433f-a80b-2f5d08d33f2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cd49e08-4a04-4fc0-be1b-832c83a7e86f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2688037-36dc-4036-bb7e-97f19fa7c5f9",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b61fd20d-96e4-4e96-991c-a1575dddd0a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b86afc6f-fd6f-49d9-82d4-3104104f5ae8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0809db38-1d35-4b3c-a58d-72afe40fa0a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66a78e94-2629-4d58-8ffa-70df06758ae9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "563c929c-6c91-4756-a2cd-51a970be9387",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c64a62e-ad6b-4da0-933d-bead8fe38364",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f0a8a7b-2755-49d3-b2fc-947ba4fb9846"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ececaa47-16c9-43ae-8da2-363e07935e31",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95998b36-1bba-450a-a3cb-9845e9b2b934"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cf2a5eb-2627-42d7-b1bf-bd74ba01c632",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc2e0e29-0cce-4e38-93af-978b2bf9f922",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f2abfab-ec93-4d86-b94f-9482de0e36fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d99a27f2-2bb3-42c5-b056-a4cb52f5348f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26ed792b-66c7-46aa-8ecb-21116413daa1"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "82a2eb0f-0a8d-4964-afe3-1a42d3b53e4c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "88a7b287-ffbf-48fd-859d-8cb67fc208ec"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f0521330-2b64-4bcb-8cd2-867e7c80f3fd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4e02ca68-3f44-4cc6-8823-1e12620a52c3"
                    }
                  }
                ]
              },
              {
                "id": "4c87d8b4-bae2-475b-966d-d9c045979756",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "04e04659-824b-4ec1-ad29-ac4d81cb2a8e",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86b572f4-4bda-413a-b967-80fd8db043ca",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "daf7521b-831d-466d-8c1b-d8c0c087918b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ea5bcb2-0a4b-45fb-9225-f9f8c3de52ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1df84100-35bf-4b69-8c32-1012cee8f9cc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7816d1c3-0a38-484f-a8c2-fbd2f42a2146",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bdd0a8a6-1beb-4977-aadf-69863408ca19"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f19c3426-c44a-4bd0-a53e-9deb2092a297",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cf20d904-d0dc-40d3-a4f3-cb3408b876f0"
                    }
                  }
                ]
              },
              {
                "id": "80298eb7-8434-4b38-96e1-e940ef4c9e7f",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "6019f286-8bcf-4558-bcd7-d0f7b3f648a5",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf83726f-442a-4f80-b96e-579e2be2d279",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "0bd5a4c0-1b8e-4267-bf88-98f7b296dd03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60f0bc2b-c242-40fd-b09f-8c1123972650",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbeb2c4a-2587-418b-a2e4-435c9bd6ebf0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "3ee800fe-04b1-4bbb-89db-4753e0067a0e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "38778eb0-7bb7-44a6-b552-6f55b0431772",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e06f1290-0322-464d-8ea0-e4b731688c15",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "91f1669e-f10a-420e-a434-7515651fbe84"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1993fa92-b88b-4e05-bbe5-f48bf3552df3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b4088251-cdd3-4852-9b69-3214ea9025a0"
                    }
                  }
                ]
              },
              {
                "id": "b52fc1e7-4ce2-479d-88e3-d03d90fa0274",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1ee59f10-5705-4944-af49-77eb95f08239",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b922e322-5694-48f8-b3e2-7de2d611c13b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d473267b-772a-4b3a-90a7-ac7e62c7d34f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b72f2381-dd96-4afd-807c-9fd1e332172f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "99cd4f72-22de-44cf-a9eb-b4d0c0d18584",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "f778f7c0-ef5a-4ac0-afcb-6e1f8e0ab9c9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "55d79839-31aa-4bf2-8dcf-b493bfa3907f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "99beeb56-40cc-48b5-94c0-120855674882"
            }
          }
        ]
      },
      {
        "id": "e76ede19-1579-4053-b6a1-279d29ce5201",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "a60fae4f-9940-46af-a5e0-0f2253d2aee9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "287430f2-182f-42d6-a5c1-a3145c42d022",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e94e238a-930f-4574-af29-084a5772bc42",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2dcf81b-539d-4425-9da5-e28199cf1d2a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "56421983-31da-4d04-9d77-245b5775064e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fb6d94b-f8f2-443a-bd65-66cbdcafae78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "500c86b1-6a16-41c3-90de-e885f930670d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5844fd52-dfce-42f5-ad2c-4dbc5d9c838f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c83efc8b-c231-4023-b7a3-3caaf7c5e529"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ce789955-de82-4c83-bd99-78f283d379a7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "595ba9b2-07d1-49f7-89d9-86dae34117d2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8ac48be5-a67e-4620-b812-5a44f4d14882",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "08602049-340d-4132-9cde-e1af06dd61e2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6bb055f3-58d2-4cd2-a255-ba56df92568a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "42c951e5-8365-4741-9bce-aba654213619"
            }
          }
        ]
      },
      {
        "id": "30bba3cd-fc02-4a7a-83d6-3f3efd752e4a",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "ac5a68fd-7421-4ef2-aec1-18bb415d3dfa",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a60b10d5-943c-42c8-acde-280b7131d3e5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a7ff59a0-5173-4479-8370-a1d6be0c87e4",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "929935ea-072c-48da-9b72-f33edf363fa6",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "77ca9ef4-96fc-4d8c-ae0e-8c8bd5404f62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c373b70c-a259-4428-8328-d36dde9cca66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0c334268-3c89-41b9-a304-1e9b271cb377"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5e813049-e436-44bb-9d1c-d26b7550935b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "feeddd48-9621-4903-9669-7c7e276400dd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ea8beca4-84ce-4f5f-937c-2c8fd04cb64d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0a8a8d2b-2834-453d-a9d0-f0b48445b388"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0b03ef1c-21f3-4b83-8a6d-5ccba2a04f91",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8c3d3225-9ca9-4a77-a2cb-8d3f935e3f02"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "05646196-8cd5-4722-953c-804d1ef89d2e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2280c01a-38ae-49c6-981b-5e4695cefe3a"
            }
          }
        ]
      },
      {
        "id": "adae4e90-51a5-47d0-852d-e7df7229ddc3",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "c8be4e66-e55d-4c97-a920-67eb1d03ffaa",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b82cbf8b-e8e8-4301-80c8-7e5f59d7c5c8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "693e8732-c8ed-485f-bb50-8b90663c7765",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abca5bba-4ae7-464e-bab4-0d2dfb9f067a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "52126b88-1e45-4c8e-8024-5c166777b4ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a696cf3-fb6a-4ad5-9f54-2b394c02a89b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "70eb10ff-3d27-49e5-b649-291823dc26ae"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f88920f9-8bd2-4f16-80c2-9a08a89e62aa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8974b377-7157-43ff-9a60-fa86637d09e4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "382137e5-fe7f-4114-8cf5-35a6e5efa53a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "efe979ec-7b29-4141-ba5a-30c31338674b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "11da260f-ecbc-4de5-ace1-4c9901d331e9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "73c57d1e-9b89-4f99-b3b4-58649b239493"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "20f71c6b-a44c-4446-be69-45c4acddacc4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d563e772-deaa-4394-ae71-1411f3a67d5d"
            }
          }
        ]
      },
      {
        "id": "b2a10620-eb01-4eeb-a2a9-36ed627dc679",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "485f8d91-142f-4992-961b-8c47127563fa",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e08ebcab-bc17-4b3d-88b7-3ec3fcacfebe",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "35fac52d-14dc-41ad-b17f-69d6b07204d6",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4307dd46-14f6-4421-bd40-6673e16d3929",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b22883ec-3160-4d5c-ac1a-1c88165d4426",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 2
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 360.1056338028169,
      "responseMin": 6,
      "responseMax": 7706,
      "responseSd": 943.9330157046484,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1694133142829,
      "completed": 1694133259097
    },
    "executions": [
      {
        "id": "ad3fef9e-ee60-4893-9ab7-2feae9c275da",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "21d5433f-93d0-4f91-ba9b-0ca816b3cb49",
          "httpRequestId": "99b7a9e7-20d3-4ca2-93d5-4e6f841fb052"
        },
        "item": {
          "id": "ad3fef9e-ee60-4893-9ab7-2feae9c275da",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "98e94442-071e-4cf4-b7e2-955d78c1c75b",
          "status": "OK",
          "code": 200,
          "responseTime": 59,
          "responseSize": 0
        }
      },
      {
        "id": "2f6ea6bb-8b41-44e8-a3a6-d34def28d810",
        "cursor": {
          "ref": "9a06a577-dded-47d9-ac5b-363a384d3773",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "1a1d3e20-ad05-4ece-ad9c-f2dc23a64f96"
        },
        "item": {
          "id": "2f6ea6bb-8b41-44e8-a3a6-d34def28d810",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "6d5faeb5-f49c-4bd1-82b3-076cff8c27e4",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "49d6ebf7-500c-43cf-b27e-41b71c209e15",
        "cursor": {
          "ref": "7ee3471d-370d-4f3f-8fed-cf47b3c64f44",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "df1390c6-5c2e-45ce-be8d-9dbfc45b754f"
        },
        "item": {
          "id": "49d6ebf7-500c-43cf-b27e-41b71c209e15",
          "name": "did_json"
        },
        "response": {
          "id": "ab8f0838-9f38-4c01-946c-89a4226d065a",
          "status": "OK",
          "code": 200,
          "responseTime": 1587,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71abe46b-4dfb-4e7a-bea6-f9484c36cc97",
        "cursor": {
          "ref": "4acbf4f0-4cf7-4bc2-aa3d-6fb683cea32e",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "44b0318a-2b78-4a9b-b8c6-1784f87b0576"
        },
        "item": {
          "id": "71abe46b-4dfb-4e7a-bea6-f9484c36cc97",
          "name": "did:invalid"
        },
        "response": {
          "id": "f86fbc3b-e6b1-499a-b62c-e9c3b32897e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 365,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71abe46b-4dfb-4e7a-bea6-f9484c36cc97",
        "cursor": {
          "ref": "4acbf4f0-4cf7-4bc2-aa3d-6fb683cea32e",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "44b0318a-2b78-4a9b-b8c6-1784f87b0576"
        },
        "item": {
          "id": "71abe46b-4dfb-4e7a-bea6-f9484c36cc97",
          "name": "did:invalid"
        },
        "response": {
          "id": "f86fbc3b-e6b1-499a-b62c-e9c3b32897e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 365,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b713c35a-ce8e-4b74-a620-789f3402a40c",
        "cursor": {
          "ref": "d9c69a9d-a66a-4653-a721-48ad540db15d",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "ba5b7b81-f9fd-40b0-bc2f-07c9f5e83453"
        },
        "item": {
          "id": "b713c35a-ce8e-4b74-a620-789f3402a40c",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "9f27a774-2e02-47cb-9ce9-aab17461d279",
          "status": "Not Found",
          "code": 404,
          "responseTime": 382,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c469b90-29a0-45b1-8d4f-331957513196",
        "cursor": {
          "ref": "e25a8c42-5942-4313-b2eb-762a014c16b6",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "e81af9c2-18eb-44e8-a9d4-b250e200c1e7"
        },
        "item": {
          "id": "4c469b90-29a0-45b1-8d4f-331957513196",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "833d9e0b-2d44-4405-be37-6a8f90ea0af4",
          "status": "Not Found",
          "code": 404,
          "responseTime": 283,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ed200d7-61b5-43e3-9091-4e566017d0a0",
        "cursor": {
          "ref": "21ab0ff4-405f-490b-9f55-11c8bdc72938",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "fe377445-b71d-4a9a-ab46-244d8b921eec"
        },
        "item": {
          "id": "0ed200d7-61b5-43e3-9091-4e566017d0a0",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "3c20c5b0-9205-4683-843d-46672b519711",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 79,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e094092-0b35-4930-8b9d-866ee2b81dd5",
        "cursor": {
          "ref": "9e02163b-8fca-4a77-bf22-d4211a9997b0",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "371b3171-54e9-4d8f-be94-db77d84c0771"
        },
        "item": {
          "id": "3e094092-0b35-4930-8b9d-866ee2b81dd5",
          "name": "identifiers"
        },
        "response": {
          "id": "ed050f1e-cd6c-4ddc-a863-5fc90d6a3e15",
          "status": "OK",
          "code": 200,
          "responseTime": 1327,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17d25b0e-8542-4129-850f-8f53e7b009a4",
        "cursor": {
          "ref": "50e7d78d-920b-4904-aedc-bc816b2d8c3e",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "012c2973-c83d-4c3d-afd3-a483c0d644fd"
        },
        "item": {
          "id": "17d25b0e-8542-4129-850f-8f53e7b009a4",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "07cacba9-30ae-406f-9616-9eb0efb495a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77018151-d395-40ff-a6cf-c61e78698e0d",
        "cursor": {
          "ref": "04dc0434-41d4-4fc3-8bab-6bfc69e26371",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "e1a4b712-9942-4dbd-a073-5ccad84cf819"
        },
        "item": {
          "id": "77018151-d395-40ff-a6cf-c61e78698e0d",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "a7eef70e-ee96-4ae7-b0ac-50c57b895fc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 377,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5850d8d5-c68d-499f-bf94-f161502b93b8",
        "cursor": {
          "ref": "c026b6e8-ae1b-4e33-95db-e4a86b1a3173",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "c46874ed-a879-441e-b234-b1b5219e1d5c"
        },
        "item": {
          "id": "5850d8d5-c68d-499f-bf94-f161502b93b8",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "f018c11f-a360-46a7-aa49-d54948203bab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faf3bdfb-f4e3-4fa6-9c33-1efc9020cebd",
        "cursor": {
          "ref": "38f1419a-024e-4b1c-84a0-e801f6808974",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "0f450a7c-e4e4-49cb-a628-579291751744"
        },
        "item": {
          "id": "faf3bdfb-f4e3-4fa6-9c33-1efc9020cebd",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "4979408a-5950-4e63-9bf0-c9f770ee9541",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fed9e20-96c1-4855-b2a2-0c6814042fd2",
        "cursor": {
          "ref": "62dd33da-3d25-4ff8-b330-1f5f92f0c1ef",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "5e064d6e-23c4-49f2-a621-bff831aadede"
        },
        "item": {
          "id": "1fed9e20-96c1-4855-b2a2-0c6814042fd2",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "3abd9fb4-c80e-4c60-933a-d62d333d07ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "474cdcc2-560e-4229-b462-7ad4a95093d2",
        "cursor": {
          "ref": "1d1f3fe6-e562-4fc3-87e1-d857ce4c6e87",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "5050c79b-0338-4190-830f-31bf5bddf70a"
        },
        "item": {
          "id": "474cdcc2-560e-4229-b462-7ad4a95093d2",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "24ddd658-e976-4bf5-9ca9-d846337cd4e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94061500-127e-4722-86ef-ed8fd0410b78",
        "cursor": {
          "ref": "46c2ed86-a728-492b-ae7d-edc1feead02a",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "a2a1df70-5b9d-468a-879b-c928ba342315"
        },
        "item": {
          "id": "94061500-127e-4722-86ef-ed8fd0410b78",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "a95d7ae0-7fe9-4be7-8959-8a75c78332ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51ba98d5-3f75-4843-ae13-3ec2d657a93d",
        "cursor": {
          "ref": "b4b8416a-0f67-45e4-ba15-25fa1c949260",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "8ead4093-5736-4808-a21f-db1117f7393f"
        },
        "item": {
          "id": "51ba98d5-3f75-4843-ae13-3ec2d657a93d",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "8d59797e-30c7-426a-b6a6-23956431a093",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a77eeef-3f94-4cef-af77-76558537f941",
        "cursor": {
          "ref": "a269a16b-1ba3-47e6-aa30-6d4f6cebeaf9",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "5f829b42-9fe5-49b3-8c7a-b8f48f23d4a4"
        },
        "item": {
          "id": "4a77eeef-3f94-4cef-af77-76558537f941",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "80844308-ca18-4bec-b51a-fa0baadc593b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "423f4b6a-0484-40d7-b4d6-c723f5e7e6ed",
        "cursor": {
          "ref": "a642a1ec-8961-4889-b156-2def7d1aa642",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "dc5cfe77-5207-40cd-bf42-da62445cd55b"
        },
        "item": {
          "id": "423f4b6a-0484-40d7-b4d6-c723f5e7e6ed",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "e3a4966a-e589-402a-82e7-962cf0f2c4a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79000ba5-ef41-4e8f-a486-90a5e87c8c40",
        "cursor": {
          "ref": "ca6be3a9-e867-4744-9d51-bd4a55852ad0",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "fb28ed11-9c56-467d-95dd-e6827ccf3813"
        },
        "item": {
          "id": "79000ba5-ef41-4e8f-a486-90a5e87c8c40",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "dbd6d4e9-e3ff-47d1-913f-385052a935ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f14c609-2c86-49fc-99c4-37581f6df325",
        "cursor": {
          "ref": "a0be7c14-4764-4fbd-8e67-54ed3af4a729",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "8ce6063c-5469-498d-8afd-7582fe760bd9"
        },
        "item": {
          "id": "5f14c609-2c86-49fc-99c4-37581f6df325",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "85011157-6f20-4c08-af0b-18c43ec0b333",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c98cc92-83a2-4b96-96eb-e0cadf569186",
        "cursor": {
          "ref": "3dfd403e-95e9-4dc5-a9cc-897ac830f980",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "421711f3-b350-4130-b2bf-9863e87b0bfc"
        },
        "item": {
          "id": "3c98cc92-83a2-4b96-96eb-e0cadf569186",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "17247ca0-baaf-400a-b622-50c03d7a09c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be3c4582-953b-46b0-a47f-fff2537cb4cc",
        "cursor": {
          "ref": "a36be944-532b-47ec-ba7c-a074ba316b24",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "77d7f429-b2b4-45c1-ad3c-d7df1e8f09fe"
        },
        "item": {
          "id": "be3c4582-953b-46b0-a47f-fff2537cb4cc",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "a8b97010-c46c-4172-b43b-2453f4d6d4be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18d3e265-7db2-4833-9cf9-cb6b8d858153",
        "cursor": {
          "ref": "bf956d3a-1290-4139-9d50-128c3271d5ea",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "5c4cb340-d281-4a6b-a6b7-8ff619c0c6d9"
        },
        "item": {
          "id": "18d3e265-7db2-4833-9cf9-cb6b8d858153",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "90c1ec37-2dca-400c-bc02-581ebe44310d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db3e0baa-9f31-441b-90b4-b3209fe7bb90",
        "cursor": {
          "ref": "91638fbb-d924-42ab-8a20-d8d6014af86b",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "f2a91d08-298f-4600-a0ef-b279c99f0626"
        },
        "item": {
          "id": "db3e0baa-9f31-441b-90b4-b3209fe7bb90",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "59b58d7a-bd0e-4e44-96bd-a0d0b116cb1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04e55318-c08d-43ba-bb33-1a30c6e2535c",
        "cursor": {
          "ref": "6526f64e-5004-4b4c-8c26-26a03cbd89ba",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "7133e8f4-aa73-460a-bf2e-df3dbf49373c"
        },
        "item": {
          "id": "04e55318-c08d-43ba-bb33-1a30c6e2535c",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "d10c9d75-1626-4d5d-833a-eada9d3cf890",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f94ae81b-c607-4fea-a468-17dc48db7e27",
        "cursor": {
          "ref": "75d58d44-bf55-450b-a22b-5880e30abe6e",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "4f00423c-950a-4109-ab91-82193bd35998"
        },
        "item": {
          "id": "f94ae81b-c607-4fea-a468-17dc48db7e27",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "6f5dab49-a33e-4d1a-99f7-ded64a302343",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e7304d6-9b4a-40e9-9307-2f988c22ecd8",
        "cursor": {
          "ref": "9e1d34c6-10ad-403c-95a6-4b81417d78fe",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "f1b106aa-381c-4d19-9534-60257ad2ccc1"
        },
        "item": {
          "id": "2e7304d6-9b4a-40e9-9307-2f988c22ecd8",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "fa37e2b5-b742-4420-a12c-d13b5775bdec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f8f1cd0-0291-4994-b844-7df98b3e200c",
        "cursor": {
          "ref": "06de2dff-2717-488e-9c6c-f6607a865406",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "0579430f-612c-4518-8389-a0439c1d9263"
        },
        "item": {
          "id": "9f8f1cd0-0291-4994-b844-7df98b3e200c",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "02990e44-725c-4858-b069-52fbf65852f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 327,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81101148-eb74-4839-a237-767f503dbe16",
        "cursor": {
          "ref": "32c1ef3d-1907-4ace-bc94-b2874dd87ed7",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "14955bfa-a6a2-4fb4-89b0-aeeb257a080d"
        },
        "item": {
          "id": "81101148-eb74-4839-a237-767f503dbe16",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "f919c195-988d-4318-925a-cf5dd0803e86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96b81ee4-9322-443b-bec8-4e9b925b0b47",
        "cursor": {
          "ref": "4ee370d2-160b-4b02-8806-69b4ba5686b1",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "bb9dd421-afb7-44cf-9408-2ad5aa8249ad"
        },
        "item": {
          "id": "96b81ee4-9322-443b-bec8-4e9b925b0b47",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "8ef186fc-b25b-4996-b195-8410ff5e1333",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73c661ce-7b0a-42f7-8f1f-d59c2562a57c",
        "cursor": {
          "ref": "1427a88b-ffb8-4045-b309-adcdead12081",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "f7d96e4c-f5aa-45f4-9a2d-e91b7bae21a6"
        },
        "item": {
          "id": "73c661ce-7b0a-42f7-8f1f-d59c2562a57c",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "4580f08f-6332-4f69-86a1-7df88013888e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6abe5607-897b-4b93-b176-ddedc6b90cf7",
        "cursor": {
          "ref": "b4082905-8223-4493-824a-e743f39d9096",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "3e85c652-406a-4de8-ade9-45eb992e113b"
        },
        "item": {
          "id": "6abe5607-897b-4b93-b176-ddedc6b90cf7",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "aac0a7e2-d049-461d-8801-61b0eeebc32c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1443e41e-303a-4ade-b0f1-b95b6c412dfc",
        "cursor": {
          "ref": "c8b7fef5-480c-48ee-831c-ee8100d12723",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "213cf466-423a-4f51-92fd-825ee959dda5"
        },
        "item": {
          "id": "1443e41e-303a-4ade-b0f1-b95b6c412dfc",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "3d473fa4-78e8-4aa9-bda9-a10138b95ffd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b7f3565-5e3a-497d-9950-c93a44d6cc0d",
        "cursor": {
          "ref": "4bdafa62-f2bb-4a37-89d7-251e26dc80c7",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "fa84ac44-27f2-43d8-9f8c-e15925782174"
        },
        "item": {
          "id": "1b7f3565-5e3a-497d-9950-c93a44d6cc0d",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "ce66f85c-fc52-41b2-a846-a32ae3066ff9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a76508a-a2c8-41c2-a5d4-f5213ca1d6ba",
        "cursor": {
          "ref": "29f02e4d-da7b-4776-a512-827134d71c69",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "cab95f89-7dc4-41e8-80b2-d850a9ecb448"
        },
        "item": {
          "id": "8a76508a-a2c8-41c2-a5d4-f5213ca1d6ba",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "a4a1d499-a978-45b4-851b-ef9acc18532a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "910c40fd-bdf2-44de-b91e-3dbf28accb47",
        "cursor": {
          "ref": "0504a829-4427-4af8-a640-b66d50fb639a",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "1c8a46cf-97ea-4f83-a3f7-1bba82ab1bd6"
        },
        "item": {
          "id": "910c40fd-bdf2-44de-b91e-3dbf28accb47",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "6c9a9e0b-0e67-4634-8f91-0fa85dee01e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72aa6df1-e66f-481b-9327-aca12508f4ae",
        "cursor": {
          "ref": "7a30dcbe-be2e-485e-900f-4d0eff58d887",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "bbdacf2e-6bea-4f95-b026-d0642f014b7a"
        },
        "item": {
          "id": "72aa6df1-e66f-481b-9327-aca12508f4ae",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "9b2235ea-2ce3-4806-83e5-a68e950a1bfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad01a502-8185-483c-ae7d-2fedbacf9f09",
        "cursor": {
          "ref": "d9a8bbff-0e37-44e6-aab6-a9a6f534175d",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "88419cb8-5ab3-4c99-b134-efe70cff5cff"
        },
        "item": {
          "id": "ad01a502-8185-483c-ae7d-2fedbacf9f09",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "9ab769c0-0f06-4d8c-9f93-a4c85d4d1cd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d20e557b-86a4-4909-8fcb-049b30ceddb9",
        "cursor": {
          "ref": "59212998-dc33-4d31-8ebe-5b575d6dfeff",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "612d5f52-9449-4a64-a8b5-58a88e076dfc"
        },
        "item": {
          "id": "d20e557b-86a4-4909-8fcb-049b30ceddb9",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "964fe39d-cb40-484c-b4b4-3414ddeadc28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16df5ee8-58f4-4065-8b93-a4b00964e34a",
        "cursor": {
          "ref": "76c38364-9d9c-4f4e-9b27-2622273a0f53",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "34d43faa-2e23-43a3-8303-1ac5750cd259"
        },
        "item": {
          "id": "16df5ee8-58f4-4065-8b93-a4b00964e34a",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "2b646906-3cb5-47e6-968b-b68d3f24c82b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91be703c-a552-4710-8224-0a2030dba35a",
        "cursor": {
          "ref": "477f6e7c-023d-444a-9e96-243a0f0856e6",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "8b4c84cd-8359-4610-9488-3b9442d5fe0e"
        },
        "item": {
          "id": "91be703c-a552-4710-8224-0a2030dba35a",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "4e1431c6-6786-4938-abaf-0be4d57e934b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84677bae-d351-4381-80bd-d496a9dfc1b1",
        "cursor": {
          "ref": "9e39a69d-d298-456a-be75-35957731d862",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "09681002-1564-493a-a222-77b9fcde7260"
        },
        "item": {
          "id": "84677bae-d351-4381-80bd-d496a9dfc1b1",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "3f55a253-1d32-4b41-8e2d-72d146050da1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "986f3562-ecc2-431f-81ca-38dca13a9ec7",
        "cursor": {
          "ref": "a767f11f-6bde-400e-b44a-93830f7afd3e",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "993692b1-cdfe-428d-9be4-c672179ca06f"
        },
        "item": {
          "id": "986f3562-ecc2-431f-81ca-38dca13a9ec7",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "4de8bd53-7268-4e97-95ab-74c212a8fb0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ef893c2-acc9-4f4d-8933-441d6409496d",
        "cursor": {
          "ref": "0530778a-4aec-4df7-a060-daf4c3cf301b",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "f6f858c2-721e-4315-a5d0-3a59d8cb9d77"
        },
        "item": {
          "id": "4ef893c2-acc9-4f4d-8933-441d6409496d",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "8fdd3fdf-6e14-49fa-9c46-80bae4fed4d1",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 610,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "621decb8-eedc-4fbe-91e2-fef6382479fd",
        "cursor": {
          "ref": "9e7fab1c-2289-4012-8d11-9ef4fe54cb3a",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "47a20fad-93d8-4168-8068-8a3109e97a99"
        },
        "item": {
          "id": "621decb8-eedc-4fbe-91e2-fef6382479fd",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "2f9f6039-5f6a-4e8a-ae54-0866c41fae69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa11c7a1-5693-448c-b86f-6224efb32e93",
        "cursor": {
          "ref": "cf81f2d9-0fca-41c6-8fc9-1950f433cbf1",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "f5b99b73-9987-48f6-8d15-e56287182b25"
        },
        "item": {
          "id": "aa11c7a1-5693-448c-b86f-6224efb32e93",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "055c194c-98d9-4e6b-9bb1-27e57d23c6cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91daf649-fee7-4e4d-bec6-2f56f12e2108",
        "cursor": {
          "ref": "b3cca236-68d0-4a98-8218-7909db76c0a0",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "58ea7e24-e050-4ee7-b31a-46d54c4cd084"
        },
        "item": {
          "id": "91daf649-fee7-4e4d-bec6-2f56f12e2108",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "3a5acb4d-6eb0-4af6-a156-faafee8db6ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f19c3b10-a6c4-4222-a60c-11b3cec65e08",
        "cursor": {
          "ref": "8aff49d4-4b44-4527-a04e-49bf0e420c0a",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "d224dba3-9bc9-493d-8c1e-48d14107fbd8"
        },
        "item": {
          "id": "f19c3b10-a6c4-4222-a60c-11b3cec65e08",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "fc5384d3-16a2-4daf-8b48-82156c5858b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "635451de-48d1-42f4-a75e-64328aecf4df",
        "cursor": {
          "ref": "50d21a73-0682-4732-8880-ecaf04ba0aec",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "5983ca3d-2bb5-4031-9de7-99ece4ef6a12"
        },
        "item": {
          "id": "635451de-48d1-42f4-a75e-64328aecf4df",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "04a48aaf-0474-4eb5-9857-dbc49586ed45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daf95e87-c3ac-4714-bcfc-fbb0cb6a632a",
        "cursor": {
          "ref": "fbc9e1c9-5f6b-4f6a-b054-20eb2e746773",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "1adce60b-0c38-4aa6-a7d2-18db131c4a07"
        },
        "item": {
          "id": "daf95e87-c3ac-4714-bcfc-fbb0cb6a632a",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "121f6e14-3f33-484f-8d9c-0ddba486351e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d31bf8a2-9bee-4021-9e4c-b397c1a7fc55",
        "cursor": {
          "ref": "9aedece7-d89c-45d9-9e6f-2685c3337e77",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "7a664334-820f-4889-97cf-f86e51ba612c"
        },
        "item": {
          "id": "d31bf8a2-9bee-4021-9e4c-b397c1a7fc55",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "b6eb5a98-ce96-4c46-8c26-7af28ae40f8e",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 741,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e06bc550-1b36-47cb-b447-04939f049346",
        "cursor": {
          "ref": "426578a3-87db-4281-93fe-69f614a01e70",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "a81b2747-4522-4405-8fb1-d6608481cf1c"
        },
        "item": {
          "id": "e06bc550-1b36-47cb-b447-04939f049346",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "b4cd1d61-7add-4340-8a0e-2bfa5d8861f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 311,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "167eaa9e-c09a-4d22-99bf-ea8675b32bab",
        "cursor": {
          "ref": "2a1d9fb3-6543-4e59-b6ed-cfda44fd1e90",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "211e093a-7fe8-43f1-8390-481f41c2c1c9"
        },
        "item": {
          "id": "167eaa9e-c09a-4d22-99bf-ea8675b32bab",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "71a225ee-3391-4714-b1ef-69c5d1d017ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4dd1c9c-4f14-4ba2-b5f3-860a3b7f213e",
        "cursor": {
          "ref": "246c5bda-133d-4d3c-aa22-49fd7a80f525",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "ba91e8ec-f426-419b-bb28-4386f85ce464"
        },
        "item": {
          "id": "b4dd1c9c-4f14-4ba2-b5f3-860a3b7f213e",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "dab060e9-c855-4872-a00a-142e5392d8fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 575
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffa6cfeb-f85a-4532-8790-04cee67d6a2d",
        "cursor": {
          "ref": "d561a4b2-58a0-40d4-9a80-3fceee1b178b",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "bb3bd10f-c229-4df8-a5f7-abc5c74b713e"
        },
        "item": {
          "id": "ffa6cfeb-f85a-4532-8790-04cee67d6a2d",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "17daefa2-ae28-4224-b029-d1dd1d8cf5f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 345,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf7f88ea-8c53-4ced-86e7-5969ba65da35",
        "cursor": {
          "ref": "f2ab5413-c46a-4804-903b-a90e41f546a6",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "ed83c482-405f-4c29-97bb-3e3bc0c4cbcd"
        },
        "item": {
          "id": "cf7f88ea-8c53-4ced-86e7-5969ba65da35",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "805539ab-40e9-4bee-8e87-edffdd61b35a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59b52268-ec08-4914-814f-498a378649c6",
        "cursor": {
          "ref": "78d12b56-5c8c-4406-bd57-90884316f0c4",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "a1a72a45-c47e-46de-ba65-84d43635ad0d"
        },
        "item": {
          "id": "59b52268-ec08-4914-814f-498a378649c6",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "bd35cb52-12ea-4224-bc8e-86bf8795b512",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b341fb58-4ee3-4aa4-841f-7b352d933a90",
        "cursor": {
          "ref": "72c9dff4-4df5-4a12-afaf-c4680975828f",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "57734648-275d-4e3e-94bc-380a2f8ff2eb"
        },
        "item": {
          "id": "b341fb58-4ee3-4aa4-841f-7b352d933a90",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "855847dc-1a3e-4e8e-beeb-6b54b265edfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 625
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1746ebf-0114-4cd0-8b09-f8b642f4a3f6",
        "cursor": {
          "ref": "a15c3944-c3e8-431b-a17d-622ce9115a27",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "4a00e362-2404-4415-9f9b-97426de0f780"
        },
        "item": {
          "id": "a1746ebf-0114-4cd0-8b09-f8b642f4a3f6",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "0fb36ba5-4227-4189-9f12-97e55697c95b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 344,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1a89231-8bcc-424c-9eaa-dd472e66e8f1",
        "cursor": {
          "ref": "62b36cf5-d2b6-4a88-9a93-b7b44dd427f9",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "c9a6bc57-1fad-432d-87ea-037b7b25b793"
        },
        "item": {
          "id": "e1a89231-8bcc-424c-9eaa-dd472e66e8f1",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "d00cec5f-012f-4b3f-8fff-7a8871d564cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9931dc37-b449-4bcb-bd8f-e5de7622ef3f",
        "cursor": {
          "ref": "9ed6da16-3dd4-47a0-9f0b-b3c110c5698a",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "990a192c-6cd7-4039-bbc4-7d209dc1e709"
        },
        "item": {
          "id": "9931dc37-b449-4bcb-bd8f-e5de7622ef3f",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "d4324fc0-ed9b-46bd-a689-bc623f274b0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5c35555-091f-49fd-8a90-8f9e21806e4b",
        "cursor": {
          "ref": "d7443b0c-288b-4541-9c0d-f244d30bb24c",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "998981fc-22cc-478b-8710-f063294f1290"
        },
        "item": {
          "id": "c5c35555-091f-49fd-8a90-8f9e21806e4b",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "543eef75-2997-42da-9429-ee64376051bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "216d070e-3622-4e19-8d24-ad9f4ca99d7a",
        "cursor": {
          "ref": "c0f7569a-182b-4d95-b280-09ad3d2b2ccb",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "80f73ac4-c052-47d7-883c-0c590735a3ec"
        },
        "item": {
          "id": "216d070e-3622-4e19-8d24-ad9f4ca99d7a",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "ff40b1e6-8e5e-4241-8236-35eba29fab8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29efd08a-06ac-4c03-a8f3-d18f2a930193",
        "cursor": {
          "ref": "7109bd85-4a3b-4679-bf41-6e28203a6137",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "279bb7c3-3024-4825-87eb-e6d0f5380554"
        },
        "item": {
          "id": "29efd08a-06ac-4c03-a8f3-d18f2a930193",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "5c053a73-23a3-4c44-b282-546610b55f51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b0ee828-136e-43df-986e-e2f8c806717f",
        "cursor": {
          "ref": "14e0ac6a-c611-4d2a-b841-a3534ced283a",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "7c2f8724-ecac-49d2-9ace-c6768c8dc4c3"
        },
        "item": {
          "id": "9b0ee828-136e-43df-986e-e2f8c806717f",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "d68120eb-4738-4dd9-b16f-3887dda50df9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "519df273-415d-42b8-a987-2791a4449f80",
        "cursor": {
          "ref": "d765b2b2-e610-4a89-94c4-6838d7f57f87",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "fd13b75f-a431-48cf-aa2b-182ef23dff57"
        },
        "item": {
          "id": "519df273-415d-42b8-a987-2791a4449f80",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "7dd70768-84df-4b85-94e6-fc9d02126d73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7830aca6-4b99-4893-857f-32b4e3be1c51",
        "cursor": {
          "ref": "4f2ad585-ccfd-4924-9d93-727477bbc304",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "546c1986-750f-4b17-b38e-bbcd6537b39d"
        },
        "item": {
          "id": "7830aca6-4b99-4893-857f-32b4e3be1c51",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "88efa11b-0f32-49fc-851a-62f0daec0400",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d30c13a-60e3-48f5-905c-1a8c14524e14",
        "cursor": {
          "ref": "7dec1082-9a9d-4f0e-9879-47abaa9ddd37",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "32e5ced5-ca27-480e-80b0-1bf69ea54d2a"
        },
        "item": {
          "id": "3d30c13a-60e3-48f5-905c-1a8c14524e14",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "545edbf1-2aed-45bf-9f02-59d71ac5cb8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 319,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "881ac000-c3e1-4152-b2e1-03ac5581dc90",
        "cursor": {
          "ref": "4b4393cd-7b93-45ca-8dd8-162704a7011e",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "7c7a829b-7438-41b6-b52c-16a1ce987275"
        },
        "item": {
          "id": "881ac000-c3e1-4152-b2e1-03ac5581dc90",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "ec610850-e63b-40ee-af26-86d75ea433fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4297b650-af96-4b04-b9de-ccf69266aa63",
        "cursor": {
          "ref": "9c0b3aaa-78e1-406d-8fc0-01edb1cb5986",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "22fab4a5-0d57-4299-8051-0a67082585f3"
        },
        "item": {
          "id": "4297b650-af96-4b04-b9de-ccf69266aa63",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "85c5d4df-41ba-4b1d-9c33-e917bf8c7458",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a265824-aa1e-48f1-aaab-f40fe6c3b611",
        "cursor": {
          "ref": "5d9ad539-32ab-4241-a66d-d5c63898f809",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "432802ce-0426-455b-9601-2b2bea54103d"
        },
        "item": {
          "id": "3a265824-aa1e-48f1-aaab-f40fe6c3b611",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "98b2ee4e-309b-48be-9af3-3f6dbd609882",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9579ecce-8272-4432-a28d-4b5c7ee2efaa",
        "cursor": {
          "ref": "f9c373d1-a14c-4a9c-a111-ef894e7d1b30",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "a8478683-f301-4287-b282-c638d7810391"
        },
        "item": {
          "id": "9579ecce-8272-4432-a28d-4b5c7ee2efaa",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "37a81e08-9b17-499b-b418-5a0e767d73dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd1b2ea2-7ead-48eb-8da4-e570159e8c3e",
        "cursor": {
          "ref": "4aff5f12-7f25-4ff6-8333-a960a0b78029",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "63a1a8da-1180-4739-ad37-5c100caf9608"
        },
        "item": {
          "id": "bd1b2ea2-7ead-48eb-8da4-e570159e8c3e",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "d47b0b6e-a039-451c-b8bd-9c0827aaf882",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "648d23f7-89d7-4818-a0d6-73f5971ca463",
        "cursor": {
          "ref": "0e172571-23b3-4abc-b5ee-b60746acd0f6",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "0b692848-a718-4b37-bba3-9a64675510cd"
        },
        "item": {
          "id": "648d23f7-89d7-4818-a0d6-73f5971ca463",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "1dbc4a61-e51e-4295-b463-f51ed857c30d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9246527e-ceaa-40cb-b075-14b9274c718f",
        "cursor": {
          "ref": "82b1c936-4c1a-47a9-9745-bd72d45b5d9d",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "48e831af-c8a4-4ff0-83f6-f72d194e3f21"
        },
        "item": {
          "id": "9246527e-ceaa-40cb-b075-14b9274c718f",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "f66ee6f8-bdb2-4fdf-9d8a-833720d98677",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "498b66d9-34fe-4b77-9f0a-a25a9a371060",
        "cursor": {
          "ref": "8fbb273d-1d3c-440d-a286-c503d869991a",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "a11172e4-b8fb-4eb3-b319-9c5f8b09a83b"
        },
        "item": {
          "id": "498b66d9-34fe-4b77-9f0a-a25a9a371060",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "ea0fee6e-e6b3-415f-933c-8596dc210265",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f9bed7f-e79d-4913-9e6e-d5c5df1fae2d",
        "cursor": {
          "ref": "933be07f-4f0c-4e88-9368-25741efd0e34",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "66b8a23d-21c2-4883-ad03-9c18e6f50e3b"
        },
        "item": {
          "id": "1f9bed7f-e79d-4913-9e6e-d5c5df1fae2d",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "cef11949-9494-4c27-aced-f097aebb64e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "340a1100-3d6f-45b8-a6f8-641334311a76",
        "cursor": {
          "ref": "8509ef26-308d-47f0-9070-cb4c301e401e",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "bff1fce9-3abf-410c-b440-3949e65697fe"
        },
        "item": {
          "id": "340a1100-3d6f-45b8-a6f8-641334311a76",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "7ab304ac-1e11-4e89-9bb3-ddf5c702dce2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20255482-16de-4588-98e8-14d4048c23d5",
        "cursor": {
          "ref": "af714d5e-032e-46e6-a552-93601a05b056",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "f47f076d-1880-4371-997e-2b0a63e7643b"
        },
        "item": {
          "id": "20255482-16de-4588-98e8-14d4048c23d5",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "08c12cad-6505-49dd-9dab-bf2c9c736e9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f65e767d-47c4-4aff-ac6d-cd5251025593",
        "cursor": {
          "ref": "4ef8cf0b-e305-4005-ac2b-e8d2eb967851",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "b4c72697-b289-454c-a12a-74d2eb2fa7aa"
        },
        "item": {
          "id": "f65e767d-47c4-4aff-ac6d-cd5251025593",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "a7e24a23-0545-41a6-ab32-ac948840b5e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf308f7c-9fbb-49fb-9afd-f24c73f20733",
        "cursor": {
          "ref": "86a33f59-bdf0-48a5-9e89-77fb77f04b77",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "d1718aa5-f79e-44e3-a3f9-540f2b810d2f"
        },
        "item": {
          "id": "cf308f7c-9fbb-49fb-9afd-f24c73f20733",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "3e5bbbd0-5b19-4cab-bac5-9b34cc075f1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "216a0439-7a17-4692-ac8e-effcd4b6152b",
        "cursor": {
          "ref": "c56cfa5a-5b68-415d-9361-b4fdb43804e0",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "4a6a13ba-f97d-4796-b55b-300d73945d3a"
        },
        "item": {
          "id": "216a0439-7a17-4692-ac8e-effcd4b6152b",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "af49c1eb-afdb-4f26-b3d6-b34312144adf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a770c136-e12f-4b08-8aab-9bdf46eb5755",
        "cursor": {
          "ref": "5f83057a-4bb6-4dd0-9f9b-2827441e69e5",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "963b7334-ec46-45a8-b027-e2902add85f7"
        },
        "item": {
          "id": "a770c136-e12f-4b08-8aab-9bdf46eb5755",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "6151b685-2982-40b2-a661-0544ec5da802",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "211f0a1d-0707-4c54-8dd0-ce21f7e6f4f6",
        "cursor": {
          "ref": "ad50b40b-4f37-44f5-8320-47e71b799444",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "9411e971-4ec2-48c5-9f38-5064630642a4"
        },
        "item": {
          "id": "211f0a1d-0707-4c54-8dd0-ce21f7e6f4f6",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "63af1e22-bfca-4819-9bd9-780a0990bef3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44b9fe3a-9ae4-4e4a-bcf2-9b5817eab193",
        "cursor": {
          "ref": "793f3c37-763c-4dad-a27f-4c7e785215d9",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "62068c75-8859-4be0-81cc-789b49fb02b1"
        },
        "item": {
          "id": "44b9fe3a-9ae4-4e4a-bcf2-9b5817eab193",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "319590e6-6471-4db2-845f-4952cef3d36d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "039f473e-687c-4232-beaf-717690e9638a",
        "cursor": {
          "ref": "c5a0d500-ff71-4a3c-b1c9-5ea505597e9d",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "9c5eca46-5036-4fa4-86bd-2e0ce1c0ceed"
        },
        "item": {
          "id": "039f473e-687c-4232-beaf-717690e9638a",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "1ebee070-fdec-4407-8104-b20d0748f471",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3261dd5-510f-48a7-b44a-e211db22c64c",
        "cursor": {
          "ref": "ea479221-b16b-495e-a160-5522ba256320",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "c77fbf52-25ca-4f5e-82a4-c7c124b3caaf"
        },
        "item": {
          "id": "a3261dd5-510f-48a7-b44a-e211db22c64c",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "a2e92ee7-b5f0-4ca6-9cf8-fa48f450aec4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49be9bd2-a792-44e0-b098-9488e95a6bd9",
        "cursor": {
          "ref": "47628f9a-b77a-4c6e-a753-531103918566",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "6796e4ac-7e5c-4dc7-a5f9-8747829cecbd"
        },
        "item": {
          "id": "49be9bd2-a792-44e0-b098-9488e95a6bd9",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "f72af07f-20f9-4bcc-a388-a6ee0840d25b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 650
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f668a849-3de2-44cd-a3c2-d3dc3653c1b4",
        "cursor": {
          "ref": "40c33324-20b1-49f3-beb9-b30f0c602056",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "84eb94e9-ec30-456a-8373-8870c5c09896"
        },
        "item": {
          "id": "f668a849-3de2-44cd-a3c2-d3dc3653c1b4",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "f6a2bc5f-c634-4efc-824e-a70bc4f9a549",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3b1e521-c292-4110-a56e-6baf829f3ece",
        "cursor": {
          "ref": "e7b601d9-58f8-43aa-b1bd-f44ac59449c5",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "7a68e580-f3f8-4215-a6a0-48c141b1aeee"
        },
        "item": {
          "id": "e3b1e521-c292-4110-a56e-6baf829f3ece",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "71521fc9-1c0d-480f-8a97-ba480438b98e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39500910-e9f8-4122-a030-293eb4cb63cf",
        "cursor": {
          "ref": "44592d9a-dd84-4cc0-b19d-e4feb71e385f",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "b432d91e-940e-4347-aa9f-3ff4a735e9e8"
        },
        "item": {
          "id": "39500910-e9f8-4122-a030-293eb4cb63cf",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "a48f247f-94b3-491a-8f6a-de7c44285e57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "164c6b40-c113-4914-8fe9-942a0eabaca2",
        "cursor": {
          "ref": "abfaa620-67d4-44d5-8fd4-15bc2d950652",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "9495f04b-ca37-4306-baed-dcd9d650fa43"
        },
        "item": {
          "id": "164c6b40-c113-4914-8fe9-942a0eabaca2",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "a0360fdf-3a0e-4dca-920d-f28a3e601104",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0d0e33e-0c40-4e86-91a3-bd6ca77d5807",
        "cursor": {
          "ref": "dbc00509-018d-4db5-a4bc-c0018f507613",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "bf1b7620-6a36-480f-8a70-6b32702e3cf6"
        },
        "item": {
          "id": "d0d0e33e-0c40-4e86-91a3-bd6ca77d5807",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "c623e49a-056f-46ce-af31-83ac42b4a916",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34ff6a59-ca3b-4520-91b4-1da2920010d9",
        "cursor": {
          "ref": "0e9feadf-701c-4caa-896f-196e5b8e5b55",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "5b09f51b-3c00-4ba7-a4c6-5b4977358d2f"
        },
        "item": {
          "id": "34ff6a59-ca3b-4520-91b4-1da2920010d9",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "351fac87-0346-41a4-b4ff-fb8e781867bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f1f31b9-90e4-47d4-8c7e-c3b018d14831",
        "cursor": {
          "ref": "d2aa654b-5ad0-4372-a132-4ca84dab4973",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "4154f5f0-f2cf-432e-bec2-2ff2515b27b4"
        },
        "item": {
          "id": "1f1f31b9-90e4-47d4-8c7e-c3b018d14831",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "181a1b0c-3d74-4941-acd4-db8a6b1fe578",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d48ba21-8c4a-432b-b369-dc640615f620",
        "cursor": {
          "ref": "d6834be5-e72c-4c20-8145-ea3c1cb7d07f",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "7e5cc637-5e4f-448f-9ceb-864c46c4a2e7"
        },
        "item": {
          "id": "3d48ba21-8c4a-432b-b369-dc640615f620",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "98ad7267-ae71-4011-a798-8789ef5381f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9892c09b-b382-43c0-8e88-2165b99ead95",
        "cursor": {
          "ref": "c9e87b5f-4861-47df-83e8-ed7cf7226e73",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "a8ca53b3-85bd-4078-91ef-3b3ef89486f9"
        },
        "item": {
          "id": "9892c09b-b382-43c0-8e88-2165b99ead95",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "14d97215-10a2-40ab-9f97-774489cb45ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72675611-020a-4fb3-8206-0f3a307f5a07",
        "cursor": {
          "ref": "03a3c63a-88d8-4dac-b1e9-b93154077787",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "6ffa2d84-6117-4415-92e6-81bea78cf265"
        },
        "item": {
          "id": "72675611-020a-4fb3-8206-0f3a307f5a07",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "6bf8bf1d-c099-40cf-96f6-d012ba8a1e64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd7f8bb8-e2bd-45b2-9291-e7cd8a34512c",
        "cursor": {
          "ref": "ff1f492d-8152-4aea-8af9-21d0ac0bdbfb",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "55bcd13d-c6be-4f4a-a2c0-d9e57d20f3f0"
        },
        "item": {
          "id": "cd7f8bb8-e2bd-45b2-9291-e7cd8a34512c",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "dd7edc67-4e26-4b97-93eb-f7045109d4aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ada126c4-4e07-43f1-89cd-c4995a8fe163",
        "cursor": {
          "ref": "4f0fb543-e380-4e23-8eb7-cb0ff8abe5e5",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "7ef5342d-9597-42db-b7fb-3ed09b387c5f"
        },
        "item": {
          "id": "ada126c4-4e07-43f1-89cd-c4995a8fe163",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "bb64f02d-8979-48dc-a6fa-90f87342b7a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bab80dd-cba1-4958-aeee-8c2006fbe3ac",
        "cursor": {
          "ref": "a9f6560d-5676-4b99-893a-979643ca43b1",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "6dac9d03-9073-4212-b55e-b47e59650ac1"
        },
        "item": {
          "id": "6bab80dd-cba1-4958-aeee-8c2006fbe3ac",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "1a14b621-17b7-4857-a198-efa5dd3d4795",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 81,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2bf58ca-2093-4ded-8fd1-6b919026a749",
        "cursor": {
          "ref": "d3de3116-1bd7-481e-b2e3-26e583d8e6f5",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "9db42888-8f48-46a7-8a0e-bc625f00f932"
        },
        "item": {
          "id": "c2bf58ca-2093-4ded-8fd1-6b919026a749",
          "name": "credentials_issue"
        },
        "response": {
          "id": "bc6549e0-5658-431f-9c9d-dc00910fa83a",
          "status": "Created",
          "code": 201,
          "responseTime": 7699,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4d7b11d-e14f-424c-9f1b-fe09b6b7b131",
        "cursor": {
          "ref": "b674875a-998c-4c57-a064-3b0adf7b3c69",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "64f737e9-d14d-449b-a2c1-4484a9701b7b"
        },
        "item": {
          "id": "c4d7b11d-e14f-424c-9f1b-fe09b6b7b131",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "7f4e70d9-cfa3-4c03-9f9d-cf664d4129d1",
          "status": "Created",
          "code": 201,
          "responseTime": 6724,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "42ad794b-717d-4e28-b736-18cc71633606",
        "cursor": {
          "ref": "79c4cb62-183a-4dbb-8ca5-6aa83f874111",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "0e43719f-69e5-4117-8c31-1d814197ee74"
        },
        "item": {
          "id": "42ad794b-717d-4e28-b736-18cc71633606",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "853901f0-1a0d-47c0-bebf-779e5b5957d0",
          "status": "Created",
          "code": 201,
          "responseTime": 7706,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "e55978ef-ba23-4892-aa1f-f264c47a0555",
        "cursor": {
          "ref": "20d5dbae-dfe9-4c2c-b67c-877b131bf16d",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "de8fc02c-5511-4cb5-8f62-904936a4a052"
        },
        "item": {
          "id": "e55978ef-ba23-4892-aa1f-f264c47a0555",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "99b249e8-3f7b-4775-8773-0020c6d6cacd",
          "status": "Created",
          "code": 201,
          "responseTime": 7221,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb3f4a1a-313f-434e-a3cd-bedad254d300",
        "cursor": {
          "ref": "b96d0af4-8ebc-439b-abf7-5c6c876b1dfb",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "daf28ed6-3beb-4e63-99ca-711f6a507fbb"
        },
        "item": {
          "id": "fb3f4a1a-313f-434e-a3cd-bedad254d300",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "aa75a9f3-ebfe-4ae3-848e-f853c8313cde",
          "status": "Created",
          "code": 201,
          "responseTime": 6891,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a543085-785f-4575-881b-2d525a6ac907",
        "cursor": {
          "ref": "bed0511e-ce79-4381-8ca2-ff5d639bf565",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "7f022a9e-1da2-400d-a85d-1ffd7e374821"
        },
        "item": {
          "id": "8a543085-785f-4575-881b-2d525a6ac907",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "9c0bd1a7-268f-45af-8bb0-f633837bc475",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "c70c16e6-1224-4994-9223-237bc14d0175",
        "cursor": {
          "ref": "70782b08-59b2-425c-9e8e-b1756ff4c4cc",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "b0916eac-2c2b-4b51-ad82-6166e0f1669e"
        },
        "item": {
          "id": "c70c16e6-1224-4994-9223-237bc14d0175",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "84c7c970-ae42-41c7-aff7-ccf000aeade4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c48b18c1-3281-4e11-876b-1ed20add4118",
        "cursor": {
          "ref": "bbb54027-ec2b-4556-9835-2979f60e0850",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "fe1d8dfd-302a-4193-8761-e220a52ffae0"
        },
        "item": {
          "id": "c48b18c1-3281-4e11-876b-1ed20add4118",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "d5b9b80e-9eb3-4e25-9aa6-cd9b8a4c9418",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c740b2a5-8170-4e7d-a15a-adcea259aa73",
        "cursor": {
          "ref": "370f532e-da8a-40b1-9057-8ad4a48015a3",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "80d115ac-c99b-4eee-aad2-60d7910c8f55"
        },
        "item": {
          "id": "c740b2a5-8170-4e7d-a15a-adcea259aa73",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "2abf106f-a692-4eec-a439-dd1f95d2ff00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 320,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7678773-4bf0-4fa0-a2dd-b503afd15fb2",
        "cursor": {
          "ref": "324cd420-6d36-457a-911b-20d5e890a0fe",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "1d9653f2-b6aa-40e8-b95a-63d5379d83ef"
        },
        "item": {
          "id": "d7678773-4bf0-4fa0-a2dd-b503afd15fb2",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "71520b89-e468-4cec-ba9a-cd2e67767be7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "287ab757-f177-41c2-92d8-0144a0622ef2",
        "cursor": {
          "ref": "d38cf567-40e2-451a-bb60-fc9fe66ecf2b",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "bd8681e4-a4e4-423d-8120-1f5df603de49"
        },
        "item": {
          "id": "287ab757-f177-41c2-92d8-0144a0622ef2",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "ea406240-a667-4d04-be78-950869a1a397",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70535345-6f7a-4f47-a163-c67654ba7d03",
        "cursor": {
          "ref": "c8a61060-0116-43f0-94b9-a7bfb1fa7782",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "002bf1b9-c0e0-40f1-bcff-9ddf77280b6d"
        },
        "item": {
          "id": "70535345-6f7a-4f47-a163-c67654ba7d03",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "55952e6e-4411-4ab3-b5ad-136bdd761548",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b698c2b2-146c-460e-9dfc-aa721759c367",
        "cursor": {
          "ref": "95c7c183-ffae-424e-8e9a-94443366a0da",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "8afa9dc2-c603-4ee6-8189-294a63149ad7"
        },
        "item": {
          "id": "b698c2b2-146c-460e-9dfc-aa721759c367",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "24a9c2ca-9020-498f-baf1-26a7d3e9bef1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f54a287-b96e-4499-a46d-72bccb75f3f9",
        "cursor": {
          "ref": "891fc6e0-1de9-4dd7-a66b-f4251d1f4813",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "72f22ef2-9212-4b31-8fb7-27a187bb99be"
        },
        "item": {
          "id": "4f54a287-b96e-4499-a46d-72bccb75f3f9",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "e885913b-fc73-4c5b-9fa8-b7a54babb74a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acbf7514-36a5-42cf-8af0-1031400ed553",
        "cursor": {
          "ref": "3fd72c33-3998-4903-af59-a75fce0ad679",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "e58c552e-832f-4b16-8516-5b1c04746f2d"
        },
        "item": {
          "id": "acbf7514-36a5-42cf-8af0-1031400ed553",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "b328e470-9543-4ddd-adff-0c53b8db4f36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12b3932c-07fe-4d0e-8698-27013e605d0e",
        "cursor": {
          "ref": "5cb0f1ba-2938-4dc4-9b43-bbfadc4449c5",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "3a7942b7-6d2e-4da9-a4b8-4c68aeb8f2a5"
        },
        "item": {
          "id": "12b3932c-07fe-4d0e-8698-27013e605d0e",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "2d7f7eed-8f54-4924-a5a8-c2132abdd2ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99a433de-a990-466c-b352-b8f678624f45",
        "cursor": {
          "ref": "1d8f52a7-2c5b-43ef-9a9c-6a60d7893bc7",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "fee5d899-6a69-4264-a0ce-1f17865d482e"
        },
        "item": {
          "id": "99a433de-a990-466c-b352-b8f678624f45",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "d697a4f6-0205-4e97-9e76-1b4fba7ad3b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b803b13-6237-46e8-8896-3fb3084b64b0",
        "cursor": {
          "ref": "d00b3ad2-2ab5-4f72-a0a7-3408a3cbe4d2",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "aa658093-ccfc-4d65-b831-24f54e625d23"
        },
        "item": {
          "id": "5b803b13-6237-46e8-8896-3fb3084b64b0",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "19c14b12-b525-4795-822a-9319dfabd097",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a23883de-fe09-4bcb-aa73-b7187aebd3af",
        "cursor": {
          "ref": "588a9262-84ac-4712-8b27-16bfa72202be",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "53a23c1c-7517-4e68-960f-2e9c7e35e126"
        },
        "item": {
          "id": "a23883de-fe09-4bcb-aa73-b7187aebd3af",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "b4aa7664-9ae3-4900-b857-ca1a485f4d4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 312,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a641b992-a5b8-4a44-846a-3da612f27fbf",
        "cursor": {
          "ref": "a40c9d0a-28ce-4346-88d3-a2c0dc1f2160",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "5588343c-74fb-48e5-9f26-311d85f2640f"
        },
        "item": {
          "id": "a641b992-a5b8-4a44-846a-3da612f27fbf",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "a4218d84-8ba5-4c98-98b3-ad770e6ec8c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5bcd503-4744-4425-951b-1e291377e9a9",
        "cursor": {
          "ref": "9354d2a3-3550-4254-97be-42e650beed95",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "229bcbf3-4720-49bd-af33-d861cfd1331e"
        },
        "item": {
          "id": "e5bcd503-4744-4425-951b-1e291377e9a9",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "6b64910a-79a5-4eaa-b407-0fc648c4db85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2739bd70-3404-4469-bfc6-abf2517ab3af",
        "cursor": {
          "ref": "3f9e8b72-7301-4ad8-bc09-2efcd26234db",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "4cd0d1b1-cca8-424a-b15b-8262a84cf9fe"
        },
        "item": {
          "id": "2739bd70-3404-4469-bfc6-abf2517ab3af",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "2383803f-039d-4e5d-9a19-3dc4d6b76a25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2496ea6e-fb58-43fe-8f90-f1e8527f5c0d",
        "cursor": {
          "ref": "d4f61064-ec96-4e4e-9146-cbb0f6c6c0b5",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "2db2ae7b-ae41-4222-918f-afaacd10cab8"
        },
        "item": {
          "id": "2496ea6e-fb58-43fe-8f90-f1e8527f5c0d",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "228eea2f-1cc2-45db-bde1-ccc5cb96b83c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 310,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "582b6153-2f03-4445-9d50-ecd50469d7e3",
        "cursor": {
          "ref": "1c8649e5-154d-4177-93f3-31a0e14b7fe7",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "538de679-c584-4fa8-8d46-f27b00502485"
        },
        "item": {
          "id": "582b6153-2f03-4445-9d50-ecd50469d7e3",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "83e36e6c-da97-4e1f-a7df-517db0ec159d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "398d1c03-9680-4c1e-bc5d-1d18b44a3a9f",
        "cursor": {
          "ref": "6b88b065-f879-4067-ad39-fc3298c33014",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "2cc36f2f-f4c9-483e-8e83-fd36bf2f8c9e"
        },
        "item": {
          "id": "398d1c03-9680-4c1e-bc5d-1d18b44a3a9f",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "1b3946ff-a6f4-48e3-a804-098f2122397e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95734470-b5ab-464f-b00a-03b915b27b50",
        "cursor": {
          "ref": "63a46e72-b273-44cd-afc9-0753363a1693",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "7fc35397-b28f-4219-a18c-7ffdf04283a4"
        },
        "item": {
          "id": "95734470-b5ab-464f-b00a-03b915b27b50",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "4f86780b-bb25-4cb9-8695-efce7dddaa57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6378e82a-eb10-4613-b63b-29cc214e0a58",
        "cursor": {
          "ref": "1937cc40-e432-44cf-8993-d1572bdcb94a",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "9b85f8a2-35a5-487c-bfe9-10e70b66523a"
        },
        "item": {
          "id": "6378e82a-eb10-4613-b63b-29cc214e0a58",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "80fe0979-2d77-4fd9-ac2e-a3a79a42a026",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50f067cd-a577-45cb-a945-955f60ab41be",
        "cursor": {
          "ref": "639a8a1d-9fc8-4344-8cca-8b0f351d64ee",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "59311232-ddd9-4c33-92f3-c6ac22967e03"
        },
        "item": {
          "id": "50f067cd-a577-45cb-a945-955f60ab41be",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "5867d95b-56d5-491d-9b43-c294a35921e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6c5fedc-60fe-48ca-abb6-fd86971bce07",
        "cursor": {
          "ref": "e37b4e83-b84b-4c21-9edb-cc58b14d10c2",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "644bb6fa-4451-4b79-bf92-dff5d2900b2f"
        },
        "item": {
          "id": "d6c5fedc-60fe-48ca-abb6-fd86971bce07",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "8d4ab8b1-8ea4-44f0-8dc8-85e4082e9a10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 342,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe79ee04-0f25-4895-8834-6b6fc84492ac",
        "cursor": {
          "ref": "f38c54d0-6fba-47a7-b137-6722a79f3eae",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "52a2f36c-30b3-48c5-a819-b66cb100ce5c"
        },
        "item": {
          "id": "fe79ee04-0f25-4895-8834-6b6fc84492ac",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "fd651967-8ef9-4e45-a338-8bdd6a2b17dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "070f13a1-ae1b-4ad0-aa4c-728ac224de87",
        "cursor": {
          "ref": "5de6064d-9f7b-4c55-bd81-672b4dc84751",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "41cf5b3e-ecc1-41e6-b115-cf436075a296"
        },
        "item": {
          "id": "070f13a1-ae1b-4ad0-aa4c-728ac224de87",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "1de48f1b-9fe1-4cb1-8a95-93c6b006861e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d806b072-180a-4ca4-94b2-3d9b2525904b",
        "cursor": {
          "ref": "435c051a-4c23-4b18-9043-6a9e05eacab7",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "a14c03b7-151f-490a-b572-964aac1869bb"
        },
        "item": {
          "id": "d806b072-180a-4ca4-94b2-3d9b2525904b",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "41ee033e-e769-448c-a05e-671f45f88a06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 318,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f0d2694-ade5-4e26-a547-392cc6ca4e86",
        "cursor": {
          "ref": "c932414b-fd03-4954-994c-fb804c9529e0",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "4e7662c7-83a6-4832-97a1-7debdc9c29ad"
        },
        "item": {
          "id": "8f0d2694-ade5-4e26-a547-392cc6ca4e86",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "f6b82d01-a2fb-4c90-868d-de24e838f740",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c3ed028-33be-4eba-bdc5-78d29f26bfd5",
        "cursor": {
          "ref": "f5775abb-29e0-4ef8-ad8c-d1cd207c51e9",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "940fea1f-8052-4d25-82f8-9bddafcdefbe"
        },
        "item": {
          "id": "3c3ed028-33be-4eba-bdc5-78d29f26bfd5",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "53f79ff1-dc12-49c6-9d6a-a0ca62b94a25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be2de3cd-1ddf-4820-b5b1-ffcffb6645f3",
        "cursor": {
          "ref": "92dfe57f-eb9b-456d-b890-d64d57beee62",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "2e5392fb-8da3-440b-8993-55a8f7a95208"
        },
        "item": {
          "id": "be2de3cd-1ddf-4820-b5b1-ffcffb6645f3",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "25b0fff6-4814-472d-b2a4-fd850c6ff765",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18cb9210-b8ca-4639-a688-9d0eddbaf46b",
        "cursor": {
          "ref": "e284b9e3-92ca-4ae4-ae89-1b621c7f9cff",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "ed6e2fd9-198b-494a-af23-76f4764c4c83"
        },
        "item": {
          "id": "18cb9210-b8ca-4639-a688-9d0eddbaf46b",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "c93e79a9-687a-4ff2-aca3-7cdd15df0038",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11e2aa90-62bb-49a1-8b20-f4e65325e274",
        "cursor": {
          "ref": "dbd3ceae-880c-4d81-bd82-20f4aad833ea",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "ac765dc1-a337-4726-bbaf-a8d2691f4b71"
        },
        "item": {
          "id": "11e2aa90-62bb-49a1-8b20-f4e65325e274",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "0329d660-c6a1-46b3-9aa0-96fbea7e6219",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7236d08-26e7-4467-945a-310e3e673299",
        "cursor": {
          "ref": "49572996-8ea5-4567-9b97-8e215689931c",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "86bcd94a-64fe-4cd1-8bf7-f9c5978b8b25"
        },
        "item": {
          "id": "d7236d08-26e7-4467-945a-310e3e673299",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "f126d958-b1a6-48b6-904c-6506ba7f379c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24922d19-0bdd-4ec2-92d0-23d5b3af5b22",
        "cursor": {
          "ref": "91ece82f-007c-4178-a85b-a1e24ecabecf",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "f994167f-5ac3-4238-890e-12f096b1e82a"
        },
        "item": {
          "id": "24922d19-0bdd-4ec2-92d0-23d5b3af5b22",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "f054e0a9-0095-4a4e-9674-1631b3a2eb57",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 81,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd18c9a4-7999-4492-b4df-2a7500babab2",
        "cursor": {
          "ref": "db17ec30-601c-45f3-ad95-c2ea1e76e388",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "803fb6ec-a018-4a65-8727-f0f7ed8b088a"
        },
        "item": {
          "id": "dd18c9a4-7999-4492-b4df-2a7500babab2",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "cbe2a2a8-a2d0-4ef4-81e9-2ce2e48ca41c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaec88a6-14a5-48ff-be6b-f67a60a7a365",
        "cursor": {
          "ref": "0ecb2336-5e3c-4e07-b374-e0e74bc1a709",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "5ce3f924-533e-4b4f-b62e-d50803abffaf"
        },
        "item": {
          "id": "eaec88a6-14a5-48ff-be6b-f67a60a7a365",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "45e6a446-4ec3-4207-a2da-be133067da3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 339,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d00f7fa-ed76-4130-a883-60e5facb70e8",
        "cursor": {
          "ref": "10da00c6-4008-4170-8d56-e48bdd001e15",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "02260c2b-8fd2-494d-8435-352cea1451f8"
        },
        "item": {
          "id": "1d00f7fa-ed76-4130-a883-60e5facb70e8",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "abaa7ac8-cca0-4880-b8dd-3eadc1e0e167",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f3e697f-db4a-4002-8523-79ce46e2a70e",
        "cursor": {
          "ref": "c9ce5c7e-a356-4be2-a430-20594f4f4495",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "d4bc62a8-5983-4e1a-bd0e-8066302f451b"
        },
        "item": {
          "id": "9f3e697f-db4a-4002-8523-79ce46e2a70e",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "257ea3b1-1ce1-4d84-b6e9-46e8d1efd72e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9601c90-2bd1-4df6-8fa1-a5a9a431a456",
        "cursor": {
          "ref": "a40364f5-ba0a-4410-9f73-79a0898e1315",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "afd20006-6457-43f3-9af2-e8eaaef608ee"
        },
        "item": {
          "id": "a9601c90-2bd1-4df6-8fa1-a5a9a431a456",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "55674d10-5d7b-44f2-9f64-32b4f6462248",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c22a5445-b140-4d9d-997c-308dd202aaeb",
        "cursor": {
          "ref": "dc123fbc-8abf-408f-af29-73ff6da9ec31",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "e4ad6ded-3ff1-417a-bfb4-0fd2dd657b98"
        },
        "item": {
          "id": "c22a5445-b140-4d9d-997c-308dd202aaeb",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "4cfd6c7d-810d-4231-8a64-c90eeca91433",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "810e10cb-5a7c-465d-9076-a586216d5d99",
        "cursor": {
          "ref": "6db58dab-5acf-4d64-a2b6-71bb991d496d",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "97bf042b-98fc-49a9-b2f3-8bbdfd81fdc2"
        },
        "item": {
          "id": "810e10cb-5a7c-465d-9076-a586216d5d99",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "e2d786ee-75e0-432c-80dd-69fb4431dd87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cc4a45f-4d77-4398-9da7-11630543a5c0",
        "cursor": {
          "ref": "98f00798-676f-4f91-ada0-953aea33115f",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "a51b15bf-5535-43ce-ba7e-944009092d38"
        },
        "item": {
          "id": "1cc4a45f-4d77-4398-9da7-11630543a5c0",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "56fa7fac-1eda-4d47-a3c2-a80d6d0c4760",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f55f33c5-9c27-4f15-b7d8-5336ac940a3d",
        "cursor": {
          "ref": "b837ce0f-ed01-42f6-b309-610763f66daa",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "d179f53c-0abc-4642-ba62-d07dd3420ef2"
        },
        "item": {
          "id": "f55f33c5-9c27-4f15-b7d8-5336ac940a3d",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "543445cf-a9d1-4bc5-900f-390e41fb7aff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a3a8ee0-0fca-416b-bfe4-2557f1371458",
        "cursor": {
          "ref": "5129bf2c-e245-4880-b1b8-52e08beec948",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "44d3cda6-da6d-4af8-803f-6b5dc0683d3b"
        },
        "item": {
          "id": "5a3a8ee0-0fca-416b-bfe4-2557f1371458",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "8ff77b49-0368-4ed6-8b6d-332ab0a726c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb3f3d1c-6f19-4ffc-88b4-1f51eb5790e1",
        "cursor": {
          "ref": "2bcf79a1-f358-4370-953d-95bdfc03b0f1",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "d69d4db4-7f50-42ca-95ce-d170f65866ab"
        },
        "item": {
          "id": "fb3f3d1c-6f19-4ffc-88b4-1f51eb5790e1",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "09386f51-c4a8-49f8-85ce-574248dfcd90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c835160-5d1d-499c-b6e1-e3a5c14ccb13",
        "cursor": {
          "ref": "8b6c80e7-9573-43f8-a864-763f44a941d3",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "d469cafb-a3c5-46f6-ad7a-d4cc80d9e024"
        },
        "item": {
          "id": "8c835160-5d1d-499c-b6e1-e3a5c14ccb13",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "e859a113-679b-40cc-bbd2-4e4bc99844f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb4fc9f4-1bc9-41ab-a600-ae46f956a6e5",
        "cursor": {
          "ref": "1283fdcd-e621-4518-8eba-b6f432b73566",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "44628c6a-83c8-4447-aa6c-1c8d602b91be"
        },
        "item": {
          "id": "fb4fc9f4-1bc9-41ab-a600-ae46f956a6e5",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "dcf63bab-b28f-4a2f-94e2-4c2c90774314",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "079fcf4c-6fd7-46f5-9f3d-8fafa67a7570",
        "cursor": {
          "ref": "fd8039b0-b032-47b3-ac52-28cee3b9eda0",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "9ee1d118-ac38-4f12-8fd5-684ce59d0dcd"
        },
        "item": {
          "id": "079fcf4c-6fd7-46f5-9f3d-8fafa67a7570",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "756667f2-496d-4b18-af0b-525c8a14aebd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8bb1990-a870-4fd3-b6e1-6467a1138827",
        "cursor": {
          "ref": "c1250a2a-c62e-4250-a030-1a3f5eed2132",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "6f5b523a-6cb1-4b4b-85d3-d0f0bd3b6ccd"
        },
        "item": {
          "id": "e8bb1990-a870-4fd3-b6e1-6467a1138827",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "8104926b-7537-4026-86d4-70b16277c8d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c73bbf9c-5715-4789-943c-e42424974238",
        "cursor": {
          "ref": "212c4646-cf5c-438c-8c4f-55be462852fc",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "e0d07a59-b018-4ebb-a558-f3dd30402d90"
        },
        "item": {
          "id": "c73bbf9c-5715-4789-943c-e42424974238",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "6112b443-36e8-4744-8a3c-5114e16ea8ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19546224-1dc1-40e9-a6ec-0c2fb19b1aa7",
        "cursor": {
          "ref": "325e1c93-5e08-497c-aca2-da5a73bf936b",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "5aa3a8b2-1ad0-4cb3-b333-b324711e7f38"
        },
        "item": {
          "id": "19546224-1dc1-40e9-a6ec-0c2fb19b1aa7",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "d07b09ff-f5f9-4c5e-a6d8-7e6115b3be0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abf70564-4720-451d-bee6-f5b413ec5f63",
        "cursor": {
          "ref": "f1d3e017-d704-4c66-a0ff-b79b2c6ceb0e",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "aadc23a3-60d1-4876-a2df-2b352ee00f41"
        },
        "item": {
          "id": "abf70564-4720-451d-bee6-f5b413ec5f63",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "a40cfc8b-70d9-4fdc-8be8-05339afa4134",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "077b527c-2c21-4f12-9013-2e806eecf5ff",
        "cursor": {
          "ref": "32b48bc9-a281-4c7d-b3df-f5ce590ef2ab",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "ad9ae865-ee44-4c6f-8538-fa3dfd4310fe"
        },
        "item": {
          "id": "077b527c-2c21-4f12-9013-2e806eecf5ff",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "9e36f573-50d9-4476-8da6-7ef3973393d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a803c2e6-e763-4495-ad34-c9ffcf202c51",
        "cursor": {
          "ref": "31d4cc13-e7d9-4719-9ba4-0daa64d2bc5a",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "713dd476-d7d1-4ddb-800b-47713211348b"
        },
        "item": {
          "id": "a803c2e6-e763-4495-ad34-c9ffcf202c51",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "a7dfcf2b-e0e7-4f50-86dd-12f0345d90d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "989bddf0-13a5-404d-857a-6de88a3ea08b",
        "cursor": {
          "ref": "bac6a60c-353e-449f-a5ea-6fbf10676549",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "6c9be13e-e08b-424c-8b94-2afd12ad553f"
        },
        "item": {
          "id": "989bddf0-13a5-404d-857a-6de88a3ea08b",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "9b37e20c-725f-4a00-8f26-4b4076381ac0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44526f1b-1af6-4b47-92ea-fe8aeaffcaaf",
        "cursor": {
          "ref": "b8da1953-cc40-4dc3-86de-8a1073a570d1",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "b4178ffa-b93a-4984-8621-1f40b8a03c14"
        },
        "item": {
          "id": "44526f1b-1af6-4b47-92ea-fe8aeaffcaaf",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "4bcaa91b-7808-4568-a6e2-3b598cfc1157",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "968fd521-10f4-4f34-b759-8ad80756f7e9",
        "cursor": {
          "ref": "8e136def-fd93-473a-b6fe-b69cf77b2350",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "e0c8ccd9-3c81-44bf-9f29-a35346269f83"
        },
        "item": {
          "id": "968fd521-10f4-4f34-b759-8ad80756f7e9",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "ccf4ee34-85c0-4cac-8a7c-29ec531a9be5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e31e357-d50d-42e1-8fe2-95582a864c0c",
        "cursor": {
          "ref": "3aaa63a3-65cf-4233-bb77-b8e897c9ca54",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "023fbd77-b2a5-4322-b587-c03f125030bf"
        },
        "item": {
          "id": "8e31e357-d50d-42e1-8fe2-95582a864c0c",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "e388a587-5d4c-4606-8e34-dd8b5ef10d8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5085048f-566a-4be6-af37-e5e7353ffd3f",
        "cursor": {
          "ref": "9d1e8335-65e4-4891-8c6f-4fb1e374a20f",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "326bd0f6-1dda-4181-9202-74f0cc1269ad"
        },
        "item": {
          "id": "5085048f-566a-4be6-af37-e5e7353ffd3f",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "6fdbd800-587d-4558-9873-756eba90a77c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13666da5-d79e-449a-b215-9114433b8ec3",
        "cursor": {
          "ref": "97012f3d-fdbb-4d6a-bbc2-bd817f6e9411",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "2b6ed975-d2c3-46b9-ac54-01c96acfa8e7"
        },
        "item": {
          "id": "13666da5-d79e-449a-b215-9114433b8ec3",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "47ac8ff0-0971-47e0-9750-aac232efe993",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "361c51f7-4633-4b56-b57f-eb09d24211a6",
        "cursor": {
          "ref": "ab0c7d4f-31ba-4a65-a2a3-e098c0acd604",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "8c157cd8-ae23-463b-8f28-7d6a2dcb3e96"
        },
        "item": {
          "id": "361c51f7-4633-4b56-b57f-eb09d24211a6",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "125d3cbb-847e-4f63-b7ce-576ae222eae4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "016939c9-0b20-44ac-929c-947ee48b16ea",
        "cursor": {
          "ref": "db8a9f69-411c-4a55-9cf8-b44fd5cc05a0",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "d38784ef-4691-4e96-9518-81550f6e96c0"
        },
        "item": {
          "id": "016939c9-0b20-44ac-929c-947ee48b16ea",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "fb389e8d-461d-46ed-8d44-2f85a7895292",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33cf97d1-fefd-4196-a60d-c15827654057",
        "cursor": {
          "ref": "129f346b-4a64-47b5-a79f-657eed107245",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "f01e3d78-1c5b-434a-b15e-57eba4dcdaec"
        },
        "item": {
          "id": "33cf97d1-fefd-4196-a60d-c15827654057",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "56fdadb4-a2c1-42c8-8fb1-29ccfb07bb9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d418a220-d8cf-4cdc-a49d-e7b6d6cb52a9",
        "cursor": {
          "ref": "29bba8d7-0293-4dfd-a302-3f6543ba5c54",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "4a0f3fc8-a569-4c56-acd2-4a78df760945"
        },
        "item": {
          "id": "d418a220-d8cf-4cdc-a49d-e7b6d6cb52a9",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "22644363-e2af-451c-b1d2-b32945b7436b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ac85fb5-6f87-43dd-8751-83efebb658cc",
        "cursor": {
          "ref": "40dea8e7-2461-4e2c-8b3b-1c4c025b1792",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "84248ee7-212f-4332-9616-f70d72e0339d"
        },
        "item": {
          "id": "5ac85fb5-6f87-43dd-8751-83efebb658cc",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "59317641-dc08-4a99-87bd-1de1ab16a61b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "007cf133-c1b3-47b2-a65b-65bd556a85bc",
        "cursor": {
          "ref": "f9dbd031-93ba-4112-a06a-eacb176e4547",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "5ed41683-acdf-4815-87fe-6f057e717ca0"
        },
        "item": {
          "id": "007cf133-c1b3-47b2-a65b-65bd556a85bc",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "3cf5a9f0-7aeb-4069-9f4e-c504b75b32e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47643b5a-50c5-42dc-9e3d-0f0a1e456114",
        "cursor": {
          "ref": "cd6360f6-1111-4dd9-a21c-f193d877d341",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "4fbf53d7-bf21-4087-9f62-09618ca36066"
        },
        "item": {
          "id": "47643b5a-50c5-42dc-9e3d-0f0a1e456114",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "1bdf3bdb-6f5c-4e5b-8e01-bde433b5b73a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca6d4a98-3238-4bc0-9012-19a7709f2f81",
        "cursor": {
          "ref": "4d406ebc-303f-49c1-ba04-aeac86ffaf00",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "2cd470ca-7c98-4c61-88cf-d9590d142e66"
        },
        "item": {
          "id": "ca6d4a98-3238-4bc0-9012-19a7709f2f81",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "445a8976-bba1-4d6e-818b-bcced177004d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73bc2eb1-c4a2-4e2d-9167-a9564afb1982",
        "cursor": {
          "ref": "e4f8c129-62d9-42a2-a41d-283385606346",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "608bdd41-5a60-4e6e-bc88-db5cfae18cb8"
        },
        "item": {
          "id": "73bc2eb1-c4a2-4e2d-9167-a9564afb1982",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "662df976-9132-470b-a166-5340f4515664",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e207abf5-f039-475f-9109-3c34e0aac07a",
        "cursor": {
          "ref": "8efb1277-a8fd-48b2-8b97-95ecb10d131e",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "8368dff9-0efe-4f05-8b33-b078c7120b8e"
        },
        "item": {
          "id": "e207abf5-f039-475f-9109-3c34e0aac07a",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "96047888-6f2c-4022-8d6b-288df119d259",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5e52d1f-d737-4dd3-a556-d844502a6626",
        "cursor": {
          "ref": "442cf43d-ee25-4b6f-93dc-7d48273c15c8",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "b2aaf5e8-a378-4914-9906-dc0aeae87ce9"
        },
        "item": {
          "id": "d5e52d1f-d737-4dd3-a556-d844502a6626",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "d48eb3b6-eb08-46da-8ea2-7cba62ced71f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b964a1e6-0bac-4cdc-9e99-2e8c5d9920ee",
        "cursor": {
          "ref": "aa039d89-9d64-4adb-ab93-cd61ade8273c",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "d6c77cf9-02c1-4d2c-b536-c82b344d72fa"
        },
        "item": {
          "id": "b964a1e6-0bac-4cdc-9e99-2e8c5d9920ee",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "8d0935d8-687b-4560-a935-9c9e681e7588",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 79,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d903ac6-6e1a-4130-a1a4-9a029a437283",
        "cursor": {
          "ref": "a3bfc8db-f650-4525-aae5-055325e0837f",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "3a9c6bd8-974e-494b-bc82-18bf7ef3f453"
        },
        "item": {
          "id": "1d903ac6-6e1a-4130-a1a4-9a029a437283",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "dc1e6021-3e6d-4b3d-b11e-9c974ec7c998",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd6545de-538c-47a8-a627-0f35b5985a8d",
        "cursor": {
          "ref": "a89905b8-9bbd-497d-b2c0-21ca80d21467",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "05ea0bee-38c4-4ff9-ba46-c419d14379c3"
        },
        "item": {
          "id": "cd6545de-538c-47a8-a627-0f35b5985a8d",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "be00a0a3-f817-4673-b518-e6dfdbc6d550",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19743226-a322-4139-8681-c50bf7531c1a",
        "cursor": {
          "ref": "62a8d962-6c25-48da-b9f6-e0bf0633e046",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "33a7c7de-d850-4de3-b4df-b7be4027a0e3"
        },
        "item": {
          "id": "19743226-a322-4139-8681-c50bf7531c1a",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "030bde53-e5b8-4ce5-8764-6fd2dba47e93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cd2688d-44ce-4a06-a10b-41a17ed7bda9",
        "cursor": {
          "ref": "9c322073-2f16-4705-a3c4-d5f9ee127730",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "12c06d06-5b1e-4362-9956-db869d0d8fbc"
        },
        "item": {
          "id": "3cd2688d-44ce-4a06-a10b-41a17ed7bda9",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "6cec0c97-de93-4579-99fa-53527cac4f0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcb63ee1-3b49-492e-9c6f-6da599406872",
        "cursor": {
          "ref": "8d9cf4d5-363b-46d2-9f61-c1541c8a2712",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "d4f468d7-95f8-41dd-81f7-cf05aa7941e7"
        },
        "item": {
          "id": "fcb63ee1-3b49-492e-9c6f-6da599406872",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "fe761ef2-c8f3-4129-9e59-026f037d82f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23473aee-23d2-48c6-87d3-e016f8ecd493",
        "cursor": {
          "ref": "267cb843-d8b7-4c93-b4d5-5dddcfe2056b",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "13080904-942f-4427-8c42-08b1ca06ffc8"
        },
        "item": {
          "id": "23473aee-23d2-48c6-87d3-e016f8ecd493",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "1818a6a5-e07c-4c3f-82ee-54b63e2bc9ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c80632d7-ae6f-4d34-b9a1-3fa9befe33ff",
        "cursor": {
          "ref": "7db5e29b-bd78-480a-a256-a213dbca5065",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "0624b577-0d48-4fa5-87f5-832668408632"
        },
        "item": {
          "id": "c80632d7-ae6f-4d34-b9a1-3fa9befe33ff",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "389d52a3-543c-4cae-bc6f-d2bb4565b2c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f2743f5-8ef3-4605-8e38-ccc5f4bd2887",
        "cursor": {
          "ref": "bfda3417-640d-4f33-959c-991143e2137f",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "ad2e992b-0d4e-4756-b4f3-26d176122452"
        },
        "item": {
          "id": "5f2743f5-8ef3-4605-8e38-ccc5f4bd2887",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "b653182e-666c-4099-beca-19f420954e0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dad94c8-53c9-49b9-a8de-fd0b70217dfb",
        "cursor": {
          "ref": "9ffbb770-d18c-4bb1-aba9-ad7562d95b75",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "4d22b692-4eb4-4625-9f82-46d014e1920d"
        },
        "item": {
          "id": "0dad94c8-53c9-49b9-a8de-fd0b70217dfb",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "e943e283-1e9a-43ab-8fda-5a46f7ba9e11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20be7ea2-c092-495e-8b6d-75a60c5d58a9",
        "cursor": {
          "ref": "ab1172db-9129-4558-a8cf-4323c844d093",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "434aa2df-e24b-4328-b495-d4c583ed45d0"
        },
        "item": {
          "id": "20be7ea2-c092-495e-8b6d-75a60c5d58a9",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "7e7b4d59-35cf-4b2e-b940-1e3ca5a57e0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "572ba241-2d46-4f98-ad56-58a092ea4b74",
        "cursor": {
          "ref": "b11f18eb-e639-4e00-8840-e35425544d96",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "4b3af6fa-097d-40b0-ae0d-51931ddd1765"
        },
        "item": {
          "id": "572ba241-2d46-4f98-ad56-58a092ea4b74",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "5facdf27-9390-4083-9423-1134cca45606",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c162109-0806-432d-aed8-4dd18973d56e",
        "cursor": {
          "ref": "693befa1-fac8-45c1-9b95-35364c013f3d",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "63eaa464-85a7-45c3-abb8-00be8cf9947b"
        },
        "item": {
          "id": "0c162109-0806-432d-aed8-4dd18973d56e",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "48ed33a9-73fe-41ff-a7af-8f2714a7476d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "854f151f-05bf-4993-8eef-53f7d1fcb0ac",
        "cursor": {
          "ref": "b9195f61-51a1-4800-81be-9b1821f240ba",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "0e23fa06-3361-4fa1-8769-1f870de68ac7"
        },
        "item": {
          "id": "854f151f-05bf-4993-8eef-53f7d1fcb0ac",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "1372973f-0142-458b-810b-5baa46c008c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c91c139-6555-469a-b8d4-64d681d4b775",
        "cursor": {
          "ref": "1511ec61-8f0d-4cfa-b63b-d8796dcddf25",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "12e6f710-3839-47c9-9eae-b7d8ffe6a1a3"
        },
        "item": {
          "id": "3c91c139-6555-469a-b8d4-64d681d4b775",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "9195dfd1-d55f-4ebf-bb9e-efac1ddd3e86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0ff70fa-4e57-4d8b-9379-3e99dcc57c9a",
        "cursor": {
          "ref": "88f89429-3860-4421-91f8-f1d21d378c63",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "96705b6f-3570-45eb-9fae-ceb31fe2a6d1"
        },
        "item": {
          "id": "d0ff70fa-4e57-4d8b-9379-3e99dcc57c9a",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "42a33a06-86ca-4707-bfdf-1edb2afaa51c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65e4890c-9ae0-41e4-88a9-379aea2c4892",
        "cursor": {
          "ref": "43fdb0cf-ef4c-4ae9-9bbe-7359ab507205",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "519649c4-9046-4254-b1d7-b0de633bea35"
        },
        "item": {
          "id": "65e4890c-9ae0-41e4-88a9-379aea2c4892",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "3e95052d-33ea-44e7-be6e-e94fcd4050dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9f50ab8-06e1-4653-82be-d3720c6b04e4",
        "cursor": {
          "ref": "2c1da2bc-60d6-475c-ba27-1278a0351e39",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "296f1dd9-d3a1-4c19-a449-9f3dc37cbdc1"
        },
        "item": {
          "id": "c9f50ab8-06e1-4653-82be-d3720c6b04e4",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "1292c9d2-fd63-4e6b-ab0f-5e5395d180ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d7ba43d-54d2-49b5-a5e4-ce6079f76487",
        "cursor": {
          "ref": "2620d64c-6144-4d30-b403-586277eedf94",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "4a024bb2-f7a8-4b20-82ea-ce8903d8ed4e"
        },
        "item": {
          "id": "5d7ba43d-54d2-49b5-a5e4-ce6079f76487",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "f3e582a9-1645-4784-b9db-179a15f3ac29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14029629-d6f2-465a-97c0-812874a0a634",
        "cursor": {
          "ref": "e1f97954-5003-4c3a-8aa5-3da960879ae4",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "9ff9018c-ccf7-44bb-847e-1867d1d88ee0"
        },
        "item": {
          "id": "14029629-d6f2-465a-97c0-812874a0a634",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "da36b3a1-38f6-4ec3-b01f-ce576beb310d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6f61950-96e2-480b-b736-e4ff93f0a8ae",
        "cursor": {
          "ref": "720e427c-2279-45e4-b4a4-537a448c1030",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "d718441f-a61b-4f09-b7fa-9433b1c510d9"
        },
        "item": {
          "id": "e6f61950-96e2-480b-b736-e4ff93f0a8ae",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "e87bd02e-4dbf-4cbc-89db-74ce7049a846",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd598949-c8eb-4c76-804c-fdb19f66500b",
        "cursor": {
          "ref": "a79ce198-c1b0-4ecf-9cb8-dcd83ab54510",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "6bf7e187-902e-48d4-9747-27af84e0f6f7"
        },
        "item": {
          "id": "dd598949-c8eb-4c76-804c-fdb19f66500b",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "c2d6797e-d074-41fa-8f87-86b82d752022",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73381fb4-0225-4de7-b1f2-ab69d7ef2709",
        "cursor": {
          "ref": "35dd9c7f-4b2c-4007-9040-78986185d1ea",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "036bdc83-f245-4e72-870b-2d305a12f01c"
        },
        "item": {
          "id": "73381fb4-0225-4de7-b1f2-ab69d7ef2709",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "a8bd3320-4e83-4b64-b252-5dab1b5efe75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6986191d-83ca-40ef-a5de-56ecebc8a9d3",
        "cursor": {
          "ref": "c1db8247-11b2-49ff-91a0-eff4328de2d3",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "54ce4d7f-9eac-4d68-9014-09c8afbc8c81"
        },
        "item": {
          "id": "6986191d-83ca-40ef-a5de-56ecebc8a9d3",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "c9574687-2c87-44b0-a817-2cbae8d8fffa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d5983f1-eeaf-403b-aff6-627e92c37e70",
        "cursor": {
          "ref": "675a18f9-093b-4902-9b64-33964a050277",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "3d972481-1771-4c73-b38d-2e9c2133cf55"
        },
        "item": {
          "id": "2d5983f1-eeaf-403b-aff6-627e92c37e70",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "5445105b-5d21-4ab0-8f52-e2314fcee055",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fa90d65-5574-4531-bdf2-16e741829274",
        "cursor": {
          "ref": "311547b8-f15b-42b5-9cc9-0739556455cc",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "d9e25d27-929f-41f2-9bae-1a6dff00d30a"
        },
        "item": {
          "id": "6fa90d65-5574-4531-bdf2-16e741829274",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "f84074a2-6ffe-4186-abe9-5291aa37ba23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8d51c4b-c75f-4571-ac58-2ce1c78590da",
        "cursor": {
          "ref": "f210b15a-3a34-4d80-bb9f-c83fc017edcb",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "faf56bad-c5e9-41f4-9b81-e97000c8525d"
        },
        "item": {
          "id": "b8d51c4b-c75f-4571-ac58-2ce1c78590da",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "057ba56a-1a24-43ae-b699-da396d26284c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "410e9ccb-c5f4-4693-a388-d919f7ea3ac1",
        "cursor": {
          "ref": "43d2bbb6-920d-49d3-9003-51a396d40e8b",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "a59ec0e1-82ba-4960-963a-e25400830dd9"
        },
        "item": {
          "id": "410e9ccb-c5f4-4693-a388-d919f7ea3ac1",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "9e841936-9fef-4035-b516-e46fffae7212",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ff03139-44a7-4b9a-a35e-bdc2837076b7",
        "cursor": {
          "ref": "d9e6526e-1f4f-4aba-a4fc-9fca2a3256ae",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "97792fb8-34e0-438e-b350-831a9bfa8605"
        },
        "item": {
          "id": "2ff03139-44a7-4b9a-a35e-bdc2837076b7",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "e5935448-c157-429c-b6b4-3a8f4b3724ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b21807ff-5657-42a7-9c36-8c9e110bbf89",
        "cursor": {
          "ref": "bafadf0b-6bbf-4be7-b084-14569e5e33c6",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "8769f2ae-59ae-4bdb-bebe-8f3191120674"
        },
        "item": {
          "id": "b21807ff-5657-42a7-9c36-8c9e110bbf89",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "eec6ca7e-06a4-4a5d-af72-fe41d41fb32d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e5db7fe-5af8-4fd6-84ea-9882d6b9cc6d",
        "cursor": {
          "ref": "d216b231-e713-4ebc-af8d-4b8b45659d70",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "7fa3f59d-002f-48b9-a310-3eb908b1dc6e"
        },
        "item": {
          "id": "5e5db7fe-5af8-4fd6-84ea-9882d6b9cc6d",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "d69b5952-3785-468a-bf10-f629ca181c6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c11060c8-22fe-4f9a-a456-cf9bb19bca7e",
        "cursor": {
          "ref": "675d2067-5930-42cc-8679-b507c2475462",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "9887d0a8-f13e-4d2c-8bae-6fd4c14866d3"
        },
        "item": {
          "id": "c11060c8-22fe-4f9a-a456-cf9bb19bca7e",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "7faee011-6c26-4018-a52a-e785c319bb19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9951d23d-9c06-4aef-9365-018205b7515b",
        "cursor": {
          "ref": "59d6e807-3865-449b-a332-fd078e550e49",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "01550c61-91f3-4ad0-9fda-bff6dd05913a"
        },
        "item": {
          "id": "9951d23d-9c06-4aef-9365-018205b7515b",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "324d86c1-0ac7-4232-a0db-c23c220f804c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a44fba33-7ef2-488d-af01-7d78e5cd69d8",
        "cursor": {
          "ref": "8b2fd0b2-a591-471c-9d14-65844486b921",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "ad664fa0-3db6-4003-902c-cdcd40f5b184"
        },
        "item": {
          "id": "a44fba33-7ef2-488d-af01-7d78e5cd69d8",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "f5cf25c0-efb7-40c9-ba20-3de8db1f2eaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "818d093a-db42-45ca-bb4c-e608fe145f5f",
        "cursor": {
          "ref": "9a6cf8d7-1ed5-4797-9424-4b33c0cec733",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "bed98926-d190-4220-a66e-f2863dcaa5bd"
        },
        "item": {
          "id": "818d093a-db42-45ca-bb4c-e608fe145f5f",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "f91d2b68-25bd-4018-a0b3-06b41cfd3d12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 102,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6007738-81ad-442d-a74b-4dec01e99a35",
        "cursor": {
          "ref": "afece8f5-37fb-4fea-9f8e-3a3cc320975d",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "2c38e190-d9f6-4738-b8d1-06731692e97e"
        },
        "item": {
          "id": "e6007738-81ad-442d-a74b-4dec01e99a35",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "f6bf65df-1755-44de-9268-288b93c1252b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc390517-b052-4d55-ba49-f1dc54e29e4a",
        "cursor": {
          "ref": "b3804c2b-07ab-4010-ac09-85b08a623b40",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "2a92da7f-3840-469e-9e75-20bc87252b82"
        },
        "item": {
          "id": "cc390517-b052-4d55-ba49-f1dc54e29e4a",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "5e1725f5-1004-4dc0-b301-6dad6bfb0643",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb1dc2dc-3b79-4fab-a1f8-3839439004bb",
        "cursor": {
          "ref": "5509f97d-d8d1-4c5e-80fb-6e02769f845a",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "5774463b-2057-401c-8de9-ebcc3c33f0e4"
        },
        "item": {
          "id": "bb1dc2dc-3b79-4fab-a1f8-3839439004bb",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "6852b28f-b98a-4a1c-a32f-08cb18ba258a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2917eda8-53e8-4505-9a3e-79e99112ce99",
        "cursor": {
          "ref": "cc302d1b-9107-4f4e-827d-7a28fcf71976",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "0068c9af-af75-4608-b1df-19c247802584"
        },
        "item": {
          "id": "2917eda8-53e8-4505-9a3e-79e99112ce99",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "0379cf04-e37f-4f3f-9fb5-73322aaf5faa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ed35046-eea7-49c2-afa0-87cb593f2cbb",
        "cursor": {
          "ref": "d98e49b6-44a8-42fe-87ae-235693e3e697",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "ddcb77c3-0845-4545-8b51-932e5550cc9c"
        },
        "item": {
          "id": "4ed35046-eea7-49c2-afa0-87cb593f2cbb",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "0c488915-fef0-4245-8488-64fb850ea9b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f299f839-8468-41e3-bc73-8c7b1ab1e3f9",
        "cursor": {
          "ref": "c37326f0-dc22-4fc8-930e-10345ac70c0d",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "cf4ca7b7-763d-48b0-a177-bc42f27f718f"
        },
        "item": {
          "id": "f299f839-8468-41e3-bc73-8c7b1ab1e3f9",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "78e5ef00-9494-4867-b7c1-3e8faa8f4116",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57c8088e-13c4-489d-b838-7ecf1bb1038a",
        "cursor": {
          "ref": "ed74cadc-6592-406e-99b7-b5bf6e5899b1",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "26ec4fdc-3115-4c67-a8f4-85cb166fb2a8"
        },
        "item": {
          "id": "57c8088e-13c4-489d-b838-7ecf1bb1038a",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "8b64b478-240f-4491-9064-0c3dcae276de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 111,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74862f05-af67-4dc2-b185-ebd9344f8dc2",
        "cursor": {
          "ref": "c129520d-bbc7-45f3-b680-e337592b903b",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "9a9ac30c-642c-4d1e-959a-1ea3e4f4eefe"
        },
        "item": {
          "id": "74862f05-af67-4dc2-b185-ebd9344f8dc2",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "d0a4ad8c-a4e8-496e-a841-b03393783d71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 104,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7050b0fb-0f49-492e-881e-c5e3eb1ec8d5",
        "cursor": {
          "ref": "6bbfe3dd-aad3-4283-a379-ded542523861",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "2bd7f7f9-feb6-46c3-8cb5-bda487ce05f2"
        },
        "item": {
          "id": "7050b0fb-0f49-492e-881e-c5e3eb1ec8d5",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "fb15f6b9-32cd-45f0-a1d2-0bb65c0bae9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55bd1312-1362-4f3f-92f6-324eefe0da75",
        "cursor": {
          "ref": "94cb6567-938d-4450-ab45-cd4125917cd6",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "15759f31-a904-442c-a288-ff1d0b91a00a"
        },
        "item": {
          "id": "55bd1312-1362-4f3f-92f6-324eefe0da75",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "00ec4658-835f-4ff0-989f-8b4c91cb1e88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 118,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff932e12-51fb-4153-a299-5f218d915e22",
        "cursor": {
          "ref": "8ea7716d-8020-4b0d-98b6-aead4b080a48",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "f6bc81b4-5314-4656-8381-402ad1669d34"
        },
        "item": {
          "id": "ff932e12-51fb-4153-a299-5f218d915e22",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "49c0b3a2-613a-436d-99f9-35002d022c6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0a0026f-f514-4083-b3a6-6d806f47876f",
        "cursor": {
          "ref": "04695bf6-bff8-4976-92bf-183babb01014",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "7b53034b-5a1d-4533-bd12-887d358b8bfd"
        },
        "item": {
          "id": "c0a0026f-f514-4083-b3a6-6d806f47876f",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "c98c1311-4c94-4503-93a5-97b175f672f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e24380c-4b11-4184-8f85-641a12bdbd8e",
        "cursor": {
          "ref": "b79ce8f5-f2cc-4423-8793-d33b625c506f",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "2951e2de-5edc-43f0-85d1-6dd7658088e0"
        },
        "item": {
          "id": "1e24380c-4b11-4184-8f85-641a12bdbd8e",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "cc02f239-66e6-41fa-8277-c45593a38f10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4733b708-23ce-4011-9638-5425a9cbad3d",
        "cursor": {
          "ref": "b0f0f4c6-ab48-435b-875e-701f5abe754c",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "30ca0f2f-ac35-4a7c-a750-93ad3b580fe5"
        },
        "item": {
          "id": "4733b708-23ce-4011-9638-5425a9cbad3d",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "66e9ab47-6328-4084-bd92-549c46fe920d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 105,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bdb241a-a7df-44ea-9950-5e6a56ff5517",
        "cursor": {
          "ref": "fa384f6d-43b6-4862-b6dc-38d762e14459",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "ef32ce12-2b90-4c61-b1fd-4131f00edc3f"
        },
        "item": {
          "id": "4bdb241a-a7df-44ea-9950-5e6a56ff5517",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "b6cff940-3ba0-4907-a254-69729fea5614",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "263b20bd-fe49-4e7e-a071-eaf8f39d41c7",
        "cursor": {
          "ref": "b118ed91-3c44-4981-b395-eb4146a96bbb",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "8b1cd12e-a9b3-4de6-9184-00780c17e7ba"
        },
        "item": {
          "id": "263b20bd-fe49-4e7e-a071-eaf8f39d41c7",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "aa021e29-f3ca-41b6-9ab1-41efe14404a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fdc1f1f-6b1c-407d-a41b-6bdc8be0ae19",
        "cursor": {
          "ref": "4ac5f212-dca5-47c1-81ac-94b092ee735d",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "76ce6a06-7f81-4ff7-8d4d-553e875c1ba4"
        },
        "item": {
          "id": "2fdc1f1f-6b1c-407d-a41b-6bdc8be0ae19",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "f081587a-efb4-4c42-88e0-47e57c639e36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6da4fe3e-8468-4120-9715-53d926eae060",
        "cursor": {
          "ref": "fbcf81fc-58b9-4bc4-a4ee-38f0ddd3e0b2",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "393b6944-ec31-4547-a564-de84ecd3167a"
        },
        "item": {
          "id": "6da4fe3e-8468-4120-9715-53d926eae060",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "2cbb8875-47e0-4b0e-8282-7c793536bbc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36e7f47c-2b99-422d-88ea-56ea87eb6d8d",
        "cursor": {
          "ref": "4db047a8-f734-4db2-9a73-e3390746f440",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "e5f20651-2a26-4cd8-8a08-355a91a5ae2d"
        },
        "item": {
          "id": "36e7f47c-2b99-422d-88ea-56ea87eb6d8d",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "144fe8d7-d1f9-4f23-885e-8bbb6352bb47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "041229a0-89db-4d9d-8c31-c3e2f006cf37",
        "cursor": {
          "ref": "5f65b4c0-4040-438c-b9ec-3771cc47799f",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "16eb40ec-eafe-4d5f-985d-802d475be033"
        },
        "item": {
          "id": "041229a0-89db-4d9d-8c31-c3e2f006cf37",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "4b5e1822-2f7f-45d6-9f2a-7a6f4fca7721",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08669418-d15a-403a-974e-f56a038665f2",
        "cursor": {
          "ref": "c56e0646-ace9-4b40-a641-8e602c84f695",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "59970eb0-9401-4caf-b6f9-35e9659ce4cb"
        },
        "item": {
          "id": "08669418-d15a-403a-974e-f56a038665f2",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "4fa7e93f-bca2-442e-9e3e-2b51e14d1e1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc22da56-fbfa-42bc-99e1-bbff237645e8",
        "cursor": {
          "ref": "5ac45e2c-f826-4000-9fb1-b53518a46a7a",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "8c9bc43e-6cd2-48c1-a02f-68b2ca63f87d"
        },
        "item": {
          "id": "cc22da56-fbfa-42bc-99e1-bbff237645e8",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "7006339d-c09b-4b0e-b63b-0630540c90e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31a03f3e-eac9-41da-b5f9-bb693e74afe3",
        "cursor": {
          "ref": "e35046ca-d8ba-4e48-abf4-fb2bd9fdff8b",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "1c7d30a3-06eb-40fb-afa2-ba01cc658752"
        },
        "item": {
          "id": "31a03f3e-eac9-41da-b5f9-bb693e74afe3",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "804b9894-9ff6-45f5-991a-633536735127",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a491dd3a-68a9-4cbe-a44b-2f7c806a5a01",
        "cursor": {
          "ref": "e05b29e1-e9dd-40a0-bdb3-bb63b4178056",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "f608aefd-a3ea-4e84-b829-bc518d9b088d"
        },
        "item": {
          "id": "a491dd3a-68a9-4cbe-a44b-2f7c806a5a01",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "6f9af517-0d71-4ee8-8734-899d5a061406",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf4ff5bd-7afd-4bdb-9161-2d9adbf91a47",
        "cursor": {
          "ref": "72e56612-e92e-4b8a-b90d-1e82ab8af0e6",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "9ee073ed-886e-40eb-8749-aecb674c020c"
        },
        "item": {
          "id": "cf4ff5bd-7afd-4bdb-9161-2d9adbf91a47",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "37e5628a-542b-4acb-8038-e021623ecbb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67b23dd0-3acc-492b-96ed-a60d9d8ae3cf",
        "cursor": {
          "ref": "da75ef2a-bd9b-4cee-a138-11854e7481ca",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "eca4a32e-5dd3-4456-86c3-a5d003efcebc"
        },
        "item": {
          "id": "67b23dd0-3acc-492b-96ed-a60d9d8ae3cf",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "965eb44b-b611-43f3-9db9-a36484916324",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e89c4675-6443-498e-9fb9-63f320463d37",
        "cursor": {
          "ref": "8b4feab1-5638-409c-8ef7-5c55e5f7c26a",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "d8d864be-9438-45eb-85eb-cb8f00deecd1"
        },
        "item": {
          "id": "e89c4675-6443-498e-9fb9-63f320463d37",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "e20bfdc3-c180-40c3-9149-a5506b50e3b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d0b6244-285d-4b25-a887-1c0d67ef9219",
        "cursor": {
          "ref": "c18732b2-25c0-4f45-bc0f-d9c65ecda25a",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "c4fc241c-2b39-4419-ba6a-ca613b2ab844"
        },
        "item": {
          "id": "3d0b6244-285d-4b25-a887-1c0d67ef9219",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "78bbd6a5-c82b-458a-92aa-8abd54373ee8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "742a2175-6be8-4688-a591-b31ef62f552e",
        "cursor": {
          "ref": "07529685-212e-4bc2-8baf-c38431966907",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "aa2c39fa-124b-45a6-a7d1-e127d672347f"
        },
        "item": {
          "id": "742a2175-6be8-4688-a591-b31ef62f552e",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "8a1149e4-0b49-4847-a6d5-e628645fd5cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd504c0d-8cd0-4aa5-b203-8ecdad6081dd",
        "cursor": {
          "ref": "7ab92680-9844-4b9e-a8ad-f7875cb48c6b",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "7bac1851-1533-4929-b85f-1543a6f01e06"
        },
        "item": {
          "id": "dd504c0d-8cd0-4aa5-b203-8ecdad6081dd",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "f9b68d5e-c4a5-429f-84d0-4b2130910977",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c0caa12-9104-4a3d-9c8a-4fad639c51a1",
        "cursor": {
          "ref": "b36460dc-c304-4c8f-8235-b2de4a635c56",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "59eb473a-2a40-4d37-960f-5cdd141b2fcf"
        },
        "item": {
          "id": "3c0caa12-9104-4a3d-9c8a-4fad639c51a1",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "7fbe9608-596d-47a7-9a76-28d51efae389",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99d53960-b0eb-42f9-a0a3-349aa4a70d02",
        "cursor": {
          "ref": "eaed7886-4da3-4e7d-a099-3e93e34dd2a6",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "4cb17644-bd66-4ba6-aad3-d06f3d148d7b"
        },
        "item": {
          "id": "99d53960-b0eb-42f9-a0a3-349aa4a70d02",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "261fd353-e20b-4d5b-a2f8-f459e03b582b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ad887be-7813-44df-a4cc-50ab5376bcc3",
        "cursor": {
          "ref": "19a77ffb-fd47-4b90-8410-bbfc380776f8",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "d7901567-5efa-414c-8264-1962d243119a"
        },
        "item": {
          "id": "2ad887be-7813-44df-a4cc-50ab5376bcc3",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "6e7825e8-b804-4e92-b558-8e498a6ec251",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "408de65b-dbdf-484b-a502-90d115475cf6",
        "cursor": {
          "ref": "092ead8b-bd05-4e6c-b8f5-43d7566e3b93",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "5f10b204-d4c2-43be-a279-3cfb92edd2d9"
        },
        "item": {
          "id": "408de65b-dbdf-484b-a502-90d115475cf6",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "8756da4c-5955-473c-88cb-e0bbeec1c5da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e22570c-6534-4a21-83d5-7ebfd79b9180",
        "cursor": {
          "ref": "3e29f95f-ce44-42f0-9d86-a40e0c6a3fcd",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "accc9775-ee4d-4c2b-ad46-12d01c68de0e"
        },
        "item": {
          "id": "8e22570c-6534-4a21-83d5-7ebfd79b9180",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "5004ab11-5bbe-4c2a-9da5-a9c10427006c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b581e02-3aa2-4c20-94c5-e2fb310c3d0b",
        "cursor": {
          "ref": "90069d1f-34f6-44c8-8597-9e9f0828d760",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "b283286a-6d27-463e-b39c-10cdf65767bb"
        },
        "item": {
          "id": "5b581e02-3aa2-4c20-94c5-e2fb310c3d0b",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "6e37e87b-a956-4c67-b1ef-cc62df414405",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41abe724-2c49-42c3-bf6b-9fea912bb57d",
        "cursor": {
          "ref": "7d8dc9cb-213e-451d-b864-30b12f578634",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "d5bb99a3-b481-40f5-9d75-71a9013d339b"
        },
        "item": {
          "id": "41abe724-2c49-42c3-bf6b-9fea912bb57d",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "61c50bde-de70-478f-b725-dcf5f4571654",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e082eaeb-16f0-493f-b72d-544188a7dc08",
        "cursor": {
          "ref": "228e1a75-b065-44ed-843e-d37cdf66a781",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "7ac93e30-e59e-4dcc-baa9-d0aaf369827b"
        },
        "item": {
          "id": "e082eaeb-16f0-493f-b72d-544188a7dc08",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "30375aa8-6300-463e-a68b-2a06b3275dd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 102,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0a8875b-7452-4b97-8995-9625a24f986f",
        "cursor": {
          "ref": "3d9d197a-7e1e-44e1-98aa-a75d3dffb97a",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "64ad0521-1435-4209-a31e-055ecb82428b"
        },
        "item": {
          "id": "b0a8875b-7452-4b97-8995-9625a24f986f",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "38dd903a-5c3a-4424-b796-c2bc92acc846",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecaae812-efd5-47e2-b181-b1e362a5be1f",
        "cursor": {
          "ref": "d0d192c4-e9a1-4e06-b1c2-8ead481ed721",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "1a6ca50e-5b6d-45bd-bf0c-d123b5dbdc41"
        },
        "item": {
          "id": "ecaae812-efd5-47e2-b181-b1e362a5be1f",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "8647dcd3-8a07-4242-b886-4bded251ce83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "000ebe3d-883f-4019-95a2-2ffcc2cb198e",
        "cursor": {
          "ref": "594536ab-57e5-4ddd-8646-a736715b22c8",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "6a217ba0-ac32-4638-ab55-d0e0c3e26342"
        },
        "item": {
          "id": "000ebe3d-883f-4019-95a2-2ffcc2cb198e",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "3c6399db-7693-4ce4-bb88-be9902a5b31d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97f5de8b-f00e-4dfa-986d-9e88f81d2ea7",
        "cursor": {
          "ref": "e89048f6-4534-4684-963d-d76ed3228a00",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "f04f2dd1-ca81-4653-aadb-226427c3b45a"
        },
        "item": {
          "id": "97f5de8b-f00e-4dfa-986d-9e88f81d2ea7",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "80a0df70-7272-4b47-b3e0-568f51d89721",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e45447d4-a7e1-4c34-87ee-a0b88de7a324",
        "cursor": {
          "ref": "bf650bc8-249c-4ae5-8b3d-308f38d47dc9",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "785c03c8-83be-4664-b62b-7f96056a6b5d"
        },
        "item": {
          "id": "e45447d4-a7e1-4c34-87ee-a0b88de7a324",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "8a643192-b2f9-4d4a-a069-f1643f73e3d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75c9c875-cff4-4b6a-aea2-cf63a6b3ddb5",
        "cursor": {
          "ref": "36ede0cc-8d34-4fe9-8914-2daf0dcbaa7a",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "30b9e1d0-3399-4a6c-b182-6a93e2fc5101"
        },
        "item": {
          "id": "75c9c875-cff4-4b6a-aea2-cf63a6b3ddb5",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "92dacec5-0258-402b-8d18-0160d8577a83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e575f218-4fa4-4732-bd87-be0e12e631a2",
        "cursor": {
          "ref": "11e34ec5-cdcb-4d3f-bdb4-898444ffc5b7",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "b7925ab2-4109-42ea-856b-163f480a911b"
        },
        "item": {
          "id": "e575f218-4fa4-4732-bd87-be0e12e631a2",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "5363ddec-7294-4395-9018-e18200e4a053",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f396d9fa-666c-4859-9517-6dd59edd80f0",
        "cursor": {
          "ref": "e678a933-b58d-4176-a1ae-9f0680bade6e",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "76db6781-002b-4f8b-9848-14cc4d4d1268"
        },
        "item": {
          "id": "f396d9fa-666c-4859-9517-6dd59edd80f0",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "722f231a-e1f5-4654-b908-84a483f01fdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61ba4f96-7a91-449d-8a6c-1b0c257d7747",
        "cursor": {
          "ref": "e896c5a5-66d2-49e7-b971-2e40a7de2d7f",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "df0be7f2-55b0-43a7-aaf4-e41257aee0d4"
        },
        "item": {
          "id": "61ba4f96-7a91-449d-8a6c-1b0c257d7747",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "7f097518-d9bf-4e35-8be5-562de57afc2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dddccba-e890-4158-9450-0b64c584f8d2",
        "cursor": {
          "ref": "6879607d-f4d6-4d5e-b705-07b28a4d24eb",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "42810cc4-7323-4e39-97e4-59c6b11f30fa"
        },
        "item": {
          "id": "5dddccba-e890-4158-9450-0b64c584f8d2",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "b25e8233-71fd-45ae-bbeb-6262ce032eee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f667c6a8-5a04-41c6-9faf-b2e024e9e7f1",
        "cursor": {
          "ref": "e1d1681b-9d23-4436-9f7a-5076f6644cf3",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "9955b283-56ea-4c15-bbd4-17ed70099168"
        },
        "item": {
          "id": "f667c6a8-5a04-41c6-9faf-b2e024e9e7f1",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "25ea88cc-19a8-4a40-b06b-fbee4d2f88f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f47d0b6-c2bc-4335-bd2e-f3a7b21b13ec",
        "cursor": {
          "ref": "cb69b9c0-1b7e-4241-9c6c-241f4114cd19",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "8e24fa62-7ce7-4b61-be34-ac64f8cf1403"
        },
        "item": {
          "id": "9f47d0b6-c2bc-4335-bd2e-f3a7b21b13ec",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "285b3bbf-8f6e-443f-8c6d-1a26a31ece28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "740bb245-6e59-4fa2-a19e-884ac0e239ab",
        "cursor": {
          "ref": "af2f7bea-b390-4e7a-8328-44e7edfe9011",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "70b66e4e-6e8f-4b6e-b22b-367f305eb353"
        },
        "item": {
          "id": "740bb245-6e59-4fa2-a19e-884ac0e239ab",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "ed236257-9b0b-4082-934a-a25627976540",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4df22932-dac0-44b6-8cd5-d2c2640c4014",
        "cursor": {
          "ref": "2dfb88e6-f592-4e9a-9bf5-18d402d10ad0",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "97c3a514-1134-4f27-a945-2506f779b543"
        },
        "item": {
          "id": "4df22932-dac0-44b6-8cd5-d2c2640c4014",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "571ceff3-ca17-4075-b7e4-5914e87b92c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53af5a49-9458-4864-b6ee-fe583c198ee4",
        "cursor": {
          "ref": "f6d56cf4-2288-4cf6-8bb1-b7ec1a762811",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "d302e89b-051e-4b29-a743-072df1637476"
        },
        "item": {
          "id": "53af5a49-9458-4864-b6ee-fe583c198ee4",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "3ddfca68-a891-44d2-a94c-71d194352505",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70bfd7c6-ce01-4a95-abab-4115275315bc",
        "cursor": {
          "ref": "46da4511-773e-4927-b213-4b6bf678ed86",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "1e45d45f-f9f8-4c5a-97ca-1b550727b55c"
        },
        "item": {
          "id": "70bfd7c6-ce01-4a95-abab-4115275315bc",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "62e9151b-6a70-410a-9658-12650457923e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfeeb2ce-c95e-45cc-95eb-643274e17dce",
        "cursor": {
          "ref": "834bdd3e-ead3-4c3c-af9f-343991df6306",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "9abf9027-384d-4e26-96c2-4834a6548899"
        },
        "item": {
          "id": "cfeeb2ce-c95e-45cc-95eb-643274e17dce",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "90bcacd1-f7c9-4ab8-846e-d9fbe204b07c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 121,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a255692d-e6cf-4c18-aa4a-c0dff18b5dbc",
        "cursor": {
          "ref": "575da708-17f3-4b3e-93cd-a7fdbf301821",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "04391b5f-9600-4e10-a5d0-b4e6a132e115"
        },
        "item": {
          "id": "a255692d-e6cf-4c18-aa4a-c0dff18b5dbc",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "58f25f5a-419f-48d4-b6d3-0a4e5951724a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa022b47-5c9a-40ec-97b2-1bd97648d1a7",
        "cursor": {
          "ref": "01c8cab8-9545-49f0-a83b-b8f42ae05c57",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "266672d3-3cfa-438f-97d7-14c80d322028"
        },
        "item": {
          "id": "aa022b47-5c9a-40ec-97b2-1bd97648d1a7",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "52195e79-5bfb-41c2-a83a-3ae2d43dffa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54dfab93-d17d-49d6-9cde-ddc5a5666ff9",
        "cursor": {
          "ref": "621912b3-8fba-4881-8e42-6537b6b8d145",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "07891a88-7788-418c-b580-3c694f7394a9"
        },
        "item": {
          "id": "54dfab93-d17d-49d6-9cde-ddc5a5666ff9",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "8e483f16-1e96-46ed-81d0-16481d255b31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09cefb47-9bde-4fed-8ab1-88c899b07b9b",
        "cursor": {
          "ref": "b8a56126-ceb5-4256-bcd5-ed819426a158",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "513897ba-9bb9-44fb-93aa-007b3cc07d28"
        },
        "item": {
          "id": "09cefb47-9bde-4fed-8ab1-88c899b07b9b",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "8c5903c9-3435-4683-bc48-b0ffad639ce6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e31d36c-a7e6-4ff4-a0ea-19fd29caaa66",
        "cursor": {
          "ref": "6419f061-c3ba-44f3-8215-41b547c378c6",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "d2edfa84-b29a-4855-a5eb-888bbf61590e"
        },
        "item": {
          "id": "8e31d36c-a7e6-4ff4-a0ea-19fd29caaa66",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "1c74a6df-d9c2-451d-9a6f-9036d9610115",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2688037-36dc-4036-bb7e-97f19fa7c5f9",
        "cursor": {
          "ref": "954da42d-17ef-4edf-8aac-b7710c54906c",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "cc5a9302-f43c-447e-a35a-70f01165742b"
        },
        "item": {
          "id": "a2688037-36dc-4036-bb7e-97f19fa7c5f9",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "5cd1b91e-7e8d-458b-82a5-a17736bd0109",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "563c929c-6c91-4756-a2cd-51a970be9387",
        "cursor": {
          "ref": "5791ce7b-ff12-4cca-b391-3e5af3624155",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "41f6c562-203b-4de0-a9b3-67a81f4cc56e"
        },
        "item": {
          "id": "563c929c-6c91-4756-a2cd-51a970be9387",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "f3927266-6d54-4f97-b615-2a1d59daf467",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cf2a5eb-2627-42d7-b1bf-bd74ba01c632",
        "cursor": {
          "ref": "e56f5a6a-e8a1-4661-bc18-3d36fca74fba",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "63151e8e-6d8d-4cfc-ba93-08f2233838cf"
        },
        "item": {
          "id": "9cf2a5eb-2627-42d7-b1bf-bd74ba01c632",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "651da077-1043-4473-9426-4c3f033131d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04e04659-824b-4ec1-ad29-ac4d81cb2a8e",
        "cursor": {
          "ref": "a20dc1a4-7710-4f55-990b-46b8bbb89d00",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "9d7535de-e85d-4c96-95c1-859014fcab11"
        },
        "item": {
          "id": "04e04659-824b-4ec1-ad29-ac4d81cb2a8e",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "c647543d-2d55-401a-ab7b-44af31f1a557",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 94,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6019f286-8bcf-4558-bcd7-d0f7b3f648a5",
        "cursor": {
          "ref": "ebe3d7e8-fcaf-4620-8024-c708a317c759",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "8b49284d-ccdb-47fc-a3b2-5843d321caea"
        },
        "item": {
          "id": "6019f286-8bcf-4558-bcd7-d0f7b3f648a5",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "4d2771e8-f91a-4cad-aa34-9360c838c819",
          "status": "OK",
          "code": 200,
          "responseTime": 146,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "38778eb0-7bb7-44a6-b552-6f55b0431772",
        "cursor": {
          "ref": "87259e27-089e-4804-968d-d49008d71afa",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "b7b62bb0-4132-4980-a2ee-c35bfd74a041"
        },
        "item": {
          "id": "38778eb0-7bb7-44a6-b552-6f55b0431772",
          "name": "credentials_verify"
        },
        "response": {
          "id": "c95d1805-a1f2-46b0-981b-c8ff625ef143",
          "status": "OK",
          "code": 200,
          "responseTime": 1681,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "b52fc1e7-4ce2-479d-88e3-d03d90fa0274",
        "cursor": {
          "ref": "14ce3a51-9764-404d-95ad-8c325334ab36",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "23d5e354-5934-4a63-aca8-a811d49c87b5"
        },
        "item": {
          "id": "b52fc1e7-4ce2-479d-88e3-d03d90fa0274",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "eb128dba-a22a-4647-8283-d701395fe0f5",
          "status": "OK",
          "code": 200,
          "responseTime": 1465,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "e94e238a-930f-4574-af29-084a5772bc42",
        "cursor": {
          "ref": "70e1274f-352e-4437-8c18-53b06bfc5e25",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "5df59f1d-66a4-42d8-a5c7-eb09caf8d5bc"
        },
        "item": {
          "id": "e94e238a-930f-4574-af29-084a5772bc42",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ca21140b-a416-474b-a894-55ecadc14106",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 86,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e94e238a-930f-4574-af29-084a5772bc42",
        "cursor": {
          "ref": "70e1274f-352e-4437-8c18-53b06bfc5e25",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "5df59f1d-66a4-42d8-a5c7-eb09caf8d5bc"
        },
        "item": {
          "id": "e94e238a-930f-4574-af29-084a5772bc42",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ca21140b-a416-474b-a894-55ecadc14106",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 86,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7ff59a0-5173-4479-8370-a1d6be0c87e4",
        "cursor": {
          "ref": "13051f5c-9a8d-4192-a8dd-20f865b53d07",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "da41b2e9-2c72-49a5-9909-a6b4af09a10e"
        },
        "item": {
          "id": "a7ff59a0-5173-4479-8370-a1d6be0c87e4",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "8526da95-5b99-4574-b0a8-51b31a8c664f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 78,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "693e8732-c8ed-485f-bb50-8b90663c7765",
        "cursor": {
          "ref": "f9994abf-0c39-47b7-84bb-2b9d0cc78488",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "c43e4f92-7454-4a85-9dd6-8ce90d20a973"
        },
        "item": {
          "id": "693e8732-c8ed-485f-bb50-8b90663c7765",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "c2c12435-867a-44bc-99a4-651d70329e20",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 78,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}