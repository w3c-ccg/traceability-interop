{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "1e6b4dcc-43a4-45d4-ab80-c9551ba4e106",
        "name": "Clear Cache",
        "item": [
          {
            "id": "4ae9fb08-8336-41fc-b076-b4dc304a7bad",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2d90dd74-d2b4-490a-9f5b-d14b30fea4bc",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "112db150-85b8-43a4-8c21-e3dee7d77358"
                }
              }
            ]
          },
          {
            "id": "79197a8a-614c-4366-8400-9e0506de893d",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4c860d69-3b0b-47bc-8270-f7f41fa48e36",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "85069fbf-6273-4762-b9e7-86f7dd3807d0"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "29629ca4-dd85-478b-8d23-69a0dadf3b16",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "002062c5-157c-44f5-a1e2-db616840d4a8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c5aadd6c-c21a-416a-8652-eaf5b4fb8972",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6802b7bf-e100-4288-b8a7-8ae06a185a6b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ad1ed0d5-a49f-4057-82e2-405ffbddd8be"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "840fd725-ed1b-484a-aefd-a63e645ec0e6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "96f22bbb-501f-472d-8375-39186dd9028f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9d08bcfc-cb30-4f13-9e3a-f337a75330c2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6d3487b5-462a-433c-a2ad-5c268ce302a8"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e0d85321-4466-4698-b8b8-7320dfc5a29c",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "7aee3f24-e119-47d1-85b8-4a574c57f27d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fcaa95b0-e66a-438d-b30f-440336c843c9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1f6ae23b-5f1f-4f40-b316-8369c697fabc"
            }
          }
        ]
      },
      {
        "id": "47623728-cadf-4ecf-992f-370c3cc00dbc",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "332382b2-2f19-448b-a130-1b1b2973152a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d30d03a3-3f74-4727-8785-3352517562b0",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2254462d-781f-4bdd-99aa-bfeb2639cefd",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05469ec1-5603-462d-b603-a454ee394a9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "eaf46394-30cd-4e99-bf59-55f97bdc8d93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "580d3be8-6867-488b-a278-818c4b2ca37b",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95e0ae92-7f0d-43d9-9f1c-aba93d375606",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d7c3a4d8-ca55-46e8-8a60-06a371b6ca00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16104b9d-b3d3-4bbc-95f4-7840201ed9a3",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae9ade00-eb2e-47a6-8bab-b6c05508a0a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6d38d64c-9efe-49dd-bb13-24e008bc6869"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3f00bb86-195c-4ac4-aea4-6de7431abe63",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6e7da3f0-3a17-4498-83d4-88c17df70d87",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5b2f83e-ecca-46ec-a772-bb7f096ab8ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b82683fc-50ed-49b9-b692-02d01be9bc4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d5271ee-26c1-4c2e-9847-100a66ebe107",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e68e7f9c-ce5b-41a5-8167-3559921ce8b0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "96613e71-964a-46cb-b1a4-a31e074c6290",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d5eea993-f262-4ab0-b990-9591962a0f4b",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7063a11a-9003-4b51-a2bd-d2a5b3629e41",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "bb2208d0-acc1-4d78-b69b-0eb3c04043ad"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cebb8d3d-15a5-4336-ad41-87a94df8d569",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "08eb1ef7-427f-42f9-afa7-2e15f5f86f40"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4f3a63a6-82e8-44f4-8388-8356930ad819",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9d450618-518c-4dad-af92-00cb8de2dda0"
            }
          }
        ]
      },
      {
        "id": "221885d6-e036-4f8b-bcb5-686b42e7921d",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "f07bbe2e-d271-4e68-ba6d-5bfa2c018fa6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2476ae13-867f-4ce5-ac52-1cfab461756d",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "cd31fa17-8e51-47f8-a4e9-1d9a78451c56",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e938ed2-9389-406c-b0dd-41ce33e4a8e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef14f595-8243-40b1-bf1a-30b459ec57be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f0af94d-f48f-45b4-be73-a596bd5eabbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "abaa23da-9460-4b63-960b-f1c516ffcbb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89a4297b-c327-4d96-8f5d-4f0fdf048385",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2f26fb5-4801-48e5-991e-f33028df07fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04320ed3-2c58-449e-a961-68f3e34e316e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6094c19f-15a0-4045-b64d-34e61f07bda5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "11102ee8-6569-4bc0-9891-62d8d33e3e54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0730ecee-6270-407e-8780-eedda3e984f6",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3727320-d124-4d54-bb7c-abcdba9351c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e07dfa7-ef4c-4195-abfa-986292e0afdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef4f1b94-4221-482e-8ae2-9d1dda269512",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d3673d6a-31ff-48d7-a66b-96a1f00c5a48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27a71bb3-650b-4895-9cc9-479befc9c405",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d2f1253-07da-431a-88a5-16f22e89bdcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92ebc405-d591-4880-8405-bf35817c5678"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "128e580c-5f75-4fef-ab1b-ce5cdaccb166",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e2b68ec8-a2e2-440f-beb0-6a91f0fc285b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "649b6a7d-6c00-45ff-9b64-c41f9c78352c",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f35fe32-79ba-4099-9624-515b5b6f72cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e7c252d-85aa-4e44-861a-c0b8f36eb455"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57c6f248-d4c5-428d-afe6-928e392ccd2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d36942e1-1d6d-4f40-96c6-bb1e1c1b5731"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0382473a-f255-484f-aac4-7310a8ee04c9",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63445a50-8f3a-4ee2-9b2e-ef5ad0b3e308",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d567e3d6-8be8-453b-86e6-e7e9a5db070d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ba73202-b5c4-42c4-bff9-c17c44bc9231",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "adafaae9-cd57-47ef-87b1-8217cf60a4ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e8ab2a0-93a2-4505-b4ae-9f2a389d3b1c",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "827690b7-0b7c-4286-ba51-ec1182937de0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49f7bd55-1a03-4516-9d74-37b68238ed74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a6d7874-e52a-4e51-933e-7fc547111f96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3d9d9a0f-6702-47dc-a01c-4e31e5534ec7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f51737a-0b94-41bf-baba-19565a567396",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a51a05c-334f-475e-abe6-756a9fdaf2ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cb3a260-bc03-4631-9090-2ceba6c05204"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8542ce54-9883-41de-8026-9237199ef88d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5a133b86-90c1-4f31-8565-aa3155823ed3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a58cea0a-28a7-4bf2-b57f-0a8cca255c48",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44186c11-5605-4492-9058-d498a4d54d8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ff5c932-f731-43b9-81a7-96e943d933a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3f6f5ab-62f8-4e2a-8fe5-b46d3bf82637",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a7adb57c-58a6-4500-bf37-0b1bae71056c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48aa27fe-dc4a-4ecf-b332-e5e687a5df6d",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ebe3e5e-6fe7-46f9-a9c3-2a70b9477a51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "deff832f-f187-437e-a17b-c7b580751d22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a1a0899-553c-489a-a2a8-4103bce341c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fc26d3cf-92c1-4485-bb37-95c059b67e2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4afa1d3-9063-47ff-b634-8baf379a9231",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0578c580-a4b6-45b6-8bdd-7cdce99cd70a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ffca2aa-70c4-405c-bf4c-93ee1fcc7f3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9426c1b3-6e50-4443-b4ef-c9cb6d336044",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b6e84988-ad82-40a9-92f2-f1ff3432c12c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92400b25-5427-4d72-a7bb-3cda9e97673f",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92e0f905-3849-4ea5-b929-ca3d098ec979",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec11fb2d-5558-4dad-949f-0aba17875c36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b05fbe72-5270-46fc-968a-925d89f783c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "486006b0-04c2-430c-aab7-315d6ec93444"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbf9bd69-564d-4871-8dba-892dba3d44a1",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a593cf0a-f831-49a9-9342-e58798c65652",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26b5b396-169c-413d-8a56-8093b9ffe0ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad3c1036-cf24-4ab3-b176-9670be210d5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e942cb7c-a4c8-4277-8762-25fbc07e20e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b8263d6-bd63-426d-ae2f-404793628b58",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40f7f2be-08aa-43e0-a673-024fffa9c3c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "906e622d-3ec1-45af-8f91-d8642d95cfa9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f2ee717-2335-4b88-ab2b-02ef87f104f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d27e3f04-8757-4d32-82f0-be6990fef0dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1aa60f6a-1afb-4f45-aa13-f0213eb22043",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ecd7ac5-da16-48d7-952d-0a0baeb1cfac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66062332-e213-48e0-94df-2df6f2466552"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3d3cf5d-848f-4af5-9572-ae6440e40c09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "37bf49fe-5cad-409f-b16d-1c7b4b01c036"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43740492-11df-4ec8-87be-c7592bf72b45",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c47823ba-3fc8-46ea-8fb4-1cab3df1d0a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ab4f744-71a3-49d1-89a2-28dc982207ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5450fc9f-b3e8-4668-aed4-53671a991b9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "05f9b1c9-6c15-4785-9f3c-d2876c0d1a14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e184b694-aa62-4c49-a498-9981ade8ce72",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c67a424b-04b4-4cb2-bdd3-89b084774ac2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54f8a13a-4fce-457e-a32d-fb89daf628bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12e6994a-dedb-43c1-adc8-0563eb6e185e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "726eae23-7caf-4f27-b265-6912890111cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "497f8933-efbc-4e9e-a153-a4806c8c4d3e",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77487ef3-293f-4f16-95fc-0f41b4be6148",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bee124d7-6002-4c36-8fa0-77b69c620b74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6faf120-badb-474b-987f-6678f1d93f5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "4dad58d7-dfa9-4de9-ae11-7163e6cfa4ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "253fe94e-9139-4772-9191-be5269d0482a",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccf13576-e43f-4b5e-ad90-d8286f5202c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cfe377b-cddc-40d2-b370-696578051fbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "906804fd-2991-446c-b2cd-2690c9d198dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "70a65e1b-4c73-4c95-bca5-ce0a685e9f3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "feeee6ac-7dd2-4f70-b4e2-7181ec0daf89",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa1e80b9-7b8a-4efa-bd98-40ada5263438",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f43e847-767a-455d-b433-12c43b8cb23b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7929832-5b93-4376-9f9f-1767e4157175",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "42c41943-f84f-41b6-8a4a-874ae104938f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95314697-7358-4647-8e86-252f8e434fd3",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8884a55-82d5-44c8-bbd2-370671b35bec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec3ac1ff-f11b-43b1-a858-1e0dcb296f32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4df0116-5be0-42f6-89f9-b9013f32abb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "279b8cf7-fd61-40aa-959c-a3e70489bd38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52a78033-394b-4c2f-8465-67d21171562a",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44c43d2b-3b52-45a3-a434-217684ef15c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "447d1886-e0c2-458e-9267-b8722593dafb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7015d23d-251c-47fb-be10-8984bb6bf495",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0967ef2f-a97d-43ca-9439-f901ab9a8a1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d21fc4cc-aebf-4c5b-88fa-e80df364f98c",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0639ab81-4d68-4dd5-a3ba-796fbb988db5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eea2d6c3-75bd-4b5a-b8bb-553f4c956241"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97ea4648-f762-4fb5-9fac-5338a11ceb75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3c8a0c3a-9ea5-499a-aedc-4ee3524e1ca3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bef23fd-20e2-4bc4-b1d9-161b2983a173",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92288b75-35bb-43e7-9303-17060699652b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fce9c0d-e813-4bb5-bc4e-61a0fbff3b01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97113376-dd77-4677-ae6a-e0104dc5ac87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "c28001eb-50ad-4a8f-a067-51347fabdf17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b08855e9-5ea9-4b7c-b816-2a82969235ff",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c342b43c-63eb-4924-9aea-330e5eb784d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95521353-1c89-4e5d-a0f6-01c67af9a3f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e698c678-10f9-4a7c-b61e-06e99d213636",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7eda07d-cf8d-4384-919f-588221a5d3ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e34a84b7-da0b-4be1-9a9e-7150837119d4",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ea98980-000c-40a8-b3e4-082f1638eea3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5dbf6f6-7ed5-4fc1-8ffb-8c5b7b07a8ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d80050cc-e8ea-4bc2-895c-c4ed62b0f2fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "48a3a2ab-66b4-49ee-9917-7bf3805fc03e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2753123-5e74-4dcf-b37b-fa5c4a028a4a",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dbe3a8d-050d-4c46-87fd-14c6a8a03501",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "984b3cf4-905e-4369-aff6-70330a1868cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c9ab854-991a-44a5-8948-9ef01400f43a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c93ecdf-dd30-4307-bf17-984608d4bfba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c2265bc-8c2f-4b91-a13c-a8a262d08df7",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a6e675b-a0ff-4a74-bc39-e5f4d15aee49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfcc2ee6-dec6-43e4-9325-eae90653afb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fba1ec9-20df-4d66-b6fc-d7c7177484ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "aec5b997-40f1-4d56-9dae-6786139e9098"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47f191ac-ad71-48f0-a0be-c47e628c7b35",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e29bf56e-dff0-40f2-8321-bc7304146a55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52382bc2-edc2-451b-b5ab-c027ed4efb36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9946001-1ca6-4568-87d1-cedef1b6d55a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9161005c-5699-49e4-809f-29ea903f9a33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05632e33-31d1-4b0b-949e-d98a28f3b425",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19208ce4-2bf8-4f2a-abfe-4e0058a7c754",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9a79201-41eb-43f8-a16a-2c9c1253e6c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56040a6f-dc02-442f-9569-f07b3eda2bfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "3760d709-ac47-414c-b831-43d157a2d61b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52063342-26d0-4a97-a449-670424cd6b15",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53c0e0a5-4482-4bb2-9e62-4be406413a49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60d9ebd3-ae26-4a2b-928d-09c556750337"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88aac6f7-eee4-454b-8574-44d1f7dec838",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1db2c19-96d3-49d8-ad99-934d0ba42bef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43e7cc9c-2110-47c8-86c0-e1ebd11b9aa6",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b17b111-e23c-4c10-9400-c4e5c4f68179",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "965bf1a0-57c8-45f8-b140-8f131c5067b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec2c2d36-675a-4552-be74-200ee41b507d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dda9f8de-3444-464c-8480-860ee5e321a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57bd4e03-d1d4-4416-a829-7281e7932a70",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75818081-a6be-4fa8-9878-631c7763ab09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ca92402-d060-4d47-9c6b-dcdeba382b12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "416e288b-8c72-4b48-92f0-140d7e54d748",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b272ba2-4383-4775-8f68-b2e9d042d6b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07e4af73-6c0e-4979-b523-ddbf2397f94e",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90b6dd09-b9ad-42d2-9601-8e1448027132",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da111d90-af9a-4f80-8c51-d847fd72e8ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d7dd5be-dfaa-4cca-a5ba-f9726a5dac21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "da8ad9aa-bf48-4c80-82f4-e093ef78a299"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3004858a-9126-4d4a-809c-34a0c7a38437",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02ecd343-eeb6-4b27-bb30-fe504be77f07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f930a9b-d062-414a-bf88-2031e2177738"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a74bba6-5951-47f1-bc9c-f9a4c76fe9d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "a1c3b78f-26a9-4cae-9e04-91f9d92b407d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15f35301-251b-498f-94ff-f114895172ec",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c43542a0-41a6-49a5-a7aa-a883df964c7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ad4e9b1e-1465-42e0-b196-78cc341938a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8674a3d1-d6d4-4df1-8706-00874a162100",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cb21d45f-2981-4ff6-9641-7f6c54def516"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f444de95-f10a-42b4-927f-8bd727a6023e",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00006cdf-ea98-4290-a2cd-3e37607d7cc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd1723c4-7e42-4db2-8d9c-85bf46cc437d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8307795-4c97-4074-a77a-56dc2a182301",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1df21011-57a5-4867-85c4-94661f7c0bfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd8ea10b-ed4e-43a1-a4b6-0a19dbd35bf6",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "893e6d84-8e69-4ae2-9fad-afb8408cf229",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c3d08b8-4864-444a-945e-098a19b4d04c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "900dd2a0-fac5-424c-9e61-3afe309b9bd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "5873e425-ca0c-4cca-821f-03ad9cb026df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d46e5550-0684-4064-8569-b8cc07a260e5",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c249d7f-ce17-473a-b8a0-18d30b4cc2c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb030a42-91bb-408c-ab33-9a7239ae656a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05d306e4-3ce8-487f-97c7-1f92e8b342e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6932c9ac-b200-458c-b5dc-e218d507bdb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79c3a690-b9b1-4560-b391-d82dd14c462c",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4f40970-b31f-4947-9736-0951e43dab66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e52bd8d-255d-4841-b4c7-78b0db4f9b18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "364e666c-10d7-485f-b676-40f2981e1ca9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "98f347c1-0c74-4164-a0ee-b3719a75180d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "339b3724-e3f8-41a8-bda0-0f28c286f0e9",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b821d20-54ee-4944-ab39-13377cab5499",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9021ea3-3c80-4f3a-9ccf-26997699bd75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fd1ee4d-0998-4c9a-b6b0-c6cd031a108e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "965421cf-1ce5-425a-a3c8-459d91f6debd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d1d92fc-ba6d-479c-931a-870ce558ee27",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64bea733-61a1-4ce1-b573-33139bb5a4f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44f5edc3-8d39-4887-a942-5ff6270c6a2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a513a2b8-da23-4114-8ebe-4cd048f5ecea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "b36383f6-ec96-4626-8a4a-9a8828ad9785"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e235305-bb25-4ef3-b210-45d21e45dec8",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceed98ac-8cfc-480d-884c-17a4adb3a987",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08b1042f-a2b4-4092-891b-2be55ed01cea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd459b6a-4b88-465c-b18e-32b8e89e6bcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "2c134b93-17e9-410a-bdd7-ec366d729e10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "527b58ed-079d-45c2-964a-2b0fccd96211",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "946059f4-76d9-4c7a-984a-1e3049ce7816",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2de1f8a2-48bc-47c9-8c93-575c311ec8d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70151844-9f2c-4d2a-8227-6090d60f78e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec2865d4-1aab-421e-a8f0-6da700d2cdae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd74c8fd-e4f7-489c-b3b6-4ec10a93f15f",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0c55485-c242-4b13-958e-acf25a04a5f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4dcb5ffb-5cfa-4ba1-8a34-0e974719e3ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70e4610c-c166-478c-9539-c5bb4ad480c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a870616-c8b6-4b44-978b-78886afc08d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89b16850-c3af-45c6-b1d5-4463a42df431",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f399e812-d616-410a-9d75-d9365a4eb706",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22ae2f1f-1bed-4699-b853-2ec355da2ad1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9784a1ef-b63c-4c14-ac26-db0bff301040",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6192f216-9580-4066-bcb3-22e1a6cebe8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d97601de-4c02-4c73-a1ed-76960743a429",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b59a811-a3d9-494c-ba13-96062a7a2701",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cea3187-0c73-49ae-a9ff-2e0948d19742"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6c8039f-32a7-4b52-9b53-cd64fb81cb1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bac1bc26-bdf2-4dc4-8494-eed06f20d3e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba9aae9f-035b-4013-a555-887d025a88d9",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdcfc8d3-7c48-43e4-9fac-525fb3bb9924",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94a24605-f724-4fbc-95aa-ca09733f583c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dc69662-e6d3-48e6-9143-ab133935c194",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6decbc4c-5002-4bc1-b7c7-499c52865bd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "838fc9fd-151f-47a9-b4be-a2955651622f",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "432a4328-a23b-4183-88d3-b11d6ad21025",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8858639-4d8e-4554-ae9e-660e4dcf2108"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4202a47-7751-4c32-9af4-34e11832e5bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b79f4d68-a536-4d82-b665-9f5269fb3908"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85c20440-9035-4dda-9ac2-22a6a2bed9bc",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cfbdbfb-667e-4182-af83-29eaf3b7182f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39f9c2d3-0668-42c6-969a-2cda552b87d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adaad702-69a2-480d-8427-f1d007e70968",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8c6aad62-befb-4aaa-bdf5-504dfdcc281e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba22b646-073f-4d13-8dd3-391c23d31740",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d926f5bc-a571-4641-a4d0-caca3ecb9034",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42fe5ffb-4a5d-45ba-8824-44081b6a65d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f4bd77f-c640-41f4-8271-5c45e7cf17c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "d3cd0da4-962e-4c45-a56d-923ef81d4c30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fe9c108-b341-480d-a91b-dbdd143d8244",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc4bfe87-6576-4db8-8290-a41bd9ca02eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcbddd91-ea1b-4d54-a53b-ca78b4d13ee3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30cad7e5-8912-4d4f-8ab0-2fc4776437e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "99285573-2ca4-4401-896b-5430f9830b29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6c4dbcc-319f-4397-b9fb-5769fff2b57a",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9095e3d4-e4d8-41fa-b760-153c5b6dbb31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7d2dbb7-e4b9-4408-8700-ed6e734448c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95ffcc64-c692-4ce2-b525-dd37c4d89bc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d1dff7e8-0696-4c66-a917-29ed2c8db078"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6bd90f4-7930-4df6-b8cf-ad3640aa2170",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ab6a60b-8a52-4f39-acf0-55b7290ab44c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84bdd463-d9ec-4668-80f7-5efe9aeefc2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "807f1746-104d-4889-ac9b-c1642144d48c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d1e8bbc2-e980-4956-ae6e-85f60a39ad5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be86af9d-4327-4e96-8878-f62a9ded31a3",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fb6f470-ba07-4c06-8d02-d3300f8b8713",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afe8f130-606e-42d1-827a-d8297dcf1a6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "162ac3e3-9c73-463f-9ec3-7b053c93bfd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "951154ce-e471-49d7-821f-ce336061a55c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94665e0e-7c2f-4dd4-b22d-90962edcee74",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36f1a482-8c18-4203-9bd7-8f55508fe256",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e79f9405-5b20-4d18-bbc9-8aa37aa2d5a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07422fa7-38a7-4400-91ca-a9326849b5d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "342f1d11-96fc-440c-9783-6ec6bfca7805"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15139837-fe36-4d22-9a6c-b1b59d6ebb0e",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acedb0b2-0583-4eb4-8277-41451a262211",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7798536e-2d2a-4846-b1dd-40534fbaf6bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe6fba20-f01e-496d-b250-d1b111be88d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9a4dc6b9-c6b7-4e42-a778-aad71579cda4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b838d370-ae14-4735-9ca3-1aba43f0625a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f60a0ae1-91d6-4c0b-8f28-de1137120add",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9eef837-fe40-45c2-af28-5701aa22b16e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0e3acc5-8da6-4649-8555-df003790bc44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ae54e668-e47f-4069-b1ec-aa1ea1a7e9e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1aaa4f0e-ed30-4e9e-b921-ba8ab9265e5d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e085dc67-ba11-4838-b5a1-3c399c40d7e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "745b5984-9ba2-49c5-8133-8f6d51c86933"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a40df0d1-aade-45ea-a4cd-2a169c2c5b66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "aaa02762-c22f-452e-a04e-c6bf45a41b00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efc439a6-69ae-459c-8351-cfc7f702aa1e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbbf439b-6181-47dc-aaf9-337bf1e81410",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "763626f1-0847-4492-93f3-9bd71ca57063"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6014a05-5287-401b-8922-fe696c8bcd85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3b3f5581-99d5-4791-a4f4-c20d0bf3ac10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "443007b0-96a3-4cf4-9268-f766c519c1f1",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a90c5de8-bccf-4d22-a0f9-b6788240bee7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c9e2e3b-81e7-4224-9104-b1da8e65d9c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2239a7b-072a-4309-a622-4a67e6970f9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "38f1334a-0d8a-4b0d-a553-b4de958b4463"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b78e842-971c-4d99-8873-5b52e8bc1fe8",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5faf6e8e-279a-4a9f-91f8-6f90abc7bb98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edf48f52-9213-4123-a6f3-239bef71f3ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ef9cfd6-0bcf-4246-85e1-bfc1a9c8d6ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "c0f83bc6-2d93-4aac-9e1f-7f4354fd5d07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1b1ce46-6bc9-4ed4-8594-fc4701fe8fba",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48bc6bf5-278d-4746-8362-15615322e6c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a51602f0-38f4-4470-a798-7a9e27dc6004"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dd04465-591b-400d-b73e-7459b079be16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "01948363-ae46-4bbd-859c-a80570a40d70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6430eef5-7fd4-4e20-8c28-9aee1e59befe",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a63acadd-f42f-4227-b813-c14f23c634e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc131103-e673-46a7-9e1f-954674c6cd07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72c55ff8-6f2d-4d57-9c11-73ee17d0c201",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc2d330b-44e1-4313-834d-99cda1b2897c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d854fe2-37de-4446-9772-2bacaf2f3724",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c3ab11f-4865-464c-a22c-130ee8fd7729",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d79c782e-0a7e-49d9-b8be-145cd0e200a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f11feae-99e5-4061-8e32-89e913070457",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ca478b0-5a03-430a-a70c-ce9d0a0a35b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a94169e-d02e-44d8-a126-58d9ce9d3f30",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "759cd5de-addc-47cd-9ffa-f3242ccb8158",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14ea6e36-11ae-4444-9cf1-192f0f86db25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24e9d692-6c33-47f0-83d1-0964fcfb6bf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "800afc07-1534-49c5-8d95-526217580f7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7878d7e-f7be-44f6-9745-0aca424a632e",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95258136-9c42-44a3-9db0-dd748d2999de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "938866e6-05b0-47b1-aa99-f3672e0a8d1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb468199-be90-4e12-8886-aa6c533a8bb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3fb88de3-7489-40da-bfe7-b2a9be8abd85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b08ac805-f5ff-46fd-bc29-4ca9278b23d6",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc704568-f5c5-40e5-858c-22d9a63cf746",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fba35ff-899c-4761-b655-cf0728bbc602"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12f16287-dd76-42c0-a5b0-92b8440ed214",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ccfc76f-02be-471a-ae08-e5fb8710277b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e63a8d3f-0a4e-42c1-878d-79a9cda76937",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29e86176-9833-40a5-9b9b-e7190ae7b8e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04a09ef3-aff6-42f1-9746-05b4b1d5d32e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76470c50-dd9b-4195-95e1-3864ad1324b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "64011953-f1cb-400a-b9bc-3dd21bc26161"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7aff383-2d18-4692-8da3-85105b5f4c39",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb28640b-35a2-42b1-baf7-b2b38fe61e17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "460efb2f-dce6-4483-bc0e-7d94903c298c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be6ad868-e354-4aa0-bf8c-698eafd0f7e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4922e7f5-32c4-4ec6-af59-6120a3155920"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa93b5eb-5af2-4d76-a230-de41ed826e60",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2884a40e-2ab2-477e-a609-9bd9f4a52518",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a247a6db-d0e5-45a8-84cd-60e47c097102"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bb5798f-04cd-4a40-8603-9a842f88f256",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "99525a23-4870-4b01-8785-413f356f4d1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0ef7045-7c3f-4276-8c08-59bb18cb3bf4",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6264a55c-afed-426e-a4c1-e8f2833611b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d73551f-915d-4e2c-8195-2a1bcd46c9f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52fe8a2e-248e-4093-96f0-2430993a00c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "26fc1cda-59e2-437a-899c-531b17465bea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "489498cd-5ec0-4e47-8de6-923468b55d0d",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1716d3bb-e4a9-4b8c-a3bf-c85ae84b755d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31a9c54c-8f31-493d-b7b2-3c561419a0f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b270ac8-46fc-4667-baaf-b096ce4c8d4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e5e2a514-7bb1-4401-93f7-0df2e55ac255"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b406df9-51d4-4738-9ad5-f510a7ae2113",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fc03e6f-c0b2-47fd-a597-41b62568fac7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33248bf2-a48f-4c72-a614-c6fdd745c55e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cce70c9-3ddd-41ce-b53c-5d53a2dc6042",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "74a942be-d095-4629-a725-9d271a93e647"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2722d3e4-07f2-440e-a2ed-783f686e9347",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42e243ab-8cc9-46c7-98e7-8d99171bc67f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58bc134b-0365-4f87-8b90-74f77e029581"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25b0d9fc-ce45-4aad-acdb-e15ee162b00a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "89833c1b-1d80-41a0-beb1-033c7993e4c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88498230-daf1-4001-9127-3732be2e6abb",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf4ea090-8f9a-49b4-8824-8534119c7e1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "009f16f1-71ca-4b96-85bd-c935a36c3b10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76e10fc9-f9ba-49b6-970a-78adc754d28f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "897a8877-9f94-4265-bb8e-9ccc30ffd9ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d1e5de0-f06b-4d95-85a5-12629feaf8a6",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67f13ec7-42fa-43c2-ba02-cf65f9b8565d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33f76623-3129-46d1-8750-9d1cb415b953"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be24acbd-3cfa-4356-89ec-54576fd8e004",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "56ff6845-e79d-400e-b3cd-457e02ab6878"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1a20bdb-5abe-4798-9382-5db14f24791f",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3baed66b-e566-4767-a945-771491bb5bc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74cb4a7f-b19c-4e27-bec7-5378577d42f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48ac2a27-13d3-46db-a5d3-5466aa168558",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cfcb6826-463d-4573-bac4-8b995f6320ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "716c708d-439f-4aae-8326-dc256fafa429",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49ef37c2-31cf-4640-a63f-2b6caf7b65a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27e9e671-e9ac-4f00-984e-a52a8cabe6f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "176bebf8-9444-45ea-a268-a09d23fe3b31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d9b171c4-1618-4190-a171-7276083c48a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "401425f2-3954-44e5-ad57-c975e1ec418e",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddf5650c-1345-4a18-a345-381dc557c9f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2bcc2f8-2372-41e1-a3ad-51f9075fc363"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12564123-271f-48d0-8013-462b6334f8d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "08112555-3bae-4628-96fc-a35902016480"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dc2f184-2193-4f7a-b1ba-81ed8edcdc16",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99b3e421-4ad9-41f3-b167-0071a1c34f31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5525faaa-6da0-4bf9-aadd-f112b69e6150"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb6aceb6-884d-451b-9838-2f538e3feea4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a16aa31-29e9-4fb5-812f-f78ae0acbb87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65443416-33f3-43b4-92ad-6976e89e368d",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "438ef42a-c886-46d7-ab72-a2fd6a536f21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c5d6b86-216f-4b1e-8294-2602d71f2c82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "401cd420-2a1f-4a5f-a149-537ad3480dc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ef0b0cc-0976-489a-8b59-82b5bc8e3012"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebb7f854-676e-4aa3-9b76-e17258319990",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42519206-8b4f-4a38-9f17-fec78f3063ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b54e5a48-6a25-492d-9d24-4dac06ad4060"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c629911-303f-450d-a1b9-c343e3f9f044",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4095dff6-e9f4-4e23-bed0-432aa196517b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fef20541-a526-405a-a7ba-7efd0f3fe530",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87dc2e97-ff16-46bd-8702-a81d258ede16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c04cfb2-3e74-4399-b169-ffec11b3129a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a798e173-eb85-48fc-b458-2a6e64bb0bc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "32d87044-17db-4e99-b849-e7a170a5a09d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22f26eb9-db80-4875-87cd-4948f6902039",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6acec4d2-8578-410f-9ef7-20e2643ad3b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99139469-d3bf-455b-869f-342c5edba581"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bcf8a69-17db-4b92-b1f9-5c5e7177ff6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d0b1cd1d-f469-4873-aefe-ee8811f1b656"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ab3b367-c813-4761-a1e5-13eb0ba04333",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e95cb25-41b7-46c3-a371-09166cec40f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bab0b7fd-13c7-4025-816f-c61af58c8eda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a302eae8-10a7-4b96-9e23-b0e4dd38d1e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "77d22928-c955-492b-8356-74ea4c547a11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d2708d3-c98c-43cc-950e-0e138588c0c4",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf9decd1-57ca-4c7b-a0cf-40eb19c70dc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "920989e0-e871-4a76-ac6b-f3d3aa8da5f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab5b2a83-0a91-4c43-aa9f-7ac6bfdea016",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "4579ab85-7b29-48b7-b69f-a5b8b93e9771"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d04ee67-9042-45b3-b74c-40d867a53ce2",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd3b5fcc-3fb4-415a-b0ab-3f3b04879c23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44ba29ee-c550-4c58-8fa5-0a197da6898f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "334a4446-1ff3-4e47-b51e-f7b3090910f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c1996a0e-b1a6-4752-a228-0d4cea194b76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8431332-459d-4366-acf3-403278038214",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2788e91f-2ddb-4e03-9baf-72dd21f50796",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "becbad54-386d-4ff0-8d62-5a45eaf9af2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7ea2c34-b3cb-4e56-a5f4-156a39f55f81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "af20b062-5acd-4bdb-857c-0245f6f08199"
                        }
                      }
                    ]
                  },
                  {
                    "id": "074cd344-9c16-42ba-b49b-77df2e94f250",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f5221b6-1a09-4ece-bec9-1392bf887ff9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "799677d7-0c33-413f-a2db-2524a0177c76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69d1081c-76a6-48f8-93f0-673168cc14a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f911a199-0f77-4b7d-a9cc-2e831bd3eaff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "384b86f6-a369-453b-b565-f0429d6c1470",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e7afb97-8f64-4ff8-9aec-22a70137f37d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90a538b2-7690-4bb7-b582-c6b7e3574876"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ab2126c-5444-4499-b299-b2918c4b9c7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "d9dd1bec-7a05-418c-9343-77a9fc182ede"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d021771c-3b5e-4290-9abd-70068a5b48e5",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c383446f-95f4-4abf-b77b-97ccae54e6f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "50abfc1e-602c-4006-b030-c00605ee8a3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2be6244-5c62-4a59-ab7a-e8edcc15bd15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "955e2bfe-baf3-4062-95ac-5bdfd52185f2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "db5c998f-2aa4-48c9-a257-5724ebe929e3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "70560e8e-c35e-4591-8cc0-1b1b0702b5fb",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e28ed3b-39ee-49a3-bec8-e57ce4e465c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7a6def10-f544-47b7-a51d-a0def14f334a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cb4ce64-e604-48df-a140-6d1c03f051a1",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f3269ab7-f131-405b-a0b5-16d0baab9935"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "50a10e8e-a652-47ff-8b80-c8f6913f1c29",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bb208326-9986-4807-80d2-c686d5b24d63"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "acdeb0bc-5ae5-49fc-bb11-59ac1ff17cb6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cb5c5ffa-d6f0-46f8-b99f-4d26a208ae36"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "227e3f6c-1abe-43de-b6c5-93b0a8efc97a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "54ecd070-dd97-47f7-bece-94a53b4772f1"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "44d3acec-6d7d-41d9-85a7-4b79c3a2b122",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2df95bf3-cf23-4ac3-aa4d-f113faad7cee"
                }
              }
            ]
          },
          {
            "id": "bc45f0d0-1977-41ee-baee-6e4b4220a3c8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "561e2a54-eeb8-4365-8e6b-08beb53208ff",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "ab98cf11-73fb-4b1d-b478-4c4aeb8b0a64",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "857c667b-09db-449a-92ac-059c959ed615",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "97771090-07af-4e81-b600-16b64a82b2b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "961ff6e6-088e-4708-af7c-0f1b9f19f0b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff217415-1a45-43e8-8166-d9a0c217690e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3e9a6766-e076-4860-a75e-20f96f120fd6",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7ba25e5e-46ff-47d1-abf2-f5ace66135c8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1f2b97e5-eef6-41f9-8adf-e82ff332c225"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1dfcb8d5-b2f5-4bf5-814e-9e0c4e24d6b7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "03d1d881-25a1-4588-bb97-bf8b0b177767"
                    }
                  }
                ]
              },
              {
                "id": "38985739-fa3b-4baf-908c-0a3e1370cefb",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c2983d77-d969-4a5c-838b-4735076d8235",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "41c16839-96fe-4e76-a209-0447fb26150d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9d493477-445b-4b91-a528-03312dae2d19",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "af53c026-876f-4a99-928f-3f3bdac3f9e4"
                    }
                  }
                ]
              },
              {
                "id": "4b792a30-7b98-4785-aca4-44c07eac2f45",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e6f54756-8eba-433a-b2c8-d1d062b6a05b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "25ec0dd8-dcb6-4fe1-8d85-2cafd428877a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "63a048b1-b35a-464c-9ee3-e61dc5033831",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "dc781195-7d6e-4f2a-b621-6d476e5055d1"
                    }
                  }
                ]
              },
              {
                "id": "b1462c8f-9d28-44e7-bd46-6477f6bf93dc",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "165ee652-9d1a-4c07-96cf-b8f62b421d74",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "05579b24-2eb2-4fd6-9674-d3617393ecaa"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "299135d3-772c-462d-97ed-9fd1a81a7186",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "65f7558d-2e1c-4dfe-92e5-c75b61b03098"
                    }
                  }
                ]
              },
              {
                "id": "69d0ec96-27d2-46f9-9fb9-701a5d35210c",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "82315794-03f1-440c-bacb-79858b5583fd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8dd7314a-98eb-40de-807d-05bae87cd8f6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "66a0d413-2d2c-4a4f-92c2-3571e46c5a0b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "0e182b31-7b13-4b81-b716-365d68a56157"
                    }
                  }
                ]
              },
              {
                "id": "f7cc9ea5-9c8f-45ca-bf1c-afc96badb4e8",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b342d21b-3d47-4abc-b8ba-bf0e9f0b2e0e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "018e9e4a-865b-4356-b8bd-acd82c1df100"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c1f8ae4a-8312-4b72-89c1-93254b3413aa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "83ed2b73-1daf-422e-96d7-304418ed7309"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "33edfe00-41e5-476d-977c-1988e18c8ca0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "db67565d-7f9e-4e6b-b581-9d0f655d8075"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9980ec96-1a59-493a-9f1c-30894180908f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "367e3c66-8ad4-438e-8297-975ad2e9bcfd"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "87530cf1-8e5f-410d-8984-1914eeb364f8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "36fbf0df-73bf-41bb-8e44-624a88f06c7b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "458a944e-d3b5-47d5-8ce9-9197672d63f0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "33089d9c-a5aa-4d8c-845d-39bb107c5328"
            }
          }
        ]
      },
      {
        "id": "731b5116-1ebe-4d73-a81b-22222a129cd7",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "4d19954c-56b5-48be-9396-c38781a94188",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5defaf95-1cda-432c-8b81-872a9e642035",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6fcb34fc-9494-4435-9303-f98f8f22d76c",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2dc0d69-f7c0-4a29-9abf-352367feecb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be65e6d1-2c98-42b5-97e2-7f4ddb624a4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f0f5866-3f6e-4629-86b3-6999a6dbf060",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "3efab4c8-695c-4bb9-a4c5-f7ebee160f34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9aec0bd-d14c-44a1-b53a-6e2d7c11bfe0",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1935a716-33fa-42f0-b66b-8f22b140a04a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9dfc885-a3e8-4ff3-b585-7f34d5639234"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd155b8f-7189-4372-8fd1-eb060b66d31e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7506c3b4-2ab0-4225-9692-45bc59525bcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59b4e4d9-1b53-4b6c-869d-3c654471a80f",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91476619-a47e-452d-836e-df677aff0e74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f75f958f-66c6-403d-bed4-a3c5af2a8341"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6309f1e-3068-4592-8610-8a6eaa8db908",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "211b3bc5-8a8c-455b-bda8-fd55d92287ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b89e10fb-f175-4bb3-8ae3-2242f522a814",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42e382d2-2dfd-4304-9f06-a5d2c4db4f94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2620d473-c6e0-4777-abd2-96cb666d7df3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8d8f427-6cbd-4e5b-9048-f37fc0f093ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "de737bf8-9d68-4597-8e60-f54900d75575"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29e9e96e-f2d5-490f-9b7e-9cbeb5ef6e15",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b37349f6-9a6d-4e9a-892a-4b423f1fd7a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "899883e8-392c-4d71-8d1b-5c941f52b8c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64d09795-1b91-4c2c-9985-f08422e552b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8cda6963-3c3c-43ab-809e-20fe2b006561"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ff00b8b-2391-4382-bfeb-73dd627439de",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56a4be6a-ecd5-42be-a763-b231e3b9ea03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "972af661-4f9a-439b-985d-0432e39a2505"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88acd070-1b26-4725-8a59-e2092559f87f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "19878e6c-9da7-4508-aabc-3cb9f78aeeec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "101c74c6-7d91-4ce5-8994-cd07d6123d2d",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b17388d-7a05-43e7-91c2-91fbc998c896",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2600ce3e-d4d8-4958-abb0-c6bf86f61911"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ec453a4-8bcc-44b6-8f52-f8c19abac9a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc27463a-7024-49e3-a1d7-ee018f0b290f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd9ca696-62d5-4f83-baeb-76418018fbe4",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "363f11c0-a71d-45ed-976b-0ab1e15c3237",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e8454d1-913e-4288-a680-8423bb5ffdd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96937ddb-bd48-45bb-88d8-1bd99430704b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e7658616-267a-40d5-adbe-f20c0035f28e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f72f8d4-3f46-4e10-a9ba-a48750cbc1c8",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "923388a6-15e0-4a2a-b333-a50c68dca05b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17b456fe-49aa-4297-85eb-1723e1ad7058"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46989a5c-8612-4880-b196-04da860c304d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c2bac1a5-cc15-4f30-8186-b6dc9ff5127c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d880aea-9211-4b90-abcc-64d70024255f",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23e73d87-3ae2-4156-a49e-1f55e2cea6a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17513f3a-54a6-499c-b37e-135b8c6bf61d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a03c9e29-cd26-4f65-bd82-6211901ee1f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a92b7757-abb5-47b4-a67b-21ead27e2212"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02ec661d-22a2-42b3-80db-7d3924f2b8ca",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3504a251-4282-40bc-a86c-abed13b151fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7647e7b-a4a3-4a66-a58a-0ce5121ea21e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d40802c-d399-40f4-9934-9cda92abfddd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "d779064f-f7d2-4b52-8fcc-0938b1492d1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7658028-e78f-4d21-9702-c744a670cd59",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a6b7c1f-c1f8-4ad3-a815-d6cb4b7d4a0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5ee064d-6f7a-46fc-b7a6-a0a4939122b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "523a6e8b-0289-481c-9c82-b7e7cfd95c70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "990ac03d-3016-4bb3-b78a-0cbc8f207204"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8b71ce9-7560-474e-81f1-58f5b58a3c9b",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11f45ad4-65bb-4d56-bb84-c1a42f833f22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54c4fc18-23cd-4ef4-a055-046d5bd77b40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "205f8473-f08d-4c07-a47e-40c0251f296e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a95e7072-c50a-4a95-986a-6350168031e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8792d56c-e258-4c66-ace8-05bf8544024d",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a15ab9c3-8894-4793-9cce-05e60c9bf337",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e244e550-9f93-492f-a53f-bc129851460f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85085afd-d9dc-4904-8cb4-3b5712e2eb9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "c364ab1c-1972-48d8-8852-393ee5c1827a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65f2b06a-f598-4abb-952f-549d1ef62371",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "109acc27-6b99-4923-a6e5-ad8ca62eda15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b919fd09-5b11-4fdb-afa9-3190d3e5e6d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ade8e0f1-cc1c-425b-92a5-2fa2335d49ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9725430-5225-41d0-a7d1-f0661c19e37c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ca7f5ff-6c03-4c3d-bfd1-edecb8e91f15",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1532ed85-496b-4b8e-a5ac-dcdb27110bea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4f69038-491e-4a33-b2d5-31669d6bd2db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "027a4a5a-7cb6-4614-93f7-b7c210ed18c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ecd899d-1aad-4458-8427-ea1cb16e5f8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e8c08bc-228d-48bc-855d-ee82c9b5c754",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dcc3c0e-d184-41d1-9dac-b7c9f9ba4323",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a66fe91-e63a-4949-914f-394943b303f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b979e9fa-0f14-4c9e-9158-bb3fd314b0e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "f72b9627-4044-4bf2-9acf-ef2a374d3c42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d8e80db-1967-421a-b66d-a2a34c9a7922",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bf10496-a198-495a-a95d-cbb54c720d89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd8b171d-f0b7-4182-8d1d-8c4501e1beaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d25268ca-9adb-4b37-b635-8993d6b10733",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "667f25c1-38a2-4145-b992-ef533c2b7e49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a417098-606b-4a9e-b9c3-2603df319fa0",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b182e3c2-980a-4b17-b217-c7ce2d5e18f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27ad1270-0520-4e98-9990-fa9691b438f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b63e986-88c6-4daf-bb47-2d00a4c61dd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a478e53f-90f1-41da-bec3-f6b7ea80db01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afc07fcf-b879-463d-99cb-1187123e96a4",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebf96e5e-ad12-470c-8d84-326efeae9296",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "105fcbd4-8b10-4d04-8947-fd95a7c54f17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "983fd79b-0a22-4d1c-b5f9-8bebb4810055",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd7c2236-208c-4612-8cb3-f54541b4b61c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87cc9276-0887-4dba-a70b-9f1c5c2a5eeb",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aa571ec-9f91-4ab2-a4a4-626827ab0230",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3970ed9c-1b46-4836-93ae-a4e8848c4281"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84196ae0-baa7-4a95-9a59-faab80015574",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "858a2433-34ac-4bff-9d26-06d41a610201"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9113b1e3-336a-40ec-8b0d-8780918be21d",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3b3617d-2647-4855-825b-f0e900f2814d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d778865f-d6df-4a5c-830f-f60693d88a03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6ef22f3-c122-47c1-8039-14026a5781f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "331dd312-e13b-45ef-ba72-bf1d1e106d0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db5d3172-bea6-44ff-a60a-8a85f5f0ba62",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24f2c768-e5f6-445e-8d13-b36975ea32f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33be9a6e-8aa6-4320-aecb-be7213912757"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9df1e728-6e35-4856-ab03-b9a94fca2300",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f995056c-5968-4784-b01b-5d8c5b1c6a04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eec2e3ba-1e91-428a-a6f5-4c1723983ef9",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79321f52-4c59-44c2-a3b7-f5605c6be05e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d81706e-7b06-4971-b07b-c71352474bb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e7755c1-3009-4730-a43f-7593911fbaf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e32e257c-df27-4e17-9b61-d7ef81aba0f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e2e1bcf-513f-4850-a790-f348876a9331",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f37ec9e3-c5f7-453f-9da1-f38ca0651d9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58d04fbf-e09a-4461-b215-609d0cc85417"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfa28dca-4767-4d15-8242-a3b213361551",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "35bb3bfb-93f9-4ca0-88c9-54dfdeb87bae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd774895-a854-447c-bf78-7a006a818d90",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00f2c7de-af39-4a13-8275-0e40c1b4e2be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a29b27b4-40cc-4629-964b-92a9b53823a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c26a294-c5e8-4ab0-a300-8d936020c410",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a78e6d7-8037-44e4-979c-e08ad6c41631"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b81f24b2-9c28-4cfb-aae8-2c22a0a34a49",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e343e63-4702-4e3f-9c23-affba1530ac8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d211af90-138f-479f-a7c7-a2a125e07c3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b5c00ca-bd6c-408c-9d01-8c67babe162e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8eec96f3-c524-4d1f-bbc5-d8baba140519"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d76943e-ccbc-4e43-b786-c0f0d43dbcc2",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb215fa8-1aff-44cb-aa74-081715f8161f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b67081d-4d19-4986-9ff2-db6490a2cb6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12856250-4141-49ba-9f3b-0b9bcd7877dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c8f2610-a060-4b61-88aa-cc287a7a10a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6b876e6-e05f-4872-8b6e-7f68f52dcf9d",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7dd4e3d-907e-482f-9037-675797998d3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "418f5e5d-fcd2-49c4-a892-2b9ef9f03d88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70ae4802-39e1-40c9-b712-2ca634e888d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "80a9a8e6-739f-42c0-ac23-c7919f66a805"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d3684b7-9e52-4688-9ca5-2e8f05029764",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01fe7dd8-8215-4139-bb8b-435aec2daa3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6e8cb63-2c48-491c-9248-4adee02eaf92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2be3f6f3-a0cd-4003-8d4e-deb2d38e3de9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea67fcf3-ea73-40c8-b757-19091b8a27db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "354cb3eb-c4ac-416b-aa06-3c7fab362354",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1aba727-04f6-426e-af35-4c9100754dc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d986e26b-d7be-4136-b28c-909877d37b30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eeaa55a-b6ff-414d-bea2-4655bf5bbad6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec2c2a6d-d9ae-4634-9d5a-0b17954fc9a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f570a100-604b-4330-9c36-40ae16b6ade0",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e11bbc5-6a09-4467-8f09-1608662e3753",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ca92f0c-2a38-48ab-86f4-f161b45339eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b90770f-1ac7-4f51-a3f9-0b1967750bb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6912e062-1e48-40fe-8890-31f92b5c78e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c667104-d851-42f6-ab49-ddf6a8659cdd",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "326051fb-f763-4fd9-bf60-383542b681ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19d8b5fe-768c-4580-93d2-acb76b1b6257"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "068475d0-aae3-4c51-8b00-6c1fe42e5509",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "158b5aa0-577b-416d-b0d2-994266da8abe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "098e80d6-f51a-4870-8dfe-4ac14e7cd618",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96583952-7bd9-4630-87b3-9dc1bc77dc74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91844226-429e-49ef-9c86-21ae56937fdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edc4070b-6156-41c3-8dc5-5a162ca18420",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c273eb2-ec91-4095-a6cf-d2ddda1461c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6822c0f-5f83-4560-9e2d-f1d54fdff527",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "216f45b1-5c78-4dd7-9c78-f6c4049e2c09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e50c9408-bc59-46c9-bc7a-60ffe6d2a2b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fffd3a4d-2b06-40d9-b578-2716c8dfecac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "82fdf396-26bf-4b9d-8765-460f8dffef74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa4c3a7a-de11-4aaf-8e8d-6a4bc3820e1b",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "558a2e30-e0e4-4d7d-8ec9-119363a8a1b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1dd6c32-d3f7-42e0-b07a-747197f1d15f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f97e5a76-e928-42f4-9353-cfb268492a24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "70de2002-fbc3-4ba6-ae10-2b8342f73776"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25195b4f-21ca-427d-94ef-2287018c5651",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39f5c094-e378-4122-9550-a4c5c694b975",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69ccad64-e3e0-4c99-bb08-9da87bb63131"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a8b4590-aae3-4e94-9c01-76652a3560db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "99311d2c-e7e8-44eb-8495-0d40cff1d280"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c737a785-bd69-4ad4-82ee-783519854a71",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "83371990-c3ab-4f0a-b85b-ea2bb8e76140",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94f616aa-950a-415d-bf4c-279e25c3c6bd",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "94afdfb5-e90b-4dbb-aac2-0dc2604403fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2630091-984b-45b0-9752-d787636a3747",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "390a1a63-5365-4ea5-abf1-27566dab9603"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7eed35db-5da5-4323-9e9d-9acb0974dcda",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3541f8da-f6d2-4193-9c1c-b9809c4f331e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a80e9f1b-b291-4909-b189-d5c8990e7b30",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d45abac8-07f3-4b98-a675-6bd12a3b7ad6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "516b3f32-eae8-4a75-b82b-9187216518ac",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "79b0d1cb-76ad-4ee2-a55e-e8f01a1497ec"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "35c9923b-4181-4dba-bbd4-ef1111d9b718",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f513e942-662b-40b5-9dab-9060276b3e0f"
            }
          }
        ]
      },
      {
        "id": "ffb8d124-1219-4075-981a-02796a24fb43",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "ae0693a2-325c-41c7-8351-41841e021b5b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8a6ef31b-ddb4-4503-bfe6-d3777ae5a9a9",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "528a2e6d-8b92-45c4-ba53-4fa84b5b1e91",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acdff82e-09c5-4bc2-a599-871295c28dad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e7e70c6-d238-47dc-b193-c62e7af8f265"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c941e7cd-6a48-462b-b0d2-05b00005225c",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12c594b8-026c-4af4-9664-2ebd0d46aae8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c29905a4-2a6f-4e6d-b003-9825c2e3cdba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fd9b393-92c0-4a8b-9193-e8b9cbbfe555",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a59ba26-b29c-4795-8762-aba87420c62c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "921a42d0-9d24-459a-b10a-9df6962b4372"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2a85b6e-2170-4299-8c91-4146d122a352",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d8703de-d990-43dd-b93c-4c7d8f8c1673",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9473540-ffe7-4a59-9314-b11348e1ab4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b8431fd-bcde-4a6f-a178-5e3259d6a568",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a492d2c-c793-477d-828b-4e0f25b2478b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "413ace96-b7fa-4f4b-ab2b-081ab5f551db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b465895-5e53-4c2c-bde3-ea918181f132",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "447746cf-8200-4c2a-b0b4-d9a95e095f3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d13c959a-43db-4fdf-889a-96167194acd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d595744-3f2a-4599-8ac8-d6ec6b51ab7d",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59fc4cd3-4cfa-4269-a660-14bd63117b28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37bfb316-41c0-42b0-86f8-2407b81c48f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6197380-3f28-44f4-948e-cb8acf222b5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "828ce5a7-b37e-44b2-91ad-32fd4a53dafc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41e16ac4-ee6a-4650-927f-35a98b7b7e51",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eaba3e5-ef4f-49b4-a7f0-15c29c6bc490",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1510fe54-cf57-4f96-b602-fbcbcbafda87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "657fc720-3667-4b1f-9ed6-c87e8e798bf0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "742f0528-ded8-4cf2-b273-22a666e950b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dad5fdb9-07a0-4dca-b6b7-d3b0cded882d",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbbab2a1-e0ae-4988-ae73-92bdb910cdda",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3cfc47b9-7445-435a-bc31-661383f5c2e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ac16362-a624-4240-936c-3d0a32aef2fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64541757-2a29-4abb-8ea2-5ebaa04707b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5396a2d-0934-4ffd-94ef-7ad8f84e46af",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8d8afd8-94f8-400f-93b6-97495a6e8c08",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa731825-56fc-4802-a58a-ba097e151d63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f5787a5-d0c1-44bf-9713-35230b9b009c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23072082-9b7c-4513-aae3-9f2b41767646"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6ae181b-fa48-4493-8c5a-96987c31f6cc",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c40eef9-8e80-420b-921b-c447b420c981",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f14ff320-51d4-4023-b755-9f5567e69613"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bbfdbf7-f03a-4b9a-bbbd-daa4ffe80d5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc8f68ce-5e38-4733-badf-f37d855514e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a310a6c1-8ec9-4e8c-abc8-b95c96783b6e",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b10047ac-90cc-411a-a915-7675895783cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16a7a9fb-73cd-4cec-b9c5-01a5b42bf6b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c4dd7b2-0f76-41ae-bb93-37560a14f1da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73855906-4a10-44a3-a0fd-bf058ee98fc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0104510-6afd-4250-a51b-d750b98be385",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f80959de-4c8f-47e6-b003-4f553e0d65b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11233cba-12ff-4ed2-86a0-c2cd1ca6cc32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a742f10-16e5-4d69-a5d4-1369647c42e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42f49598-dcfa-415b-8a95-d1ee84daf9fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "618a7351-0381-4fe9-85b7-3ce9b70432d9",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa22bbc8-7945-4780-af1b-3768beee2ab3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b67b2799-330d-4418-a173-038e4e488415"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c788d13a-f19d-484b-8d20-33ad0fc37577",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dffe287-2395-4fd1-8e06-ee79ddb30b11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3c08d11-89b0-4987-8156-8600f8802751",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c0ad621-1444-4f53-a270-92045c30f216",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60a803d2-e4f0-451b-8e58-803c15549103"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d40f5ef-aed3-4238-9836-1df8e71c3909",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96e14bc8-8525-4470-8829-d5267377ef78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1617f50f-8bde-40ef-88aa-90be3b4ae603",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8f3d6be-4d27-49e7-a100-cedaa5a3fdbb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6065a8a6-3a5d-4231-a511-83f6cbd0c6da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8041287-94be-4b47-a000-089058adfabe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78eda7a5-7573-4b36-882b-15bf6d158928"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c7785c3-257b-432c-a85b-fb889a5bc985",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfb9a105-916c-44f4-80ab-cb2ad297d8d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "881014bc-c043-4658-ac61-dc6f57b20862"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d5cf505-070c-40c0-b68a-727dfa5e7ef4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce2f9a38-b567-48a4-9a05-e3d8104da6ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2c9d0f6-1c06-4cc7-a071-c14112347759",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a935f4c5-9908-4aa1-82f2-4518c10777d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "590e7582-2b37-4499-95e0-2d974d7f4cae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "789407b5-d69b-43ac-aed0-e4ae4bd3bfa1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6508a3e5-f7d8-4fd6-9d04-444277f1e65a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27938155-7195-4e0c-926b-9cafa7f475c6",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97268f0f-6a58-49f8-b55e-f2a85336ce7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "356aa2fc-438f-4372-87bf-0e6dbfef1006"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7bf29c6-c571-479f-83b4-e528052ef686",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43950180-dd3b-47b3-bcb2-cb4f2c08ede7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be352523-c4d1-4679-8669-150f3f846d59",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f9fc38b-4a9a-4053-87d7-66df6e99e68f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67aff495-dd39-405f-9600-90a32ff2a894"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39aeaa5f-6743-4284-bf94-3a76304169cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "391ba804-12a5-43a9-bcc7-4851ba6f07aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9804b108-62f2-4106-9bcb-7e89e96e103d",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9475a9a-5bf4-4c25-8e4c-7ed1531e207d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a96ce9b-00c4-4e38-b872-54a79d8a05ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d29edb87-c517-484b-a199-bdc04c7600ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "152285de-8831-4b5f-a22f-afc7683ab9e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1127535b-aef3-4c74-b75a-597169820cff",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbfd3f7a-ae80-412e-8f0e-849d58335e0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c054679-8cca-4e04-a031-4a1eb417718e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea01eaee-8c13-423b-98c1-3f82e873af70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3a380ab-f94e-4b0d-9b9e-c9a58058c81f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a706f9c-a7e1-4566-b475-ca50d971f8b7",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34786735-8566-45f3-9b28-b9ff1b97f732",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c698ba9a-1d13-48c0-99ff-ed96b5b184c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed89bfbf-373f-4cb0-8bca-28643bb119fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adea13a6-199a-4501-9218-11b061d70f6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e1b0cfb-4721-4907-9439-e2967ca21ed4",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4abd13c0-a39a-4dad-948b-ba2dcc10d838",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04b64ab6-50a4-4765-b075-58ee046482d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1200cd9c-0628-4c79-838d-d9fb9a438991",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ff8a166-5881-41c2-8345-01d13c16f752"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9542b1bf-4953-46c5-b6a5-2bdca479babe",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2b251b4-1050-4284-9dc6-7f18c0993e23",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d998b144-6740-4b72-812f-a1d9c7f0997f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5497ca3-8b44-45bd-b98d-b5c7cc174723",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9d96f8e-24df-4ebe-8d84-51ace806a0fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91943901-ce71-4742-9893-4c5eee837f9b",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91bf686a-aac6-445c-9226-ac26f7f6b29f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "534e4158-55f3-4af9-88e4-65489ecaf458"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ab0a3eb-5641-41f8-8740-9e84e89f760c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d569a274-9043-40f7-9164-ccc117bed282"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0e5f7b6-9a1c-4d43-91c6-ccfb7eaf5eb6",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e3f7be9-6cf3-485d-b713-f75b622af590",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6929ad6d-abe8-4ed4-8407-f122a25aad61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edc6c371-c3c6-45ea-835a-d33f208130e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc124ec8-6523-4634-99bd-9060b820ca04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fff2c375-61cc-43f4-8757-32a8e2db8449",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48ddbd41-adb9-4108-9e4c-330048313566",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "471afded-e112-4494-b9db-27e6d91f3c5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b016ecd-afc2-416c-9c1f-20625fc74b00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdf658d7-ffef-4d09-8b22-fb76c307daf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf1fa67b-a5e1-47ff-b538-e44f3e4562ed",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97248974-be3b-4021-b780-346568779da5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29ecb185-4324-493a-928c-52b66c0bbbf5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1785473-8c99-4958-b261-57116ed88d88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85960579-2741-4a26-b792-4eeda34084bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2504c36a-f34b-48b6-a1c8-5bfd04936241",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d94a8ab-cb91-424e-8b29-5af735e76cb4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42ada7b2-b984-480e-b844-2956bb4e9a3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5eeac58c-cefd-4aba-902d-e9ee6ddb2a69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7b1c8d0-7f3f-45b4-8ab8-c6c77e705f47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b5361b0-384d-4acc-bdad-ab6e95b332f2",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bdf72df-fc7a-4c56-8c95-511c23e7fa01",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8de74cf-edbb-41fa-b290-7f80eb3ab350"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9eb7c8e-e742-47f4-bd61-0ed844174a70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22619f25-cd54-4d94-aab4-c331801fcb67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf80021a-068f-4c01-95a0-5a43fd50d043",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "202cbce9-8951-453f-925e-9d91cff633ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1bee9b3f-4dc8-4153-8b4b-daacf0cbfd23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e82bcfef-5289-4e68-963e-923e34bd57b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa5f4366-e6d7-48d9-a0d7-4f795e1c52db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df5ec103-200b-416e-8fcf-72d3effd8f55",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d96ecb7-66cf-4827-b6c3-9bcfad3b06c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28f97e1c-c5b0-4520-99ea-3b841dd2ac2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e1ecf05-29bf-46e5-af11-342a6243c354",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "044d7e7c-27d1-448e-bbb5-b50b6c96daeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3441de25-d885-455f-806b-bade9d029d6f",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05ea353f-cd16-4d0f-ab27-9fe3513a1cb8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2b2483f-9034-42cf-87fd-41017e284d28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a993765c-819b-46ac-8258-28396f4e1e5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "228095cf-38ab-4abb-9379-372ed5c09cb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46b60d83-9619-4c0d-9aec-1d7552d48f45",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bf910d9-1523-4448-afdc-f80f196b1972",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1cbcf11-bb0e-43b7-a927-1c0fce63b109"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b0b72d4-7e02-47bb-9e91-72a148714257",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a45da859-a77c-4f0d-902c-8c7e426fc386"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f0ee945-fcc6-425b-b622-175014ab999b",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49b7e783-4d8c-4740-ba16-cb8bce669907",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8da5f594-c76d-4e6d-adff-d5fcd40a4aac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01e394bb-f4c7-4d8e-b8e4-11ac12a0cbe9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "558fe40e-4845-4578-b155-ca0a98c5e0db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08e2fde7-e35f-48c1-9957-742d0a005643",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "643d1ea8-e9a7-4ee2-a0fe-05c500069a23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03119493-373b-4146-b375-fad29a1339e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0842c49-3952-4ba8-9efe-9a8ca136c60a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1e42889-ef8c-48db-b489-b4d95157e38e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b0ab44b-150e-411c-9414-db048ce1629b",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e284d93-37af-45f9-8570-f23b882e360b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "beeff11b-3073-476f-ac85-44d574990ac5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eb4341a-35f2-4769-8383-6b2b9613da50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdf4dfad-934c-4de0-8d4f-35d712196ee8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a431d735-eb05-416b-9738-1fba9c6fc67e",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6baa592d-c2ec-44b4-ac4b-bf2dfa642e40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d2b2fe9-f878-48e8-84c5-697483be7664"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c13d5ee6-3035-47f6-ad7d-fd3c8bd302a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51443d34-cb0e-41cc-91f1-ab74bb15b78b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d73baeca-e0c6-4fbd-aa80-1dcd281d710a",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86692a80-00a7-4da4-9078-497dbaf6d8c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d6caba2-1db8-4704-a543-cceac0690ac9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13648e58-d83c-4569-8ade-1cf03bf28aab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7271f116-d14d-4c43-b3b5-1479e4f16d8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ed6a170-8ccf-440a-8c48-2db1f421dfdb",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb6e40a4-479f-4111-acfe-b6514cdb8f67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a69d3c5-46eb-4ee5-92bd-c04670a347c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8313801-148b-4295-816c-8beae6aebf33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96ee6857-9153-42eb-a218-a39236ce4168"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af7813b5-0a89-4f8a-9e52-770ca14a4899",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6ff2b89-e440-457c-8d29-3a5ec316bb7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48d8465a-6a3f-4d72-af00-f2a8135642d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fb0a14d-93ae-42b8-b4e4-b0e071d16893",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8612d0ce-b316-4a29-9ab2-8a5ac8aa7f82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af9b6aaf-2c8a-4415-8b1a-ba5e7d3c2172",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc1f9bbc-f480-42d3-b04d-75a4141c5635",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4692887b-28ea-4f15-a5ae-f58057072000"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08ed9e97-20a2-4ac4-85ad-d4ee3851ec52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99e7cfd2-75f8-4437-8e7f-0c91c41a6566"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ab41e8d-2bdd-42ae-ad7e-84a6b7dee9a1",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f59feccc-8910-4636-b145-f1ff94361f57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "437d8a2f-24e5-4bbf-bb63-a969878a473d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4d65960-fe2e-4109-bc36-7b0fe6946d27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0f4910d-a722-4002-94ab-37dbf4c2b214"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e85df5f0-96c0-4f88-979b-c052060160d6",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1aa661d-0958-44d0-8641-e04e2c3c37f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8356d0af-1a6a-4c59-9b07-09e350748202"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f388a9fe-b328-4996-8428-36580933509f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40163379-ab52-47fa-b7bf-ba273a5d1474"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e07df4d-f02d-44a1-a7ee-673c69eb9aba",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dad3331b-e736-47d6-8185-4c70e1c47f69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60080336-9f70-4dbb-a573-b92cf12654c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f6943eb-8d32-4323-852e-c704c13a7b61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75c158b7-9438-4337-a3b6-a01628e117ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5a1e682-82c2-4882-aab5-3b48f87a40e1",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccbda3a4-5d32-4ecf-83b6-268589134d26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c17d0448-646b-4c78-ba3e-02bc78f8e2a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79b6e96a-68cc-4f19-b417-39888ca1f098",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdd9c453-8b92-499c-a02f-d0db053db700"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a9c6249-18a9-4fb1-a21f-3814cc76c104",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a664d7d-2006-4801-a129-84d8df06b771",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2544dad8-a2b9-4ea2-8ebf-548cc49fe653"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3d098e4-9a43-4e9c-8bbe-f0a8c5171c54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a992065f-7d2e-4aff-b5ed-c4f90f771c4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d60c804-504c-49da-8e9d-13a3fa329c55",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b93b3c0-b436-4b3e-b6c4-f8b457a9e468",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63470d0e-09dd-41ef-9b09-2d8fff443a4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd95ef69-2fe0-48a1-acc5-4e435518a7a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "692b8a15-cdbe-478f-bc61-dcf5fb402de6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "067ea2cd-2137-435f-bff1-bab5140ab48a",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f95f28da-d8d7-48f6-a49b-0e0001fa353d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d47bf648-8e21-4f43-88df-dac25093deee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc56089b-148a-4735-a716-d2efc7fd8778",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1eac34da-4241-4bbc-87c7-9d1c88d76afe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf9b8b9f-e4c5-49f0-9160-513ea7c64d90",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e49bb87d-ab3e-4882-b7d7-0237c24dc1a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "005470e3-18c1-4edf-8fd3-fdab1dfe7b17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fffe96d-14a4-4816-90da-0c58d85a4450",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e453c6b-65a8-4f91-8d94-e9c03e430902"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2db567cc-424b-4daa-807c-08cc19fd16d2",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e3ea14f-860d-41a2-aa2c-e8d609afe6e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59632de2-012b-4d7f-aa0d-678c244f895a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f904dca-19aa-4d45-a833-addd11f70306",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f191228-9f27-4e2d-b998-e04e3cc480bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d7fe0f4-c4de-4684-a1e8-35fa084b07f3",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8214ebb-cdb7-4f3f-bd09-1d9fb483c434",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90ba0ae4-7c28-4fac-8231-016abba56ef1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56ce605c-f24c-415e-85b3-00cb84039e6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17b3e8ac-fe6c-4287-82e7-15fc3d19e129"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d597fed-2c15-4621-8d52-a0930b2d4253",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02a0b292-9b6c-4c77-b907-93a4a11b50d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b71d222-f9fa-4a8d-acf5-2c39a0ab9c62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ef6799a-93ce-4d4b-b60d-1f8e3c971441",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30499d4d-28b4-4ffa-83b1-30d7e9121e31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8d2f416-9fa9-4b61-9f23-2f2ad2f02637",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c001c6f-0890-4713-b565-b2720fa77cb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd588d4d-99e8-4b26-8e42-f5483fdc6f19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc80cb14-d3a7-4048-9e06-e65a17829e5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9cb4175-3a9a-4fc6-8e2a-bcaf5cf60459"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6decd621-2f92-46c8-951e-8a01089f3060",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bead5937-287e-415e-bbff-de878847759e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47fc99b1-7529-4505-b447-b351ef672408"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eddeed5e-4e51-4de3-8929-f475776a3d7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "212d533b-82b7-490b-9968-75e435d419d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ead75c75-2569-4ff4-8e00-10b1874bc4f4",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42407e7e-d4b9-4248-9fae-d007b723ad75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9de097b-9964-4a91-b1f1-7d7233c93725"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a326ffe-96b5-474b-9f25-928b2d0081c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "883e1549-2fee-4515-8f69-d9146bd917eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef23036d-b3b5-4d7a-b6eb-73e5b64d1999",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e8bb478-c41f-43ee-a277-b6f7a3c1c4b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b25aaf15-ca2e-49ec-a347-67fc4a55508e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d82aac9e-10f8-4947-b6e5-50d7e125512e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37475190-eaba-459c-93b9-a44c5b1295b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd1af406-66a9-4e69-b56b-590fd0d04618",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76ef45fd-745f-4339-9019-ee682ef242c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07ea7d93-0d38-4418-9ffb-eeb1944fe4fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e88fd99f-d94e-418d-896c-5c134fb63770",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7df3262e-5da1-4639-b8d6-38725e830042"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03736f94-b690-4603-85fd-f63159190a57",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d886927-b96e-4753-b74b-5b3c7c96d890",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50bf7987-1c36-46aa-85f1-cd390e8a047b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9d60b4c-3fcd-417b-b650-5c6b269cb2fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ecf1758-60a1-4f58-8ae6-fc1bc2c5c242"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4728758-00d9-4de0-b33b-965ef928eb69",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25f0fe1e-dbaa-418c-a81e-033182f6e8a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "feca9436-6b39-4cdf-b235-010e1e2b6a8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c88d78e1-af23-44c5-87bf-e3b44ffc7c19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4e65879-406c-4652-955c-e7b0e3ee1b68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bf7c75a-21b6-4dbe-a42a-684072dbf10f",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a1a5c5e-8d4d-473b-91df-41f7d7320e1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc1f8de4-2187-40db-a088-5777ba9df963"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ca82537-0851-4678-8f32-5715a32564a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a48818ff-2cba-474d-9581-0e2723aab711"
                        }
                      }
                    ]
                  },
                  {
                    "id": "195262b7-20cc-4b4a-a8f8-390eadf9d67b",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d259676-88de-452e-b3b9-fab93431877c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0e07e93-cabb-4879-ab53-0f0d886eb1f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50c32daa-17db-4537-a5b6-d517e716d8fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdaa0efc-5f6f-4a1d-88cc-65e1b34e3c8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10d8e513-b0eb-4f66-b6ac-0fd93fb0ca14",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b545b79e-87cc-45f0-acac-1e0bfdccd842",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47e702b5-7836-4526-85ec-ff85c99957fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81a93023-5c24-4b36-a661-ece43db98f57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c72a6397-8781-4945-b3b5-645a1a642f84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f4f2135-8f71-46d3-b3e0-e8f59824bfd1",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfafe0a9-af62-4a58-963b-b83b6858f2ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7253bdd0-982b-40f7-b003-42955cdb2d4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf33a969-63d8-49a4-a27b-40ba56ce8e61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2de5d25e-604f-41e6-bcf9-e5a0d2bce5fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d96aaf9-d99c-4cee-8978-e4eb7333e046",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2acca4f5-5ef3-4ea5-804d-942ff2b8a3de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba019b6d-77db-49a3-b35a-ae7708b03f53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0f9fb62-838b-41a1-9177-1803abb2daae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a43a79f6-2416-494a-82ff-6587d01c47bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d22fcccf-a844-472d-9a0c-bf834777abf3",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34c59e75-a375-4275-908b-b3812e1fcb71",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c04190b1-0ad1-4f86-bf85-44d904bba61e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9daefa37-509e-429a-ba0e-c7bc9d9aedd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9eac22cd-34e5-47cc-a91a-e9f0c83cf612"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b421d17e-8ac4-436e-9813-b5d2ce7915d0",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f342c5c5-da46-4403-8edf-2593778f1855",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "945a8fbe-00af-4345-8299-2d7c12a6221a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c11a8d9-fc20-41c6-a9a5-71c558864c86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdc49385-d80f-4012-9dd1-c7d1d1b64296"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40c5f079-2625-46fb-998d-ea56a7e8c9c0",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c838e65a-e0ac-484a-93d1-724b79db5427",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "baf2c186-72d8-46cd-851c-9268e06362b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "555bcac1-11ad-4b01-86b4-5178697f295f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe189e1a-be2a-4d93-a6e8-b76f1cea9f72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96f0e0f1-36d5-4b17-bbbd-191607e8958f",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bd25c29-f458-4456-806d-7cfa8006102f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d7a1720-2c2a-4a28-b2ba-a99ebc763426"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df577bc2-1c37-42dd-9c76-1aea75fad403",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "230c12ea-eb7e-4245-adc7-fe863baa2081"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eadc9a6-6ccc-4d2f-be81-0eed2e62c204",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1d6b23b-0207-40da-a35e-8bba5df40d72",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8653f9d-7259-4dc7-8f38-b43c85b6659a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50132f11-528c-4bcf-8969-0ed9d75c4698",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bfee71f-b868-4bbf-87e9-f973753ea9aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7593ce3b-a93a-4a82-84fe-b773d6ad7136",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2d0991a-5445-46df-a07b-bb63e2ea2611",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49e3eb10-5c7b-4b7c-82ce-4a353286af2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70668380-6a8b-4bff-a489-839829dd9f9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff9f894e-f1dd-4ac8-958f-44de05795eb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b870b87-d246-486f-bb1e-2cd64e200a59",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1a3f98f-60e5-4e24-8587-398244ed678f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce707222-ab64-4e95-a1e4-2fce7c1cbd8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0998cdb-78b0-4013-892c-3e042d8a7e81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "969eeb2e-d8c4-47b3-9488-b61915b27a40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eebb219e-06bc-4cae-af68-c05f1d3a0cd8",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f3b6f12-7f0c-4b9e-be58-dc71cda892c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "955da8aa-b9ad-4a43-8310-f20c2d179fb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7f77f2f-3951-4f0b-ac69-07207a841b97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6251322-1b46-43ce-88c1-3f33933b8214"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a24f4f4f-5c40-44de-8b0a-3e64418559e2",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "536c2674-d40b-4962-9ee1-eaf312afb0a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b6a47fe-bc5c-4d49-acfd-427948abe312"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf0ba509-4338-477b-8728-c43545a3b68e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ae2cf4e-7a7a-4743-a532-d97d28fecfc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63813d6f-911d-4005-bf11-798b2ace987b",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "715ad263-1c3d-401b-b175-5ed98083dca5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a1177e0-d8d7-4b10-9a3f-f2a0ce594cb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5147bfcd-031b-413e-8550-35cbf6bd5a99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "130e5741-cb3f-4930-8768-f572f77934c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65e347c5-a744-4dfc-b091-43ca4a284af7",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fd9b8fa-962f-4a1c-9d2c-b2332b9c616b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "baa831df-3b01-4b55-ad4b-98dc72f1f65a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72652345-7baa-4eaa-94dc-63726f8a3558",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d089c7f4-e116-4a94-b425-caae751d1f52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2240732-d88b-4941-a168-88a3e33b0bf0",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcbc0984-2c03-4c33-9d97-7ee416c6072c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e2ca672-52a3-47f2-97c2-b95cc3386467"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc104cbc-7eff-4f1c-b314-ee953efef41b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2585c18-2bbf-4257-86f1-2b8d3cd548bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c5bc8ef-5728-4f3c-9db0-d76c681216e5",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df3abdfb-0b6b-46de-9fbf-cbe33fe3e790",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f486d5b8-b260-4954-968c-1f31194ca4f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f30b3b54-af46-4a45-b2fc-096e754a5662",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05be9ec0-b12d-4700-a678-3093974d7007"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5503f16-bd9a-4afb-af4f-94524b142fc3",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77a6c711-c628-4d9b-98a9-6c843beaffea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a77e4fe-574b-4fe3-8ac7-b83738f48036"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a837c72-91b6-4163-9e8d-1243167b6a09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fbf373c-76b1-4f65-81fc-5e3497b60ae1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e1b01b5-65c4-45db-bf2c-e4ef4a7a8f95",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39fa72fe-269c-4ac0-9364-2e446ebc467e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "479618a8-dcef-42c2-aed4-e1d56581f4d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf6aa96e-bf87-4e0c-99af-11dddd1fc63c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3811e7ac-c94e-48b2-8467-98cead516195"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce13ae23-c5c5-4b51-bc15-deac4c51953c",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e50a8e7-1814-4d3f-9881-847cd8ee7b13",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ca77a92-8d66-4b85-b926-13c00b82edff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c875a5f4-b436-4b07-9cbe-dbe899c5d3b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba9ffb92-4b05-4fc5-8780-df824b00fc7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a42c6f4-64ad-4968-a931-c8ff25ab6e62",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab50bae2-11f3-459c-a6cf-2ec0227002db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3995c4a-edcc-4f74-b915-0b68a268816e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e5e60c5-0870-446c-b72f-6328ff807477",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "412ac880-131b-49fe-a134-5bcccf392f42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06b7ee3b-8433-4768-bae7-14048ff9cc0f",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "394fa864-3ba9-4d27-a23c-fe6764e02d5f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c11ec978-217c-475a-8ae8-81a5bea95163"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5dc9cf9-f190-4db9-90ea-706ce12e3a2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc885d7f-f35e-48e4-9a0b-5274d2ebadf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69b894f7-cf17-4189-ae9e-db97186ec879",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7a1be48-47da-4fed-bc47-7d25bb115246",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a6521fa4-f685-42fb-a7cd-be79d5bdf217"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2da2325a-4e18-4e80-b391-27ed8a4e2ebc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4adaaab5-67ea-4fbc-8ef1-214a88fb2763"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7f47af9-4a5d-455d-8e23-279880049e2a",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "494103fe-5022-480d-844c-e9999d5c0d0c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d9bbfac-5b30-41d8-bd1e-d7dced8d99a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aaba061-a890-4366-b47e-210f265b7f1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d528b83-124e-44d8-8f66-62a6ea685218"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8553338d-e692-4360-adff-32294636e769",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2549f43a-3047-493d-916b-4ebd3d5867bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "136ae4db-9b0a-4c7b-925c-67af165c09e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47028169-2f83-449f-b107-2295f56a36ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6ce8f99-2108-4b51-a02a-58970d43e5a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10a4e389-e8a5-403d-a383-1c7dbe8fb566",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efe4603a-0203-4bdd-9c57-aafd71e8872d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d0ce5dc-8497-4060-8852-913b9036d38d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10a4de92-658e-4d94-9182-dbbce41457ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0aa901d6-ee9a-46f9-ae05-90d5d489bad4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2c6882a-e6fc-43cc-8a78-74adab0a45c4",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1bad1fe-70b6-43e5-914f-d395f1dff074",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd5b107e-ec2f-4272-b4ef-887af43985c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b918017-ec91-421c-aa08-7de3940e3a94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bb080fd-259a-4f5d-8aa5-5add1f773f7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc810767-eea4-486c-b05e-52b8c26cf346",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "937fff46-5c1d-410c-b227-d2cf7aa95a74",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53d3330d-ea47-4fd4-a754-08b5a7e09f0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95ffe784-1f74-41b6-a691-c02189e76b28",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83573b1e-49c1-4561-acfa-fe0999ffbde2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "671ade17-46af-470e-bac8-28f1826b0234",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b520e2fd-b6c2-482e-b441-72c5ca662794",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2906d082-d49f-453c-8207-6339176b155e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a26a460-2346-4315-8c39-b80a810a77bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b749370d-20df-44b4-afbf-15cf1780cc67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b233bbbd-5e42-4333-bee5-785906ab4006",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "472c8b50-9aeb-4e0e-ab47-58fcc4c1fd70",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d9396eb-4524-4325-b03c-6075465c687b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb18a6e3-025d-4ae8-beff-c007ffc8b742",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8574702a-2d86-4990-9711-57e35ec2aad2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b0a09d7-5fee-4aa8-a45a-5a71538ca956",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8395337b-458b-44ce-b290-73841c735f84",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be3d688b-76b9-4a23-a4e9-1d5be4d04486"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "874b7ff9-ccb0-43c6-8d9b-38005fca1ed0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cd731aa-4f1d-416b-9978-d3a13b18a6a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10c7f911-92c8-413d-9b87-7821034b31a1",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87105ac1-4584-403a-addf-30f51a9246c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d79308a-907e-46bc-be13-835179a79b51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd1baef1-8837-421d-b32f-ef55c7a61f86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2b5bc3c-9a7a-4494-93e9-0f53a6ccd135"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a172f5ee-97d7-4ea4-ae39-ae7463b20707",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74960a84-bf7d-4a23-a826-d778a0b42a6f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a62d71a7-d3a9-4e74-97b0-0aeb688ca2e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c85f70f-ca89-4c27-a5cc-12ba3b1ab2a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c156d274-77e5-41bf-97fa-1e49dd11d692"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c66ba5c9-1196-48ab-b788-b4ae051fb109",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a910f1c-ff40-4292-8749-7fe9d933efe4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66a863d9-092f-4d52-8297-6c2e8137d2ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "629c6452-755e-4fde-8d8b-d2005bd4c188",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf560883-107f-4d1d-b3a7-63d40bb3de73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36d4ee59-f404-4668-b980-465244c1b3f7",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15faaaaa-b5d5-43da-a9bf-773f93d7c8b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09b8c002-dac0-482a-b3ae-ccc5de665a56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db51ab01-f086-4cfd-921d-22ed6ddd8845",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f489b1c-f34c-44a9-9922-72202d8e49f9"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8db06bb0-1b6d-403a-927f-3526cb5f069a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ea81194b-a66e-4e22-b56d-363e4cd9bfbc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "611ea9be-2f29-4196-8129-56cd3ab61c2e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "694fadbf-542e-4d96-851a-762d06047bef"
                    }
                  }
                ]
              },
              {
                "id": "46be6f6b-2284-4a0f-bcf2-0635514cc367",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "aa314fbb-20da-4eca-8750-aa279a6ff3dd",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f60abac-0b35-40ee-840d-8c5424092267",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "f0def93d-f717-40ae-b597-43053c92e6ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40b473e1-fe9c-4b1d-883f-51e4bdf52969",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f03ceac9-4b2f-494e-8d40-197eafc44327"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d70c4ec5-4eee-451a-9f96-8034c59e042c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8f64f581-061f-4a6d-b814-31af3fe84c60"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "482b0e7f-57a4-4437-827e-454392cce71a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2be3f54e-a389-4276-b236-d10de6ecc4e5"
                    }
                  }
                ]
              },
              {
                "id": "d8638283-e541-4fde-bb1f-e01b01ee8f06",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "1b29c9cc-3915-42b9-8277-dac52c41c4ba",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f49f970-f06d-43a9-a70f-4c61922d0821",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "bac5fb50-d006-4895-a11f-345adeeda96e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00925cf9-e29e-4504-b2d8-6311df0e19c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92ee3050-d4ac-4561-bc5e-8a4834a57999"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "a82f9d54-0498-4827-a45c-67b9822887c8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3e1a6f97-e6f1-4776-ad37-ce2569624d32",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "abefe76e-0368-4fde-bbb1-8f4bfc3936d9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "d04860da-0e8e-46bf-aa13-2ff19719ffff"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fa45f2c9-2905-4a6b-869e-ab2d3c089cda",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "19b50318-6797-46ef-8323-e25d5105c21b"
                    }
                  }
                ]
              },
              {
                "id": "300d3fe8-8742-4511-a86e-0b1814d5d253",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3c630752-bc8d-49fe-9136-13468482cf92",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "9a68940a-8ce2-4661-b959-abf70bb2f5d0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e39247d7-5e12-45d8-849c-33234bfa503d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "03ce7a06-e10c-4fdc-92af-a4fb68df6188"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "656f67d2-ca41-4c74-bbfd-2b26507b67df",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "2b52ea79-e938-4d95-988a-82497e634814"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "797b48b9-17b3-47a4-92e3-209aa1289dd0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "deb04201-0f50-4c33-861d-4892337a087a"
            }
          }
        ]
      },
      {
        "id": "9e8ef0ea-d9b6-478b-9d38-b16042e91c0b",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "9ca0ce6a-6bfd-437c-bfc4-ccaac8aeba5d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fa67cf71-f1e9-4ee3-8296-fb1906150848",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fcfcc831-284e-4b6f-809a-35d2168dec35",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0867a672-49f5-4769-ac20-f3e3b990e04a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "cd018067-c76e-43f9-bf13-998eb0f3b9d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ae30ba2-fe7e-4552-9a80-c45056f37bf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7b6024ad-d89c-4f73-b79c-34c8c8d0c1de"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "56996d64-7ce0-4770-b517-d36178c60874",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f7f4f5f6-f68a-4555-bbb9-2281f5d67e61"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "dffc0154-9a61-445d-8b15-056e906c186f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bf16301c-7917-4525-9900-be89346bf727"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cd577563-982e-4432-a626-57c9b9932a8d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "3a887993-fb9c-42f3-8237-6097ef4b9a3e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d938194b-dfad-4d97-95bf-7ca555c31756",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "eae46f4d-618b-4b3b-a2f2-9888a56ff7c8"
            }
          }
        ]
      },
      {
        "id": "b722c2fb-610c-42ec-8e4c-b4489e36491f",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "4ee9a532-b21a-42d1-8102-ab5060a6dc6a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6330327a-b5f0-4f1d-86dc-9f405ab1455e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9eb50bd0-64bb-43b7-aeda-f91cc7a6eaab",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a06199a-97c9-4fcc-9a0d-b88b69360d32",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4047a3be-ceb0-4997-b6d8-5d7ceec47ed4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3fb6c5e-7228-4622-8c68-80193ca748c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b14312aa-7717-43c0-b4c3-a2f89d4354ba"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8806df50-0b73-40b2-83b3-15065ffa69ea",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b48f195e-5f91-438a-9a9e-7b1ef6855f9c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9813ed0b-63b1-4e85-9cf8-d079978cbfd5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "73b6b910-cb26-4daf-b7d0-b391572abae4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "09b8b66e-8aef-435e-8f2c-d38463f54528",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "899381d7-cfc3-460d-acda-e1800d1d4ade"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cf3fb4b7-2af7-4a05-9cc1-0d3ec319dd47",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "09915fa5-9462-47d7-8772-c9c768fbb73e"
            }
          }
        ]
      },
      {
        "id": "fc3b65b5-d889-43d1-aaad-04ae9df58849",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "a060bacc-36bc-4ab9-8569-e42a0fc71974",
            "name": "Negative Testing",
            "item": [
              {
                "id": "125dbaa3-387f-46ce-9d8f-dbf2f0f5c6ce",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "66946590-6895-48ef-999d-cd932feb44f2",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64e612dc-e014-4ad5-b091-21fa0d391307",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1f8f3fa1-851f-4550-8191-6b7a9f012ac2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3bb6245-b49a-4fbb-b938-7c5e5e34a87d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "60401481-e718-4345-b7d8-f2111c21162a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fd869fc3-8bd2-4d8e-be5a-ff6a5b8e9f8e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d8ea8810-95e8-438d-9fa1-9180ed9f58a8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d5058ad9-b8e7-4c72-a0b9-86c47d24aa5c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7c027afc-0066-454f-908f-1a50c95c86e6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6f227fde-0b16-483e-8c38-abc61924fd33",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e860dbcb-3f4e-4612-8a88-fe2254a4ccdb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "76cdfadc-bb19-4627-a02f-f32b2efb0136",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "be4d162b-4b0b-45c7-9537-f798663a0858"
            }
          }
        ]
      },
      {
        "id": "e4619e42-9ae2-44ee-98f8-42a138d16ea4",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fca8484d-086f-4d27-a793-0f1b1f13e4ef",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1590ea4c-736c-4b92-87f7-9e587d017137",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "cd5b5c01-ca22-4482-9245-7f3fe9d22b80",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6b510a39-3d95-498a-b09a-629f7841854a",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "16789721-11e2-42bc-9fe5-b8f90d2b0cb2",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 4
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 638.6031746031746,
      "responseMin": 11,
      "responseMax": 20945,
      "responseSd": 3121.4929885313263,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1727225165613,
      "completed": 1727225335078
    },
    "executions": [
      {
        "id": "4ae9fb08-8336-41fc-b076-b4dc304a7bad",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "c23d8c6c-ed80-4d37-bf23-69d1fdf9def0",
          "httpRequestId": "939ed6b8-258a-4ecc-bdaf-4507198e5c14"
        },
        "item": {
          "id": "4ae9fb08-8336-41fc-b076-b4dc304a7bad",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "50b08a7f-756d-4409-a89b-64125c1ccaf6",
          "status": "OK",
          "code": 200,
          "responseTime": 53,
          "responseSize": 0
        }
      },
      {
        "id": "79197a8a-614c-4366-8400-9e0506de893d",
        "cursor": {
          "ref": "66cdd443-47ab-4e1b-af59-059217c2539a",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "c98cb5a9-4e1a-4b26-8a58-a66041a140ed"
        },
        "item": {
          "id": "79197a8a-614c-4366-8400-9e0506de893d",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "6f653851-976e-4da4-b969-c1cdeb6f43cf",
          "status": "OK",
          "code": 200,
          "responseTime": 11,
          "responseSize": 0
        }
      },
      {
        "id": "c5aadd6c-c21a-416a-8652-eaf5b4fb8972",
        "cursor": {
          "ref": "9aac42e8-84f7-42fa-812f-138dace7bbb9",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "a20a9bc5-5dc3-43ff-b13b-7d0fd7fbfcef"
        },
        "item": {
          "id": "c5aadd6c-c21a-416a-8652-eaf5b4fb8972",
          "name": "did_json"
        },
        "response": {
          "id": "6f5d8f23-b504-4855-b364-75d6f610a47b",
          "status": "OK",
          "code": 200,
          "responseTime": 535,
          "responseSize": 1024
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2254462d-781f-4bdd-99aa-bfeb2639cefd",
        "cursor": {
          "ref": "029e0845-22d7-48e2-84b9-590a1cb33694",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "dbb03728-d163-47b1-aa82-af01ef78ee66"
        },
        "item": {
          "id": "2254462d-781f-4bdd-99aa-bfeb2639cefd",
          "name": "did:invalid"
        },
        "response": {
          "id": "221d6acb-9046-4c0f-8538-b06087ebf32b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2227,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2254462d-781f-4bdd-99aa-bfeb2639cefd",
        "cursor": {
          "ref": "029e0845-22d7-48e2-84b9-590a1cb33694",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "dbb03728-d163-47b1-aa82-af01ef78ee66"
        },
        "item": {
          "id": "2254462d-781f-4bdd-99aa-bfeb2639cefd",
          "name": "did:invalid"
        },
        "response": {
          "id": "221d6acb-9046-4c0f-8538-b06087ebf32b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2227,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "580d3be8-6867-488b-a278-818c4b2ca37b",
        "cursor": {
          "ref": "4cc0e59e-cd22-4ca5-9b45-42ccaa16f212",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "84875eb4-b0da-4981-8dd1-5b817d2abbf8"
        },
        "item": {
          "id": "580d3be8-6867-488b-a278-818c4b2ca37b",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "3d1674c6-5366-4608-b94b-f32d2d46d93f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2604,
          "responseSize": 65
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16104b9d-b3d3-4bbc-95f4-7840201ed9a3",
        "cursor": {
          "ref": "1d1a35f3-c98c-4063-be46-65bd30a7154d",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "f8061aa1-e97e-4294-9365-534a328aad0d"
        },
        "item": {
          "id": "16104b9d-b3d3-4bbc-95f4-7840201ed9a3",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "18316030-e0e0-4667-930d-83fdd67fa851",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2246,
          "responseSize": 23
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e7da3f0-3a17-4498-83d4-88c17df70d87",
        "cursor": {
          "ref": "4eeeff52-2506-498e-add7-bb09dfaa5b04",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "0b431819-db22-46e9-b6a8-79ef2c043a99"
        },
        "item": {
          "id": "6e7da3f0-3a17-4498-83d4-88c17df70d87",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "38461b8f-0b7f-49f0-873b-e34fbb179384",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 78,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5eea993-f262-4ab0-b990-9591962a0f4b",
        "cursor": {
          "ref": "976567ea-f022-4b54-a03e-94f3369a3e1e",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "9fa0515b-1166-4f17-9a10-a1ef25aa4ba0"
        },
        "item": {
          "id": "d5eea993-f262-4ab0-b990-9591962a0f4b",
          "name": "identifiers"
        },
        "response": {
          "id": "176e893b-1c86-45ab-a8e7-4e3fc84296b9",
          "status": "OK",
          "code": 200,
          "responseTime": 2362,
          "responseSize": 1040
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd31fa17-8e51-47f8-a4e9-1d9a78451c56",
        "cursor": {
          "ref": "70bd36bc-e9d8-4a74-ae4c-f224e90b1e0b",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "627dd7a9-c0e0-449e-b1c8-0fa0480491d5"
        },
        "item": {
          "id": "cd31fa17-8e51-47f8-a4e9-1d9a78451c56",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "1ffa515c-5704-4c61-a953-fa9c2b1b86a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89a4297b-c327-4d96-8f5d-4f0fdf048385",
        "cursor": {
          "ref": "ce1da310-9f0c-467b-96cf-a47a186be3b3",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "46050df2-f3a0-442a-9bf9-89c30bbcf788"
        },
        "item": {
          "id": "89a4297b-c327-4d96-8f5d-4f0fdf048385",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "e0576029-cc5d-49b2-916b-4d3abc6aac1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 89
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0730ecee-6270-407e-8780-eedda3e984f6",
        "cursor": {
          "ref": "fbd2bca2-50d4-46dd-aad9-6549d7efe344",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "98ce9aba-aaba-4359-ac47-943017a382eb"
        },
        "item": {
          "id": "0730ecee-6270-407e-8780-eedda3e984f6",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "33e963fe-b8a2-4451-bbb1-2a8d417551c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27a71bb3-650b-4895-9cc9-479befc9c405",
        "cursor": {
          "ref": "279dabbd-6545-42d1-acae-3597afc61767",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "030bb0e5-8f1d-4ebb-a4fd-61af97f289eb"
        },
        "item": {
          "id": "27a71bb3-650b-4895-9cc9-479befc9c405",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "225c07b6-5915-4912-81c6-a2d704a626da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "649b6a7d-6c00-45ff-9b64-c41f9c78352c",
        "cursor": {
          "ref": "739b08d7-4dd0-4538-b0da-9d05fd59e158",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "4663ead9-ff1d-48b5-8f82-585078d8aa53"
        },
        "item": {
          "id": "649b6a7d-6c00-45ff-9b64-c41f9c78352c",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "8245fcdb-0fdb-457e-9319-8a00b27b9779",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0382473a-f255-484f-aac4-7310a8ee04c9",
        "cursor": {
          "ref": "aa48ce79-e8f6-4bed-9ba9-294d078fb82d",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "d0447d31-c9e6-414f-93de-16ba4a45f8b6"
        },
        "item": {
          "id": "0382473a-f255-484f-aac4-7310a8ee04c9",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "8df01d76-31f9-4527-ac77-30b774dd51dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e8ab2a0-93a2-4505-b4ae-9f2a389d3b1c",
        "cursor": {
          "ref": "55136b8d-613e-45f5-928b-3fa807016fd0",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "019ef69a-6388-40dc-8c26-8b4c1048b60b"
        },
        "item": {
          "id": "8e8ab2a0-93a2-4505-b4ae-9f2a389d3b1c",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "664628f8-b661-4cde-be30-61734de0c712",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f51737a-0b94-41bf-baba-19565a567396",
        "cursor": {
          "ref": "76429248-9e5c-4c61-bf14-77472fd16820",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "9b7a1fc6-252a-4c61-abbc-fa5c079b927a"
        },
        "item": {
          "id": "8f51737a-0b94-41bf-baba-19565a567396",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "c03b2786-1166-44be-9b26-92137445ee3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a58cea0a-28a7-4bf2-b57f-0a8cca255c48",
        "cursor": {
          "ref": "b9051aa2-3140-4643-b85d-c15df153ed26",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "980df396-b174-4bb4-8192-2716ffe8fddb"
        },
        "item": {
          "id": "a58cea0a-28a7-4bf2-b57f-0a8cca255c48",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "797466f6-7372-4913-a10c-025a920f9a09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48aa27fe-dc4a-4ecf-b332-e5e687a5df6d",
        "cursor": {
          "ref": "a95ba835-54b6-4527-b557-18d0545d384a",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "e70287c7-f778-426d-8a2b-8f70ff916ae3"
        },
        "item": {
          "id": "48aa27fe-dc4a-4ecf-b332-e5e687a5df6d",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "c5fa93d3-793c-43b4-94d0-2fe2da2af7f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4afa1d3-9063-47ff-b634-8baf379a9231",
        "cursor": {
          "ref": "b99b62a6-4885-4aaa-8f75-5f4ed6ac148c",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "89931753-5aff-46ad-9cf3-c47747bca969"
        },
        "item": {
          "id": "e4afa1d3-9063-47ff-b634-8baf379a9231",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "c4ce94d9-6559-4a48-9a3e-a8463df5843a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92400b25-5427-4d72-a7bb-3cda9e97673f",
        "cursor": {
          "ref": "cc0b6506-f4fb-4510-92ca-cfb54ae78125",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "da8bec06-7347-42ab-b604-2edffafca487"
        },
        "item": {
          "id": "92400b25-5427-4d72-a7bb-3cda9e97673f",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "ba52c2c2-250c-4537-9e86-c612e432d6d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbf9bd69-564d-4871-8dba-892dba3d44a1",
        "cursor": {
          "ref": "02caf59e-7639-45b0-85a1-0e3fe2416e61",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "8d178ac0-b1bd-4ec3-b1ae-44aeaf4ca1de"
        },
        "item": {
          "id": "bbf9bd69-564d-4871-8dba-892dba3d44a1",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "02a26e10-706d-4b42-8697-9c113262f7bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b8263d6-bd63-426d-ae2f-404793628b58",
        "cursor": {
          "ref": "45629b9e-c172-4082-a9da-f67a480fb25e",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "f294e233-3cd4-40c5-8c52-17ee9d1cc8f2"
        },
        "item": {
          "id": "4b8263d6-bd63-426d-ae2f-404793628b58",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "9dbc0251-0dc3-44d5-af66-ad7c7864414d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aa60f6a-1afb-4f45-aa13-f0213eb22043",
        "cursor": {
          "ref": "a363a90b-cbe4-43bd-a2eb-b025d055d5a8",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "796f9b4d-f76f-462c-b87c-ab8eda7599f4"
        },
        "item": {
          "id": "1aa60f6a-1afb-4f45-aa13-f0213eb22043",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "397e6fd8-d3eb-45e9-bd2f-e6e07ee22c45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43740492-11df-4ec8-87be-c7592bf72b45",
        "cursor": {
          "ref": "d01bf4fc-5762-4fe0-8d39-57fd3c527c00",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "0df4abc9-0c5a-489b-bc62-25112b276dba"
        },
        "item": {
          "id": "43740492-11df-4ec8-87be-c7592bf72b45",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "6534889f-a9c2-4d06-8d7f-6fa27f53ffde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e184b694-aa62-4c49-a498-9981ade8ce72",
        "cursor": {
          "ref": "ba26ea74-a936-4b88-ba54-02c3ed102045",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "ba73766f-cda0-4de7-870f-2f76784f57f7"
        },
        "item": {
          "id": "e184b694-aa62-4c49-a498-9981ade8ce72",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "39722558-e0c7-4508-940a-9c29cb9a10f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "497f8933-efbc-4e9e-a153-a4806c8c4d3e",
        "cursor": {
          "ref": "c3ac878e-e9e4-4c36-9534-926ddb40f364",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "1e842200-ea2a-416a-a7ea-1800caf182b8"
        },
        "item": {
          "id": "497f8933-efbc-4e9e-a153-a4806c8c4d3e",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "07cdebf7-f035-4f8c-9734-435973b1dc7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "253fe94e-9139-4772-9191-be5269d0482a",
        "cursor": {
          "ref": "4ed735fd-2380-4282-9922-1e0fec66d6a9",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "aa6fecee-c630-4b98-a573-809a7e843cb5"
        },
        "item": {
          "id": "253fe94e-9139-4772-9191-be5269d0482a",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "3cc62b97-b18a-46b8-be93-ad5c805e883a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feeee6ac-7dd2-4f70-b4e2-7181ec0daf89",
        "cursor": {
          "ref": "b20e972a-6294-4987-94bc-11387d11fdc3",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "6dea4907-f19c-4962-9a87-78389f62a1ad"
        },
        "item": {
          "id": "feeee6ac-7dd2-4f70-b4e2-7181ec0daf89",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "7f7345c7-7510-4c3d-91d6-18edad79b3b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95314697-7358-4647-8e86-252f8e434fd3",
        "cursor": {
          "ref": "a838a26a-9096-42bc-820b-7bbabc45ab88",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "c6a77ec6-206b-4898-a96e-1e26d817cb54"
        },
        "item": {
          "id": "95314697-7358-4647-8e86-252f8e434fd3",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "1fd49dbc-0e49-40f1-8f0b-9d56d020f5be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52a78033-394b-4c2f-8465-67d21171562a",
        "cursor": {
          "ref": "f98f366a-8d08-4048-ad6d-4114a4a2786e",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "efdb7714-a8b5-402f-a6f6-c716e12ecc0e"
        },
        "item": {
          "id": "52a78033-394b-4c2f-8465-67d21171562a",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "8b0a38f0-ebc0-4929-9463-253c3a80d04a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d21fc4cc-aebf-4c5b-88fa-e80df364f98c",
        "cursor": {
          "ref": "d114530a-92d4-4006-b924-f99c20edf33f",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "1f08282f-7098-4dfb-8beb-0620f4bf658f"
        },
        "item": {
          "id": "d21fc4cc-aebf-4c5b-88fa-e80df364f98c",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "e2801761-9630-4afb-9aa1-730a3e42d8cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bef23fd-20e2-4bc4-b1d9-161b2983a173",
        "cursor": {
          "ref": "bb6afdf9-832e-4c62-97cb-d25c9af043e1",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "ad8ee858-7a1a-47d3-98c0-514aebbb7c0c"
        },
        "item": {
          "id": "5bef23fd-20e2-4bc4-b1d9-161b2983a173",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "aa1b1a84-fea5-46d1-9d7b-fb5db5cc69ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b08855e9-5ea9-4b7c-b816-2a82969235ff",
        "cursor": {
          "ref": "ec559129-4fa6-4073-9984-3de090824bdf",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "258e7909-6e85-4109-984e-7608b462c9cd"
        },
        "item": {
          "id": "b08855e9-5ea9-4b7c-b816-2a82969235ff",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "e7e2c1fd-4be0-42f0-8733-1057f09d024f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e34a84b7-da0b-4be1-9a9e-7150837119d4",
        "cursor": {
          "ref": "99745d22-3b1b-439f-af7d-8930cfcb09e2",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "2a94b16b-d0aa-4f21-9c4b-de35e00b3137"
        },
        "item": {
          "id": "e34a84b7-da0b-4be1-9a9e-7150837119d4",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "fcd75d21-6cc6-4650-9a8c-16a3826a4f14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2753123-5e74-4dcf-b37b-fa5c4a028a4a",
        "cursor": {
          "ref": "859a090e-fb9d-42e1-8c58-6288360cf360",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "0d6e5a7c-eb0e-4059-8737-029a1d3ef74c"
        },
        "item": {
          "id": "e2753123-5e74-4dcf-b37b-fa5c4a028a4a",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "51f6176d-1228-42a5-8c4c-6b3420101fec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c2265bc-8c2f-4b91-a13c-a8a262d08df7",
        "cursor": {
          "ref": "d4d91f06-6829-4dd2-9127-b61fd57f8243",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "8b4f2502-4fbc-4071-90bd-b343d4a66862"
        },
        "item": {
          "id": "2c2265bc-8c2f-4b91-a13c-a8a262d08df7",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "c5139d40-b70d-4393-8ca5-b2b6646538cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47f191ac-ad71-48f0-a0be-c47e628c7b35",
        "cursor": {
          "ref": "d4992e2a-7f24-4293-8a7c-30accbe47577",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "8391216d-5be6-4b69-9fd6-9240a0f2d0a2"
        },
        "item": {
          "id": "47f191ac-ad71-48f0-a0be-c47e628c7b35",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "9115435b-f3d5-4873-b989-bc7c9c79cf0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05632e33-31d1-4b0b-949e-d98a28f3b425",
        "cursor": {
          "ref": "0ab9720a-4477-4392-a64c-e2bc721b05a2",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "5945e11e-a37e-4763-a2dd-ee5519577952"
        },
        "item": {
          "id": "05632e33-31d1-4b0b-949e-d98a28f3b425",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "cde5ec44-517d-4781-b27f-90e7b2dca585",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52063342-26d0-4a97-a449-670424cd6b15",
        "cursor": {
          "ref": "86070f74-4d62-4d8c-b9af-b2043836803d",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "a110a405-9120-4c77-9d11-6629e26cefed"
        },
        "item": {
          "id": "52063342-26d0-4a97-a449-670424cd6b15",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "422794f4-0184-411a-bc6d-785beff8098b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43e7cc9c-2110-47c8-86c0-e1ebd11b9aa6",
        "cursor": {
          "ref": "26bc0db9-5b08-4234-bd5e-706626e37a3d",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "e306007e-83d4-4a3d-9508-cee3dda8142f"
        },
        "item": {
          "id": "43e7cc9c-2110-47c8-86c0-e1ebd11b9aa6",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "014b983b-1afd-4562-9b3a-75444582a234",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57bd4e03-d1d4-4416-a829-7281e7932a70",
        "cursor": {
          "ref": "82ed07a0-adfa-4fc2-b01b-7cf8016870d9",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "773236ec-72a9-4222-acd7-eb01ccbfb4ed"
        },
        "item": {
          "id": "57bd4e03-d1d4-4416-a829-7281e7932a70",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "f5d37e4f-0782-48de-9ecb-bb0134260809",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07e4af73-6c0e-4979-b523-ddbf2397f94e",
        "cursor": {
          "ref": "66b02e93-fd3e-46cc-b6ff-a6245bd96cee",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "2cd9da42-290a-41e1-8f63-f3b84188eea9"
        },
        "item": {
          "id": "07e4af73-6c0e-4979-b523-ddbf2397f94e",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "185a2af4-1e5b-4553-8a0e-5d18adaac38e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3004858a-9126-4d4a-809c-34a0c7a38437",
        "cursor": {
          "ref": "a535567d-c1bf-46c7-a6e1-826dc596c713",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "fcc49433-3b36-4ee7-bc86-4e2d83b99a56"
        },
        "item": {
          "id": "3004858a-9126-4d4a-809c-34a0c7a38437",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "21405397-4ab0-4f20-ba05-61da9e79af08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15f35301-251b-498f-94ff-f114895172ec",
        "cursor": {
          "ref": "93964ff5-56b2-48d7-86af-bf570fdd66d3",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "bb55d535-42ce-48e4-b1fc-235e6543f805"
        },
        "item": {
          "id": "15f35301-251b-498f-94ff-f114895172ec",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "d2743cdf-1ca8-4c4d-8ff2-626ba1a44c97",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 79,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f444de95-f10a-42b4-927f-8bd727a6023e",
        "cursor": {
          "ref": "090ff67b-8794-40fb-ad5e-c4eac5c4e7d0",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "38b1c279-3138-417c-949f-83ae80af0fe1"
        },
        "item": {
          "id": "f444de95-f10a-42b4-927f-8bd727a6023e",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "fc4ff0bb-7333-4403-a9a5-aff312c662e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd8ea10b-ed4e-43a1-a4b6-0a19dbd35bf6",
        "cursor": {
          "ref": "e068b26c-95b6-4320-bbed-2e114a84836c",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "6fb199c0-a581-44da-bcda-8c1e9c7c57c4"
        },
        "item": {
          "id": "bd8ea10b-ed4e-43a1-a4b6-0a19dbd35bf6",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "e1377315-37e9-4604-bb0e-101cab55e81e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d46e5550-0684-4064-8569-b8cc07a260e5",
        "cursor": {
          "ref": "bd9da752-342c-455e-b344-2dd151b0473a",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "ec320cc6-d1e7-454c-9d2a-4916e75fa20a"
        },
        "item": {
          "id": "d46e5550-0684-4064-8569-b8cc07a260e5",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "2a7d35ee-b4e0-43c5-8e27-d4869c9d5379",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79c3a690-b9b1-4560-b391-d82dd14c462c",
        "cursor": {
          "ref": "19db5757-5fbb-44ef-9b5e-f61090d5053a",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "e56f3326-114f-446c-91f0-d365e4d0c5a4"
        },
        "item": {
          "id": "79c3a690-b9b1-4560-b391-d82dd14c462c",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "66dd4c27-837e-441d-bb48-73015db7675d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "339b3724-e3f8-41a8-bda0-0f28c286f0e9",
        "cursor": {
          "ref": "f3c96eea-6e27-4291-9652-947c16f745fe",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "bfd8c2c7-87fb-4331-b096-0ba7f003af42"
        },
        "item": {
          "id": "339b3724-e3f8-41a8-bda0-0f28c286f0e9",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "9a7ca232-3d99-46d0-9f81-226ef8eb23d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d1d92fc-ba6d-479c-931a-870ce558ee27",
        "cursor": {
          "ref": "9d5651a8-b037-49ba-96cf-73bd5fa97d21",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "21834752-a1de-4c26-a0f4-df5c6f57fc30"
        },
        "item": {
          "id": "6d1d92fc-ba6d-479c-931a-870ce558ee27",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "c60ad3f3-1da3-4911-b2eb-b1ffaa73b0a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e235305-bb25-4ef3-b210-45d21e45dec8",
        "cursor": {
          "ref": "069c1da2-4aaf-4c2d-b315-e6ce1ffe7176",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "792f3402-c45c-4374-ab43-00f1cdb6424c"
        },
        "item": {
          "id": "6e235305-bb25-4ef3-b210-45d21e45dec8",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "d6c38099-0855-4daf-8d3b-7eecbaf9f6c4",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 77,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "527b58ed-079d-45c2-964a-2b0fccd96211",
        "cursor": {
          "ref": "6f2b1673-0d8d-487f-9c6f-e86eece86a20",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "71617967-2d43-4f3e-85b5-e076dd05365d"
        },
        "item": {
          "id": "527b58ed-079d-45c2-964a-2b0fccd96211",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "d84d6660-558a-4702-9baa-2a50987bccd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd74c8fd-e4f7-489c-b3b6-4ec10a93f15f",
        "cursor": {
          "ref": "0fed9e17-e15f-4d38-98e4-13ef039dc008",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "0ffdcedb-6940-4fb1-a220-68d92199f083"
        },
        "item": {
          "id": "fd74c8fd-e4f7-489c-b3b6-4ec10a93f15f",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "efd0017f-faa5-4c62-96f7-8a6779d01f7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89b16850-c3af-45c6-b1d5-4463a42df431",
        "cursor": {
          "ref": "fb7483df-5cc8-4ee5-a2ed-730ff0186454",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "0eea596a-11c5-46ea-bea3-721e30860341"
        },
        "item": {
          "id": "89b16850-c3af-45c6-b1d5-4463a42df431",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "ab8fbb9c-3018-4f54-87b8-8a97b3b57db5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d97601de-4c02-4c73-a1ed-76960743a429",
        "cursor": {
          "ref": "0b0a7e13-bb67-47f0-8286-5f7358667b78",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "6b1750cb-8aa9-4ab5-8824-50bca61dfba1"
        },
        "item": {
          "id": "d97601de-4c02-4c73-a1ed-76960743a429",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "fde09d9a-8645-445d-b1e3-cff9f3f2b351",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba9aae9f-035b-4013-a555-887d025a88d9",
        "cursor": {
          "ref": "8209d1b7-86b4-498f-b03a-0c884abfc687",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "f5a3a751-ff0e-44d9-88f1-e020e710711e"
        },
        "item": {
          "id": "ba9aae9f-035b-4013-a555-887d025a88d9",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "34eb8177-2f44-4726-bfda-147e34fbe2c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "838fc9fd-151f-47a9-b4be-a2955651622f",
        "cursor": {
          "ref": "f5ba09b5-7fcf-4e71-8634-e6ec48998688",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "a1a71e96-7019-478c-b012-cbee440570c3"
        },
        "item": {
          "id": "838fc9fd-151f-47a9-b4be-a2955651622f",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "b3545748-1190-4ee2-8cd7-eee7979769ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85c20440-9035-4dda-9ac2-22a6a2bed9bc",
        "cursor": {
          "ref": "7f13bd13-9b89-4acc-90db-1d5ae9ef0929",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "94c50949-98cf-4690-94eb-ffdf498f363c"
        },
        "item": {
          "id": "85c20440-9035-4dda-9ac2-22a6a2bed9bc",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "d63e0fa8-bdb2-4a68-8c29-b2014f5dbc35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba22b646-073f-4d13-8dd3-391c23d31740",
        "cursor": {
          "ref": "32ac0c46-8ea7-49a7-8f97-78b6b8102dab",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "62c02c38-2ad7-47af-b53a-da7430d0c4d6"
        },
        "item": {
          "id": "ba22b646-073f-4d13-8dd3-391c23d31740",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "ce0e1087-ce01-4b4a-a5da-13a352f8c075",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 98
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fe9c108-b341-480d-a91b-dbdd143d8244",
        "cursor": {
          "ref": "aaa80d59-46f8-4f02-a0b9-12d72e505ddb",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "6074e7b2-042d-4815-83f2-25b7fff44046"
        },
        "item": {
          "id": "1fe9c108-b341-480d-a91b-dbdd143d8244",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "d1951a50-38f5-492e-b054-b0b652457a17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6c4dbcc-319f-4397-b9fb-5769fff2b57a",
        "cursor": {
          "ref": "599ec5f3-a1f7-4c3d-a672-b0179ff417c8",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "6129a275-0f03-4d43-875f-8bdab7120ecd"
        },
        "item": {
          "id": "a6c4dbcc-319f-4397-b9fb-5769fff2b57a",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "d6062b01-134c-44ca-9045-c88ea8b4aeb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6bd90f4-7930-4df6-b8cf-ad3640aa2170",
        "cursor": {
          "ref": "54e5c06c-7d68-4640-b5a9-005cba6a19b8",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "246f161e-b10f-4e3b-b61e-548b7695f379"
        },
        "item": {
          "id": "f6bd90f4-7930-4df6-b8cf-ad3640aa2170",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "ab21cc02-d464-4d2c-bd33-fa8d862ab008",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be86af9d-4327-4e96-8878-f62a9ded31a3",
        "cursor": {
          "ref": "62ec2944-f057-4840-9535-daeb5f9239ac",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "c59dc3b2-ea21-49a5-80e3-49a246e28ec4"
        },
        "item": {
          "id": "be86af9d-4327-4e96-8878-f62a9ded31a3",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "10012495-8077-4c12-9925-fb3f23356b5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94665e0e-7c2f-4dd4-b22d-90962edcee74",
        "cursor": {
          "ref": "131894e7-99b2-4dfb-b408-a8f64207a513",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "f2de73fb-a73e-4969-965e-ec910c935209"
        },
        "item": {
          "id": "94665e0e-7c2f-4dd4-b22d-90962edcee74",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "4815c6c0-e114-4571-be77-c68cc6237cde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15139837-fe36-4d22-9a6c-b1b59d6ebb0e",
        "cursor": {
          "ref": "7bf77518-7c0b-442a-a476-c4a254451086",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "0c4b8afb-aa80-4f98-a271-86d67a494093"
        },
        "item": {
          "id": "15139837-fe36-4d22-9a6c-b1b59d6ebb0e",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "ef17d062-04b5-46a4-a24e-8872f9dc636d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b838d370-ae14-4735-9ca3-1aba43f0625a",
        "cursor": {
          "ref": "8bceb470-f824-4846-b37a-643521d63647",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "7eae6fb3-48b6-498e-a305-231f0b3b885c"
        },
        "item": {
          "id": "b838d370-ae14-4735-9ca3-1aba43f0625a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "3718ad73-882f-40d7-bd8d-70a2c7beed6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aaa4f0e-ed30-4e9e-b921-ba8ab9265e5d",
        "cursor": {
          "ref": "3504532c-89f6-4d55-ae24-d72d979ec62d",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "a21cf51d-22a8-4d57-847c-974d9cca3020"
        },
        "item": {
          "id": "1aaa4f0e-ed30-4e9e-b921-ba8ab9265e5d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "bdafcc73-e642-4e4c-b2e9-cefd73c48810",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efc439a6-69ae-459c-8351-cfc7f702aa1e",
        "cursor": {
          "ref": "ffdc3e38-0df0-46d8-ae6b-5a867325288b",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "9efe3a23-0f19-49c7-976f-8d0737cbb4e0"
        },
        "item": {
          "id": "efc439a6-69ae-459c-8351-cfc7f702aa1e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "095cf9a8-efc3-45e7-8923-ae02b68947ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "443007b0-96a3-4cf4-9268-f766c519c1f1",
        "cursor": {
          "ref": "76dcb99c-6ebc-4e84-a535-a6ad6e8b85be",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "8902541e-c6a5-4a7a-a1b6-319cee9726de"
        },
        "item": {
          "id": "443007b0-96a3-4cf4-9268-f766c519c1f1",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "5d89cd7d-41dd-43d0-bfea-66473084e404",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b78e842-971c-4d99-8873-5b52e8bc1fe8",
        "cursor": {
          "ref": "9dcdbc4e-b78e-4d4f-8432-fe4a32e06539",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "5cdb7e5c-9c55-43cf-8b82-b5d7b15e6d56"
        },
        "item": {
          "id": "9b78e842-971c-4d99-8873-5b52e8bc1fe8",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "425821f4-c210-4bf7-adeb-177bdd2c0eb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 75
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1b1ce46-6bc9-4ed4-8594-fc4701fe8fba",
        "cursor": {
          "ref": "5ec09262-222a-4830-b65d-86ece1f730fb",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "815f038a-67f3-4c80-bf33-508f129ebbe8"
        },
        "item": {
          "id": "d1b1ce46-6bc9-4ed4-8594-fc4701fe8fba",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "39419e62-5cd2-41ad-b70d-ab7a1784b8ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6430eef5-7fd4-4e20-8c28-9aee1e59befe",
        "cursor": {
          "ref": "d5df83e0-691c-4c4c-8a5d-2c22f6fa1507",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "5b11f968-6eb0-4164-90e0-dbeb0c9ae593"
        },
        "item": {
          "id": "6430eef5-7fd4-4e20-8c28-9aee1e59befe",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "9b0baf66-39af-4fa4-bbf7-f20fd8aa5053",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d854fe2-37de-4446-9772-2bacaf2f3724",
        "cursor": {
          "ref": "f7d33382-1fb9-4f02-a2c6-ce998fb9ae80",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "0238b438-e751-42fa-b496-93a9dbf42761"
        },
        "item": {
          "id": "6d854fe2-37de-4446-9772-2bacaf2f3724",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "31b7b06d-04eb-4174-8923-e43a7f7f97c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a94169e-d02e-44d8-a126-58d9ce9d3f30",
        "cursor": {
          "ref": "4689bc78-9976-4320-8b2d-ef8da244d6c0",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "e703e0b3-c527-4284-96c5-662ffbd66131"
        },
        "item": {
          "id": "3a94169e-d02e-44d8-a126-58d9ce9d3f30",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "11adb25f-98b1-4101-8123-6b4b1920b8ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7878d7e-f7be-44f6-9745-0aca424a632e",
        "cursor": {
          "ref": "c1026fcd-04f4-4a84-b000-39b10898c38b",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "ef1c2ff5-22eb-41b2-a59a-694a92107043"
        },
        "item": {
          "id": "d7878d7e-f7be-44f6-9745-0aca424a632e",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "d03a13e9-3cae-4f76-88c1-2fb15af8860c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b08ac805-f5ff-46fd-bc29-4ca9278b23d6",
        "cursor": {
          "ref": "45d9ac87-c381-4215-9caf-ec39cc45f3d9",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "75f3c966-4314-41c6-90c6-f35c5734c49b"
        },
        "item": {
          "id": "b08ac805-f5ff-46fd-bc29-4ca9278b23d6",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "732ea1f9-a7cf-47aa-b4be-5047d275f5db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e63a8d3f-0a4e-42c1-878d-79a9cda76937",
        "cursor": {
          "ref": "18b81336-3e6f-4000-9ae2-dd9f3e8432de",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "16bf23e1-f464-482f-b803-73b97f97cf7d"
        },
        "item": {
          "id": "e63a8d3f-0a4e-42c1-878d-79a9cda76937",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "18249a65-b661-4efb-b139-d59f458febdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7aff383-2d18-4692-8da3-85105b5f4c39",
        "cursor": {
          "ref": "d922c55d-5926-49eb-91eb-97ccbc255a4e",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "7ab1c161-af58-4236-95c7-47768dbb401a"
        },
        "item": {
          "id": "e7aff383-2d18-4692-8da3-85105b5f4c39",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "1bd9a862-5ead-4db5-9c40-c543a74564bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa93b5eb-5af2-4d76-a230-de41ed826e60",
        "cursor": {
          "ref": "9e47bb3a-f0d7-4876-8bdc-40dfba716101",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "6ecd15e3-9892-420e-ad3f-7a210564d5a1"
        },
        "item": {
          "id": "aa93b5eb-5af2-4d76-a230-de41ed826e60",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "e5f3ce0c-04cf-4aac-9d08-04900c9bdea4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0ef7045-7c3f-4276-8c08-59bb18cb3bf4",
        "cursor": {
          "ref": "2d190734-26da-4329-b34f-abde1e30e9f2",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "83e28eff-c997-4038-923e-faeeed9f9ca6"
        },
        "item": {
          "id": "c0ef7045-7c3f-4276-8c08-59bb18cb3bf4",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "ee062554-35c8-411a-88b2-0349b5938332",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "489498cd-5ec0-4e47-8de6-923468b55d0d",
        "cursor": {
          "ref": "1df86c79-ddbb-47d1-8e65-a9c06c2a6616",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "884be5c0-6293-4184-a712-83c32efcd183"
        },
        "item": {
          "id": "489498cd-5ec0-4e47-8de6-923468b55d0d",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "8677acac-2381-4058-bd3c-cecd43e214a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 132,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b406df9-51d4-4738-9ad5-f510a7ae2113",
        "cursor": {
          "ref": "0d25b0a0-2519-436d-8672-635bad1a1414",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "6816d048-f9b2-4543-8a6c-33d4785883d6"
        },
        "item": {
          "id": "4b406df9-51d4-4738-9ad5-f510a7ae2113",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "09e5f952-4780-48a6-9bf4-ed139c38c622",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2722d3e4-07f2-440e-a2ed-783f686e9347",
        "cursor": {
          "ref": "f82eca60-f6d2-48c7-8d1d-9dcc2917d8de",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "9a86943c-9141-4132-9063-379db69ba6e6"
        },
        "item": {
          "id": "2722d3e4-07f2-440e-a2ed-783f686e9347",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "349c1e23-c2d5-454b-9359-839834d0ee75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88498230-daf1-4001-9127-3732be2e6abb",
        "cursor": {
          "ref": "9379e36e-5a3d-4a53-ae6b-c985830727a5",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "f166a44e-b7ef-42a4-a4ca-d716c3bb4430"
        },
        "item": {
          "id": "88498230-daf1-4001-9127-3732be2e6abb",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "923820f4-285f-41f3-89c9-ebc8809dfd26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d1e5de0-f06b-4d95-85a5-12629feaf8a6",
        "cursor": {
          "ref": "0dc2d76f-5c77-407e-bb93-41f2a4c71fed",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "fb9c1278-5855-4b53-b0e8-4edbb903ed17"
        },
        "item": {
          "id": "3d1e5de0-f06b-4d95-85a5-12629feaf8a6",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "e16554b0-bac0-466d-939b-5b5cc2dc46f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1a20bdb-5abe-4798-9382-5db14f24791f",
        "cursor": {
          "ref": "92420b80-91d3-4d64-b007-849d48cfb9ae",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "8be615ec-defb-4bc0-86ca-3c20251c9092"
        },
        "item": {
          "id": "e1a20bdb-5abe-4798-9382-5db14f24791f",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "b5ae7256-eae6-4c4c-88ee-e4e108a1567b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "716c708d-439f-4aae-8326-dc256fafa429",
        "cursor": {
          "ref": "b44a704a-43b2-468d-a11d-8a4cf8c270a8",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "c74355b2-fea5-4d7c-8c17-3babd0212555"
        },
        "item": {
          "id": "716c708d-439f-4aae-8326-dc256fafa429",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "0de3ac04-0a1f-4f70-8ea5-0b5b3dc4ed7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "401425f2-3954-44e5-ad57-c975e1ec418e",
        "cursor": {
          "ref": "7b8c30f5-152d-4407-8d8e-e70242b80f0d",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "3dbb6702-ae64-4ff5-a83c-7b454aed9176"
        },
        "item": {
          "id": "401425f2-3954-44e5-ad57-c975e1ec418e",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "5414d407-374c-4461-80df-a54455b02778",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dc2f184-2193-4f7a-b1ba-81ed8edcdc16",
        "cursor": {
          "ref": "ef6d7d54-2198-434b-87e4-11345defe1aa",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "df57ed5a-42e0-4cb0-94bf-e56aed1599cc"
        },
        "item": {
          "id": "6dc2f184-2193-4f7a-b1ba-81ed8edcdc16",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "6d854b5a-9d6f-4572-bdce-035c9813f390",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65443416-33f3-43b4-92ad-6976e89e368d",
        "cursor": {
          "ref": "bb95053b-df80-44dd-b386-97b338c7c5b2",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "067875c9-0238-4de6-aaf9-30704bf8ff58"
        },
        "item": {
          "id": "65443416-33f3-43b4-92ad-6976e89e368d",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "f1721ae1-d48c-46ea-9adb-7b05a36e0c51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebb7f854-676e-4aa3-9b76-e17258319990",
        "cursor": {
          "ref": "3fdb66b0-66f0-4c59-8c4b-595e22e4e88b",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "dc77401a-835f-4249-9d4b-62369fd87702"
        },
        "item": {
          "id": "ebb7f854-676e-4aa3-9b76-e17258319990",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "0d737494-14e8-4cac-b45b-21eeb15e7d73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fef20541-a526-405a-a7ba-7efd0f3fe530",
        "cursor": {
          "ref": "45e8628b-165c-42d8-88ac-0d2cc4885f72",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "ac20caca-847d-42d8-80f8-5522efcc917c"
        },
        "item": {
          "id": "fef20541-a526-405a-a7ba-7efd0f3fe530",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "4779d3f9-922a-4ff5-8729-f4d2887e4af8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22f26eb9-db80-4875-87cd-4948f6902039",
        "cursor": {
          "ref": "ef8b03e0-9efd-4336-99be-7f83cfcae428",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "0894ca96-9ee6-4587-acc2-2468de844137"
        },
        "item": {
          "id": "22f26eb9-db80-4875-87cd-4948f6902039",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "dcb83337-4d41-450c-94ae-63d2998a77fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ab3b367-c813-4761-a1e5-13eb0ba04333",
        "cursor": {
          "ref": "65de9bbb-bce8-4b69-8a97-f8bbe3e137a1",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "ac887715-501c-4d1b-a003-a4462ceaa8b1"
        },
        "item": {
          "id": "9ab3b367-c813-4761-a1e5-13eb0ba04333",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "6fe082ec-0102-4249-8395-cf44c9362843",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d2708d3-c98c-43cc-950e-0e138588c0c4",
        "cursor": {
          "ref": "628a3d31-bd6e-4297-9e9e-77ff5902ba8c",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "c61ea020-bb19-4a23-a3e6-dac71c369176"
        },
        "item": {
          "id": "2d2708d3-c98c-43cc-950e-0e138588c0c4",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "a46dd3ca-913a-4dd6-8dd0-db536715865e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d04ee67-9042-45b3-b74c-40d867a53ce2",
        "cursor": {
          "ref": "7717bf51-83a4-4b75-a324-3e763d2ec2ab",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "20a15f47-15ac-44e7-af53-20f6e91a0175"
        },
        "item": {
          "id": "8d04ee67-9042-45b3-b74c-40d867a53ce2",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "b09aee5e-8159-4504-9177-158c80ede39f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8431332-459d-4366-acf3-403278038214",
        "cursor": {
          "ref": "dd5b4249-da38-4a43-b222-17bddd2660b1",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "5de9a396-0ffd-4b1e-92b2-acb0a7fb5060"
        },
        "item": {
          "id": "f8431332-459d-4366-acf3-403278038214",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "ef9c5c42-2288-4a38-b21d-5af69d1dc5e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "074cd344-9c16-42ba-b49b-77df2e94f250",
        "cursor": {
          "ref": "ee01ce53-723e-43ef-9a5b-db005a201404",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "c9cf6a04-ba6f-4062-8b1d-39056aadf584"
        },
        "item": {
          "id": "074cd344-9c16-42ba-b49b-77df2e94f250",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "92e35cad-3ee1-42de-af2f-0b66a6665208",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "384b86f6-a369-453b-b565-f0429d6c1470",
        "cursor": {
          "ref": "dc1520a0-5213-430c-9657-e6c54f491653",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "02d32e18-4775-4d1b-85a5-2d042547e214"
        },
        "item": {
          "id": "384b86f6-a369-453b-b565-f0429d6c1470",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "0ba79b0d-0710-4cc4-9889-9ebd37de8178",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d021771c-3b5e-4290-9abd-70068a5b48e5",
        "cursor": {
          "ref": "a1ddaf50-8e63-4d84-9959-d18aa1d5b273",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "383b6470-4555-4eed-92cf-c7d2fd2730a7"
        },
        "item": {
          "id": "d021771c-3b5e-4290-9abd-70068a5b48e5",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "e47b31d9-f560-4614-b511-d9f19e8d5e2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70560e8e-c35e-4591-8cc0-1b1b0702b5fb",
        "cursor": {
          "ref": "a583de95-db10-4a64-8c37-e379cfd309d8",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "cdcd286b-ba19-4e81-819f-a66469c87938"
        },
        "item": {
          "id": "70560e8e-c35e-4591-8cc0-1b1b0702b5fb",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "605767cf-df18-4900-9424-50de11710b71",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 78,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab98cf11-73fb-4b1d-b478-4c4aeb8b0a64",
        "cursor": {
          "ref": "b83f7553-0d83-43f9-9be7-c0da2acdb3f1",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "2c69eb83-7c99-4ddd-a13f-6488827c3043"
        },
        "item": {
          "id": "ab98cf11-73fb-4b1d-b478-4c4aeb8b0a64",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "84e4840f-7487-451b-8944-77a4b35aa89a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "3e9a6766-e076-4860-a75e-20f96f120fd6",
        "cursor": {
          "ref": "02c5c411-d731-4134-9095-2ed0cf5c5c5b",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "9872e341-fa34-4033-b8cb-06da7a787f9c"
        },
        "item": {
          "id": "3e9a6766-e076-4860-a75e-20f96f120fd6",
          "name": "credentials_issue"
        },
        "response": {
          "id": "cc376580-a6a1-4221-aad2-0ab4b854175f",
          "status": "Created",
          "code": 201,
          "responseTime": 20945,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "38985739-fa3b-4baf-908c-0a3e1370cefb",
        "cursor": {
          "ref": "c4827e45-e4c9-454a-8ae1-c89558c6018e",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "53b197e1-7d03-416d-a379-d995a6d0a807"
        },
        "item": {
          "id": "38985739-fa3b-4baf-908c-0a3e1370cefb",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "246abe7f-a571-4384-9a2c-005a89e78c0e",
          "status": "Created",
          "code": 201,
          "responseTime": 20308,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b792a30-7b98-4785-aca4-44c07eac2f45",
        "cursor": {
          "ref": "381a634c-abbc-40fa-a49f-21a8b1b3111b",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "d0c98cc1-fd36-4e90-a217-daad1bec3c96"
        },
        "item": {
          "id": "4b792a30-7b98-4785-aca4-44c07eac2f45",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "410bb9df-e4e4-4601-b964-fd4a1736f75e",
          "status": "Created",
          "code": 201,
          "responseTime": 20364,
          "responseSize": 1229
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1462c8f-9d28-44e7-bd46-6477f6bf93dc",
        "cursor": {
          "ref": "fe58752d-d9b2-496d-8d4f-0af6bc06db8d",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "37a2fba3-59cf-4d75-9725-beb418f8e9d1"
        },
        "item": {
          "id": "b1462c8f-9d28-44e7-bd46-6477f6bf93dc",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "84a1bd07-e9cf-48bb-b451-84472026908d",
          "status": "Created",
          "code": 201,
          "responseTime": 20321,
          "responseSize": 1235
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "69d0ec96-27d2-46f9-9fb9-701a5d35210c",
        "cursor": {
          "ref": "0cfbd780-2526-4d9b-9010-aef43878f996",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "41e251ca-b216-4bcb-acb1-21f31a032e78"
        },
        "item": {
          "id": "69d0ec96-27d2-46f9-9fb9-701a5d35210c",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "a255347f-91a0-4e6c-b684-95aeeed60293",
          "status": "Created",
          "code": 201,
          "responseTime": 20366,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "expected '2024-09-25T00:48:09Z' to equal '2006-01-02T15:04:05Z'",
              "stack": "AssertionError: expected '2024-09-25T00:48:09Z' to equal '2006-01-02T15:04:05Z'\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "f7cc9ea5-9c8f-45ca-bf1c-afc96badb4e8",
        "cursor": {
          "ref": "9c4cc7ac-d9d2-4599-8a00-513abdf1ca83",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "7d98308f-a14a-4b49-81fc-04b445bb5bd8"
        },
        "item": {
          "id": "f7cc9ea5-9c8f-45ca-bf1c-afc96badb4e8",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "459e77b8-9348-43b4-88f9-588b3861f133",
          "status": "Created",
          "code": 201,
          "responseTime": 20241,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fcb34fc-9494-4435-9303-f98f8f22d76c",
        "cursor": {
          "ref": "50cf447c-8954-4c08-995e-ea17e8a8efc6",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "331cc46c-aee8-479e-b3ce-ed71249d8f69"
        },
        "item": {
          "id": "6fcb34fc-9494-4435-9303-f98f8f22d76c",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "4d4f8427-6a93-435b-8b27-3de8c144029e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9aec0bd-d14c-44a1-b53a-6e2d7c11bfe0",
        "cursor": {
          "ref": "743e96ba-491d-48b2-9960-893c527e67d1",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "8580a53e-d5c9-4552-99ef-d8c8e282947e"
        },
        "item": {
          "id": "d9aec0bd-d14c-44a1-b53a-6e2d7c11bfe0",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "6cd02101-766f-4a78-ab52-a7e0414c9d27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59b4e4d9-1b53-4b6c-869d-3c654471a80f",
        "cursor": {
          "ref": "9becf108-fe63-477b-a60b-ddd59b827be4",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "f10a99b6-bc56-4c81-aff9-f387b9181192"
        },
        "item": {
          "id": "59b4e4d9-1b53-4b6c-869d-3c654471a80f",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "0b2a06de-a918-4326-8203-1ac7f83bea74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b89e10fb-f175-4bb3-8ae3-2242f522a814",
        "cursor": {
          "ref": "5814713b-a580-4b79-aa63-baf9b294c753",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "947201e6-fd65-4602-b533-6f5ec32ff852"
        },
        "item": {
          "id": "b89e10fb-f175-4bb3-8ae3-2242f522a814",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "7f8712ed-64d7-4539-b3f0-89a2a668bf19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29e9e96e-f2d5-490f-9b7e-9cbeb5ef6e15",
        "cursor": {
          "ref": "8c0f316e-f72a-4aaf-8ba2-e442efd64bc3",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "dcbf5e3a-d51c-4354-893e-43a362f9956f"
        },
        "item": {
          "id": "29e9e96e-f2d5-490f-9b7e-9cbeb5ef6e15",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "efba7311-9e23-4dc3-ba34-03ffeb123ff2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ff00b8b-2391-4382-bfeb-73dd627439de",
        "cursor": {
          "ref": "f54daf4a-8e22-4cc4-a160-21dd1929f3ce",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "ac098a05-3f61-4f55-b02b-ce53092e8278"
        },
        "item": {
          "id": "5ff00b8b-2391-4382-bfeb-73dd627439de",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "05b306ad-898b-4823-92e2-97ea84971df9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "101c74c6-7d91-4ce5-8994-cd07d6123d2d",
        "cursor": {
          "ref": "e14b2a75-7430-4eca-b6b7-8d01c708ebe5",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "ba952648-f05e-44e5-a992-f140b25d5714"
        },
        "item": {
          "id": "101c74c6-7d91-4ce5-8994-cd07d6123d2d",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "3027efef-30a2-4a73-a99f-2cf5ea5955d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd9ca696-62d5-4f83-baeb-76418018fbe4",
        "cursor": {
          "ref": "f16e752d-ae12-41fd-9008-cdbb81ca7ec8",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "0c6f2c26-d02f-4a44-84ec-44a6e5563334"
        },
        "item": {
          "id": "bd9ca696-62d5-4f83-baeb-76418018fbe4",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "008259fe-85a4-4aa9-888e-d3526299022f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f72f8d4-3f46-4e10-a9ba-a48750cbc1c8",
        "cursor": {
          "ref": "1251fdcb-2e7c-4801-90d2-56aa93f7e8e8",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "d8cb8fef-453a-4242-8af4-4b601a44f24b"
        },
        "item": {
          "id": "3f72f8d4-3f46-4e10-a9ba-a48750cbc1c8",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "4091125b-caca-4aff-98e6-6d3ed1de277f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d880aea-9211-4b90-abcc-64d70024255f",
        "cursor": {
          "ref": "b827d95f-064c-433e-865e-2d7470ae6e55",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "1d48c438-0346-4ab4-acf5-20ff52fa34bd"
        },
        "item": {
          "id": "7d880aea-9211-4b90-abcc-64d70024255f",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "46317ff1-8540-4668-ba81-8fd8eaf29f0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02ec661d-22a2-42b3-80db-7d3924f2b8ca",
        "cursor": {
          "ref": "c46f7c8e-ffa7-4703-a4b9-3290607ff6c0",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "94f53e32-0c86-48d8-a716-0d7892dff1a8"
        },
        "item": {
          "id": "02ec661d-22a2-42b3-80db-7d3924f2b8ca",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "6f646465-a44a-4fc8-b40d-a1baeb547656",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7658028-e78f-4d21-9702-c744a670cd59",
        "cursor": {
          "ref": "249ee048-faa8-42b7-a6dd-1dc78ef297c3",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "6ff487f4-7510-42bb-9f36-142bad9cd0ab"
        },
        "item": {
          "id": "a7658028-e78f-4d21-9702-c744a670cd59",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "c436dcd5-d2f3-4054-938a-a76735541a00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8b71ce9-7560-474e-81f1-58f5b58a3c9b",
        "cursor": {
          "ref": "97d3ec47-ddbb-4301-8f65-31912a6b83cf",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "9a731d19-23b2-4a5d-84c8-49df07f29bdb"
        },
        "item": {
          "id": "a8b71ce9-7560-474e-81f1-58f5b58a3c9b",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "f9a3db9d-2331-4784-be0c-a394f7e53fac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8792d56c-e258-4c66-ace8-05bf8544024d",
        "cursor": {
          "ref": "592943f2-59d3-42db-8a38-523e7fd28953",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "7fbf2ff7-5154-4826-b607-3b8db78d4340"
        },
        "item": {
          "id": "8792d56c-e258-4c66-ace8-05bf8544024d",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "cd660e86-acd4-42e6-bb3b-21748f07be15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65f2b06a-f598-4abb-952f-549d1ef62371",
        "cursor": {
          "ref": "fbced781-b4f0-44f7-82ed-becd1ed02999",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "d5872d15-7529-4312-ad22-5cab2702b60b"
        },
        "item": {
          "id": "65f2b06a-f598-4abb-952f-549d1ef62371",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "0a04896b-c902-444b-8cf3-a5144a16248a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ca7f5ff-6c03-4c3d-bfd1-edecb8e91f15",
        "cursor": {
          "ref": "b3fd8333-8315-496b-b581-863b9c86d984",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "26a22f00-3b53-47b6-8ece-6f4a90b0e99a"
        },
        "item": {
          "id": "5ca7f5ff-6c03-4c3d-bfd1-edecb8e91f15",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "dbf2f155-c7a3-494d-866d-43b888d631dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e8c08bc-228d-48bc-855d-ee82c9b5c754",
        "cursor": {
          "ref": "6fd4abcb-2660-4061-b1d1-d2775c31bc87",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "3af6e159-71ce-460a-83c5-9a8b35426bd3"
        },
        "item": {
          "id": "1e8c08bc-228d-48bc-855d-ee82c9b5c754",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "2b07b1f9-1f39-42ff-88ca-dfa0a9ce2e3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d8e80db-1967-421a-b66d-a2a34c9a7922",
        "cursor": {
          "ref": "bb551a4c-66e7-4eee-be23-711294af10b8",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "d35b32de-01bb-4969-910b-ef1388d4e838"
        },
        "item": {
          "id": "8d8e80db-1967-421a-b66d-a2a34c9a7922",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "8d6329c4-f300-488f-b3be-fb6b011656e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a417098-606b-4a9e-b9c3-2603df319fa0",
        "cursor": {
          "ref": "abc86242-ce78-4a48-9bff-06b24e9449c9",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "5eb001c9-539e-4299-857e-ccd1a1258a83"
        },
        "item": {
          "id": "5a417098-606b-4a9e-b9c3-2603df319fa0",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "18f4016c-4d0e-4d26-b36c-88c903d94e79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afc07fcf-b879-463d-99cb-1187123e96a4",
        "cursor": {
          "ref": "4bb47927-2835-46d1-9974-9bff8cb7a581",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "441c01bb-436d-4933-90b4-8965cc5ea841"
        },
        "item": {
          "id": "afc07fcf-b879-463d-99cb-1187123e96a4",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "ec6fe487-e682-4fbb-9db1-34e37eef25e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87cc9276-0887-4dba-a70b-9f1c5c2a5eeb",
        "cursor": {
          "ref": "9783f1ec-ef35-406c-9d1f-193068fdb0b1",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "226603a9-c027-44ae-b738-fbca5813df0e"
        },
        "item": {
          "id": "87cc9276-0887-4dba-a70b-9f1c5c2a5eeb",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "b3e5325b-80d5-4136-9242-b09660b570c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9113b1e3-336a-40ec-8b0d-8780918be21d",
        "cursor": {
          "ref": "93f037b8-35d0-49b3-8ac6-5a84c2be6aea",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "d6262435-54a9-426a-a0fc-c92a1660729c"
        },
        "item": {
          "id": "9113b1e3-336a-40ec-8b0d-8780918be21d",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "5f9c488f-9226-46b1-84b8-fc7ac6ed90a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db5d3172-bea6-44ff-a60a-8a85f5f0ba62",
        "cursor": {
          "ref": "88cd4251-86c8-4500-b238-c118c982cf01",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "9fb9d4d3-98db-440f-837c-8056d575ac25"
        },
        "item": {
          "id": "db5d3172-bea6-44ff-a60a-8a85f5f0ba62",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "653196a0-0dcd-4aa1-9b15-bb0c88a7eebb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eec2e3ba-1e91-428a-a6f5-4c1723983ef9",
        "cursor": {
          "ref": "75b83d95-0e50-4b78-9c2c-39da053a1cc7",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "bec88907-5807-4e25-b371-96db7f58e5df"
        },
        "item": {
          "id": "eec2e3ba-1e91-428a-a6f5-4c1723983ef9",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "ca1c4a06-bd16-44ec-aaf7-ed6603ae1137",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e2e1bcf-513f-4850-a790-f348876a9331",
        "cursor": {
          "ref": "66d81abd-27ab-4054-980c-e3c6f62c8bb8",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "6cfafb5f-e009-4cf3-a62d-955128b817f0"
        },
        "item": {
          "id": "7e2e1bcf-513f-4850-a790-f348876a9331",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "0fa9ee14-4460-4309-ac99-5639b7008916",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd774895-a854-447c-bf78-7a006a818d90",
        "cursor": {
          "ref": "4a69e1de-a1a0-479f-bc34-86a5c4463cc0",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "eaa6a9c5-52f1-4927-b43c-1644f0aeb06c"
        },
        "item": {
          "id": "dd774895-a854-447c-bf78-7a006a818d90",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "1cf996e9-725c-425d-9b86-db1f5221face",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b81f24b2-9c28-4cfb-aae8-2c22a0a34a49",
        "cursor": {
          "ref": "7614e168-dc68-4509-8056-0a690e8b6492",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "c6286b5e-2f00-4f07-a9c6-7805bd43ef94"
        },
        "item": {
          "id": "b81f24b2-9c28-4cfb-aae8-2c22a0a34a49",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "2fe27e49-6abc-4565-814d-8203d9c7bc83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d76943e-ccbc-4e43-b786-c0f0d43dbcc2",
        "cursor": {
          "ref": "a4af7126-9e54-407b-af37-e300c7cb3ae1",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "1080da31-d048-4927-9bf7-75e4678b7b90"
        },
        "item": {
          "id": "2d76943e-ccbc-4e43-b786-c0f0d43dbcc2",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "bbf9c524-04ce-42e6-9e80-f8f8faf471e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6b876e6-e05f-4872-8b6e-7f68f52dcf9d",
        "cursor": {
          "ref": "858e2ab4-012e-4d98-84eb-2b364be38370",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "62dae8c7-b1de-44c4-9baf-208e5d0798ff"
        },
        "item": {
          "id": "a6b876e6-e05f-4872-8b6e-7f68f52dcf9d",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "7bf27f0c-8388-43af-b356-f6a0855d00bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d3684b7-9e52-4688-9ca5-2e8f05029764",
        "cursor": {
          "ref": "7dd54115-4778-402c-9a87-46d64592983c",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "71079750-ddfe-407d-93a5-f533bcd45180"
        },
        "item": {
          "id": "4d3684b7-9e52-4688-9ca5-2e8f05029764",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "d9dd8981-5dbe-4b4d-ab14-ab8e66fa70fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "354cb3eb-c4ac-416b-aa06-3c7fab362354",
        "cursor": {
          "ref": "15dbdb86-3fff-4662-9f12-ad96755bcf82",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "03bc20b6-004a-4a4e-9da3-c8b7f05511f9"
        },
        "item": {
          "id": "354cb3eb-c4ac-416b-aa06-3c7fab362354",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "a6d0071b-e22d-4a4e-a91f-b76107e15232",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f570a100-604b-4330-9c36-40ae16b6ade0",
        "cursor": {
          "ref": "5a407c9a-0e19-4509-bcb4-62d2f48e72f1",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "e8181ab2-3e9e-4e7e-84fe-3af926a4d093"
        },
        "item": {
          "id": "f570a100-604b-4330-9c36-40ae16b6ade0",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "aea257f5-48f0-46d8-8e47-9e4a36344a2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c667104-d851-42f6-ab49-ddf6a8659cdd",
        "cursor": {
          "ref": "12669930-a8ce-4b54-b3e3-3dd71ebd7ce6",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "852d80ec-d336-44c2-af58-e72bae66503f"
        },
        "item": {
          "id": "7c667104-d851-42f6-ab49-ddf6a8659cdd",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "619bfe22-0eac-4c7c-a6b5-b7a1c2572560",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "098e80d6-f51a-4870-8dfe-4ac14e7cd618",
        "cursor": {
          "ref": "6bf9d9e5-fdd8-4790-bb0d-20ef5248d965",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "066512d2-cf03-47c2-9f83-279782550601"
        },
        "item": {
          "id": "098e80d6-f51a-4870-8dfe-4ac14e7cd618",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "4b32199d-4f21-4a74-a518-5848e5eb5708",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6822c0f-5f83-4560-9e2d-f1d54fdff527",
        "cursor": {
          "ref": "dec8b2e5-6821-4903-8d73-3f3cd6e157ec",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "60090822-b666-404b-aa9b-f996f53d881f"
        },
        "item": {
          "id": "e6822c0f-5f83-4560-9e2d-f1d54fdff527",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "81db899a-a302-4542-b5e5-805b2ebfccad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa4c3a7a-de11-4aaf-8e8d-6a4bc3820e1b",
        "cursor": {
          "ref": "ac9c5a72-aa2b-4a52-b946-ba7b5bb4e81a",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "a6b0e752-e469-4513-a056-0446e53873c7"
        },
        "item": {
          "id": "fa4c3a7a-de11-4aaf-8e8d-6a4bc3820e1b",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "8863eafd-5b1c-42e2-8a51-56a015c800d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25195b4f-21ca-427d-94ef-2287018c5651",
        "cursor": {
          "ref": "f43ff50f-9d32-4c03-add9-ad50d5cbc320",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "5db0d5c9-976e-450e-a790-a12c3d256874"
        },
        "item": {
          "id": "25195b4f-21ca-427d-94ef-2287018c5651",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "851672c4-2146-47ab-8b10-8a1084bf1b5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83371990-c3ab-4f0a-b85b-ea2bb8e76140",
        "cursor": {
          "ref": "07d84750-19d7-47ab-8b58-590b4450d5c7",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "9c1f901d-b813-4121-a0b0-41a7221a856c"
        },
        "item": {
          "id": "83371990-c3ab-4f0a-b85b-ea2bb8e76140",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "8ad2b136-e65e-4ca4-95cd-7d6c03e391ef",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 80,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "528a2e6d-8b92-45c4-ba53-4fa84b5b1e91",
        "cursor": {
          "ref": "48df4ff9-3ec2-465c-b535-5b56f2f66ab3",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "7f1ec69b-7825-4043-aa3f-e7a3a5997cc0"
        },
        "item": {
          "id": "528a2e6d-8b92-45c4-ba53-4fa84b5b1e91",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "0fed91ad-e600-4943-b826-c4ef47fcb67e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 88
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c941e7cd-6a48-462b-b0d2-05b00005225c",
        "cursor": {
          "ref": "a5ff8056-1265-4951-95bc-bd7c6e856034",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "a32fc0b2-916f-4cb8-95d7-b3428aa00ec7"
        },
        "item": {
          "id": "c941e7cd-6a48-462b-b0d2-05b00005225c",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "6c00552d-fb48-4de8-a969-05859852cabc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fd9b393-92c0-4a8b-9193-e8b9cbbfe555",
        "cursor": {
          "ref": "cf618da5-3a4e-4c59-9af3-9a3ce1601787",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "f872122c-9201-4daf-82ad-6d8f411df015"
        },
        "item": {
          "id": "6fd9b393-92c0-4a8b-9193-e8b9cbbfe555",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "fe5a9a4e-f401-49b1-93a0-e60a375024c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2a85b6e-2170-4299-8c91-4146d122a352",
        "cursor": {
          "ref": "b3d67465-37d2-4a66-a52a-4dd14ac61407",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "ca8aac9c-e47d-4cc5-9dd2-90277d964d21"
        },
        "item": {
          "id": "f2a85b6e-2170-4299-8c91-4146d122a352",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "815070a1-0f95-4856-9f17-36b77fd72f0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b8431fd-bcde-4a6f-a178-5e3259d6a568",
        "cursor": {
          "ref": "1c0b3ecd-3a34-43fc-ae54-0c362c80960d",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "a3b4c3db-dcf8-4c5b-acdd-b236937352d0"
        },
        "item": {
          "id": "8b8431fd-bcde-4a6f-a178-5e3259d6a568",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "7f52867f-19d2-4995-8907-8d407f75bfcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b465895-5e53-4c2c-bde3-ea918181f132",
        "cursor": {
          "ref": "2fbfedc5-0d51-4453-b354-333f61521fe0",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "5770dc8d-174d-4691-99ac-fe06d7b2ef87"
        },
        "item": {
          "id": "2b465895-5e53-4c2c-bde3-ea918181f132",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "44dffa1d-df3f-4fb6-89dc-c942d6909429",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d595744-3f2a-4599-8ac8-d6ec6b51ab7d",
        "cursor": {
          "ref": "dc6b4b26-7c98-4172-aac9-d3b43ba1e6ec",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "57104b5f-3538-45f7-8011-d4c19ab39e19"
        },
        "item": {
          "id": "3d595744-3f2a-4599-8ac8-d6ec6b51ab7d",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "022188f6-f474-4695-982d-588b4a23a225",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 99
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41e16ac4-ee6a-4650-927f-35a98b7b7e51",
        "cursor": {
          "ref": "9ff091aa-b485-4d97-b3b2-e630f57814bf",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "ad3f075a-6937-4c5e-bbb4-6b2504401484"
        },
        "item": {
          "id": "41e16ac4-ee6a-4650-927f-35a98b7b7e51",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "87b3072d-8f48-44d3-b499-c63120198049",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dad5fdb9-07a0-4dca-b6b7-d3b0cded882d",
        "cursor": {
          "ref": "9850a5d0-08e8-4b03-b38b-d8db9dfb12a7",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "7a2c449a-8c36-4a2c-8840-b3388673a77c"
        },
        "item": {
          "id": "dad5fdb9-07a0-4dca-b6b7-d3b0cded882d",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "939db141-a7e7-45e2-b818-e9e9adf86419",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5396a2d-0934-4ffd-94ef-7ad8f84e46af",
        "cursor": {
          "ref": "89d455cc-d789-4bf8-bcff-0cfabe4c9bd8",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "c21a3bfd-e348-4637-8f66-74e0d56280e7"
        },
        "item": {
          "id": "c5396a2d-0934-4ffd-94ef-7ad8f84e46af",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "e95e4ec1-2605-4ecf-86b1-bb39c3c6f6ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6ae181b-fa48-4493-8c5a-96987c31f6cc",
        "cursor": {
          "ref": "910804af-cbca-480f-a5da-c6a36834ebbd",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "d0e8f6ad-042f-43bf-b46e-804a169544c1"
        },
        "item": {
          "id": "b6ae181b-fa48-4493-8c5a-96987c31f6cc",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "dabeddfd-359c-46cd-afb4-8ddd3b71503e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a310a6c1-8ec9-4e8c-abc8-b95c96783b6e",
        "cursor": {
          "ref": "7fde2cb3-d339-4261-9129-171f332d9970",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "ea4289f7-043e-466e-b6b5-f54580e94e75"
        },
        "item": {
          "id": "a310a6c1-8ec9-4e8c-abc8-b95c96783b6e",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "ee2d11b2-37c5-4e72-8186-815fa1590a16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0104510-6afd-4250-a51b-d750b98be385",
        "cursor": {
          "ref": "0740021d-6837-42fa-bece-1ccd4c54c19d",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "70aedf52-6914-4f70-a879-e8e18f227cbe"
        },
        "item": {
          "id": "b0104510-6afd-4250-a51b-d750b98be385",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "660ccd2f-efaf-453b-98d3-bb849dd186cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "618a7351-0381-4fe9-85b7-3ce9b70432d9",
        "cursor": {
          "ref": "cd8295bd-0e6c-496d-a687-af3f74e52656",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "a1195ed7-6d56-4c34-93ae-aee673ad89c5"
        },
        "item": {
          "id": "618a7351-0381-4fe9-85b7-3ce9b70432d9",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "a9edaa4c-0d3d-4bd6-b4ff-9f6dbee25fc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3c08d11-89b0-4987-8156-8600f8802751",
        "cursor": {
          "ref": "40d45ec6-2a11-4457-bd46-1d3e68b8d50d",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "f8da31c8-f499-4472-8e8d-c0656de22f1f"
        },
        "item": {
          "id": "f3c08d11-89b0-4987-8156-8600f8802751",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "55cce447-a03f-4d4f-8514-932a2443f7a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1617f50f-8bde-40ef-88aa-90be3b4ae603",
        "cursor": {
          "ref": "3bc5b3e5-a82b-45af-bf8f-de8e96f0b85b",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "69b7c6f8-e3af-4705-ba74-679f4f4f5943"
        },
        "item": {
          "id": "1617f50f-8bde-40ef-88aa-90be3b4ae603",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "46d3b606-6db2-47a6-93b7-e0ea16825286",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c7785c3-257b-432c-a85b-fb889a5bc985",
        "cursor": {
          "ref": "7fb01b91-1ee4-4521-b5d5-d779c1843f80",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "14842621-3d38-4900-8faa-c333bfa75fb5"
        },
        "item": {
          "id": "3c7785c3-257b-432c-a85b-fb889a5bc985",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "9a093df0-5410-4da3-be60-138c58d8eefd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2c9d0f6-1c06-4cc7-a071-c14112347759",
        "cursor": {
          "ref": "a0097ef6-f0ae-4e08-8ca0-ae8a0e341fef",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "c6dc77df-58c3-47dd-8157-bb5e55bf3d4b"
        },
        "item": {
          "id": "d2c9d0f6-1c06-4cc7-a071-c14112347759",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "932e087d-6e3d-49ef-b131-29ac7be87d22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27938155-7195-4e0c-926b-9cafa7f475c6",
        "cursor": {
          "ref": "6af5bb96-254b-47fb-9063-08ab9caefb85",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "626567af-5ec5-46e2-ba08-f1b04405fbd3"
        },
        "item": {
          "id": "27938155-7195-4e0c-926b-9cafa7f475c6",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "c120dd92-e536-41e0-b9d6-92d8a856302f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be352523-c4d1-4679-8669-150f3f846d59",
        "cursor": {
          "ref": "03f6f5e7-8dd3-4028-9658-71d1053bd0c6",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "d6fce284-4e35-4fc5-810c-9c31301aa597"
        },
        "item": {
          "id": "be352523-c4d1-4679-8669-150f3f846d59",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "97d35085-8804-4374-8f42-8398fc244466",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9804b108-62f2-4106-9bcb-7e89e96e103d",
        "cursor": {
          "ref": "56b2b451-82c0-4d5c-a6e5-90b1a917e177",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "b1d0e258-306b-4097-a168-d8847b634463"
        },
        "item": {
          "id": "9804b108-62f2-4106-9bcb-7e89e96e103d",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "ba671432-8b24-46e5-bcb8-4ac807465ef4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1127535b-aef3-4c74-b75a-597169820cff",
        "cursor": {
          "ref": "4cc88805-1c23-4ef8-b099-76d264d5f256",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "cfaa23e7-8b3e-46b1-8413-309a5a64b610"
        },
        "item": {
          "id": "1127535b-aef3-4c74-b75a-597169820cff",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "668f7a31-2376-4475-8ed8-885751acca6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a706f9c-a7e1-4566-b475-ca50d971f8b7",
        "cursor": {
          "ref": "f754461d-4a9e-4b32-99c5-064e4fac6687",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "4da628fb-4b58-4450-b23a-d37521bc0847"
        },
        "item": {
          "id": "6a706f9c-a7e1-4566-b475-ca50d971f8b7",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "9f0a5b02-abb9-4af7-acb2-0f2164352540",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e1b0cfb-4721-4907-9439-e2967ca21ed4",
        "cursor": {
          "ref": "03a84afc-490e-4b25-885f-4731187aaac4",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "b174d784-87b1-4c05-8ffc-48c3f87eb601"
        },
        "item": {
          "id": "0e1b0cfb-4721-4907-9439-e2967ca21ed4",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "2c18eb1d-0e59-4f1e-aebb-707ccf63d749",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9542b1bf-4953-46c5-b6a5-2bdca479babe",
        "cursor": {
          "ref": "4caa09a3-47ca-4fa7-8624-b4cd661cc217",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "d5b72f7c-e3e4-4e1c-bc1c-6419b09b49af"
        },
        "item": {
          "id": "9542b1bf-4953-46c5-b6a5-2bdca479babe",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "596b3791-cb46-44fe-88b9-3ea3b0596a23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91943901-ce71-4742-9893-4c5eee837f9b",
        "cursor": {
          "ref": "1b9ac6fb-0990-4542-b23c-988f9d1f6cb2",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "6df874cf-03fb-4b97-b40a-f219220e0373"
        },
        "item": {
          "id": "91943901-ce71-4742-9893-4c5eee837f9b",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "9c3bb949-0964-4ae5-9887-c3c963d4c6b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0e5f7b6-9a1c-4d43-91c6-ccfb7eaf5eb6",
        "cursor": {
          "ref": "d7483504-636c-4f2b-ad0c-0fd6ebbb4449",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "d6e2f5af-1993-43ed-9bc2-2bec0388b44a"
        },
        "item": {
          "id": "d0e5f7b6-9a1c-4d43-91c6-ccfb7eaf5eb6",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "8b91cc32-38cf-4aa5-95c9-272eeec53ecb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 99,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fff2c375-61cc-43f4-8757-32a8e2db8449",
        "cursor": {
          "ref": "6a930954-05d2-469a-b505-54cefdf1ecfd",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "3d1b058b-64cb-4c83-bf55-8612c99cf2aa"
        },
        "item": {
          "id": "fff2c375-61cc-43f4-8757-32a8e2db8449",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "08b79dba-de25-4be8-aa1d-8139566a712b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf1fa67b-a5e1-47ff-b538-e44f3e4562ed",
        "cursor": {
          "ref": "0c4a32df-21b5-45e9-a94a-15d2d89660e5",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "b4b53c09-2ec2-40d9-a899-378f2000d177"
        },
        "item": {
          "id": "cf1fa67b-a5e1-47ff-b538-e44f3e4562ed",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "097eceec-054f-48a7-a3fb-1472b03c092e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2504c36a-f34b-48b6-a1c8-5bfd04936241",
        "cursor": {
          "ref": "478c423e-80c3-4f79-913d-086104038201",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "9871084e-b568-40eb-a404-ea3a0c1398f5"
        },
        "item": {
          "id": "2504c36a-f34b-48b6-a1c8-5bfd04936241",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "d3f92455-029a-41af-b55e-6624918d9bea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b5361b0-384d-4acc-bdad-ab6e95b332f2",
        "cursor": {
          "ref": "4b51d299-858b-41da-b5d9-8e10003835ed",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "1115f436-fa4c-4e92-8224-19274ba912f4"
        },
        "item": {
          "id": "6b5361b0-384d-4acc-bdad-ab6e95b332f2",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "10d209ac-4699-4014-9b14-60557fed6240",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf80021a-068f-4c01-95a0-5a43fd50d043",
        "cursor": {
          "ref": "2edfdd6c-c4fd-41a6-bd3d-c79c6a2ac92f",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "abc350e3-3e4c-4c92-af78-e744a6ede9b0"
        },
        "item": {
          "id": "bf80021a-068f-4c01-95a0-5a43fd50d043",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "fe61d29c-91c5-4d74-bd58-66133ab529a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df5ec103-200b-416e-8fcf-72d3effd8f55",
        "cursor": {
          "ref": "e8cd7cc4-4216-4ae9-9fef-deee2c80d9ee",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "8f4344f7-0678-45ee-8ab3-7e6fd3af7a8f"
        },
        "item": {
          "id": "df5ec103-200b-416e-8fcf-72d3effd8f55",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "a6f32dd0-4a78-4a3b-87be-24d41a24ec82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3441de25-d885-455f-806b-bade9d029d6f",
        "cursor": {
          "ref": "f92d3040-bab3-40f7-b517-a8cd935b88ad",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "4ac66908-cf01-4936-a5eb-50e86967da29"
        },
        "item": {
          "id": "3441de25-d885-455f-806b-bade9d029d6f",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "3bbdce59-2231-4926-86bd-018213fbdfb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46b60d83-9619-4c0d-9aec-1d7552d48f45",
        "cursor": {
          "ref": "aabc6e35-5452-4f69-9356-4272bb825b32",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "51425aed-de00-4cfc-a667-1ce614685d68"
        },
        "item": {
          "id": "46b60d83-9619-4c0d-9aec-1d7552d48f45",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "45b1676f-4875-4884-9560-c0d41db447a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f0ee945-fcc6-425b-b622-175014ab999b",
        "cursor": {
          "ref": "d8407324-2725-4358-a731-74ccb36f09c6",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "7b9ab1e3-b2b9-4170-9291-5de564316c0d"
        },
        "item": {
          "id": "2f0ee945-fcc6-425b-b622-175014ab999b",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "561fd1bf-671c-4099-9354-84acdf2e6a59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08e2fde7-e35f-48c1-9957-742d0a005643",
        "cursor": {
          "ref": "66b614b0-343c-46ff-9eb2-736bb393baa1",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "34fe2a46-d6f8-42c0-bcfc-a9a6317e7aa8"
        },
        "item": {
          "id": "08e2fde7-e35f-48c1-9957-742d0a005643",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "78c19ee2-57ba-4a9f-9277-f730adf4eeb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b0ab44b-150e-411c-9414-db048ce1629b",
        "cursor": {
          "ref": "07c9f7e6-1238-4bee-a236-33f2f302025c",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "6fde87b6-cf42-4b0a-8655-a96a22773003"
        },
        "item": {
          "id": "7b0ab44b-150e-411c-9414-db048ce1629b",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "67f631ea-6701-4dab-9bf7-0e05a027f603",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a431d735-eb05-416b-9738-1fba9c6fc67e",
        "cursor": {
          "ref": "ffb5f4f4-3578-4e97-84ec-54a90c4ae846",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "36089d70-b801-4305-896e-99882de45197"
        },
        "item": {
          "id": "a431d735-eb05-416b-9738-1fba9c6fc67e",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "461c33c9-7824-4fef-affd-39e180feea97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d73baeca-e0c6-4fbd-aa80-1dcd281d710a",
        "cursor": {
          "ref": "705730dc-9c5a-4eec-894a-be76a5497185",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "5c833cd7-f98d-46a0-876e-70569a34f6d1"
        },
        "item": {
          "id": "d73baeca-e0c6-4fbd-aa80-1dcd281d710a",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "12a921d5-6e19-4664-85a7-9c7131ed383b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ed6a170-8ccf-440a-8c48-2db1f421dfdb",
        "cursor": {
          "ref": "43784a8c-c027-427b-8cc8-e874987296d0",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "ef86e85c-bb9c-4948-a8f4-84470b575fe3"
        },
        "item": {
          "id": "6ed6a170-8ccf-440a-8c48-2db1f421dfdb",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "d032780d-7c6f-42d9-bf22-3fa998ea1397",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af7813b5-0a89-4f8a-9e52-770ca14a4899",
        "cursor": {
          "ref": "738f1f84-a4af-44f0-a923-035efe89dae1",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "041b686c-124b-4442-a1ab-d0e92e8222bc"
        },
        "item": {
          "id": "af7813b5-0a89-4f8a-9e52-770ca14a4899",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "0a9bff32-e56f-4e13-8231-9d14c40836bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af9b6aaf-2c8a-4415-8b1a-ba5e7d3c2172",
        "cursor": {
          "ref": "7c7fa9bf-c1b0-427d-8953-8f876d8af1c8",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "4046c19b-38f4-4ea2-b4a2-b0874f0a8e18"
        },
        "item": {
          "id": "af9b6aaf-2c8a-4415-8b1a-ba5e7d3c2172",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "76dea1f1-e098-461f-b4c2-22c290f000c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ab41e8d-2bdd-42ae-ad7e-84a6b7dee9a1",
        "cursor": {
          "ref": "c2dabb66-fb96-4e5a-8a1a-3f243f31fb37",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "90a389a0-8798-4039-a655-43a9aa0a2990"
        },
        "item": {
          "id": "9ab41e8d-2bdd-42ae-ad7e-84a6b7dee9a1",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "8025edf0-a49e-4b49-8e2c-8ba82be193d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e85df5f0-96c0-4f88-979b-c052060160d6",
        "cursor": {
          "ref": "0f38e0fa-ac43-4447-8d48-cd23b3d2f567",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "a0883053-798a-4b47-8e4a-fa6406ddd96a"
        },
        "item": {
          "id": "e85df5f0-96c0-4f88-979b-c052060160d6",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "854030b8-6d44-4e1c-ae65-de16179c6f15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e07df4d-f02d-44a1-a7ee-673c69eb9aba",
        "cursor": {
          "ref": "34d3277f-efe3-476d-a969-c3a91e543755",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "78dc68cc-711d-47a8-9bbc-7b3d579a2c30"
        },
        "item": {
          "id": "8e07df4d-f02d-44a1-a7ee-673c69eb9aba",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "65e2c91a-146f-4198-a8eb-ef398920ef2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5a1e682-82c2-4882-aab5-3b48f87a40e1",
        "cursor": {
          "ref": "7b68e5a8-89ec-4545-bdd1-71518ffe336b",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "e5277878-9d53-4dd8-893e-9fc2bcd1ba66"
        },
        "item": {
          "id": "c5a1e682-82c2-4882-aab5-3b48f87a40e1",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "3431c6b4-89d8-444b-b77c-e3720a9466a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a9c6249-18a9-4fb1-a21f-3814cc76c104",
        "cursor": {
          "ref": "d6d41afc-eca0-4e44-96ac-21e8cef76e8c",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "a6004c5e-0809-45ed-bdb0-abab5bf8a20e"
        },
        "item": {
          "id": "3a9c6249-18a9-4fb1-a21f-3814cc76c104",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "4c63b1b1-5a63-4c9d-86c2-e071b0823d92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d60c804-504c-49da-8e9d-13a3fa329c55",
        "cursor": {
          "ref": "b48e0782-f002-44fe-b7ea-61de6aeca353",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "7e1677ca-7339-4313-8a96-5146b895689f"
        },
        "item": {
          "id": "4d60c804-504c-49da-8e9d-13a3fa329c55",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "0fa3ffbe-0aec-43b0-8618-bc7127ec8d8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "067ea2cd-2137-435f-bff1-bab5140ab48a",
        "cursor": {
          "ref": "eef922f6-9b0f-4968-84ce-1a25c8413750",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "d9f21dca-8f35-4142-92ea-b71e6e80c2d9"
        },
        "item": {
          "id": "067ea2cd-2137-435f-bff1-bab5140ab48a",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "3adcd5b0-84bd-4cf6-9e92-043180c980f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf9b8b9f-e4c5-49f0-9160-513ea7c64d90",
        "cursor": {
          "ref": "014d7714-fbb2-4a71-80e9-117f481a3999",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "498ecd1d-81f3-494e-83b3-8eca80a7d48e"
        },
        "item": {
          "id": "cf9b8b9f-e4c5-49f0-9160-513ea7c64d90",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "a5f10f6c-49c8-4d70-9467-8b92bdb5a532",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 108,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2db567cc-424b-4daa-807c-08cc19fd16d2",
        "cursor": {
          "ref": "0f6f4292-e955-4cba-8f9f-1fc3d05eee41",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "3e9b6b7e-4bc8-440b-8ee7-178f5b3f63d1"
        },
        "item": {
          "id": "2db567cc-424b-4daa-807c-08cc19fd16d2",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "38a72ec7-2ea6-4643-aefd-5b454c797924",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 131
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d7fe0f4-c4de-4684-a1e8-35fa084b07f3",
        "cursor": {
          "ref": "dfe3e133-6e24-428c-80a9-996c6c06b5c1",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "0bb72254-6509-4ad6-be4e-bbc5895a30ee"
        },
        "item": {
          "id": "0d7fe0f4-c4de-4684-a1e8-35fa084b07f3",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "d98aa70b-d381-4718-b14f-0184e35004a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d597fed-2c15-4621-8d52-a0930b2d4253",
        "cursor": {
          "ref": "7d6def7d-6a7f-4fdb-891f-909bc7563ccb",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "f12a8ad2-caec-4904-9346-059312cfc023"
        },
        "item": {
          "id": "6d597fed-2c15-4621-8d52-a0930b2d4253",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "8cdd49e7-e31a-4581-aa13-2e9ce9c0cf37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8d2f416-9fa9-4b61-9f23-2f2ad2f02637",
        "cursor": {
          "ref": "dd83f194-b262-4bf9-bd8a-f57b5ab4153e",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "822713af-b532-4fa7-93ff-2b2a3207e7fa"
        },
        "item": {
          "id": "b8d2f416-9fa9-4b61-9f23-2f2ad2f02637",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "247866ee-4b6f-4562-b38c-70fdce879df4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6decd621-2f92-46c8-951e-8a01089f3060",
        "cursor": {
          "ref": "51aa288e-2caa-42a0-a9ad-1c5d9c207b39",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "cbe38fcf-ec24-4615-ba65-15fafd6795b0"
        },
        "item": {
          "id": "6decd621-2f92-46c8-951e-8a01089f3060",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "f4901dec-bdbc-49a7-9734-019b0224cc61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ead75c75-2569-4ff4-8e00-10b1874bc4f4",
        "cursor": {
          "ref": "65088697-9ef1-4ac7-9323-91b61bcd235a",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "607c039e-1528-4088-8cda-ce40469302be"
        },
        "item": {
          "id": "ead75c75-2569-4ff4-8e00-10b1874bc4f4",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "8dab979f-6c7a-4e7f-b0ee-d8e63f12f954",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef23036d-b3b5-4d7a-b6eb-73e5b64d1999",
        "cursor": {
          "ref": "a20d330e-b945-42b3-bad6-865b3ed985be",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "6dd3bd15-7852-41c4-bb7b-695a564e72f9"
        },
        "item": {
          "id": "ef23036d-b3b5-4d7a-b6eb-73e5b64d1999",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "c2d6619a-0708-4307-9aec-172f35d403a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd1af406-66a9-4e69-b56b-590fd0d04618",
        "cursor": {
          "ref": "981cc9d4-c8e8-4da6-a118-240a37cc1115",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "0d547223-900b-4d15-b290-cf561015b9ff"
        },
        "item": {
          "id": "bd1af406-66a9-4e69-b56b-590fd0d04618",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "a955df90-0311-46f0-a6ff-7c3487b384bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03736f94-b690-4603-85fd-f63159190a57",
        "cursor": {
          "ref": "a4ecb6f8-aa3a-4f07-82f6-7a8e0253e8ca",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "db02f2cc-aa2a-4186-8e3a-27c6b19c2f39"
        },
        "item": {
          "id": "03736f94-b690-4603-85fd-f63159190a57",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "fc3bb2ea-b8ce-4db6-8364-d59fa53483f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4728758-00d9-4de0-b33b-965ef928eb69",
        "cursor": {
          "ref": "01bc944c-bb44-49f1-b0c1-d5c71652deec",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "4ee6a1ac-53bc-4da6-a2d5-d88180a24b15"
        },
        "item": {
          "id": "f4728758-00d9-4de0-b33b-965ef928eb69",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "4aae58ee-ebaf-43e5-85f6-4998722c813f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bf7c75a-21b6-4dbe-a42a-684072dbf10f",
        "cursor": {
          "ref": "b1b69e6f-6b5a-49fb-8652-09adbffb4680",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "896dda31-0b10-40d2-b174-1cb43078b5f7"
        },
        "item": {
          "id": "3bf7c75a-21b6-4dbe-a42a-684072dbf10f",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "fb3f3726-7e2e-45d5-9cdf-890662a7a45c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "195262b7-20cc-4b4a-a8f8-390eadf9d67b",
        "cursor": {
          "ref": "5d6914c9-a471-4ca6-88e2-9eca2e6d645c",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "b8c27bfd-60a5-4859-9bf1-97a0ce2f4098"
        },
        "item": {
          "id": "195262b7-20cc-4b4a-a8f8-390eadf9d67b",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "c42fe039-b8f5-4728-bc95-2007fc01fea4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 364,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10d8e513-b0eb-4f66-b6ac-0fd93fb0ca14",
        "cursor": {
          "ref": "1c82d211-ffdb-45ca-bd27-b8bd5f4b1e17",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "e9eb26ec-9118-4975-8e6f-20e650e9c6fa"
        },
        "item": {
          "id": "10d8e513-b0eb-4f66-b6ac-0fd93fb0ca14",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "465dab0d-5df6-4959-a619-618c8bd0d41b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f4f2135-8f71-46d3-b3e0-e8f59824bfd1",
        "cursor": {
          "ref": "9c000572-49b9-4a3e-b62c-243101723a79",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "b7dd0f82-68da-4c5d-ba4f-30ab07eb2c82"
        },
        "item": {
          "id": "5f4f2135-8f71-46d3-b3e0-e8f59824bfd1",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "e172408f-aee6-43f9-8023-6b801e58dace",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d96aaf9-d99c-4cee-8978-e4eb7333e046",
        "cursor": {
          "ref": "13e2ab6e-8b84-4f64-913f-1fe19a4a344e",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "9d4ebd7d-c179-4165-a277-166e62a61fe8"
        },
        "item": {
          "id": "6d96aaf9-d99c-4cee-8978-e4eb7333e046",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "6d640c25-a8d5-4dbf-bfa6-a25a1bdcf317",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d22fcccf-a844-472d-9a0c-bf834777abf3",
        "cursor": {
          "ref": "33ca0cc3-db58-47b0-8bad-261d6c8e4080",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "0dfbf1e8-32d8-4cc1-bb23-ea7863f705be"
        },
        "item": {
          "id": "d22fcccf-a844-472d-9a0c-bf834777abf3",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "f51ef7d0-79ca-452b-9249-d5a0830f12b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b421d17e-8ac4-436e-9813-b5d2ce7915d0",
        "cursor": {
          "ref": "82b501e9-637b-4467-87c8-78329d041f37",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "c7c10424-df4d-4b60-9d29-27b32e5bafc4"
        },
        "item": {
          "id": "b421d17e-8ac4-436e-9813-b5d2ce7915d0",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "d609e493-5435-4317-83f3-750d98ad8036",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40c5f079-2625-46fb-998d-ea56a7e8c9c0",
        "cursor": {
          "ref": "d0fe3a08-661a-4f91-a60c-50e9100b86e0",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "6f6ab6de-01c7-44f8-ae5f-eb39258c16d3"
        },
        "item": {
          "id": "40c5f079-2625-46fb-998d-ea56a7e8c9c0",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "8597751e-b605-4cee-bd10-50c20e85c718",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96f0e0f1-36d5-4b17-bbbd-191607e8958f",
        "cursor": {
          "ref": "58ca1224-27b5-4b53-9875-18cb46199ebd",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "5c9bed53-8792-4d21-bbbc-eaaf18cde0d0"
        },
        "item": {
          "id": "96f0e0f1-36d5-4b17-bbbd-191607e8958f",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "9649e6cd-3eb6-42e3-84de-f3e2e63407fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eadc9a6-6ccc-4d2f-be81-0eed2e62c204",
        "cursor": {
          "ref": "7514548f-59d5-42e9-8948-4e2086a1e1aa",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "f34c6c25-66ad-48ff-91a2-100df69ce478"
        },
        "item": {
          "id": "6eadc9a6-6ccc-4d2f-be81-0eed2e62c204",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "42602c60-5635-4eba-b06b-a4ebe8a3b508",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7593ce3b-a93a-4a82-84fe-b773d6ad7136",
        "cursor": {
          "ref": "b165b161-2616-46a0-b85f-357e3a6b7fbc",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "aa5b7b29-4110-4495-acfe-612ad046bf5f"
        },
        "item": {
          "id": "7593ce3b-a93a-4a82-84fe-b773d6ad7136",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "4e519363-e28e-436f-911c-851f1f06b219",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b870b87-d246-486f-bb1e-2cd64e200a59",
        "cursor": {
          "ref": "50a14791-68a0-4a3f-a127-e12d377535c6",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "dcf0d0e0-9ba7-4684-adef-05ca59e46f94"
        },
        "item": {
          "id": "6b870b87-d246-486f-bb1e-2cd64e200a59",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "e4b75892-f0b2-4976-8690-9391eb6fc3d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eebb219e-06bc-4cae-af68-c05f1d3a0cd8",
        "cursor": {
          "ref": "f6c912a4-21f0-4101-ad3a-b8f49e5fbeae",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "f12cb2a7-d8ee-48e8-ae4f-8ea09566b4ee"
        },
        "item": {
          "id": "eebb219e-06bc-4cae-af68-c05f1d3a0cd8",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "e409cb2e-4cc7-47be-8648-d827974c9d7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a24f4f4f-5c40-44de-8b0a-3e64418559e2",
        "cursor": {
          "ref": "8f3c219f-e3dd-42c5-bb45-f422ba668171",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "5e260d98-c805-4402-8932-223d307ec47f"
        },
        "item": {
          "id": "a24f4f4f-5c40-44de-8b0a-3e64418559e2",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "3a65c258-e9c3-4129-b579-16f33af395c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63813d6f-911d-4005-bf11-798b2ace987b",
        "cursor": {
          "ref": "7c593f67-bdbd-4a36-80e2-49cb85f112a8",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "c1499886-7470-4ecd-9479-b66cbde24fde"
        },
        "item": {
          "id": "63813d6f-911d-4005-bf11-798b2ace987b",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "469b528c-dd14-4ab0-a8ce-dfe677d516d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65e347c5-a744-4dfc-b091-43ca4a284af7",
        "cursor": {
          "ref": "c9259c77-a47a-4f6b-ab79-ed8c7670d190",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "98c21e00-3912-4c4f-946e-01e064ad1472"
        },
        "item": {
          "id": "65e347c5-a744-4dfc-b091-43ca4a284af7",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "4b2eb138-cd84-4e51-9ce7-3d25f9200b05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2240732-d88b-4941-a168-88a3e33b0bf0",
        "cursor": {
          "ref": "52853f2b-f2f0-4e01-a7ff-cf509f681447",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "c8e38d36-2dcf-4fe5-a458-39f43e161c7f"
        },
        "item": {
          "id": "c2240732-d88b-4941-a168-88a3e33b0bf0",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "33af37f8-bf88-45a7-9b65-559f5488c9f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c5bc8ef-5728-4f3c-9db0-d76c681216e5",
        "cursor": {
          "ref": "d584eda7-86f5-4128-844e-02f9c6091ca6",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "6e412621-31b1-4090-8621-5be790176997"
        },
        "item": {
          "id": "5c5bc8ef-5728-4f3c-9db0-d76c681216e5",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "3742c76e-65b5-49cc-bd7a-0ad66108ef7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5503f16-bd9a-4afb-af4f-94524b142fc3",
        "cursor": {
          "ref": "5b39a774-721f-4db3-bc72-9f6dc9925c83",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "d5934f32-3c31-44f4-b685-7ab80d67d1bc"
        },
        "item": {
          "id": "c5503f16-bd9a-4afb-af4f-94524b142fc3",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "c8fb450c-7302-4fa7-98eb-546836508c50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e1b01b5-65c4-45db-bf2c-e4ef4a7a8f95",
        "cursor": {
          "ref": "c0cf309b-6b75-425b-bc43-909cf4636574",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "596359f4-a02a-4dc0-ad7b-11417b718cb8"
        },
        "item": {
          "id": "5e1b01b5-65c4-45db-bf2c-e4ef4a7a8f95",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "5db27cf2-bae9-4eab-baac-527e5404c4c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce13ae23-c5c5-4b51-bc15-deac4c51953c",
        "cursor": {
          "ref": "d2fcbf0f-47b0-4a74-b929-0b7e91fb344e",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "04bc947a-1932-4660-b0b0-e1803663195d"
        },
        "item": {
          "id": "ce13ae23-c5c5-4b51-bc15-deac4c51953c",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "57f1c02e-4350-4043-8da3-e9111f353e45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a42c6f4-64ad-4968-a931-c8ff25ab6e62",
        "cursor": {
          "ref": "d2c92507-0868-4aa3-b7f6-cda3c5f5e78f",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "ef0b7f2a-eae4-4a77-9744-059b52d4c1f9"
        },
        "item": {
          "id": "0a42c6f4-64ad-4968-a931-c8ff25ab6e62",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "a17d5c53-48b2-4657-9e3d-67d817b0832e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06b7ee3b-8433-4768-bae7-14048ff9cc0f",
        "cursor": {
          "ref": "76b2c3a5-5ae3-4a1c-9267-8b3f78b6988b",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "bc7aafb6-21f5-4053-bf98-1369f45ee58c"
        },
        "item": {
          "id": "06b7ee3b-8433-4768-bae7-14048ff9cc0f",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "0dac5c3e-8f3b-4c21-a34b-45d4c45081ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69b894f7-cf17-4189-ae9e-db97186ec879",
        "cursor": {
          "ref": "d1ac9db9-aed1-48bc-a03b-e7c46f28fdfb",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "5d4ea2be-20b5-422c-9aac-8df5663b7725"
        },
        "item": {
          "id": "69b894f7-cf17-4189-ae9e-db97186ec879",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "5b5d2a37-c5ca-417a-ad63-811a21ac4649",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7f47af9-4a5d-455d-8e23-279880049e2a",
        "cursor": {
          "ref": "088a733a-20d2-47a9-b831-e9177c8a26e6",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "164a1ca9-b4ca-4c4f-82de-2f150b553678"
        },
        "item": {
          "id": "e7f47af9-4a5d-455d-8e23-279880049e2a",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "83ee03ac-6402-4124-a416-21d498a5d340",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8553338d-e692-4360-adff-32294636e769",
        "cursor": {
          "ref": "f9cbff42-eb5f-4b0c-8729-0d6b3805ab47",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "ed64bbf0-0edd-4e6d-9945-b09366cdb98d"
        },
        "item": {
          "id": "8553338d-e692-4360-adff-32294636e769",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "8686a811-2fe5-4c54-ad43-5ddeea1fbc16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10a4e389-e8a5-403d-a383-1c7dbe8fb566",
        "cursor": {
          "ref": "c36dce29-c35a-43a4-8650-b8674c5149ca",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "56da8270-d855-4f63-a547-30cdc1f8d8ba"
        },
        "item": {
          "id": "10a4e389-e8a5-403d-a383-1c7dbe8fb566",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "a85c29ba-4271-49f6-98c6-275344cdf4c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2c6882a-e6fc-43cc-8a78-74adab0a45c4",
        "cursor": {
          "ref": "83fe991e-e7c9-488b-aca4-50c05dddce41",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "92e47ec1-68af-4446-81c0-7254e99f7eb5"
        },
        "item": {
          "id": "c2c6882a-e6fc-43cc-8a78-74adab0a45c4",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "4a0de720-587a-40bd-91b7-24fbbabe59b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc810767-eea4-486c-b05e-52b8c26cf346",
        "cursor": {
          "ref": "3f1a1fbc-c234-466c-b134-c61ee07b21c0",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "4d8f0402-a281-4f6a-98ca-5ce0fec05611"
        },
        "item": {
          "id": "dc810767-eea4-486c-b05e-52b8c26cf346",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "f67d896b-10ef-4578-a7de-6be04de11374",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "671ade17-46af-470e-bac8-28f1826b0234",
        "cursor": {
          "ref": "2d7bfe3d-be07-4f8d-805b-bfc96423a1ef",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "1fb50ca7-1813-4b65-845d-a7bf892cf5b2"
        },
        "item": {
          "id": "671ade17-46af-470e-bac8-28f1826b0234",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "daa53bb4-120c-4fe4-99e7-9189d3f646bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b233bbbd-5e42-4333-bee5-785906ab4006",
        "cursor": {
          "ref": "daebbc4d-a192-429c-bee2-654357f37d8b",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "353ede85-c541-4202-adf4-52d4267fe223"
        },
        "item": {
          "id": "b233bbbd-5e42-4333-bee5-785906ab4006",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "b7af3365-5253-44cc-bc03-601ae907bc64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b0a09d7-5fee-4aa8-a45a-5a71538ca956",
        "cursor": {
          "ref": "513aa059-6076-4433-bde7-1a791a765551",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "379a2622-51c1-4676-b3c2-836490fd0176"
        },
        "item": {
          "id": "6b0a09d7-5fee-4aa8-a45a-5a71538ca956",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "ecf086f4-9935-4531-b4a6-0b0babd1ba63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10c7f911-92c8-413d-9b87-7821034b31a1",
        "cursor": {
          "ref": "5e129761-4427-431c-bb5b-a3a31eb80122",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "43f39264-2570-4e0b-bfda-843fba665374"
        },
        "item": {
          "id": "10c7f911-92c8-413d-9b87-7821034b31a1",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "21be6469-4e8d-4fc6-92a8-cfec48ef8103",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a172f5ee-97d7-4ea4-ae39-ae7463b20707",
        "cursor": {
          "ref": "f49bc3be-f8b1-4d2a-a2da-4bf444d62ee0",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "6067a3cc-e8f0-43f0-b187-1e680d766900"
        },
        "item": {
          "id": "a172f5ee-97d7-4ea4-ae39-ae7463b20707",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "9ba7d9f3-bdcd-4dc0-be94-a915134266ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c66ba5c9-1196-48ab-b788-b4ae051fb109",
        "cursor": {
          "ref": "13f5b5e4-579e-4f6a-95f8-58e5056feaca",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "bcc059c9-d973-4785-a6ea-e31b324b4294"
        },
        "item": {
          "id": "c66ba5c9-1196-48ab-b788-b4ae051fb109",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "bbdf9cd6-c0ab-4624-82b2-61b5e87882d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36d4ee59-f404-4668-b980-465244c1b3f7",
        "cursor": {
          "ref": "83ed0b8c-f1c4-44b4-9ca1-ad1b4ad35231",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "14ee2b3c-d870-432d-b196-958b801c89d3"
        },
        "item": {
          "id": "36d4ee59-f404-4668-b980-465244c1b3f7",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "ca6d6eda-01d8-4fee-84ac-906f7a61213f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa314fbb-20da-4eca-8750-aa279a6ff3dd",
        "cursor": {
          "ref": "c78e3858-77a3-42ea-b83b-3b7e4f5995fb",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "98f5674f-605a-4711-aa68-30a80dafb0cd"
        },
        "item": {
          "id": "aa314fbb-20da-4eca-8750-aa279a6ff3dd",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "c867d188-d038-4bcd-8758-cfc82effb61e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 77,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b29c9cc-3915-42b9-8277-dac52c41c4ba",
        "cursor": {
          "ref": "fe26313c-da00-4c9d-9fe3-74650869f159",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "72039407-fd97-4a28-88bc-be83b027ccb5"
        },
        "item": {
          "id": "1b29c9cc-3915-42b9-8277-dac52c41c4ba",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "dfe4b7e1-49ea-4120-8bef-c469a90ce2a6",
          "status": "OK",
          "code": 200,
          "responseTime": 2238,
          "responseSize": 416
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e1a6f97-e6f1-4776-ad37-ce2569624d32",
        "cursor": {
          "ref": "38a3350a-6eb0-4c66-b2b2-55ee689532c8",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "8536ecb4-043a-4b1d-bc6d-39ce36451b10"
        },
        "item": {
          "id": "3e1a6f97-e6f1-4776-ad37-ce2569624d32",
          "name": "credentials_verify"
        },
        "response": {
          "id": "3abe8c79-8de2-442f-866c-5bd7ecebd2b7",
          "status": "OK",
          "code": 200,
          "responseTime": 3886,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "300d3fe8-8742-4511-a86e-0b1814d5d253",
        "cursor": {
          "ref": "7e1f1eb2-5376-493f-bee8-f819b7c170c6",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "3c246733-41c0-4996-bb40-823eb4b9ed8a"
        },
        "item": {
          "id": "300d3fe8-8742-4511-a86e-0b1814d5d253",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "3d785e19-2ed5-4913-9d8c-3e1f54265b11",
          "status": "OK",
          "code": 200,
          "responseTime": 3254,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcfcc831-284e-4b6f-809a-35d2168dec35",
        "cursor": {
          "ref": "ac6ddafa-9db9-4206-a438-9dd5e0a2f665",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "04d5bb71-a7ff-4c35-b000-0e16ee11982b"
        },
        "item": {
          "id": "fcfcc831-284e-4b6f-809a-35d2168dec35",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "e33b138b-1762-4240-9b1a-35d301dfe7aa",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 76,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcfcc831-284e-4b6f-809a-35d2168dec35",
        "cursor": {
          "ref": "ac6ddafa-9db9-4206-a438-9dd5e0a2f665",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "04d5bb71-a7ff-4c35-b000-0e16ee11982b"
        },
        "item": {
          "id": "fcfcc831-284e-4b6f-809a-35d2168dec35",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "e33b138b-1762-4240-9b1a-35d301dfe7aa",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 76,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9eb50bd0-64bb-43b7-aeda-f91cc7a6eaab",
        "cursor": {
          "ref": "ac9d311a-0cdf-4db2-bbab-e91055a3e752",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "30f6e424-f544-41b6-b092-807dcf99e369"
        },
        "item": {
          "id": "9eb50bd0-64bb-43b7-aeda-f91cc7a6eaab",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "534c9b3f-4d0f-4463-a1c1-a178858bdd2e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 77,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66946590-6895-48ef-999d-cd932feb44f2",
        "cursor": {
          "ref": "38e252d1-79bf-4b2e-a3b7-a6523ab8237c",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "4a30d5e1-e5ab-4635-9518-c090f4642d4b"
        },
        "item": {
          "id": "66946590-6895-48ef-999d-cd932feb44f2",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "f3e73afc-aedb-478a-95f5-25d913dc3ba9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 77,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}