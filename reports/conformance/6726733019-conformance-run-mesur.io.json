{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "fcc75fce-24d9-4fe4-8f69-5397e25cb4d0",
        "name": "Clear Cache",
        "item": [
          {
            "id": "80378b9d-47ae-4bd0-b5ad-0898a3947172",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2bf40817-ea80-4c6a-9d52-ab6bf2e15dc3",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "d002b2e5-068b-4776-a78c-502376cac146"
                }
              }
            ]
          },
          {
            "id": "6e5c7932-4acf-4f9c-a10e-c69d79ac33ca",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b5e5fd4f-9245-4ebd-a814-a75a3e0d2597",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "2749e27c-7654-4f1f-862b-fcaef657b972"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "d5cac4ab-652f-48c2-b531-132d06e4d015",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "01cbd7ca-e0e3-4813-acac-a861fc56b6b2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ed0a822c-7201-4b1a-b9a8-a713531293b1",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dbfb1ee8-fc5b-4c1d-94aa-80e5a08b4005",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d837f801-a696-4712-a734-75e22b6b6121"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "abb2994b-958a-4f48-89e7-649212f29dec",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9c99e665-426c-4529-a16e-609ef8fc0ccc"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "559f9fc9-5572-4650-8720-94ace6c224cf",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "16a4eb72-1bef-4928-9b0e-a533101becf0"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "846c45ac-e718-4092-863d-2cc6e21e878f",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "686b6b7f-5eaf-40ff-af33-f49fceb162e9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c1a1b3d3-52ab-49b6-86e9-bee7de10e33f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ac0b3273-885b-42ac-9b82-ff9efe6f96e1"
            }
          }
        ]
      },
      {
        "id": "20c284be-f668-4509-99f5-2e8527d080f4",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "a5efd46c-2ac2-4af2-ba95-e9de6fe4a7ce",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5be6baf0-5ee8-4b3a-a0b9-ee8a2db3f352",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "59e6d274-9762-4139-bfa2-1fae8d2458cb",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b22e113-d45b-41ca-ac32-b1a879bcfb34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "905c2180-8cf4-47aa-82f0-f7a167e380fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51355c2b-ea8e-40d9-94dc-2138af1dfb53",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e571d9b-f8e8-4bdd-bd04-fc2809f2c672",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1cb62e3d-3feb-4831-85d6-cf4d5aecfd8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f401b060-fb52-465f-8f6c-38ebf16bfad3",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3303143-a374-4694-943e-85bf0d5ac1fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c36f989e-0e8a-415c-b6e7-0a785341d46f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "044aba2c-6f86-4b15-b6bb-34874e480560",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "26042ed1-a1e5-400c-a729-869e342ca3bc",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5858d24e-be5f-433f-bd55-c005e6340671",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "208a16d3-49b7-4293-b91e-4b2c904eb138"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29d8d5dc-a0a0-4f95-9e65-4d6198c3cd2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f6b2d91-6294-4658-9a3a-91535a0bbe97"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "6284928f-0fcd-48bc-8fd7-e37b5aace354",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a7c863cc-1fe6-4350-815f-f08876e65ca4",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4a012c9b-a8d9-4430-8bf4-a445ea42d740",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "cf81d1c5-ffb7-41ea-94f0-11650ce3a61d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4835a89e-c6e4-4f66-9d2c-9a3b5aacf931",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "5b6dfa0d-3561-44ae-bc90-09ceac3f6b31"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bb9d36a1-2af7-402e-8c80-4d19861e0d30",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "17577419-6079-470a-9291-b79362e86ddb"
            }
          }
        ]
      },
      {
        "id": "b46ffde8-fac3-4819-b4c8-e7c09e25cf59",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "4c52e5ff-35f4-4204-b76a-7d465dfb86e8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a651d642-c052-427e-9644-665b5dced5f0",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "06e6b162-cd98-40bf-ac3f-c1354df5c820",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88020b58-ce39-4e52-8f89-8c95969e4be0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb7af25d-0e2f-4048-9664-0ee3af659ff7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc0930e6-e744-4ef8-b97d-5ae6335b5119",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a96b5acc-5ca9-48f7-8a4d-0996799526a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da4a6c91-5888-44d9-bab4-4bf0339aeeb7",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f08ad1d8-b970-45ae-b879-33a419e20c27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6a30451-abe6-4ed4-aaca-181f0af79e79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b409283-01a3-4a4c-931d-c2f951e7a11c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "20beb028-b7ca-4b61-99ff-3602f333a991"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e00ec81-17f6-4675-92b9-dfb155aa322f",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a77d42e-08f6-45b5-b25a-a6e2f57ba65b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0acfa5f-6b7b-431b-a37e-b28a72e0c5a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6dfc4d9-8f28-4860-aa38-e8c821a1a684",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4536e773-9c95-41ac-9330-a11f82bb0187"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f3f8395-f92b-479a-97b4-7ded3bdd7198",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a49ebab5-cb46-4fe9-970c-f033b5ef4836",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a6c36de-c50e-473d-8f1d-65fe9d5f1540"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebf48747-9a8a-4445-83be-9e0899251e19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6c6323d2-17ec-4150-8ea7-401fc9f238ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95a4f033-fa3d-4d57-aeff-02f37ffaa24a",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0b33cb7-47bf-4c84-a7a1-1a0e10db34c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16d4ce20-3c08-49ff-afef-a4b0ad0595b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e72e40f-4f2f-4f55-bbe6-6e0f8a4693a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d5dba394-c555-4be3-a404-105c915fa2a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e936d84-eb8f-4298-85ca-b68aab81f567",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0bba6f2-44d6-49eb-b829-d0c4610a31e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a77f9000-5893-40c8-8796-a10108a79197"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57d2986f-337e-4f45-be8c-67fbf259a0fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4b01a9ea-f829-4cd0-abdf-ed97bfb56f66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc48575f-4425-4541-82b6-7d97aa8f263b",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29b83d3a-a2d5-4880-b383-f9563aa4bd70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c079949f-5d3a-40ab-9018-c182f09e6cb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b07c34b-87ef-4351-a65b-169bf20dd8e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2f0af5fb-ad7b-48e3-aca4-b23a904dff0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "707e106f-aea3-4e70-849c-db73287651f1",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f10ed390-8ace-4bd7-840b-648242f7732a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a5a7a01-e4d0-40a4-9205-95670c8ff602"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "524c4008-bd4f-42bb-9736-522b1e9346ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "393bcd34-ac92-43b4-9cf5-198011fd3571"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e03dae47-e201-4b0a-ae8f-10135c106f04",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66db001f-87ed-4edb-ab89-e3fe3c321e75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5141f2e-54a0-4535-83cf-eec639337f3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b93ec4c-a3f1-4a59-b015-f2f7bb2c6a2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "96dcfc20-6e70-4698-b9f0-eadd26bb03b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "263105c4-f35e-457a-a25e-9a6fb618afd2",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd0b4c1f-6ba0-4e6b-9d2f-025441e34628",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58b780d1-d1bc-4e3e-aa49-53f6f1611368"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01ffa823-a1a8-4779-9924-7e2d4296ff57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b5845ca1-f979-4063-9265-abe81d316005"
                        }
                      }
                    ]
                  },
                  {
                    "id": "409c6c17-9036-4452-9443-dd573ac5b9f7",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4570bdce-c813-45f1-b681-9245a54a2f94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1016d8b-66e2-4e2b-acf2-7f802e521500"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58bed10b-c532-4219-b4ee-92432bf33176",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "28b85feb-83ff-41de-9d1c-238fbf7b299a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d22cc4b-fc2a-4465-b9b5-98a1f6db7e3e",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1680f721-924f-4306-8ec5-5b7da4d3fb8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f42325ff-7b38-4032-b5f2-4dc4341562ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f45a1913-3a71-41c3-87c7-f187b8c1cc3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "10646d1e-0a49-48cf-a6d1-406bf751aabf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "195de12d-3476-4e33-ab9e-c9e5113a3ef3",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bad1dfc-4b81-4352-a0ea-9b35eb29682b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37be928f-d2a5-487c-9275-945f6282b098"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "511bd382-7d0d-43f2-8965-7d749816c999",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bdc9ef77-20b8-473c-af1b-9c6ec6fe502c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10ccb4f3-e02d-435e-999f-24fead217dbb",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79d8c4bc-13a2-43ae-ac5d-546906652e34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df1e8cd2-eeb2-400a-b700-eca855e80bd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3e00dd6-d7ea-4d39-b636-8548a4440680",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6f3fba3a-bb40-4b75-a80e-e5a8b71870ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf890382-361d-42f4-9f81-2a75c0d88fdb",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cad1ee81-5aec-41c9-a88f-085934d2d430",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12568cdb-13f8-4ac1-940d-367aaf2c90de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c64af29-df82-4846-811d-83d358a8931c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a575efca-65aa-4453-9a6f-625fdeee59a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9a2d1a4-7203-407d-844e-0b2f26fc2ba1",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eca50e85-aa82-4a3a-9746-d28497018690",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d56e09b9-9c9c-4540-9bf4-f2208e7d073d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e19ed65-5583-4f8e-b295-fc2af86377bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "56f44fd5-351c-4d52-94b5-0c13bac9644a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0021775b-3bab-4588-8961-29774bb607e4",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1d373a6-a386-4df4-b937-14940d85d158",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79acd156-c213-4be1-afe3-21fc6ecac46f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3971c212-24c9-4051-9340-ff13ca16330e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bf43e28f-3c45-4bb2-a4cf-8a64487463ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "694ddc41-6a9d-47a8-9734-3a560ce40786",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b730236e-7d6e-4d69-b890-ee8d3ddd5b1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69a4d234-d0af-40e6-9266-0b41feec913f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ef1a530-cabb-45c2-b0fd-872663e0e6be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "4317bddd-7398-4bbf-8bbb-adce24305404"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34944c2a-d542-42c0-970b-8d12ea6c9c52",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea717fc2-7943-44f1-847e-44ff2c2b3e85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0a00628-a3fe-4ae1-b9e8-7e393f109ea8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c50c07f1-cb85-4a24-abd8-9defa76ec615",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "38403763-dddb-4192-b873-be2446579b0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "561c67cb-c7a8-4a02-8369-3e42e59a7690",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7460a2d6-a0aa-4d7c-be77-8c9d5445346d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3a383e8-5225-45b7-841b-ee8dd0c87453"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a06cdccf-3d5c-4285-9ec4-c79a83781ab1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b6681858-236c-4fa0-a844-bec6b258024b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da11e6bb-1abd-4389-9bd3-99eee719ec67",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd56b765-0ebe-4fc6-9039-993166828734",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11d231c2-fcaf-4b20-adce-7d029ba39dcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcb6faa8-d5ed-4b62-a426-1603a86396d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d49327e9-43f6-4dc9-b4eb-6e4fa3a4116f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3482ab5b-dff7-4d2a-963a-1430d5826c6d",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1de9c921-5eb7-4417-b75e-f2a967254ec3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d1fff9b-0d0b-4a72-b0b3-9a3c7a12bf3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3689c159-60c9-4387-bc3a-24be2c42a5ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ca7d9193-f84e-48d3-8a45-2f4c2fb892f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed2f9ada-3379-4631-981e-93e99b86c2e6",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68b2debd-2818-4a4e-b68c-fe9803288574",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab0b2e18-4ffa-4cfb-a822-086a51a268be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "328cfde3-6e92-40c5-ba71-e4ffed150605",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fa7732b6-95bb-477e-a492-68b8023c8f85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e993faa-ea0a-49b5-b71b-f6a0e6264233",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d88589f-7efe-4a91-9045-fb0f4fdcaef2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39edc8d5-b864-4aa6-9a94-a934527ade5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9be45848-6b6c-4ce0-9e46-47020e4a5de3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "197598dc-76ff-45de-ae2b-beed0e519829"
                        }
                      }
                    ]
                  },
                  {
                    "id": "444ab72c-9785-4680-b7d4-f81c7291f6a9",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9a355a2-455e-445f-9ba6-0d04788e0d38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b30623b-651e-4b38-b545-01b0a01bd40b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f017ed0-b5fd-4b45-b84e-de421086f32a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "08166830-82ad-4509-b8c8-09b6e6ca59a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acf4fbe2-4ec6-4efc-a30a-03c2dc84468e",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "353719c6-4240-46cc-ad1a-0445bbdec021",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dcec6da-5ce4-4e2c-be96-c1853ffce231"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e4f559f-71bf-415c-a854-3a7f70a59e7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d7ab7b4-9324-4665-acf2-644762c55a45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8fddb4b-16ad-4512-b752-cbda69131769",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44da4843-25a6-4985-a29c-e62c3b437530",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27a6e494-72a7-43b3-932f-56ea4e3c567f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9012ef2a-ac18-4ce7-9287-b61fa2b1a518",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf539538-c4ec-4f5e-ad8a-201d76431360"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cea409e-78c2-46f6-87b6-4c36dd1182d7",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfe3275d-5807-45ac-9eef-3f93a50458af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2802ac2-40e6-4fd7-a89d-2a6929402b9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e926a1ad-59a7-4660-a2a7-192c7ab9bf16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2682253f-83b8-4c61-a4f2-510bff12184e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6172995a-5367-4544-8c3d-45f4aed36ac5",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47d1d51f-59f8-4706-be86-1417e307ae53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cc528bc-9b7e-40fe-912c-6675093bccb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3e3699a-8231-4c27-b4c1-e79c4afbfa49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a49983b-95a7-43ad-98b9-2fb8fa32dc09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caee1ca3-9a86-4c18-85d1-199ebabe0c30",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "635fbe02-90c9-4f66-8458-8cb4c41b36f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fc4928c-af08-4dd3-832f-7cb6029818a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46694a59-d2d1-4720-be3c-bbaf6a718622",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "164f639c-7fae-435c-a7e5-2443a2723f65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17f9f849-2da0-4851-976f-c4f824c9a6f3",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "265bc81c-a135-4874-8ee0-ecae3a71dba7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd6bf80f-29bf-4c28-ab49-c9a426d934b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9165fea8-265c-481c-8401-d2fc0ff09d87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5a0dc8f-6692-4c20-9c93-07125e68de41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aece275d-e7fe-4aa2-a727-aa207743c3e1",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dd002b0-fe9d-4a46-9424-abdc1b304f6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e99def84-505e-4c6d-a3db-dffaef894c09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bb58d9e-20b8-4764-bab9-e387bd83008e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "621f3810-001a-4e95-8f57-388be4836812"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed1648d5-2685-49ee-9e3e-8e12179e1d2b",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "588efb40-b37f-4c01-bddd-48dfc23386f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47d40b31-a989-4bcb-8fc3-9f77043c798b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7fd70b2-bbf9-405f-ab0e-77ffae9801c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1b53a029-1bfe-47d6-b173-93396d97397f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a407dd61-89b6-439d-8e9b-6e363d825165",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0749a2d-6dee-40e4-a492-f58f63a971ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4725918-4f9e-4cb4-97af-1192887888a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "806ff8f9-8cac-4807-8776-857f0d02cdf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "14ed4c71-a565-470c-a847-5ada621b69bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66d8a333-9318-40e8-a093-12059e742b77",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e73bf3d-30b2-424b-88e6-d77534220e96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db3b7512-61a3-4e15-a39e-11aa89a9ff57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2afc3e58-8f8f-4cfb-9a8d-600da46ea56a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "6ad51fad-642d-457c-a1a8-a09efcecefa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c1df306-bd3c-4c64-a76e-658ba4a5ee30",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbb8bf30-5ae7-4807-8ff3-f63870b90c15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8e9b262b-2d3a-43cd-a62f-ab60271bc619"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbb6db1c-2985-4046-b0df-ad11a331af79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fc39ccb5-d2bd-4324-9ebd-25699d38381e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2b7a822-40f6-42a8-85ee-6188714cab3a",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37193073-72fa-447d-a00e-f1d7366e4aab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9746076-c242-43b8-9d0b-f3f964319196"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13665ba3-ff3d-47aa-bf70-851f46553372",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b120b723-a0a2-4126-a6f7-9c8366c255af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92b812eb-1812-4a76-a418-1ba6fd1ca72a",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "421efb2b-9f31-4870-9b0f-12e39d29806b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5e69fb8-26f2-4713-ac6b-a39cafa80ef1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f42dd06a-9bd4-4226-a184-fdda0ce74aa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d0c78b49-1cc0-444d-b1c1-8f06dd581e4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7178b73-3f1d-4f8f-bd0c-920c57fade6c",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69371f50-ee11-441f-b022-49f0d0cad7bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a68eaf5-a72d-4c21-9c55-e7edc372a3c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "878551b8-998d-41e0-a7f1-e61190df8cef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "394079a9-4b65-4a70-976e-4a44dbc50148"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02178957-65bc-4997-869f-c8eb9f573283",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58f6e247-62c2-4c5d-96d6-8894459945ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b23fdd81-c434-49e1-97c3-45841999f213"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1cf73dd-f4a4-41f8-9a61-68e97cce67ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "649d992f-e1bb-4201-9279-e882fee188c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c71366c1-762b-446b-83ee-4e0553c29b82",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96c46eed-0c54-49b5-9f6b-c25dec6ecefe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee52cb68-2995-44a2-97a1-833f59ef584e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16643c85-d8c6-44c9-8101-f520102db29f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "779df200-d171-4fac-92e7-ee3d047ab9cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "276a741d-9ebe-470a-868f-d29479c34ae4",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4250352a-9bb6-4c41-aa60-20162fb5885e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1b41077-6b7e-4264-8daa-580f6e50ecea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db137250-56b4-4d61-afc6-6c60bd215937",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "9db06fef-2e7e-434c-8a46-beea1ae55875"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff75dc62-30d3-46f6-81d6-e161c05bd976",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "608b6a1d-595e-4374-9dcb-9f79d9372a37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcd82d1f-f2db-4d4d-9252-fcb7deaeff2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba6c2c31-2733-4c08-800c-c9a25beb4bcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "265fdc02-6812-49e0-8e00-dc649946080a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eac09d9d-8661-4ba0-8239-d8afba56c547",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "549e5c9a-2a68-40de-a33c-3c8177a1ccc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a819a208-c8bd-4bd6-b399-5994d6bb05fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b99f6a62-453a-4183-b252-44452b14761c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "930fd08c-f863-452c-89ff-44da3d86d561"
                        }
                      }
                    ]
                  },
                  {
                    "id": "915ad01e-63c8-4e42-8368-01801cdfb6bf",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68b6fff6-7c95-4d23-865f-6fb76782f8ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f56fabf8-c7f0-49d3-8110-c637a4a5461b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9334aeff-8c12-4a2c-9e38-ffbd5fad3d50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b612b75-b651-4039-8f60-6318493253d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b170210d-a3d1-433b-bfeb-9301f882aa07",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37779f75-69cc-480e-b578-23eb7c2f276c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fccc1c0-04b8-4967-ac13-b83f2b860fe1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dcdfe28-9de9-4db9-8335-c85f54c4c7e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0209cfe9-81bf-4323-8af1-c4d3ab55e76b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc09deeb-c315-4dc2-a6e3-067264668529",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8fa2a50-5605-42f3-bb8a-1f45d36137f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83096f0b-c2c2-49a7-b10e-c1ac17f8b85d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d783cb8c-f0ae-476b-b700-1ef10d7a8fd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4625582a-51c0-4767-adce-d5bf3933b4bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "561a7300-1b3a-4d9a-8582-b03aef0feace",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3c80bab-0014-4afe-b74f-bef1c633cf5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8bb555e-af98-4efe-9908-e5671ec1e99b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a69bc308-f8d3-41e3-a557-ba0d25a18f79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4624dc55-12e7-4d21-a9b2-80290d9884f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b83c4103-7310-4d4b-a6ff-2a68fe15c137",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9db167e2-71b3-49fd-b7d4-aaf8bd845c38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dec28c4d-18f5-44ac-825f-441028ca02c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "977053c2-a070-45fa-82d3-277f561169ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a210ffab-d37e-46c9-8764-5baa20720944"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d627e1c-ed2c-4617-a3f1-be4860c07757",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f266284b-bc04-4a73-a7f8-20079bb2abca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b055481f-aefa-4574-82ab-ce4f87e6f3d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "090c84ec-b0ec-4fab-ba80-1d5a4e3d3c1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e8fd877c-7538-427a-af06-80f54e8e785f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "141c5c37-14b3-482f-a179-24ea32875f46",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9c61d02-feb9-45ae-baa2-d1b4b9782bf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa7cc769-ee21-47dd-a39c-e67f51fc2131"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4b51c4a-0c9d-4a3e-b7a7-d4862614907f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e3eda0e-9cad-44e0-b30f-754baf7c14f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0845350e-6dee-460a-ba03-5bbf39958b4c",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d3c44a2-d87a-4ef4-9c63-81a8946c5c28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "859efaa2-c301-492f-8a5c-3f3073d51d04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7842011d-4844-4623-bfa9-b84e14caa16f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ef82913-65d5-4953-a233-951f84e7eda7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e1099b0-a4a4-4307-a6ff-7210cbe1778e",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebb37977-441f-409c-a1b1-5beb39fc4bd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31f135d0-7427-48f8-a310-b857845024db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a19eb94-23db-4d58-95a3-d09300140a39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7f990c4-2993-433e-bf3d-4867c143c7a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac9015cd-84a8-4a9d-ae82-4c1c1a1793f7",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69544da2-38b9-4a52-8232-2da54c4292c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a19cd2e-3818-4146-923e-0e1142a44694"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca25ddc5-efad-4b36-9c2b-4e2186d514a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e002e1a-26df-4a54-b6b8-b3cc9c8d7e47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d624184-d175-41f2-bce2-dee18393a5f5",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "615ea5ea-3c26-4555-a780-da8d68aab91f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a2a302b-32a6-4709-bbfc-8b5b30dce3b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51e7afce-58ee-4059-ae7f-daba1a02ad40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "74f2af11-b1a2-45b3-b1c9-c778a53772a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "191c8a3c-0d66-43a2-a174-24f12c16247d",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f30c2ea-dea7-4ce4-a943-7677a4f35102",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5777cb6-ddc0-4866-aae7-6896c374b0fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "233daf38-b38d-4fc5-964f-9e5547020a9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "73461ddd-2be2-41e8-95da-7f92a0288b85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77f23bb0-0213-4418-919d-fa49cb371505",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b568c4c9-f143-47c2-8c55-afa01d0fe131",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c921433b-89c9-4177-8a32-2cad0632f0d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b0e3697-2f0a-46a7-943d-1d5ad1db91f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "bbf9a013-ff3e-446e-ab96-1e0f9c9552a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c97de3a-0e99-45f4-aa17-89c94c5f4e3e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "534e4462-5cdd-48e3-b5f5-14f4da0314cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "374bdf49-b17b-4eab-98fc-8e32c26dccd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6a96bfa-be98-4a6a-b774-f544e4204589",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "00b054dc-daa2-4770-8886-e116d4ed3467"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ca7fcda-0a8b-4adc-a983-09b05b5eb97a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82bb454c-02a8-45dc-9619-8a012a55a2fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82e2e1a6-be09-46b4-8898-60cceb9c4b1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0a1df9d-94ad-4423-933d-adfd9c2167da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2a1fa9d4-0f9a-4a76-9c26-7e7bda17cfce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3876191-155a-4c30-b9ad-6d691492c2f3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53d7e988-bfb1-4ccb-a819-eb9974c348bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f8e5d64-8225-424b-8b1c-2a19f3a48448"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "893145fb-b0ca-474f-bad0-7d57876555f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "89e6907a-1053-4bfd-9260-b18ed40ab773"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68c13a50-14d1-4b55-b19a-4ccbdae0a491",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be985907-731d-40cd-bfb4-653d570713d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f8af45e-27af-46f3-aa4c-b9cc88ffeb58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6d3c39f-d94c-4ad1-94c1-6e5ca852cab5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "64565774-84bb-468f-b03f-937f402d1d52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b936fddd-75d5-47af-90e7-5a7cc612a536",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03cc55ee-a034-442b-8c97-d60b152fde2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73d003fa-0249-4e4f-8478-1675caad4d4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b792252b-92ec-4e0a-a5bd-b9322e01455c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "aaad0b34-8eb5-4060-ae5e-5c27ab0711cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "171399f9-de3f-4f5f-9da9-7fd8d1fcc6a7",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bd9c7c1-a90e-4218-bab8-c7444fbf12ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eafa507e-5e0b-4683-b33c-b8e4bfa85f90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "361a3d58-818a-4825-93a4-0879a75b9672",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "7398a1e1-7013-4e4d-8526-6730f25dd4b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5081675-addc-494f-b8a1-420f82d9d871",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "868a0caf-7163-4872-a250-53f3a2978e60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba42f745-14e7-417d-9630-e67a42b03871"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9557807f-f7cd-465b-8284-5d324a9531f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "30abced4-fce6-4e3d-b8fd-97aa397cb98c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49489d9a-daba-409e-bd78-a98be67b5d0f",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ab0ad73-b895-4637-ae19-5db824860bcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3dec5a66-201a-43ce-97e7-26d83f32cc98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0718e47e-df52-404e-b61a-e327c0740621",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d5e78e63-d97b-4fef-9a8b-c85ef4562da2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bdbc58d-2f53-451c-8d3e-1fe84fc9785f",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db4d3ee3-00fb-4af6-a524-4e6789cb65a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14ee67f8-172c-4449-bb09-c1bf14d2e588"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "375a0394-69dc-4bd2-91fe-fc0b25116b6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4cf19ae6-bbaa-49fd-a4bf-69fd3442dec8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06e8e39c-45d7-4c50-bf21-b3b2a49ebabf",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4efb04bc-6229-4672-9b62-7e23717c40f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5274b23-aaf5-4b59-a7aa-d206554c0cdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f5b5407-5ae0-4d90-8d4e-83ef6ad378ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6c6b282b-df64-4a57-9030-1c9e7102ad69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67c7a243-c2cc-4c4a-a3d0-e48716d792be",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a8fb807-dd6f-4062-99e5-f88531df064f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56ba3225-375a-403d-8c42-d4a245df9e45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8b75f4c-40c4-4ee4-901d-7d4ed442e0b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ec458c6-b3be-4cc7-b016-6281eb04182f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b65bbd1c-06dc-4d68-bffc-81b9ee158e6c",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5b83c56-3d7e-45b3-bd23-406fbc37ed73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fae79e19-afb9-4e28-8d62-40b99e98c413"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3112559b-d98d-4900-b6e3-86bbc7f80586",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5dd0717b-514c-4340-9236-3bfeabb51ac2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69cf5f8a-5a39-43da-a8f8-e56a44c37cba",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a24ed92e-f829-41e9-948d-79a5816ccb10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "107fe7bd-cd93-4310-a5c3-d84db889ca4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70f61c85-62b1-4105-b778-c632d555f2b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ce46be17-6b22-4960-833c-c7f5b75093bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2847bae8-4137-4558-b322-1a1895bd687b",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1198f072-c14b-43e1-b01a-d8a72059ec9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91f5cba9-49ad-4120-970d-e3a3be19f1b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb378c69-317b-4f2f-8ff7-57420ff04655",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf4be43b-fc6c-4c13-a6eb-3bd60ae05dcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78dd1287-f7de-47fd-b572-c9d4e3d6c121",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "061d1d46-473d-4526-9bf7-b19f3c467e34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "996684cb-476f-4632-84ce-acfb0abf900b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "321b0c6b-09e9-471a-838e-f42ba2fcd11d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e0ec65e-8f09-4a70-924f-2c8da76854c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4081ca42-98a4-4514-8b3e-789018b9cafe",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e02e4984-6db9-438e-9913-5fa7a7f4ba33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93b45785-ba29-45b2-a8d8-19b6e394c294"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab015f2a-6272-4ac0-a91c-d0f8e7eb5b60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7c788ee0-59c8-4b5c-9d62-200a1065dae0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0761e8ff-dc9e-4af7-ab7b-78a02bf35d75",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fad594f-660a-4f93-9b99-aa09c287a931",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "657a1b85-a58f-40c9-a030-02ce4febf720"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e0f8e0f-0fa1-48ab-a9f3-92ae62ebeebd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f4e0e933-aa16-44c8-9e44-9244387022b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a728a652-3cd5-4c57-9c52-949678a3627e",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15e58132-5a36-45b4-9a96-b284031ce78a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b57a1fd8-8361-42b8-b061-08db83fb0c06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c34dd836-89a2-484b-a9a4-e40712aa9c0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "367e4d87-95aa-465c-86c7-013996f42107"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7520a8be-1cad-43c3-93a7-75d26303a578",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e97d9afd-f13d-49ea-b1bf-0d7a248fe552",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "081fa2ec-3e26-40d2-bcf3-cb2845bd8f17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a2caf28-48e4-4388-87ef-40b935cfc5e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ed6e354-fef8-4318-af61-2dc13708799d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8656b00-703c-4fd9-9bd9-f168690e539c",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89534ce1-2038-4e03-9194-7034c4eee8f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6f9dc5f-ba04-4352-b26e-40b74fd9b517"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8c3f73e-565e-4be9-8015-e229e8384e3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c5128266-aef3-4a67-aba3-9362b85103aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2be046d2-ac76-4012-84b1-129bb1df856e",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d25ca833-794b-4084-b4c5-912a9791013e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24887a00-d597-46fb-937a-f2ee78c1b0f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b23d731-1b95-467f-9523-dce797fb6670",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ff5121a-ad10-4545-96cd-17de4bf2f2c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28053c3d-eea0-4b52-81e6-dcb649550777",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ef134a4-61c5-4a9d-89a3-c6228b7a2684",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14ad41a0-5932-4dba-89f6-ea20c9d01a50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fe6c805-2f23-4002-b779-c493edf0f5cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "337af52c-22c6-4d3d-b51b-d397a320864f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b473471-1821-4a4b-8217-cd1ec05b4971",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d579d2e-b498-4612-b972-0fb4abaeb7c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cdf1967-2d02-4844-9791-fa7b294c161b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d16f4505-13b2-411a-8d3c-9329011075a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "afdcbeb8-49b6-4459-bc9b-656471900bb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f09bc677-5ca1-4e6a-ae0e-bd9676f7487e",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f21e6bf-0a00-409d-a284-63f9d366b50b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "022b6b6e-07dc-40e9-9a92-befd2c2cb153"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5418391-9123-4b0d-95d9-19097ba757fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "870bc4fb-db93-46d1-853f-abcd38f1c8bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5a31996-1f86-4c30-adcb-2d8ecdff2797",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32d7263e-beae-4105-b6d6-d47a747fec61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c92c65f-4d1c-4500-a912-38f199ee133c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53b7ec8b-7988-4eff-ac97-ee30cdc3d7a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "eb37f8a6-02e5-4cfa-9917-ec967eb3f2d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23432b2e-3288-43a7-a33e-f4b3f7a40c8a",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c99fb68-58da-4431-8c36-2a1644d606a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1f4e366-9a63-4da6-a180-c963616251d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19719b00-e3da-4089-ad7f-d83a0aa9a76c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "46c093a4-24fe-4374-8e2f-093caed998e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21febf52-dad1-4e31-bcdc-735d88ee964d",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41e021dc-e1cd-43ca-aa07-72e776c0c279",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d46c14a0-dbc7-4550-a6c4-233c18f241ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42d5603a-ca60-4187-84b8-c11c8390ba57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f07deff0-f446-40fd-b8a6-e97d75c8cbdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ecf5b39-15d1-47e1-a8f3-ce4ace59e61f",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "366425b0-152d-4650-897c-fcef54ed21fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2ef9c12-b7fe-429f-aa26-e67eca9c0810"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f9424be-1e36-480f-8d5f-19d4149c732c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "46ec94f0-235c-4884-9802-3f7e9d939902"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ded1b78-bcbc-41fc-bf75-f5ae211d1e01",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb49754d-e4f9-44a8-b630-4bc57611563e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d469517f-8b98-4e63-923c-437fb6c26583"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00b8ef74-ea1f-48a5-aa42-af649d9ada4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1c20db8b-d086-4586-b881-d907171f87b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "529818ae-5899-42bf-a342-099d69eb9f38",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3391ff08-41ac-4204-9f0a-c64d5d513f4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a72f1036-c4f1-4c83-a185-cc84a480f6c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2554c51-d49d-4a70-8e0f-1e09f946f675",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3c8ae5ac-e055-4494-88b8-4fdb682c10b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d0ae4d6-b550-4167-ae65-8853ae2299df",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a64b3964-760e-476b-b9ea-2197c67f7f10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91a214c5-5abe-49b7-a803-1452bc6da1fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24f208b2-0873-43e1-ad53-a913125b3722",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6ccd7440-a2e1-41c2-96dc-eca954873034"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e50458f-5233-44db-8762-6fa5d90b600c",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d426ff0f-beb7-48b8-81f0-b232c00260dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f68fa1a-e40b-46ee-bb3c-11080173f018"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c54661ac-1963-48a8-9dc6-c471a8bff1b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0d753eda-924d-4899-8018-bc39d45df331"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e55b6d29-3f09-4fa2-b8ee-52eedf45b824",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04687a80-6d59-46ae-bd4c-36d758e2b505",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e302d33d-50f3-4f73-b8f0-1d570a18df1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16bc820e-6f94-4278-a015-2fddde89c058",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "7810a28d-765d-45cd-bd38-f312c43514df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8168cfc-c4a0-4627-8c7f-8cb0e52cf081",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc551cca-262b-483d-9ae7-16e0c916cc6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afb76145-2018-42d8-b187-2167d642c800"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a1a14dd-6d83-4896-b0df-c2148acb6298",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "68ed22b8-5d7e-4375-8434-e07436fd7c02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e8dd926-d5bb-4862-b52a-530e98059c21",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9767c9a3-ca13-42b0-b41d-6279b55aa0aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "c72fd5e5-9e54-4c18-91c6-365039099989"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46d44a18-d51a-4f53-af8b-c15308439ed8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "6f6c2b1a-5bee-4701-88fb-dd1890763a31"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9f6ae9b3-fa95-4465-970a-b1e16e36f618",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "98012aa7-ae80-4ba3-b0fb-c8b90e893b2d",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac8b9839-fc90-46a1-8037-10fc963c258a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fe6f368c-bd7d-420c-a8cf-c1f4a56a8ad1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e5d8088-4be1-4468-88ec-156b631ae688",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "40d1e6ab-b3dd-4532-ad7b-ff160e683308"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6350ab44-3d04-4ff4-ac7a-6f383f2ce788",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "55022eaa-c7f9-4b35-aa71-811c760336ca"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6037292a-c210-47cf-9215-ed35295c730e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "449a25d6-e4b9-4a2b-af25-62f5a72f472a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "726502d9-61ae-470a-9d33-b2b8ed1b6d51",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "febaecbe-5dfe-4c30-94ac-f58a109eff4f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "4e8ae1a4-3cea-4feb-987c-4a6cbde68320",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b5d44f27-f2c0-49a2-bf27-9caa643851d9"
                }
              }
            ]
          },
          {
            "id": "561d4eb8-5478-4c1e-9490-dbf445da67b2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "264f55c1-8c00-41a1-be4b-cbca20a9fc09",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "7d5760f4-4e83-46f1-8105-ee41bcc77525",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "829a2042-88df-44b1-b5dc-0ad4b734b2c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "aa239a79-bcaf-48a8-b9ee-d5a167504503"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d76218f-3c68-4b27-b155-6c13896d8a27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45e8d5ec-860b-4386-bbba-4f0af4c3bb57"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a4603f3c-7bb6-48c9-aeb3-8a988372fbde",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d02dd80c-5064-4760-81f8-608aa99e3775",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d06d6056-511c-4648-ae31-9c5e1246079d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d7354537-c53c-4159-adab-e2518ea06252",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f9aec230-7713-492e-af72-d32b5625a1c4"
                    }
                  }
                ]
              },
              {
                "id": "e0c20db6-c7d1-49fc-8b95-48f901488656",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9379620a-cb40-4ca4-9ea1-b11beea571c2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3f82516c-34f4-4be4-8e57-ce58073fe1ce"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f29e6be7-5d1a-4031-ad9a-531a53a191df",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a646fd16-af5e-4050-834e-c967d2925903"
                    }
                  }
                ]
              },
              {
                "id": "0a81907f-d7b8-4e7f-8e4c-1846f82e9ce4",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e3058a69-20a8-4c53-99be-f9dbce29b7b4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "93478a17-cc04-4c01-be3d-0afd3c52e30f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f7ecfc0d-1b4a-485c-a8ba-da8399eaac97",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0e2bded5-54ec-4eee-8a91-8d05f58b907e"
                    }
                  }
                ]
              },
              {
                "id": "ecac6466-ac69-48d7-996e-b6ff685a18d7",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "64b0b82f-2279-4abe-9b93-1efe59ed6981",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "30950df3-3cf9-43a0-96fa-8b4995f7a91a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c2c7992a-ed5c-414a-abe3-6e03c7e805de",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "63a3e7d0-2185-437c-a4d0-7871bcb58a17"
                    }
                  }
                ]
              },
              {
                "id": "06617f7d-6e6f-4989-a5f7-971d64838b8a",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4b6217dd-9e69-4bc0-9b1c-601444c7f7f0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0ef7f477-6c02-4e53-abfa-605cfe9f93ad"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a1c3a89e-02c7-4b60-bd46-880507bf2931",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "7912df91-6942-4a0e-8686-390897190000"
                    }
                  }
                ]
              },
              {
                "id": "c61eaffe-d38b-4394-8657-61898eb54a6e",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "67d36f7b-71cc-422c-a4ca-bd7c07a229b7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "905a0a99-0c6c-46bf-815d-987b76edf88b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "46ddec6b-5d58-43fb-9c00-a8e1f1f3074e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "efb57c3a-4a1c-4844-9a1a-8db3a961eaf2"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "55c4679b-d5bc-44c4-982c-c6a32b59ead1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "04b6c173-b2ba-49cf-b26a-6a10c6678f50"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d74c5f69-2be1-4a43-89f7-cd10c301507e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d9ed0e14-81d1-4117-be8c-58b7cbc5697d"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f5876525-c5b4-4c2b-bf65-fd9f128e8579",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "e7e0b4c8-8998-43ed-a66d-676c888eed6d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "81e84613-5c1a-4573-94ac-9a977b88e4f7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "50fe129a-019b-4a03-8efb-28277beafc5a"
            }
          }
        ]
      },
      {
        "id": "f36ccd9f-ffc0-44ab-bf8a-1a734ae06337",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "e76fda21-b77f-4044-adb0-d0a00a61a2c9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6a3f976d-bc26-4065-bf8c-2624b1eac65c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7b3d325a-f163-4d91-96dd-d259f6e6e807",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca8ee7a2-9ab4-4418-918f-8eb7a8f5aab4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67fc9e33-fada-4130-be4c-004ea00b5724"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2469d72-c20e-4ca2-a23c-2257aebfa899",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "38775db9-6937-4ee9-869d-dc1e1d5ca6ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f11d60ca-381e-4ae7-8319-03db907e8952",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01290e9e-fcc5-4dea-bf8b-370af4fcee5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cb7da24-1daa-4df9-b4ef-fc64426de56b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70c3b96c-dae1-40eb-8973-8cb2895fb6b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff1936f2-8b37-44cb-bdc9-2243c38cc739"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70ebd77c-cd79-4c39-b1be-739ec60d0ad6",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81b6c23a-1ab5-449e-baa2-bf06719a9883",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ea93aef-2b92-485b-9cfc-a9732699ce54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d5fd82f-00c6-4a2c-a5fa-013fc261258a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c61ff9ac-6965-4a29-ada3-e5d24ed1ae90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a1ef0bd-d019-45ad-941d-561718fb4f59",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c638f020-c7c9-4aa4-b3f6-6afbe916d3a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a3f7709-65f8-4975-9556-56d069f5991c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5244a7a7-a548-4d2b-92ca-735e60bb15b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f92f6ae-f36f-4285-9a8b-e56f09e613e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9acd939d-a7d6-4743-9863-f9c44664859a",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c428713-0c8f-4bd5-8e3d-176b75d424fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3420e727-dd0b-49ab-b548-b2a0451e5c4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68f6e9f4-a939-4adf-ac68-f616eb90983e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "abe1912c-b686-4437-9ea9-5ef75e383721"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aeabfe45-110e-421e-a50a-21a817b9501b",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f31b201-0c6b-4db7-be60-48f3c500e6e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa6fef40-910c-42e6-bdeb-dac6356cf32c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cacee33-61e4-4468-ac9f-43ad584b746c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "94fd5887-a711-4179-ad5f-e46bc6529eec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef481ecd-a2c5-4277-8b59-fa2439d310b8",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82dd285e-c1c4-476a-b214-234f23f932f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c48248e6-add9-498d-acb1-3aef46d8fa1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4263e662-49fb-48ac-ad46-c4ef3b5e9fb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "c3679231-9d12-4a35-a08c-e5a9e5ca7b3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ca53bed-20b9-45ff-8961-2def96f93d82",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f16fdfb8-ffa1-4bd1-9abf-b713f6c42106",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1ce2881-2344-46bf-8f7c-c07a9f49c337"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce9330aa-bd10-45fd-ac69-4f7855658669",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2cd75758-4cab-4bd9-a616-5b23f766ba96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd7718ed-d054-4511-a792-829cf7a9f47c",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c496c6c-eeb6-419c-acbe-a37303940f6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d70401bc-fb06-4d6e-9245-ad11b8628c98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41c43adb-549e-4f32-8894-b4eb8fb3a7b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9c399c4c-1a26-4015-8dc7-f144163ffa94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "796f9393-4bbd-4876-8cf3-19eac16a89e7",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73d81bba-4f80-4124-b580-19b02dfe931f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fea3c6b-7357-498b-b75d-fdccfd053f1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0931e9d3-d5d5-4a65-8fd8-56a5bd9c89b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "811e59d7-9fdb-49f1-833c-5fe2c579e17b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cb0e887-5784-49f0-8c04-74f1e0f465ef",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d1d6fb2-41fb-456b-99b8-b70adbcd4c90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05b03e6c-d0c7-47c6-a8a8-48eafc3b902c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ef9880d-68c6-4adb-be9b-a83e56baff5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "37dd8603-9074-4169-9cb1-05377da5fe99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2813e2dc-9577-4c49-a82e-859e3101ac60",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9e85488-39d5-40e2-aaf0-acc465b7c55d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27c782f6-b92e-4f3c-abe7-49479a25c42c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89c98206-eef6-4ab7-8b3e-e270b06c707b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6d171e24-1aa8-4797-9842-ff8966bfc02a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc054c9a-a3fd-4fb4-9c47-c64cbae08f92",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88c2825f-6590-4cbf-98c4-47cb55d17c36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e87ed7d-fefa-4d43-aed6-bc1ebf45f70c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03d10405-c834-4201-bcbc-6b6f42c44756",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "80998db2-008a-4317-91f9-649a09d0958a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d8bcdb0-0543-4e6d-bf8d-57c883b0b937",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bcc2e4d-c550-4603-8698-33538dbd6301",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f06bdffa-d897-47fa-a213-275fca3a033e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48c63a43-db3d-4e6d-a3df-0e6a3859a001",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2a68549-c3f8-4c99-9932-e047f6f0f3fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f58ce064-2b32-4fa7-a175-d2361a1a6be9",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f09ba103-3bbc-4c3e-92c8-5a556e6d05c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33237fbe-771c-4519-9c36-aacf4141f2a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23433aef-bf99-45b3-a1a5-5bd8172fddfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "211f829b-e697-44eb-a718-c07f8ac9aa1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cebd0b1-ffaf-4cc1-b619-d4305be2ba47",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1b08ba9-df92-4b63-bb2f-291c9a65f29e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7b7c542-2380-4c6b-bc68-e76a82dc2cb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e2e66b1-1098-4a62-8eb1-ebd3b74cd375",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa467ffb-9a9a-44c3-8d51-1f05fa609c63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0a34e92-04f9-4e9f-b042-f0005a87ded0",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5884e2f-ea06-4861-83eb-147773617c1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "690c5ed9-4845-4754-9ac8-59b6f4f11bea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1ffbf95-accc-48d4-8959-42699d9a3fc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "422f7632-55c7-436b-8a8d-e4159470818e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f36e9fe-2ce5-47cd-80b1-32bb728a39f0",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2d0f1a9-65d6-4f4a-82b7-dbbdb3f64944",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "376a2671-8351-47cf-af4a-f1ec0a8871ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "222fa3cc-c429-43fa-8c75-cd2829bb3a55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "92ba037e-7799-4d86-8129-f410ed4199cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c3af149-7002-4e52-8fe3-ed83e5f97a3f",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4c1dabb-5e17-4820-98f7-93d6670e5528",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52ddf110-8e82-414a-957e-d314b10fbf93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2044e659-93d8-49f2-94e7-fda3775222cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "795363f0-10f7-486f-82b9-0d9c18f38065"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8215b154-c9e6-4624-873d-3da09f44647a",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94fe3788-7397-4d07-9068-63aa732982de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fd0cb74-78e3-446c-9daf-7fd50022d441"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07e7f67c-4dd6-4ece-bb61-3629ec252ef6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a51a5c04-b6ea-482e-b766-a263d816ffee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f7d1cd7-110e-4278-8025-2f9d9b8bb144",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67459e4a-924f-493b-bd79-3daadceb0301",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f3f759b-4c21-4a2c-8a28-2bae3057264b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b5b5665-ed9c-4884-83e9-1826047251d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c991e6e-2820-46f9-90c4-71cc37fec436"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2483d371-9a1a-43a2-92cd-4234692d36e3",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f29666d4-8919-4914-ab93-cc09dcdfda61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8903a0f-f33f-48bb-b0ea-c11fc616572e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eafbca15-012b-401d-8998-6b34756c2c25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba19eea7-9995-4223-a65a-f305e6da5997"
                        }
                      }
                    ]
                  },
                  {
                    "id": "148eef4d-0e34-47fe-85d5-d2f83f8e0293",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ec970a3-73b6-4140-b3e2-23410b6897e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56e28b34-3ee9-4a68-82cd-5569b7d4bc9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad56239b-0b9f-43f0-a6aa-ae6248ddad0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e6cb108-e540-4f29-9324-8a0e76d07a04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf9421c4-2294-4922-b1ba-16bfe1c75b71",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ec4f61b-4331-452f-be52-d69f9843d1cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d59f3ce-18d4-4ad1-8f6e-743c33180e0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31a88917-7fc4-45cb-be30-84f1bdf2bc12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa1a4e42-4722-43bb-a8cd-e739a444ed4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a76f87d5-80d0-4c1b-8e7d-d7dc5566b350",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeb7654e-61b6-4bcb-889a-49f757ee461c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc19f7a4-73ac-4e19-97a3-43ce5f36120e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bc781ac-d3ab-4742-85f8-039cbc94c8b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "91de373e-c9c7-4cce-88cf-dd90f1773b39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06a3ca24-d1f7-49f0-91b6-60ddb88b49f4",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbfad45a-6603-4328-8425-1f0ab5add534",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5331288-af28-4b9e-bab7-345891591677"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0023c680-32da-49a9-8cff-5e3bd0e65081",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d58030a1-85ac-444c-8415-bf38479b698f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "179b1ec9-8c53-4a0c-b88c-5ca4e890771e",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e65eaef5-f2a1-453a-a570-cb3e9aa4fefe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "677b917c-139d-4fbe-b304-427bebb411e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8b74ace-a59a-41fc-ad69-b4f88982ebe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1899acc9-d721-41de-8382-efad3d615316"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b305c396-801b-47ee-a3ca-b7050b0a6394",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c22a576-3737-4682-90d9-bf474cf5a6cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52239c73-ab1c-4981-88d2-5256c198c424"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc83e014-9070-40f2-a9f6-50fdcc63895e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "97e4c2a0-9852-446b-bf14-1fa527f7c018"
                        }
                      }
                    ]
                  },
                  {
                    "id": "908a6e5f-5c3a-4683-bcb7-8e3d687efd30",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f17901a9-100f-41dc-894b-0889edfc878e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b54f5d9-940e-4244-bd0d-f26056a332f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9430cbf5-cd87-4e59-a530-22ea1c43e77a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3a4c931-3936-4dc9-9efe-09641a2dbab2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b59919a-777b-4700-8b7a-11dab4d38bbc",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed21f4d1-6f0e-4895-a576-f7234f51f18f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e10bbfb-4e07-45a6-a98f-c0f622808a96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eab282a0-0cda-4f24-9d70-bfa475d53242",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "21dd1480-f5c8-4be1-8f35-f89ea3139bfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9409e1ce-48c1-4a48-a09b-e7af95524861",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10773f8c-8ea4-42e7-bcda-f64fa50f1d8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2cef8a8-31d8-4c1a-bf86-20bb21c12a21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b0fb361-8f0e-42c6-93bc-058b4f5c2051",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "17b360f6-3c7c-449a-9153-d289ebfc09c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "060fae2d-5de0-4931-be05-c20b425f390a",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d79e5365-77bc-4564-9020-020fb9bcfeb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ca92a27-4ba5-4e2e-95e2-0e502471706f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccce4749-ff2a-4d7d-b16b-00eeb1fa37b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d193132-70b2-476c-ad37-d02921744298"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "816a8431-14d2-45a9-ae63-d295817deee8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5ca54c3b-89e8-4748-a2ba-7f8497ac34a6",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23173932-802c-434e-aab2-eeaa731dac3a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "4bb467ec-0775-4b1e-a18f-5ffbec552388"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c79f73a8-b4e9-4a70-b0bd-a519e36dd406",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "91121e59-47f8-4154-bcac-f3a4861c32d6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5d997d74-3a56-4cfc-8218-7e9ae9317585",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1d10b339-e6aa-47bb-9712-c90c203c5a55"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f7806780-6e7f-49bf-a4db-ad0a384fc073",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8763afa0-ef58-49e0-af35-b769fc1c49cd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bbb36615-470c-413c-9e50-c273b40618c1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5d47f4f4-4b33-4a28-ab20-7dbc738f05e0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "72cf77b3-f03c-4221-b3b9-ab7b4573df54",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "69e27710-7042-4305-9843-25f8fb7581e7"
            }
          }
        ]
      },
      {
        "id": "7f0b53a3-9146-43e1-aea0-aa4296967823",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "26aa7967-aea9-440c-9eca-3d5b8e4b297b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c1e22c49-2159-40d0-835c-4f1fed3b6ecd",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f919ca37-cf17-4895-84cf-cc5c8abcb319",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84d1f8d5-48ad-4705-a6e9-7a8a7b1ca61f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0310eba1-8ae1-47e0-bb40-81f244e9a7bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a336d7a9-0749-44e4-8e54-3d66270312c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "6de41402-3123-49b8-bdd9-b0295cca776c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de8099aa-5bbd-4035-a925-43313cc23428",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5396a6c7-8dc8-446c-b43f-af8b780a59c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3994bf5-c2ec-4dc4-873c-a47b899dc854"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdbb6e8d-04d5-4779-8f9e-88717b4c444b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c61e5bf1-08e7-4626-a1e6-df61a3670397"
                        }
                      }
                    ]
                  },
                  {
                    "id": "832c2983-925d-456b-b77d-ede2c75e5a54",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b949e25-0dbd-4666-93c9-db240d8543b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d709ee14-7dcc-4da0-ba34-bd4722bf7f25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd1a9fb5-caf0-41c5-b3b1-7be91bf0e86a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e6f5615b-b46d-4a9e-8166-1d2b5e6a0eaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edd26345-1e55-4a78-b750-c2fc047911bb",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e621145-9a1e-4642-b6c9-155bf3bde037",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2190c393-6a87-4f41-b1e6-d81b4bbe3ae5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f300d7bc-4178-4387-a024-8ad9955eef02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "247267dd-6a34-441d-8187-25375009c65d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd5a5d57-ae79-4ff8-90b8-cce138a42aa1",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d28e3343-ada4-483e-a48a-5de887f3f80e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "050a337c-09fa-4153-97cd-a0e14f941c0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6a96886-94c1-4a4d-bd1e-386d4aff3de1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe2f0384-67e1-4cb0-a55c-a672eeb418d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2dc2494-a75b-471c-8fae-e1d85ce522ba",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "debc6cd5-ce1c-457e-b2b7-2ae7df719371",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab744201-459c-498e-80f5-74e7173f1d0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dd6e1a7-4c31-4126-a232-b173c7528767",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "44fc66fd-25ef-4b5f-8250-549c73fb1a41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62c85073-381c-48b7-81a6-0366d9228423",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61dfe980-28c2-40ba-897f-a691531ff6d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd35ec57-9ebc-4891-94cd-ffdc2ea76429"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "587b8dc5-f6de-4060-8186-ec64f7469a79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "af24127c-2ddd-42c3-8afe-a0695d8f50e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95e0db9e-7069-48ca-b681-113a8002f2ec",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f51a301-f344-44c1-a44e-7eabbea7024c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea957da2-0e47-4288-aa9e-23f2699ac1e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39f1d7df-8a37-414d-a5c0-09c52a06e21a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f2180302-b6aa-4b02-9064-251e95806d61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cfb8c17-8ea5-4ae6-9b09-e06db44d8d72",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "959a85d0-117f-43f9-9a26-0b5ec36820a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d01525d3-8149-4455-b02b-434c09a53f11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5ec9103-768e-4c5b-9eda-a5124c17b95d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f7d9410-ee3f-4e08-b8b9-140ccbc73323"
                        }
                      }
                    ]
                  },
                  {
                    "id": "920eb92a-38d0-42b9-bcbd-68b8f6b04558",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c6e4c78-0121-4ef3-baa0-acc7ffd933bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2f576a5-118d-446d-8979-7ee12dffd1a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f08a3b28-2e69-4efe-b696-7449cea24966",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d9622cbe-0e9f-4994-b363-5e957dddac21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca1c1f43-0379-4418-bb53-81fc3a61d522",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d677813c-00c2-4665-ace5-1e48721f749e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b536a363-3b19-4173-8f44-ddfa573325df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f67a84c9-6a1b-4659-b7e0-7ae34d4cdc8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "97abc532-82e5-4646-bce8-0a9cb25c103c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbfa447b-d355-431a-ab6d-9923681cb1d3",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "713a089c-25b5-4e5a-8ac9-def785ab2d00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccb6d786-b12d-4786-b8c6-539c3dbb1262"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40a843c7-c98c-48b9-827b-7fdb244e055f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "78f3dfa8-b825-4052-ad50-9a2339134be2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88c2246e-cea8-499a-97a0-a333c853cef7",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a66cc4ff-69d8-47bf-9b2f-c4cf1791413a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18ac1585-889f-4f34-84c5-9f19d4a43d8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caf1e25a-bcc5-453a-910c-cbb0212b6122",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e3ffaadf-b616-49a9-a79c-62166aedd5cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b628378f-a4fa-41af-ad29-242338b06961",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c7f5bd1-2d1c-459a-81d8-9b428483c959",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3581b30-3a0b-41b5-9b86-07d0cf28d17e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "150dd87d-f32d-4695-aa38-568266033202",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "29f081c9-acf6-4ef3-abf0-5edaba5d5dbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cb5dccb-4936-4f4d-888d-332f25873d13",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e25a475d-3e9f-4d79-8033-c0ece5ea5749",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "761f0ef7-2676-41f2-937c-234623ed2e5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ed6856e-3175-4f3b-afe9-5240a712ea93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "29a7d1a6-95e0-4a9f-912f-e31cdd9b9224"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe41eed5-8622-4d7c-867c-6bc22d030e00",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad69f153-d107-4b9c-aedf-ff6742c6a770",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67afc6f2-5d2c-4963-9ce5-9a7b9a8d2c46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7275d5da-606c-4228-a778-58e620313ab3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "a7d845c8-c555-4111-a70b-45c082c6af55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7dc75a2-90e3-4619-ab29-8c4952185967",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c17ba86e-ef32-4580-9678-9d4f066e2d67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7df775b6-3059-42fd-a44a-70b208583ce6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "794e6969-91e4-4667-8cef-b0f08a0cac86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "b44d5036-998c-44a1-b01e-5e5093685fdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a558f6e1-767f-4b31-a3e7-57562d0b4c22",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "212fcd1c-743e-407b-8f94-d2ba50227f49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d70446f9-2f2b-4d22-b6c5-dadc269153a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19e832d1-4b2d-4a01-8b1b-188ffaee7a50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c8de9af6-aa9d-4fff-8c01-77938d31b0b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c274efc1-0613-4383-a62b-c248308c2769",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1ce29fd-1553-42bf-8c30-785e478fea77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b95ea0b-fe3f-4cac-a69a-76ed627fa7ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc29261f-b522-48ff-978f-5b13fbc84649",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e07393c-97a9-4adc-9bbc-ad40dd24f8f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c7ce89d-8d69-4d24-94d8-7d6e39d4e1d4",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eaad142-2ec7-45f8-a4ea-3d5bd808f9e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74cb797b-8145-4480-87f8-37fec3953c85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6e3329f-86b1-4586-939f-e1b6816f3cc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "532ff7a0-df6e-4ad4-ab24-49b573b5851d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68defa10-46be-4384-8afd-d025c8ce0657",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e358833-bfd6-4621-a90c-9a50aa8e6ffe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a10c5cdf-abe8-480f-b926-9d70a156f566"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f1cbc3c-7a41-48fb-aa65-3202b086382a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dab33dae-a92d-4b01-a8a4-1aa9aa1d9b8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24f941e2-2623-499c-b2ac-a360669504dc",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d154075-7b30-4fdf-b0b7-cb84770a0efa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95a18726-d0e3-413d-9784-2f67081dc4fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3ad8006-9868-4045-8d9f-c5b2b6a964f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf2df520-1380-47d6-90b1-6c62461638aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adae9cc2-9129-44f6-ab8b-c91b5a329fe0",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63767c96-bb66-420e-8326-e93211618e3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "310b2118-3768-4fa3-8a8d-4bb6d1834cd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f70116d-e5e1-4836-80f1-bb2be1e2b798",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d3685aa-291d-4cd6-93a8-f7c96d036b3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "948571f2-f636-4ee0-b384-e21691a7db9f",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbf6bcde-c39c-431b-b7c4-79113a4393f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85e77e58-d0b3-45a7-9a53-f918bbb7c35b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d7cbf90-c218-4a35-ac5b-18dc4639b83c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab89f39b-3fdc-43b1-9d6d-3980f1bbd6ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7c2e0a6-ed83-468e-a05b-88ce010298dd",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "591a3b33-1419-4a9b-8ba1-48be46d04e38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e0b5bd2-023e-4976-bb0a-0b5c10fe1c5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f119be5-34c5-4292-976a-c5873a956fd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ce39268-c9e7-498b-8100-d8c6dafa09c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7eebbb0d-798d-4558-8a67-cc2875b65424",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8a45c9e-f21e-4ba6-b91d-803a7b612f56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6bc9644-e6f4-4e98-aedc-d50b7ad3a367"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39fcfe16-d6a0-4b72-bae2-493dba6d123c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6303f60b-b9ab-421c-93db-578c913cb70a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5993da63-ac3a-41d1-9532-50b3e28135fc",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57d69300-5232-48ed-b2fb-4b6afa9c5b9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17acabd7-4e97-4318-80c5-d7ab98011309"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38634141-46aa-4669-a420-f41b8d4ff063",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7af5abcf-8d01-4cee-ae4a-13e8f6393fb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45a3e3f8-86bc-486b-81ec-98df231fd540",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1be9ce7d-0609-4c31-912a-085e490927e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2da78c5-63f2-4aae-b1ed-4c430ce395cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5c145c0-cabe-4334-8698-827d6cddceed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9574192f-905f-4d6a-bc4e-3faeb830a5e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d868f38-7d77-4734-af82-10f9b94ba673",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f192308-e0ee-4313-9fb4-b56120edb2eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5af4c298-585a-444b-9f55-ba6c7bb65b1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c50f2da-4134-4163-9ada-2dba866577a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2507d05d-0648-414c-8762-be8e4659597e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b4c1f62-a0f4-4c08-9228-936674d7df57",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36ee4f78-5235-4941-9c4c-50b5be855806",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3ee1aca-226e-4b82-a1f5-2da3498173e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b2860ac-caa2-4672-8999-27908029506d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "023d6799-9b98-46a7-8071-85f1c0286c90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86b89091-c429-498d-803e-629045f2794a",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "599a84ec-a932-4d26-8e9c-e062d18ae4c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94fcb848-a998-4963-ba40-b991c5402741"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c06143c-0c02-4f0b-9b62-89473109b0e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d77feb64-f158-4539-a675-7800058ba68b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "214239ea-87ce-486f-8c78-00b34df18543",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eca62575-d21a-4e3f-8d91-d7d8b49bb79a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09ef782e-f51d-49ef-829d-5e53845e104f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae38e50f-8335-4c28-96fb-02b49f04ad50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6e37092-803b-4759-a75b-b8a1c4f2ce07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d2d0249-0dad-4bf9-ac5f-2197f27b416d",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2f0de00-93d1-4756-91ae-69eff5927d6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b546d816-0e1d-4887-9474-657a3ba4c8df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19f35e15-7eef-4e34-bfc6-ee8b8b9a8a16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "17c42d39-cf12-4270-b82a-389ea0f59d0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9aa77690-2b45-458c-a28f-db1ef50367f0",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b70bbac3-a056-416c-b9cd-fa2204e16e67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2256b5c-e84f-4eda-a080-b7972d28890a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b85b2df3-9ea1-490a-84ca-8a5326caba78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "108ecd6d-b0db-45b1-9aa5-d4ef63bda722"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1ed3f68-116f-4e71-a736-f7a2cba9bd2b",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "380877ee-bbc8-4ed3-b149-9f9e9bfcf92b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc189b66-e05a-4906-aa09-bc05e486a94e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6415e773-be9b-4ded-bd42-0f438a55bc52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f2631c0-af2e-4eff-a3fc-349016b29c7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cecf064-e9c8-40c6-a109-7b971cce8529",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d548ab76-ffda-48e5-a8c3-3c3034e09983",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0484c2e7-f20b-42a1-9e1f-6b7db5fbfc94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c13710b-74c4-42dd-bd0b-69131dae8ef7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "468bc91f-192e-4272-83ec-d678982f0bfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8a0aed5-0f53-43b0-9e0b-c44487b783f5",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50e8741a-2b2c-4a6d-b636-c3bb24615280",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0e527fb-8823-433d-840e-50e1cb6f5ad2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd7bac43-671d-4d2c-9e37-ee03b11934c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6bdbba17-2de2-4e12-ab85-8e2820b0f133"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9be4dd03-eff8-4e99-8bce-d78d3efff0cb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0f81f854-458c-4178-8eea-8d91ef9f150a",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef98df41-d77f-4dc2-a0d6-2e014a067d87",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "81a1a536-9dad-4db7-a0f6-346378491b70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06a2a381-9ad9-45d0-8303-78ff3daf1f18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cfe9b929-292f-4b88-9741-7b78a1d3181f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e6e3a232-adc3-431f-818f-ef949e6d36cc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2b487caa-0163-41ae-8bf4-97d59ce5d9ff"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f37d8866-7dc8-40a0-8646-399083246ba4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4f37144c-5bd0-4444-b00d-09d059f4ba0c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "19a27659-c5f5-4e5a-b721-afff98ca6b9d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "fd8aea00-4891-4854-a637-3ca223fb30ed"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7ad4ea10-ab6c-4f96-9ee3-45d204e3e860",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5e573f12-9933-4ee4-8a06-4e9c7c605b76"
            }
          }
        ]
      },
      {
        "id": "8cfeed19-0ea7-40dc-9533-a8475e03fd68",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "f7070eb3-bb34-43f5-a5b3-6401845adb72",
            "name": "Negative Testing",
            "item": [
              {
                "id": "23f6077d-1bdd-434d-b7ca-b8ab9fd0d373",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7c87eb8d-38e8-4dde-9824-363c88edcec5",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70595deb-4e68-48e0-b147-1960ba964315",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3956b23-c708-485e-93cf-363486e068e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d355f09e-ef6f-4db4-ac6e-5695d14f4fc9",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7255e8c-0a98-4994-a947-057b06f31e76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12ba701d-c00b-4852-a6a6-402e255e6e89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7106b7a-b366-4231-b869-bf682215e68c",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a745078-c592-4ef5-9fe1-85103e6d21a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd180446-42ee-4560-be2e-473ab9dc131e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9799905e-b087-4881-8354-b356240d0386",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd7a8764-d3db-4397-bea2-f94fe01feb2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60cc54c1-0910-4ed0-8144-79d2a37aa393"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b773adec-b5dc-4faf-a1c3-9ec5a3000167",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdd2b9ba-58d9-47ee-9bbe-46d42d58a65e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcef5690-f62b-48a6-9a2d-e73085692bcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff0a4b89-0163-4179-90cc-2edbc36e6dc5",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb74f5f8-be3a-47ce-9f1b-a0fec0e80757",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a03ecf3-af77-4db9-9dcc-666a9f73659e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e67350a-3b82-4295-ac5d-6d8cbdc4cae7",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0360d700-5532-436e-884a-6b39f590ba64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc7661d8-7fb2-4823-bb8b-9cf7cc5ee2d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85f7b9b8-8ced-469f-9b21-b88cb751c058",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b10bc13-8adc-46c1-86b8-1d07660f6082"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8e678e7-21cb-4a1b-a47a-792506d83061",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0ff7dd6-9f95-4faa-8dcf-647940b92fed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d1d4b83-25f9-4f1f-98a0-f11f0bc9dcbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af100519-0e94-4f51-8fe5-d9c286675708",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d1c3d90-9367-4de4-8cc2-716d183629c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f7dccbd-d24c-446a-b8c4-80215eee2677",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d79820a-acc9-43a1-b752-6ca93d4ed9bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4667d23-9f2a-4282-85da-9304ba7499ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18160fc8-b696-498b-bbe4-3a2b6e3ab7b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bd4ce73-35a6-447a-84e7-0283ce27e847"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceb4204b-a532-45d0-97e3-3c5806a7479e",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3ed3b75-e30f-41fd-a8d7-35aafabd7c2e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c0ebadc-783e-4b0e-a9a3-a49fe5a39ec1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "722bd348-9cc1-462b-bb5c-8d6ea30f2288",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70d97db5-3ea8-4df5-b333-a9401cf551e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a25021a-7eb8-4ecb-bd8d-0e05018e5e34",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "971fa8b1-1b94-45a3-b3ea-600ac2a9f8cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c28dceef-de14-499a-a0b9-28eddd0fb3d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "433ffa54-6ac4-4211-8667-ae7429b68c95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02daf2ef-6a59-4285-ac79-bb5aaa81f832"
                        }
                      }
                    ]
                  },
                  {
                    "id": "306dd82d-bcaa-439a-b17f-b7df388fcfaf",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0033cb75-d76a-4742-b445-c2e1aa915e5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36164f18-7821-40d7-b679-62cf42b3fc2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5527b9e9-78ee-40c3-aa07-5548f912c33e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1882d5dc-c86a-4e72-934a-a60e51bd0aaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8705297-0b6e-4adb-9fa8-e09001e37f08",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b944ead-c8ca-41ec-b360-1a6a50d80334",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "660da9da-53cd-4966-a07a-9eb7980e732b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "468c8d00-2a99-4a07-ad15-428211642eed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69d7811d-af9d-4554-a207-ffb79e0c6ea1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8327313c-cdfe-4137-971b-ecd4f27094df",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc675522-a054-40fd-ae88-f3be9e8367f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d847221-7d65-408a-bccb-275302b140ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7d8eb3e-035f-43e5-9e47-762ea52f8854",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8c8675e-5f7f-4015-98a2-5e76854f2259"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a9f71f1-3b4a-4c53-8364-b69bb6aac472",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62be4faf-462d-41a9-94f4-93add8716a5a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d4ab4c0-fc9c-4164-89b3-c2a68ae79854"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0135cce4-e86c-48e0-9539-d541b335f3e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "794e4c42-76cb-4ef4-80e1-0a75ba01cd7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6085bd0a-682a-4b5b-9519-912f8148655d",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54945108-56c4-4e20-89ba-d8ee74d47923",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67d84ead-4e6b-4f88-9af0-1a0d86727745"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ef6f64f-8597-4f3f-a377-74ce68134c28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb9489ce-6d3c-45c8-a134-3e2e5de4d1a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75b32b4c-a5f2-4a0c-8d31-fa0fda8b139c",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8043a046-2810-44e1-9189-451b7345b920",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "685cf565-e1eb-4ea5-acb4-578b4ad5b4ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fadf4f8-036c-4873-ad7f-58b28898304f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91f2ec39-59d1-4ddd-b68b-553ae109af40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd0df992-2fb3-4e36-ab3f-5b69baa9d729",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "239dd334-67fb-4295-b21d-affeea1c476d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6c32559-cc8a-47eb-8613-eb383ec4469a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "577a486f-5a8a-4219-a805-1181ae0a03af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0eb15c9b-36cb-44fd-a97a-09bff8f55076"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18052883-e922-493d-928b-90060a899236",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57c19ba3-f0d0-45d3-8503-418a50d22ade",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cad22cd-8a3b-47bc-a82b-f730e9ae6de2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8abcb38a-2a4b-451c-bfed-c205110d1d25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50eb5c2f-c043-4b55-ad3d-c5616ca616c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f36b7dc4-e583-46aa-b05d-733d7d5a2165",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7648c1d3-106f-4c24-95e2-76b97c5a15e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89a5e473-e680-47a1-bb2e-c36cbe40ab10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f7d0276-109c-4646-a283-b3013a819060",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dd4a28b-5422-4ac0-99d2-c7175b2b2cc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90c7c67e-13b4-43bd-bf47-c7f18c540f85",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a57fd3f1-de1a-497c-95fa-19bee48a79cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11f39d28-beba-4244-ad21-e0e41ea10998"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e33b9d93-acb9-4b72-bb3a-aa15eb4935ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "433af798-4a08-466d-a206-8f85b77e0edd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d80dec21-c5f1-447c-a127-ec16c6e11403",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "499e0a82-2f4e-4241-95fe-8af8cb40d9a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "516b39ad-8531-4f13-80ae-a7f17b17ce3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a89059f-99e2-4648-93c2-d2a5036f6c69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80ff74a1-9d9a-4ac8-ba27-b7a8099ca82f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb19819b-a867-43ac-9e4f-3266f3000d20",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43461b39-a172-427a-a9cf-cf2ace314646",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bd0c6c2-271d-47c5-b5a7-0467e114898c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4d874df-e188-44f5-9d89-ec2cb6966474",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dc01870-576e-4359-8f2d-98bd86dd05e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60258775-22a7-4554-b130-28028934388a",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d85646ba-71af-4cef-a37b-8028e730a56c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de72a4a9-e70d-44f5-98a4-863cf1dcf271"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8688d516-f904-4668-9ff6-7f577d76bc2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6028cf49-c67b-48c9-9627-8898ae1bfe78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecef5019-3151-4516-9459-ba4ad43582f7",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6eaf23b-b5a7-46dc-b8fb-d1ff921c44c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1668a90b-f568-49f3-85a6-a26e255ac245"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a03d1e01-0aab-4978-9b68-d8d651305e1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2238c31f-70e2-4630-9d1e-4c2f721c3f23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d083a30-ccb8-4e4f-9b57-724a57f09a1b",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1c3818f-10b5-4e4e-b410-5033fd045bfa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54919abb-ad59-4224-b2d9-78b04f88b7c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e53a96f8-720a-4344-a920-079e8ad2f5e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6c75074-7e73-4229-b8b5-4f32a9c8e707"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1ecaa66-c931-4c9f-85f6-5d57bdf9abeb",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "506edbb8-648d-4d79-a425-9326a079cb1c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99ac474b-eae4-44c1-99b3-7c8c4e1c22f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5449f78-5ba4-45d5-88e2-a01311b29665",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d60acfb0-2410-4fb8-ab22-3eddfb35e9bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60d7752d-da97-4d1a-9bce-b51df9fcf6ba",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c97e935-c981-4373-8f9e-239a3d6e2b5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca2df48c-9018-4e47-b53b-3b3a001da221"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74fe8a7e-f895-4ea9-957a-0c082aad316c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c395c17-4e64-4fa2-9617-097a0bb36a86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ca9089a-e3e6-4f25-bcf1-8d7a0e71d9ea",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a66dda7-86cf-4dc1-9884-0dfb7ccb6b83",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d740027b-96d2-4627-9588-018aa698a6dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15aa0d7d-2346-45a5-a732-6c8b0dd1c59a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2002cf93-7e11-4ea5-a2c0-9c8f689acc98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c84235a-209a-4c47-a632-737cc61850d4",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff34dbf5-c097-4498-8f0e-34f2825b1e68",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08c5badb-e4db-4fe4-9e48-a2658fd160ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3495ad9c-b4a5-4fe8-8d5b-b0ac8aa182c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dd9ae49-db48-48ab-acc3-9c99037b1084"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0252d81c-47b1-4c99-acf3-2e42ddf486c6",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2766909-db13-46a3-a14e-16a37767a087",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c57f196f-23f1-47f5-b605-17bc06a4a27e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e02d75ea-96e4-46cd-b125-1ceaad1017bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed292273-b3cf-4760-b9bf-e5c824e4160f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ee38f89-fe68-467d-9b8f-2abe242ae1bd",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26d35d22-7ba5-4bf1-b307-a0203afd0a21",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e27db6f1-4340-48b0-829a-7f844b45e47d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c07c1918-2b4d-492c-9326-ad1cab142220",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69d41aed-4e54-4b90-aca3-0ccf1a8d649b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2044ba96-ee26-4e83-add1-4f1ffe0c6907",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "914ccdee-f5a2-4806-83a3-9fc219f9ada6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a027aafe-dba6-41ff-8635-803ac2270b84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c94f25a7-f75b-48cf-a198-6878ec84e345",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f0f6275-fd4b-4a96-9463-c3b7cc25cd91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dcee641-7afa-4002-9087-3023432ce97f",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19a74579-c831-4aff-b466-62c668a3a040",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "720867e4-ceaa-4dda-93ec-acd9cce5f2b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b14baad9-1439-497b-8f6b-4e17baaf19fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccb587f3-5e59-41ea-9279-fc19887a05ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea79c6d5-7871-4cb8-91b8-1e93e3a87d5d",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38e2531b-d188-4139-a435-1f0677f9f9b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b35d0ea-f467-4c10-a21b-725b90d8351e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d549c08d-bdce-4f1b-b420-20333efa41f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b27cf7be-0ac1-431b-ae23-6f9a2d3e144d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5032dc93-c933-4094-b899-a2ea2434a90b",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad25b0be-1aa5-4519-b61e-032b361eea28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab4a2f7d-31f9-4b60-86b6-a5b05fd389f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "704c17d9-df24-47cd-be52-09fa9a62acd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f5fffaa-9b15-48cb-8b0e-a3c57a0aaba2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42343ab8-445e-46c0-90ef-235a5d521357",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd909132-8004-47a8-ae00-39468c3af020",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aceb6d56-386c-42dc-957e-6e444e9c886c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66543284-273f-44a0-8418-516bb78ceb59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ebe62ab-ea44-43d1-b0e5-2adec4297ee6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cf3b281-0bc5-4af4-b09d-29c1901d132c",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cce40368-b374-4b25-a3b2-32847397b7e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87bf3a20-3a39-48fa-ace0-b3dff37bd344"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4554318-1c89-482c-98cc-0340c7becb7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c65e00ae-c95f-4ed4-b4cc-c4bd1c2497fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2159f3c-7b33-42f8-b287-a79bd764f359",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f4ddf4a-2532-44a5-a72a-fc6c4e00cb43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29ff313c-5c14-47f0-98af-32e3287d8081"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d22c119-1101-4723-ac3c-c82ac6b71998",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c7be0e5-d168-4407-a980-4112ea9ca052"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54361e59-9316-41f4-91b9-83a54c95ff2c",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c507c123-cb17-4737-a7f0-e1902b155cef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7c865f5-410b-4f99-bce5-7a1d6fd46292"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11b35b84-462d-43a0-8995-c44816f6aa5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a632423-04c1-4361-b0aa-710a8142e37a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7afaee0e-5ad4-4711-ad83-ef1193c0aa69",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af12e4af-07e5-48e3-9699-7f240c9eaba4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c9c5f42-e327-4640-a495-13bbdae45767"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64899a66-24d4-4e7e-999e-9c30502d1505",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb56b337-8540-4e69-a41c-2db44fdd619f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f494600-455f-47b1-a0ac-8a2c19a38a07",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20051200-dfea-43f2-a867-bf88f1616f44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bb75a70-5bd4-40f2-9179-9991649bea49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ff96c6a-f3b0-4e0a-82fc-1b8afe9831b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dd2aa5f-df02-4882-bb4c-bb0e0fde8784"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5132e429-0be7-4d21-a88c-4320d2a5adf2",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a66e6f6-241b-4297-bc58-23ba2bbce91e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30bfa87f-8c72-4db8-89ca-a8183c62b152"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "712e3f2d-1ced-43e3-a1bf-b0676c1da5a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee2e612e-34fb-4d34-a064-423e74301cad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bd03441-a471-4352-942f-0caf05e7742d",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a4cc9f7-4f2f-4e9a-ae66-b158c829bea2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7187d98d-3797-45d0-9f86-77d1aaf9e2fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfd4323e-3886-46db-acbe-05e0e62675e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "413fe4de-6f9a-4051-868e-f9ddd0b97076"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4a22cc2-1234-4c9b-9b37-58a3579cf235",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb5be55a-1f5c-4812-ae72-3f42a9edc7e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c146a49-ce26-456a-9c17-5f49765563c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c05230d4-87b3-4b36-b55d-aad8896e3df7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bf768e1-a6d5-463f-a80b-ae7859435524"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f73f91a8-9789-4411-a042-a7a51cd59000",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cebf8415-b256-4c71-9920-98a8b585ac0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a981bbb9-0ebd-4dee-bb30-127c2fe904e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98ee20c6-f55d-44c9-99ce-834c42a2dd02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df85cf53-ab6f-4f6f-a39b-badbaffc19f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b2fd941-abfb-4eaf-a7ed-ae37dc86b39b",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2679c072-e411-45f7-9686-cf9c2bb2c389",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1fe9157-1f7c-4974-8207-00df6051bd0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14910549-fa61-4f96-a7a4-2cef3cd00a39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "305b8081-47a7-4901-88fd-c2abd65518ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fb5a826-5333-4653-92de-9f68d5e5b533",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1b18034-d3c3-456a-9dfc-7ba4a32846f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b952b456-3e11-4aca-8681-3034f564f8bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "822d5de1-b5f4-43ef-a73d-84f00f69a88c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccdedf0a-c43a-47da-aebc-28de33776a10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2d235c4-63fb-4e49-811d-3e2bc3f2fc0f",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d3bd832-640f-4d4f-b445-b692e481a23a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b89d2ef1-7057-426d-b568-41cb6c8ddcd2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2e2970a-9fd2-42de-85b5-e5056047356a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "def865c2-ebea-4b03-82d8-7f3d11c14930"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4a7d236-4bc1-4f57-9e05-cb7e7d5b06d1",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07dc7683-818f-4054-be1a-6a1108b3fdca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cd7392b-0276-4aff-9a58-fcf77de37599"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc0277b1-5d4b-4e4d-900c-212318919755",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "182310de-216f-452d-a641-d071dad41ca7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "643a2b9c-0e0b-4099-9590-d39b65cbe425",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fa66874-8c88-4790-8abb-647abe7c2d69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fb4e2af-2dee-4c54-8201-6aa4b5ea8dab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9d02429-9c31-4c19-8200-46dd221f49b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b34b789-59c8-41fe-9aaa-52d6fd3c9163"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1489075f-dee2-4508-851a-0d1a960df284",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a725ded-4e5d-459e-aa70-cc7863f857c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "768d7444-61dc-4245-9ff3-8f0d2650fadf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77f88582-fad5-4394-ba29-e41176921bad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2539104-9dad-465e-9831-e46c5d0f3906"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bd0a101-929b-445c-a376-551ff2c919f5",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44ed74a0-3a17-4f97-88d1-d85946bb6162",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76f72fa3-86b6-4785-a14a-7669896b5e0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95c266f6-9421-4159-9460-34f2a570b554",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f468ef1-7559-4fa7-8e84-b2cd812f0f61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "556a6ec6-c5eb-48da-9f6e-efdec54f3128",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9714e25c-4b8e-4ffc-a884-0e197edf774b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "852910ea-d81c-4c90-a9e5-2582fa118ce7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b72e9f15-20ab-4307-977a-44af7e282902",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1430cb07-e55a-44c4-aeb7-2daaaedebe4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7885adec-d74b-4fe7-aaa2-172ffea67a2d",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fd661ba-a3e9-49b0-9227-b087a1f1e2dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "488dc72e-d315-4976-a354-80301b99d392"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fea9da0a-ca52-4371-ab4e-2f07b8f24b76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54f841ea-0967-48bf-92f0-56716300f39f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77f78263-98d1-4261-8705-1ea7768a4944",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e8ba3e5-9f25-45bb-a3dd-28403b8122ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c298b6d9-ac24-4cd7-891f-06c758ac1dba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "669a1219-0f43-45c7-9890-0866530bb214",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bd85950-b6a0-4c8d-a501-ae78f2645342"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f0ee855-93c9-4cff-949a-f2d8326f5e93",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c67e4c0f-fd9a-4c8b-b121-11ff76cd826f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d6e4810-761f-4318-92f3-2b7afabaf1b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d4258a5-a279-46f4-ba93-44b92ace0d5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f80dd252-7b63-446c-befe-23a5be8af65d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df6328b2-1c56-42bd-bdb0-d0c89945c530",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7cf8087-5e26-4de9-9d19-71f275b2ccf4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44528b59-6713-42d3-84fc-2f7950aa0550"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17511504-c456-4aa8-9f02-af28c5adddae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbb0b26a-1292-49ea-a2ad-aabce5066806"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d1733c5-ba49-41c2-887a-027a9b6483e6",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42114ca8-3d11-43a7-bc5f-dc93d40cd400",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06537956-ad6a-4147-9e69-b1a58cdfd1cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dd20395-888d-4ad3-be00-d94118eb0fb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "397cf460-1305-43d3-8fb9-62a880a79ad7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e86fe8bd-0fa9-4ab3-9433-06e28357ffcd",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bddc17b-37d3-4c6e-8058-b5cc05fa0ec8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d95cd90-6999-4565-a4d7-f9741d2e5607"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78479fb1-27a8-426e-a31f-58dfef9964b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4982880-eee5-47bd-8efa-fd6944a5d680"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7da9cf5-2eb4-4c03-b752-d54859600583",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94a6f3ab-7a9e-4bb9-a4ac-7e01f4f436cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a22713a-fb6c-4be1-9ee1-5daad757e0d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd6271b0-9ff0-4e76-8c4b-8445f83b0549",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "104edde8-88e0-41f2-be13-ab52a3f45f70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0e3a8c4-ccf0-439c-9616-b833f8685e28",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86eb9d32-305c-4b7b-ad3e-acb7e27d7e3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "583900f3-6b2c-49c5-80ce-8b632f95daf5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "559afc3e-315e-490e-83b5-20b0fd0fc06d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11350bed-849a-4ad1-9ec0-983accbdccb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab2aa9cd-14d6-4a97-bea8-169ba2f1f284",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc64d659-4115-4538-841c-08efb3fc2696",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6068141-4851-4651-91b2-b96edb4d119b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07b4fefb-9928-467c-90ee-3a17cc4243aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce17b6a0-b398-4ab5-9444-f372c3309ed9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28dae765-0792-4e91-8a05-bd4ab4909b46",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17272ea8-58a0-458e-85ca-5fd74dc53adf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8933a73-4d13-4680-9d76-c0c8e9fa9c40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc50a3fd-cf0c-4429-afde-0310c5d67a23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e2d6941-d6bd-4537-be60-ab620d10dc6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "689138c6-c642-4df6-897d-da830e49154a",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb4007c5-3351-4798-83fa-634fe96c917b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b2bfc3d-d439-4b2a-9ef0-2c5a7468c6f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6a483a9-f4e0-4a05-be43-a65a415e7452",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13bac59e-ccf3-436d-aef1-99d73e096192"
                        }
                      }
                    ]
                  },
                  {
                    "id": "664c1c1b-8a8d-4e82-978e-f4ebd2ae39c5",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7aaf4b8-3683-4f21-a0f9-85314d013a99",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2feccdc5-3f91-4f29-98c2-f6a4bc662e73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f3df8dd-eab5-4bda-8c31-9f6f594d91d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "168f9b29-0d4c-4401-b986-e8daffc7689d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b73f520-d69e-4083-9a3e-6e67a581367d",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "968354c3-0819-4f99-90d4-9867630bd967",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b1934c3-038e-4632-a2f5-e7ef916a4a75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a60f5d17-5f83-43f4-9ac7-60fb83d32a85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c766f741-94ac-4d8b-8ff2-c073b695110f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75fcdb7b-c1c4-4a67-95f1-4d64ece83b3d",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "514ddfb7-8d3d-4229-888a-381285075067",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5eedd6ee-9616-4630-aea4-ebebd641303e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c5607cf-7d02-48dd-90f9-3d2092157b9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "825549b2-29c1-41a1-a6c9-4a66d898f4ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d73380c2-cc28-4796-b332-d5beb4f5c9da",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e647d72-17c1-43af-803e-de21b6e35410",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c93ff519-af12-42a3-98c8-9a4076388d7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c929c17f-ac12-4a65-9d59-b129e8339888",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "358fa759-21bd-44a0-a673-f6ca6d8e8e32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "774d3a21-d212-450a-8909-4c56ced52d83",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1f05535-f9ea-4839-99d5-6ceb46fdcd82",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20c869e7-61c0-4fdd-b363-7cb4e1e74488"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa13be92-748f-4d45-a69b-76f1f6b826f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f456f513-7053-4d50-a743-80e89b9a97da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c2c06fd-d56b-4522-88ec-07778f7c881b",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99f96d85-3ca6-47a0-af29-2d85e30fac52",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3d9bf5c-cfec-4259-aa1c-65d3716fd398"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "759fe244-9b4f-4960-82b9-ed7c9a84fe2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d3291b1-6e17-427e-be0f-01abf0a02363"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8b2e895-0743-484e-96ab-ca2dbbed5e95",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d51f236-807d-45be-93ce-c89a3a739e4e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e732e6f2-f966-46e7-a235-bd0f3771f731"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "466ca111-057d-4df8-9d0e-383fc38fcaac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e9b65ee-8fcd-4443-a169-43dfad578f81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cab52aa-271d-436f-905d-d86c68f66e9d",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05de1585-a64e-4af8-9cf1-bd7266576af1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "432f9f2b-2f1f-419f-ab1e-0e20e7d9e3d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25fbf12c-9a67-46b7-8b2b-da6ea9fa7eb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fefaa0d7-bba1-493a-bef7-efdba73b13bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61aeb028-b0c3-4f18-b015-2af4633a2ada",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a31b61a-295a-4ac3-9862-899e1562c228",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9fb3c72e-d084-4aa5-ac31-2fcc66980bb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44dd88a6-6ada-4265-8aa0-280d532e52b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c6db50c-c39c-400f-a2a8-40b7300dce00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bf56e6d-0db0-42d4-9be5-9fcb75e14bcb",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eae663aa-25d3-4bac-9b25-474a3a72415e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5be6b20a-e09e-47f9-87ec-5dc87f27c919"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84af519b-fbc6-4c05-9de2-db64af3f73d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "842fd401-c1c3-4ee4-b246-1b9782590f19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3bbcbf4-9d20-4ead-967d-84eec87e1359",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0fa6c2a-348f-445f-a75b-33ef0f5f22ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f70f2435-3b26-4048-82d9-0b6cb3feced9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81cffab9-e90c-406d-8540-a1769b92b13c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a76c90d-956a-4d40-84ce-aeac5556226f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8ba2cac-230a-40ac-a927-045938688fe1",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2916a319-2820-472c-8aab-124d65374cea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2ae81fc-38bc-45fe-a595-01f556493985"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b6732c9-0968-4b58-b24f-201f76254588",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90b31031-ea43-4f98-97b7-ba3bc699cd3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16822eca-5678-4a78-8b0d-072443da8f87",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0974a829-0183-47ec-9b50-e1109db44ccb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56c7a5c6-ef4b-4494-9cc2-290858283bcd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2df12e00-39ed-4cec-b78c-e360dbd3d0f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64b1596d-8c04-419e-b532-6fe279627fcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e009bffb-9444-4e39-bfad-6351d090f643",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efc436ff-d2af-46cd-853c-e0c7081acb77",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71576eb0-6849-41e7-9bd5-88256dc1f1b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26628a1e-0482-42df-b292-c79e07d69f85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0090156-665b-42e6-9583-c44c1a1ef7e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1642bf96-0179-499a-831b-0703ffe4269d",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fd7be9c-a32b-42db-aa5e-c939c6076a29",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1c28d84-62b4-42c1-8be2-aa09251a2706"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "156d18a1-6faf-4f46-a870-eb71c5dbe924",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eae20f08-067f-4259-8d36-97ccde6432ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9deeeb9b-56e3-4abd-99e3-130f2da3c7c3",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0c715a7-802f-4794-aea6-a231a0af552d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e9005c1-2de6-4cd3-8395-26b94e99ba16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4879be4b-0448-4ce7-9e5c-b1176ef1d7e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cec54da6-feb1-4812-a9d3-b995c01c92ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "572df915-0354-4e24-b2c5-47433374d8d4",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cc8e41f-1653-4f02-8ceb-7fadd8e7ac34",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14e85ddf-379a-4824-ac7a-966025d75aff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec2f23f6-8f7e-4409-9104-7c11335e1ec2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d38ac699-560d-402d-b481-6bb62a095723"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7cab39c-0220-443f-a728-5048ae358d2f",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e4def72-88af-4837-99df-1a876e0039d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74d476e8-d7e2-4f7e-89d7-ce779d0ea1ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e3f0286-ae63-4099-8fc6-e2a969d6bd2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00c4e7bf-3ae8-4e1d-aa9e-effaa559c828"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dd4a202-7ca1-4bac-98f3-e95781821ee6",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21802c21-3f83-4509-a58c-1b9008e2a3e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8510c78e-4b5b-44d9-a549-9481bd8b3a5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8169143-7f3f-4039-b23c-1bca4a3b7fa0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a666ba0-095c-4672-af7f-5fee02b45625"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b93870f-27a4-4b3e-8f23-15ac53f95818",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "768aaa9c-4753-46d0-a38f-4ee60d65cfde",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72afa6b4-dcd6-421e-99ee-51daf7809d03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f9cef3f-d1f6-4f47-96ea-24e068e48c07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c565d8b-a3d5-4ba6-9225-c4aea103922d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13cb06d0-382e-4eae-a581-a854f4d276aa",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5c2e534-addf-441b-b3bd-feae0823a65e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9be3c5d8-7f0c-491f-9541-2c4b084d75b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2a19d8b-d52e-4660-b95d-f4e52af2fa0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aeb3f974-a8d7-443a-896d-04959d87feee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66f40eee-24e5-4051-bd02-1a8aa032a536",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b5cffac-b6cb-4d1c-8570-440d6df99077",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d4362b7-9cb2-44bc-9a99-0fa730723d20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6c90d4b-5b7b-4aaa-b285-5d87fbfad391",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62f91714-f9b1-4757-aa8a-5764751cde8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "966dc2f4-de3a-4a8c-9c25-1b1c056b6322",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71634d62-72b3-428a-8f72-a77b8ecea118",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5ff3205-59d4-4177-a9f5-4502641134fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cad304e0-4ad7-4bbc-aefd-b2755f2bdf79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47ff0ec9-10eb-48f2-952f-91ef799af5c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "736ab76a-9493-47f8-a995-3a389e3feb12",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad089a69-8482-42c0-aff4-7b8e32139a13",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42b2724d-2325-4d72-bca3-3fbff9692b5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a27f093-d177-4ade-ba05-4722c9967d92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c8a4481-8944-4599-acce-ffb3dc337283"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fd3db9d-15c4-47b5-bb01-63734d663b84",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa9a52c4-85a2-4b78-949c-ba8d149f2c6c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2f80ea2-06dd-4ac2-87c8-6697ab02f75d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cded26b5-80ea-4ef4-a6a1-482a14d45ed2",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa5e5287-8a56-4257-9f42-346950360fb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f9be884-8382-4e39-8763-eec7693885d2",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f654fb9-6847-4a50-b9e5-c2bc863f68bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5ac466e-38e5-4ce9-b570-6b7f3b22c604"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eb694e1-7f0a-452d-a212-991c2d580b57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6e4bffe-9135-46a3-97fa-ed6a0742736c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6d95de6-b94a-4514-bf31-3551d1c348c0",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab14cc1e-dbb0-4056-9df2-f8b37a8e30c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f0ef2b6-bb18-4b74-acea-f8cef5ae85f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3daa4f5b-2fe8-4d76-bc86-16968df7a3f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad9e96c2-0d51-491c-b7c4-1f5a8ff78fea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb436687-dd0e-44ff-9133-15e73ac2ab45",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89c49ae5-a06e-4b19-b6b3-c3957b521409",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c420f9c7-3ed6-4f09-8ed1-f447adefebb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c676b6c-a7d3-4c00-b86c-f128062cb713",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e603d46-d7d4-4ee3-ae68-811c75513aa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "188b4e52-de41-4efd-91fe-b154aea11cfe",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bc09196-71dd-4485-ba58-c58849105d13",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7503e615-7f49-447a-93ca-59d3157c9d07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c50e7d8-57d0-432f-b69c-93392ff3f862",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff785637-7b1e-41d4-8a76-e6aa49bd9d5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2038abcf-24d2-4659-a670-ab342159cbe8",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b197856-2586-4a88-9dae-c9a76a9a4280",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93f7ec7d-e638-4bdb-b85a-6f1050539195"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f4c7a85-d202-46ed-af77-0b83427e7f6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf1fab7b-b662-4386-937d-196fb2bf8ab0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4850d9c-b900-463f-929c-d188b42ec5f1",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd72ed0d-1323-4a04-b780-cf6282c36efa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba0eb43a-3d50-433d-ba9e-d2f9d3e49dff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "633c726a-41cc-4d9f-8c5b-25de4a25d464",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a8fa022-fef3-4488-9f36-5e4b681a6bca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a09164e-63ad-4755-af53-9f6ddc16ad5a",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "894e3856-6220-4762-9866-d3c4f5cfacf9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "341d6986-dc9a-475d-aa7b-294635a13fa1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6f7475a-1ab6-4d95-8532-c18c315d0ecc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "301884c6-211a-4b2c-942f-82a610e6329d"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "24798e4a-4811-410a-b5a0-07c86a0020c6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2da16737-d542-44b0-8cda-0b1966216475"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2088826e-4d42-456f-849c-72a100f88061",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fd67bd53-f2cb-463e-8404-a90bc2c5b6e0"
                    }
                  }
                ]
              },
              {
                "id": "3778df04-4a60-425b-9434-01c85d8a1e98",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "50e1b648-585d-4259-97b4-ff4966401333",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a93fbd3a-8149-410e-aabe-e724678488a6",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "01d4500e-fded-4d28-afa6-796d5dfcf145"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3158f8d-7206-4ef2-bf6b-2078e0909b6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7f5043e5-d8a4-4121-9dd8-664960f7574e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1362bde5-e17f-4111-ab3e-959d87b19a37",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "26500fdb-bab3-45c3-9b12-2e2b2950db9f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e104579e-7c51-486d-aa19-1ca9761caa12",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "25460b84-6c06-4738-9eed-fe255497a72a"
                    }
                  }
                ]
              },
              {
                "id": "3d81849c-fe13-46cc-9bfd-801e700addc2",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "1ea3ffc6-7a89-41c3-b87a-6e5acf77b97c",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed1984d8-1b3c-47ed-b0c3-cbac2ea220e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "aad603c1-8dc1-42d1-b1e6-b85309a315b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43711b78-067a-4466-8ef6-a491e8c2aca1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbfc8989-cc68-4d8e-be63-032fa4985177"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "63a37414-d7db-4127-a620-a4e7a9e4c08a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ab527eef-3a9c-4aa6-9b39-7aff7bdc7e1a",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "67d3e7b5-a8bb-4adc-bcf2-6af76fea45d2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "0617ab98-0b67-4309-955a-8c1c191de9a8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "517ab73a-5566-41de-bd79-35cd9ce9b21d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "09b05854-fcee-43f5-bf91-68007f5dc8fc"
                    }
                  }
                ]
              },
              {
                "id": "109888a9-c2a0-4aaf-a2f7-c262f7fc1211",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d0ffe020-ba30-4381-b45d-8de1b2f1a927",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "4f614580-0910-41d9-82a4-05544e0222fa"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "281c9c7c-7ee4-44b9-bb1a-304a9ca5b448",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e7fad22a-a3b7-4404-997b-e77adf5353df"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a0e835bc-8fcc-41af-9dd7-42e7ac538166",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "b376ef13-3441-4793-949e-0c5d928b484c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2a1708f5-6e22-416e-ae69-1c0ea1c50224",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "80a5d851-fada-4685-96aa-487cde8581e2"
            }
          }
        ]
      },
      {
        "id": "7be4933a-74f3-4e92-b7e8-70dd821966e3",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "9c300afb-ba2b-439e-853d-ef9a4a7d943f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cab381da-3291-45f2-a308-93dc1cd49dd0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "20c6ae52-9b9b-4372-be0e-63f1c55c97d0",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07d67041-dc79-4d67-b673-1ac35630b799",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "7d3c3ff5-6f55-423c-8bdd-7b0835f9a178"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cfa6adc-04bb-4a3f-9fdc-4167e7be9c3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ffc0ded1-e1a0-499a-98b7-02355338171e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a2f8f715-1c39-4d62-b28a-acc291ea1880",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8732fa46-60e1-4fe1-8ea3-be2a276e5ace"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f495efc0-c131-45bc-84a4-e9eaacdc36ae",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "06e56e2c-29ba-4d49-bb00-42de72d4026d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cc23d3e9-fcc5-4740-b3d3-85f2408e727b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "7e6b46f4-ba29-476a-be03-b4998a755c4d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "53a8f5af-4e1b-46f6-8ec5-dfc6e1ad9498",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6f3fa45c-8758-43f7-9143-b3113644f6b9"
            }
          }
        ]
      },
      {
        "id": "e278b281-42c1-407e-b02d-fd3f0c852bcc",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "7dd31c80-fca3-44d3-9030-9c83dd73b5bd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5d2a2d23-6e1a-40d9-befb-2327750a75d9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b8964349-eba7-4ed3-a5e9-219d1dc94eb4",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be435621-dade-4647-b5da-3d761ddea275",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "48de7f22-3656-4754-9bf1-995bcf4f2e81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad536e69-1073-4e5a-81be-50dcd4cfdf0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "077e2383-5960-4e87-935e-bc051577012c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "84e1e01e-c735-4809-9bc1-fa17aaeca4a1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7c028dbb-bb1a-45fc-95bf-c02c8746f2c3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c147229a-29c7-4bf1-bbdf-868d5a432119",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "254400f4-1987-49a2-8d6d-567ed5b00196"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "28290ea2-5e1f-4b6d-851d-6fab64866c88",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "bb88457e-78d9-4bf3-af5c-b695797abc95"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f64bca9c-ef42-4c94-aa64-2daf6f304536",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e5a53c85-a8be-406b-9317-1887e89c5475"
            }
          }
        ]
      },
      {
        "id": "10222c0e-3b87-4ff8-9748-3adb13187d77",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "ae22de04-c45f-4c1f-b195-39c653a9814e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d746b338-c0e7-47c5-a598-0108e38e1e23",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "16cbcd4c-d3da-45ec-99ac-1f1e49d52346",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b752ee5-a475-4687-9995-bc7a5ec73613",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0766fda6-5c02-46ab-b002-2eb1c0dad936"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d10f1883-7b1d-45b3-86c2-d0ae5fcb3bfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "24b5a284-1abd-4cbc-ab79-1f205ee06deb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "79954bb8-8f6f-4d70-a16a-69ea49f93981",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c320947f-ad2c-4307-89e1-b610e83e05a3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2ea2963f-09ca-4e30-9175-e0f5d5273ef2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4e2fe19e-a30b-41ae-9594-d3babbdc53f1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "05884c4f-4ea1-47a5-bb93-c5a8a8855ee5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "71d01f4c-d94b-4145-9393-e0c38d6c20c7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a8b450df-2b17-4139-baca-7cd4f7d38d2c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f5e21efd-7448-4b3b-aa04-d3bf3b240257"
            }
          }
        ]
      },
      {
        "id": "621a8e2b-2b40-447a-8f16-e9051d0a2ebf",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2895ccf3-2f92-40f5-9d9e-9a059d036a04",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fa26afac-6001-4023-b9a2-355236d5895d",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "de68fd76-106c-4de3-8dd4-6d274099fdab",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e8638831-0bc7-42c4-b24c-ba1fcfd20ce9",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "55b26570-78fb-45dd-8efa-b599f0f750cf",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 15.291228070175436,
      "responseMin": 5,
      "responseMax": 351,
      "responseSd": 36.06236450344824,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1698885218306,
      "completed": 1698885231556
    },
    "executions": [
      {
        "id": "80378b9d-47ae-4bd0-b5ad-0898a3947172",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "e4e1867c-9782-4924-b373-613b6e5b7553",
          "httpRequestId": "15ded8b2-3335-4559-aeb2-efde4ff49f67"
        },
        "item": {
          "id": "80378b9d-47ae-4bd0-b5ad-0898a3947172",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "8e234d41-c782-4592-8c8e-6e71eccab66d",
          "status": "OK",
          "code": 200,
          "responseTime": 45,
          "responseSize": 0
        }
      },
      {
        "id": "6e5c7932-4acf-4f9c-a10e-c69d79ac33ca",
        "cursor": {
          "ref": "a1b80705-053c-4537-9681-fb9cd0829469",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "66225ab0-be7e-4c17-8bc4-c3213d97a75c"
        },
        "item": {
          "id": "6e5c7932-4acf-4f9c-a10e-c69d79ac33ca",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "16efa8d6-4bfb-4a60-9cd2-ca2ad93c6a5a",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 0
        }
      },
      {
        "id": "ed0a822c-7201-4b1a-b9a8-a713531293b1",
        "cursor": {
          "ref": "9fa722a2-3c20-4ce7-87df-6c298df91637",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "a0678473-94fa-41f4-bfd6-28701ecae77e"
        },
        "item": {
          "id": "ed0a822c-7201-4b1a-b9a8-a713531293b1",
          "name": "did_json"
        },
        "response": {
          "id": "118453d4-20a1-478a-9e3a-aa33d591c9db",
          "status": "OK",
          "code": 200,
          "responseTime": 226,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59e6d274-9762-4139-bfa2-1fae8d2458cb",
        "cursor": {
          "ref": "4c6eb138-98e0-4543-8955-24039f9aae94",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "cc037e5c-bad8-4cc1-8eac-e4f97cb636f3"
        },
        "item": {
          "id": "59e6d274-9762-4139-bfa2-1fae8d2458cb",
          "name": "did:invalid"
        },
        "response": {
          "id": "1e91ccff-3a58-47d9-9bc3-ff12cb5354a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59e6d274-9762-4139-bfa2-1fae8d2458cb",
        "cursor": {
          "ref": "4c6eb138-98e0-4543-8955-24039f9aae94",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "cc037e5c-bad8-4cc1-8eac-e4f97cb636f3"
        },
        "item": {
          "id": "59e6d274-9762-4139-bfa2-1fae8d2458cb",
          "name": "did:invalid"
        },
        "response": {
          "id": "1e91ccff-3a58-47d9-9bc3-ff12cb5354a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51355c2b-ea8e-40d9-94dc-2138af1dfb53",
        "cursor": {
          "ref": "45c1ed5c-934a-4656-974c-8b0a0086a048",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "4de95be9-af07-47dd-b9d4-547e30acdd4b"
        },
        "item": {
          "id": "51355c2b-ea8e-40d9-94dc-2138af1dfb53",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "30486f8a-268c-4d82-b9bf-dea6155f3471",
          "status": "Not Found",
          "code": 404,
          "responseTime": 108,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f401b060-fb52-465f-8f6c-38ebf16bfad3",
        "cursor": {
          "ref": "815e326d-57ba-4a15-893f-3e30ff55b702",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "a07ef2b1-f0d7-4fe8-9679-0e98606e687f"
        },
        "item": {
          "id": "f401b060-fb52-465f-8f6c-38ebf16bfad3",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "87f9b695-31f8-4e85-9999-6896e367a7d2",
          "status": "Not Found",
          "code": 404,
          "responseTime": 9,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26042ed1-a1e5-400c-a729-869e342ca3bc",
        "cursor": {
          "ref": "9b0148da-bbfa-4c7a-8849-3609bc547a08",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "20d7dc10-4341-4902-8213-75af5ef9246a"
        },
        "item": {
          "id": "26042ed1-a1e5-400c-a729-869e342ca3bc",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "16f1aeee-b4f2-4443-aefb-585514002420",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7c863cc-1fe6-4350-815f-f08876e65ca4",
        "cursor": {
          "ref": "168c9ce8-04b0-4a48-9780-b9eb1bd4f135",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "6d0b7ea5-c56a-4644-a586-fe041ae08ec4"
        },
        "item": {
          "id": "a7c863cc-1fe6-4350-815f-f08876e65ca4",
          "name": "identifiers"
        },
        "response": {
          "id": "6782589c-05d6-4d4b-abd4-f9a5a5283946",
          "status": "OK",
          "code": 200,
          "responseTime": 231,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06e6b162-cd98-40bf-ac3f-c1354df5c820",
        "cursor": {
          "ref": "e4978f6c-c14d-4d1e-94ec-3ced8d3ffd35",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "3cee3dbc-d60a-4c96-a0b1-38f9deffa6f1"
        },
        "item": {
          "id": "06e6b162-cd98-40bf-ac3f-c1354df5c820",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "24d68540-321b-4daa-8786-f23aee62a018",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da4a6c91-5888-44d9-bab4-4bf0339aeeb7",
        "cursor": {
          "ref": "6c7e70b5-58d8-465c-98bb-1452ca5f0d19",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "ccbc5225-51bd-45b2-8105-92142b5aee93"
        },
        "item": {
          "id": "da4a6c91-5888-44d9-bab4-4bf0339aeeb7",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "6131c2e5-6e59-405f-b5ae-0582fec00e4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e00ec81-17f6-4675-92b9-dfb155aa322f",
        "cursor": {
          "ref": "5e3ec4fe-eb6b-4354-b21f-3969fb61a46e",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "96f174b3-6e75-4591-b40b-ceb82162a7e6"
        },
        "item": {
          "id": "3e00ec81-17f6-4675-92b9-dfb155aa322f",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "ec8319a2-b57c-420e-92b6-cb5b78e3b02f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f3f8395-f92b-479a-97b4-7ded3bdd7198",
        "cursor": {
          "ref": "1259e63f-23ea-495c-b94b-544364e907f7",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "74ffa50e-7654-476f-88f3-ecbcec786ec6"
        },
        "item": {
          "id": "4f3f8395-f92b-479a-97b4-7ded3bdd7198",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "55e75dff-537e-4f62-afb6-63dc2816f1e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95a4f033-fa3d-4d57-aeff-02f37ffaa24a",
        "cursor": {
          "ref": "673e2b5d-fa1a-429c-a672-860151d96e76",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "081cb05b-eb2b-4541-a906-922e98a91eb9"
        },
        "item": {
          "id": "95a4f033-fa3d-4d57-aeff-02f37ffaa24a",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "8918ed31-c160-4c52-a9d5-377cc9eef886",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e936d84-eb8f-4298-85ca-b68aab81f567",
        "cursor": {
          "ref": "6455427f-6749-42a0-833a-7fe24eaa3d5b",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "f430947a-5fdb-44c1-9aa8-ea1aea54421a"
        },
        "item": {
          "id": "0e936d84-eb8f-4298-85ca-b68aab81f567",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "4783e25b-af27-45b6-bffa-7ab4e21e160d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc48575f-4425-4541-82b6-7d97aa8f263b",
        "cursor": {
          "ref": "1535ec28-5025-4df0-83df-cda1303fe151",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "15beff62-ae55-4799-8757-0596d464e986"
        },
        "item": {
          "id": "fc48575f-4425-4541-82b6-7d97aa8f263b",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "cb239cb8-ec61-4f0b-b150-7a0235a5b27f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "707e106f-aea3-4e70-849c-db73287651f1",
        "cursor": {
          "ref": "b884cad7-b96c-4217-a2d7-a40d1fb9aa6b",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "bc902007-7015-4b78-bc57-0f1135e69cf5"
        },
        "item": {
          "id": "707e106f-aea3-4e70-849c-db73287651f1",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "d20267be-9550-4903-b7d4-a1161a3511db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e03dae47-e201-4b0a-ae8f-10135c106f04",
        "cursor": {
          "ref": "0f63115a-96c8-4f57-b75c-8bb3934a1f3a",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "db96ef77-9088-44b4-9e5e-d76c9587269e"
        },
        "item": {
          "id": "e03dae47-e201-4b0a-ae8f-10135c106f04",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "e847cf1e-f34e-4ebf-8171-62ebcb8ce29e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "263105c4-f35e-457a-a25e-9a6fb618afd2",
        "cursor": {
          "ref": "1810760e-3ed4-401f-a783-ab7c55830697",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "b4de46c0-1aee-4c38-aa07-0e3fd281ffc4"
        },
        "item": {
          "id": "263105c4-f35e-457a-a25e-9a6fb618afd2",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "d2d52549-b44a-48a1-bb93-fbdb6a4c891e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "409c6c17-9036-4452-9443-dd573ac5b9f7",
        "cursor": {
          "ref": "aa5f1029-0d7c-4a1a-bfd2-10fa4cee3bb0",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "18224422-abe6-471d-b084-5b876b986a26"
        },
        "item": {
          "id": "409c6c17-9036-4452-9443-dd573ac5b9f7",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "e04b6a68-303a-44f2-9f32-3924774ee807",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d22cc4b-fc2a-4465-b9b5-98a1f6db7e3e",
        "cursor": {
          "ref": "bd6ac266-dc4f-47a0-a1cb-208740aef673",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "a7aee13e-8ae4-4200-bb27-54ba32b9c145"
        },
        "item": {
          "id": "5d22cc4b-fc2a-4465-b9b5-98a1f6db7e3e",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "f0715499-0af1-45af-b6ac-9ac00fac2db3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "195de12d-3476-4e33-ab9e-c9e5113a3ef3",
        "cursor": {
          "ref": "f5f48042-2db5-4ff0-9487-c5215373909b",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "a90ebbad-49c8-4ddd-bf4d-a60e04ea192c"
        },
        "item": {
          "id": "195de12d-3476-4e33-ab9e-c9e5113a3ef3",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "ac2c091c-d803-474c-aa2c-2385baf3f5d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10ccb4f3-e02d-435e-999f-24fead217dbb",
        "cursor": {
          "ref": "9f307e02-2518-45c4-8bc0-192d1dfdd44a",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "2923c353-b913-4d07-85eb-4589f1db7aed"
        },
        "item": {
          "id": "10ccb4f3-e02d-435e-999f-24fead217dbb",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "9e92b228-af90-46e9-b0d6-6883510be43d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf890382-361d-42f4-9f81-2a75c0d88fdb",
        "cursor": {
          "ref": "997d9588-89fa-43f2-aade-29c3c592eeff",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "b5967e3b-9bde-46a1-a2c4-46a959dccb2a"
        },
        "item": {
          "id": "cf890382-361d-42f4-9f81-2a75c0d88fdb",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "18644ef3-69e6-47f1-939d-26c4de1de706",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9a2d1a4-7203-407d-844e-0b2f26fc2ba1",
        "cursor": {
          "ref": "7d6aa9ec-fb8b-4b1a-935c-a5459d879eaa",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "ea85937f-30df-4c1d-be4c-c349bb5c3f68"
        },
        "item": {
          "id": "a9a2d1a4-7203-407d-844e-0b2f26fc2ba1",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "3bfc1984-f7df-43ae-9c5b-b3a7b780d474",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0021775b-3bab-4588-8961-29774bb607e4",
        "cursor": {
          "ref": "117b5cb7-455a-4c2c-ae7c-fd5377481c34",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "3a5ee4f4-fb62-43b4-8b9b-64be618591cf"
        },
        "item": {
          "id": "0021775b-3bab-4588-8961-29774bb607e4",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "30ac5d2f-ddf6-40e6-bcab-57eeb9fb1918",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "694ddc41-6a9d-47a8-9734-3a560ce40786",
        "cursor": {
          "ref": "0d84d7b9-239c-4174-945e-407986bb883c",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "6057106e-46b6-4384-83c7-47d15b3b49cd"
        },
        "item": {
          "id": "694ddc41-6a9d-47a8-9734-3a560ce40786",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "137f994f-019c-45f2-8be7-5780691c8936",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34944c2a-d542-42c0-970b-8d12ea6c9c52",
        "cursor": {
          "ref": "a1d54afe-7136-4a3b-9a68-065920dbad35",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "46acb836-21f1-4856-af39-48322c2fd65d"
        },
        "item": {
          "id": "34944c2a-d542-42c0-970b-8d12ea6c9c52",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "55ad4fdc-307b-4a94-b644-e0cef2a1a264",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "561c67cb-c7a8-4a02-8369-3e42e59a7690",
        "cursor": {
          "ref": "f19d8e4c-87d7-4e1f-8726-b1bb68f44162",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "facde55b-e402-4937-af7e-bf6c64f9dc82"
        },
        "item": {
          "id": "561c67cb-c7a8-4a02-8369-3e42e59a7690",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "b8c726a9-e426-41ba-8abf-c8eae96f8608",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da11e6bb-1abd-4389-9bd3-99eee719ec67",
        "cursor": {
          "ref": "c2ab19a4-3261-4149-9c44-c09efe1dae2a",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "83eedb8d-1bfa-47ef-9596-a49d0187376d"
        },
        "item": {
          "id": "da11e6bb-1abd-4389-9bd3-99eee719ec67",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "864b7990-d74c-4528-828a-118fb859f585",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3482ab5b-dff7-4d2a-963a-1430d5826c6d",
        "cursor": {
          "ref": "73540077-1f94-4472-ae55-0c9d90f8f42d",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "aef3535d-9118-4a7f-a95d-d5e45587fc64"
        },
        "item": {
          "id": "3482ab5b-dff7-4d2a-963a-1430d5826c6d",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "0e3a03fa-6e44-499a-8038-ddb4339ee1ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed2f9ada-3379-4631-981e-93e99b86c2e6",
        "cursor": {
          "ref": "fffabe6a-534c-4398-b64c-d5021fe066df",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "54ba71a5-6589-4851-b148-d81afb7c64f7"
        },
        "item": {
          "id": "ed2f9ada-3379-4631-981e-93e99b86c2e6",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "859d4267-7e99-4ceb-803c-7f6632dfbdcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e993faa-ea0a-49b5-b71b-f6a0e6264233",
        "cursor": {
          "ref": "5a730399-8c50-4f2d-b219-47caf7cc66c2",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "81c257f4-d9c6-4157-acf1-02c25dec97b7"
        },
        "item": {
          "id": "8e993faa-ea0a-49b5-b71b-f6a0e6264233",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "2ca85c5f-c22b-4d47-904a-fa671af0a794",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "444ab72c-9785-4680-b7d4-f81c7291f6a9",
        "cursor": {
          "ref": "b255c5a0-abad-4f8e-82d6-55d094c15f5b",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "78940d45-a64e-409d-9cd6-57e01788e0e6"
        },
        "item": {
          "id": "444ab72c-9785-4680-b7d4-f81c7291f6a9",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "eadd7232-5cf9-46a3-98e3-460fc7e2185e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acf4fbe2-4ec6-4efc-a30a-03c2dc84468e",
        "cursor": {
          "ref": "88c8f250-0733-4873-a54e-f05ef8b46a96",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "558ad2cf-5a9a-48a4-8f92-0029c0421cba"
        },
        "item": {
          "id": "acf4fbe2-4ec6-4efc-a30a-03c2dc84468e",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "dcccdb63-5a63-4abf-8f24-28d4459beb43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8fddb4b-16ad-4512-b752-cbda69131769",
        "cursor": {
          "ref": "638301bb-128a-406a-bd70-2fd8cd52930e",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "beacce00-8b2d-41f4-a77f-73526553c028"
        },
        "item": {
          "id": "b8fddb4b-16ad-4512-b752-cbda69131769",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "e3e1333e-51c1-45e2-83ba-c2c1c993d049",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cea409e-78c2-46f6-87b6-4c36dd1182d7",
        "cursor": {
          "ref": "fdbf2184-f93e-4ae0-b341-deafb87167c1",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "f765f03c-2dae-4f30-bcb7-df33919d14b1"
        },
        "item": {
          "id": "3cea409e-78c2-46f6-87b6-4c36dd1182d7",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "b0f87221-6893-4430-9b9d-15132beb3ca5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6172995a-5367-4544-8c3d-45f4aed36ac5",
        "cursor": {
          "ref": "1f9f2d98-e1c2-4427-b4dc-9c2bd3104798",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "78d4c2e4-170b-4244-885f-9a19510d10f6"
        },
        "item": {
          "id": "6172995a-5367-4544-8c3d-45f4aed36ac5",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "488bd018-3a9c-42e1-85af-1451ab10d44f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caee1ca3-9a86-4c18-85d1-199ebabe0c30",
        "cursor": {
          "ref": "d7db7a86-1e46-407f-91bb-c5041780f056",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "b56c7fea-f63f-448d-accc-f63c86c8d708"
        },
        "item": {
          "id": "caee1ca3-9a86-4c18-85d1-199ebabe0c30",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "f3accbb2-3f66-4d8f-9b5d-3636cb2efeeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17f9f849-2da0-4851-976f-c4f824c9a6f3",
        "cursor": {
          "ref": "ee48c1cf-b63f-4368-8180-aef55ae2c259",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "4732e92f-7cff-4879-ba88-fc443b7e210a"
        },
        "item": {
          "id": "17f9f849-2da0-4851-976f-c4f824c9a6f3",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "872c390a-6566-4b48-9fa4-9530855aacca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aece275d-e7fe-4aa2-a727-aa207743c3e1",
        "cursor": {
          "ref": "2030de99-123b-4085-828a-cc32038724ee",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "5f210e5e-dec8-4e80-bf1e-b00c32a8a3b9"
        },
        "item": {
          "id": "aece275d-e7fe-4aa2-a727-aa207743c3e1",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "86011099-1478-48aa-bd3a-301e8f1942de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed1648d5-2685-49ee-9e3e-8e12179e1d2b",
        "cursor": {
          "ref": "20b5fec2-0350-4c22-a496-700440ff31b4",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "550634f1-51a8-411b-afaa-7767b966e365"
        },
        "item": {
          "id": "ed1648d5-2685-49ee-9e3e-8e12179e1d2b",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "1693e546-dd29-4ea5-ab0a-2be32728f948",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a407dd61-89b6-439d-8e9b-6e363d825165",
        "cursor": {
          "ref": "679f9b61-7f6a-4d4b-9423-4b3e1822ca43",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "fa4eb392-bd35-420a-bf67-fbef40871a6b"
        },
        "item": {
          "id": "a407dd61-89b6-439d-8e9b-6e363d825165",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "2c776a89-7c21-4450-a548-a7e8b77b4840",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66d8a333-9318-40e8-a093-12059e742b77",
        "cursor": {
          "ref": "f342dc2d-994e-4ace-8cca-1f8f28d028ab",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "1f2170dd-7409-4ced-b742-ee3b68ab17c2"
        },
        "item": {
          "id": "66d8a333-9318-40e8-a093-12059e742b77",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "38a12db0-22ff-4315-a1a4-33c460cfdfe6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c1df306-bd3c-4c64-a76e-658ba4a5ee30",
        "cursor": {
          "ref": "9d40a58c-5afd-4c55-9bac-54c803c8fbef",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "2db808a8-2dee-4995-8cf6-44569dff8ae6"
        },
        "item": {
          "id": "8c1df306-bd3c-4c64-a76e-658ba4a5ee30",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "32331637-324b-4da4-b851-a1a35078ae95",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 34,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2b7a822-40f6-42a8-85ee-6188714cab3a",
        "cursor": {
          "ref": "b3f9387e-b9c5-4f17-b077-60ac7f787948",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "f269b7b0-8d5d-482a-91f9-3ebdfedd480b"
        },
        "item": {
          "id": "f2b7a822-40f6-42a8-85ee-6188714cab3a",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "58459a72-6445-46cc-ba0d-20a52c8d37fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92b812eb-1812-4a76-a418-1ba6fd1ca72a",
        "cursor": {
          "ref": "b1ffb4ef-c2c0-4616-84c2-9c186c0387e6",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "101ded0c-6d3f-410d-8044-6a4e1c3fd485"
        },
        "item": {
          "id": "92b812eb-1812-4a76-a418-1ba6fd1ca72a",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "4083fe87-6117-48a4-9c87-39aa4533f367",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7178b73-3f1d-4f8f-bd0c-920c57fade6c",
        "cursor": {
          "ref": "59d2f227-88e9-493f-b2f4-9d4858ea59f7",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "0679c6f5-38b1-4972-b741-06f948837d00"
        },
        "item": {
          "id": "f7178b73-3f1d-4f8f-bd0c-920c57fade6c",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "aeb3c30b-86ac-49a8-b713-20126243f324",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02178957-65bc-4997-869f-c8eb9f573283",
        "cursor": {
          "ref": "e3db7f4d-e040-46f0-ac62-b6616115e6c7",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "5bb6a62b-95ed-4b04-b6e4-2f8fd51baa92"
        },
        "item": {
          "id": "02178957-65bc-4997-869f-c8eb9f573283",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "7a7f70a3-870e-4b62-b4a8-bbc6a92803eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c71366c1-762b-446b-83ee-4e0553c29b82",
        "cursor": {
          "ref": "9710b06b-7f21-49c1-b7be-ac7d52c4f490",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "a8d88f38-f4f9-49b4-af35-11b6aedbd135"
        },
        "item": {
          "id": "c71366c1-762b-446b-83ee-4e0553c29b82",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "645aafd1-f902-4fe3-bf48-aef9aa674c83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "276a741d-9ebe-470a-868f-d29479c34ae4",
        "cursor": {
          "ref": "e7dd8837-70d6-4089-a17e-0036a6f017ec",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "e4bea124-3274-4426-bef2-c2c7f19777eb"
        },
        "item": {
          "id": "276a741d-9ebe-470a-868f-d29479c34ae4",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "0f5d55ec-bc52-42e8-8353-31d571da2ce3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff75dc62-30d3-46f6-81d6-e161c05bd976",
        "cursor": {
          "ref": "61250425-adc6-47f8-96a1-8bb4e5472065",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "ab9ecad7-fb32-4d75-a934-501f623e4523"
        },
        "item": {
          "id": "ff75dc62-30d3-46f6-81d6-e161c05bd976",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "6746353f-0f50-456e-a979-c3f5ddc3c841",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 25,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eac09d9d-8661-4ba0-8239-d8afba56c547",
        "cursor": {
          "ref": "ab81aa2e-036c-4bb2-a3f7-69b8daf55f26",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "8765266a-8c57-425e-8422-30202c214dea"
        },
        "item": {
          "id": "eac09d9d-8661-4ba0-8239-d8afba56c547",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "a086d159-4445-40f5-a989-22dede855a56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "915ad01e-63c8-4e42-8368-01801cdfb6bf",
        "cursor": {
          "ref": "8424c92a-5897-446e-9b58-939af0552d5a",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "997d8718-caa9-4408-8d34-7d104df98153"
        },
        "item": {
          "id": "915ad01e-63c8-4e42-8368-01801cdfb6bf",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "ebc29058-595d-4755-a1d3-49b4de3331a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b170210d-a3d1-433b-bfeb-9301f882aa07",
        "cursor": {
          "ref": "13fcf224-9245-4053-bcc6-d129363d59ef",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "bb509f92-4e6c-4a7c-89d9-d9a2fd95228f"
        },
        "item": {
          "id": "b170210d-a3d1-433b-bfeb-9301f882aa07",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "c1bfe424-ca7e-478b-83eb-32f76838320c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc09deeb-c315-4dc2-a6e3-067264668529",
        "cursor": {
          "ref": "855c25b2-611d-4e31-b318-e4a0e6779050",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "863db6f1-87b4-4858-a7e8-d0ed8b372ddd"
        },
        "item": {
          "id": "dc09deeb-c315-4dc2-a6e3-067264668529",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "82266b33-2137-491d-ab04-894c73ef401d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "561a7300-1b3a-4d9a-8582-b03aef0feace",
        "cursor": {
          "ref": "35d902fb-b7e8-4c2a-8ae0-648320ed8a88",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "7bc4bbbe-73a7-4c3c-962e-c0a3812988a5"
        },
        "item": {
          "id": "561a7300-1b3a-4d9a-8582-b03aef0feace",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "a0479cec-651e-4595-aaf9-06e3387e0144",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b83c4103-7310-4d4b-a6ff-2a68fe15c137",
        "cursor": {
          "ref": "95d6b603-5899-442d-805e-a925b83433d5",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "746f7ad3-38b6-46aa-a288-006227d6388f"
        },
        "item": {
          "id": "b83c4103-7310-4d4b-a6ff-2a68fe15c137",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "a3db93c2-2399-4c77-9305-4b52490cba27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d627e1c-ed2c-4617-a3f1-be4860c07757",
        "cursor": {
          "ref": "d9c8eb2f-d901-43fd-9ac3-f0ecd90a170b",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "cfca0f4d-c152-4a09-aea9-3fe8a707d24f"
        },
        "item": {
          "id": "5d627e1c-ed2c-4617-a3f1-be4860c07757",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "93d13da6-6c1d-4c98-baf9-4522c7810372",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "141c5c37-14b3-482f-a179-24ea32875f46",
        "cursor": {
          "ref": "32c5d272-4aca-4f14-98f0-53c46c0eb7b2",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "f04b5b52-d118-4563-a600-e07fd7d4088c"
        },
        "item": {
          "id": "141c5c37-14b3-482f-a179-24ea32875f46",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "76d90f4a-4259-4b2d-ae4c-9f13a6780bc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0845350e-6dee-460a-ba03-5bbf39958b4c",
        "cursor": {
          "ref": "d8f6f019-7cc3-4617-925e-8aa4d10b2345",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "e6adc7fd-e953-4b99-a539-f65abf572c78"
        },
        "item": {
          "id": "0845350e-6dee-460a-ba03-5bbf39958b4c",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "bf2a6354-21ed-41c2-b734-c5a23d53fb53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e1099b0-a4a4-4307-a6ff-7210cbe1778e",
        "cursor": {
          "ref": "280f3a24-874e-4dfa-9c5b-f3a80670a2d2",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "728947ae-c08d-471a-916b-225c3cc1a1e8"
        },
        "item": {
          "id": "6e1099b0-a4a4-4307-a6ff-7210cbe1778e",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "8bb551e2-da9b-4f1e-8b60-4af5b9efaa07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac9015cd-84a8-4a9d-ae82-4c1c1a1793f7",
        "cursor": {
          "ref": "eea0e43a-be4e-479c-934c-a0361a511432",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "4d667a0e-f997-4f7f-a2c4-131869074157"
        },
        "item": {
          "id": "ac9015cd-84a8-4a9d-ae82-4c1c1a1793f7",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "5d5917db-4b7d-49c5-8d24-49de36820761",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d624184-d175-41f2-bce2-dee18393a5f5",
        "cursor": {
          "ref": "e8fa8176-8d86-43a2-8741-de1f49c4e101",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "5acde552-b9a4-4939-b7f9-86d67b2b0a1c"
        },
        "item": {
          "id": "3d624184-d175-41f2-bce2-dee18393a5f5",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "80d3fa97-bf8b-40d8-852e-c86d05d3bfe2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "191c8a3c-0d66-43a2-a174-24f12c16247d",
        "cursor": {
          "ref": "e3e29b9d-c8a5-42ff-a1b4-396dccb2f4d4",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "2ce9e617-a964-4d99-a3a5-34c651d63bd6"
        },
        "item": {
          "id": "191c8a3c-0d66-43a2-a174-24f12c16247d",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "e4fb04f2-605d-4ff9-ba33-20f2130bf4f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77f23bb0-0213-4418-919d-fa49cb371505",
        "cursor": {
          "ref": "0f0a0287-a428-41fa-bca5-68e6d5151893",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "e75fab8e-d3fe-43e6-a867-7f2c51c18e4b"
        },
        "item": {
          "id": "77f23bb0-0213-4418-919d-fa49cb371505",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "9dfe28b0-023c-4656-8907-7da7da58c389",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c97de3a-0e99-45f4-aa17-89c94c5f4e3e",
        "cursor": {
          "ref": "ceebd178-c483-4258-b9a8-c2c99feb346f",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "e2581f37-32dd-42b1-870d-6c109cb0024e"
        },
        "item": {
          "id": "8c97de3a-0e99-45f4-aa17-89c94c5f4e3e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "1c979053-fc82-4cb6-9895-8fa2f5db62d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ca7fcda-0a8b-4adc-a983-09b05b5eb97a",
        "cursor": {
          "ref": "97c9e5c1-f186-414c-b387-4601f60b97d1",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "31107981-d907-4580-8f29-015890c40888"
        },
        "item": {
          "id": "5ca7fcda-0a8b-4adc-a983-09b05b5eb97a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "58617ac0-a99e-46a6-aa28-0c1e06556af3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3876191-155a-4c30-b9ad-6d691492c2f3",
        "cursor": {
          "ref": "818554f1-54c0-462d-9e5e-8b48df77e14f",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "6dbf4645-fc06-4b6f-ad6c-1beadf73d0b8"
        },
        "item": {
          "id": "c3876191-155a-4c30-b9ad-6d691492c2f3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "abc07a52-b83c-4462-8734-420ffa2cdce6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68c13a50-14d1-4b55-b19a-4ccbdae0a491",
        "cursor": {
          "ref": "6c635822-8f9a-45dd-94c2-79e4ce8fd610",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "394ba493-7316-4867-a3d7-8b9d0dcce2f0"
        },
        "item": {
          "id": "68c13a50-14d1-4b55-b19a-4ccbdae0a491",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "b8a70196-6660-4b34-9e4e-97803d25bd8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b936fddd-75d5-47af-90e7-5a7cc612a536",
        "cursor": {
          "ref": "b940ca0a-6363-47ba-a6e8-5c424ae8a197",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "6c42b28a-635e-41af-b351-83412dd17899"
        },
        "item": {
          "id": "b936fddd-75d5-47af-90e7-5a7cc612a536",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "a94ae506-0e4f-4e19-a136-e2d894873565",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "171399f9-de3f-4f5f-9da9-7fd8d1fcc6a7",
        "cursor": {
          "ref": "eff14d0a-075a-4ff9-a972-2660ac06fc5b",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "c019c5ae-f67c-4329-82f4-971a0e8f7347"
        },
        "item": {
          "id": "171399f9-de3f-4f5f-9da9-7fd8d1fcc6a7",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "cdace238-0ade-48c5-aa57-0e254b6bb608",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5081675-addc-494f-b8a1-420f82d9d871",
        "cursor": {
          "ref": "ba8cfd8b-0a7e-47b1-b5dc-4d0ca5b251c8",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "ea82fa46-717d-46be-b64e-a3d9848ed81c"
        },
        "item": {
          "id": "e5081675-addc-494f-b8a1-420f82d9d871",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "3a2f822d-b9b9-45c1-8dbc-168e2d08f54d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49489d9a-daba-409e-bd78-a98be67b5d0f",
        "cursor": {
          "ref": "804d6ca0-b202-4d04-8ee8-99b3620a3ee4",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "88ee752a-9b41-4627-b9e2-00fd2dc76c50"
        },
        "item": {
          "id": "49489d9a-daba-409e-bd78-a98be67b5d0f",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "2b73b4b3-9733-4663-8f0e-8486d647c88f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bdbc58d-2f53-451c-8d3e-1fe84fc9785f",
        "cursor": {
          "ref": "269d0348-b2d3-4fcf-a70b-e6d12b635af3",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "6af48333-d4b4-480b-a8f7-df2f67fa0c6c"
        },
        "item": {
          "id": "8bdbc58d-2f53-451c-8d3e-1fe84fc9785f",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "85e396ea-4947-4db4-a45d-fb5c1234a166",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06e8e39c-45d7-4c50-bf21-b3b2a49ebabf",
        "cursor": {
          "ref": "0c4fd74c-c098-445d-96b2-f5937092fdd3",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "e5052e2c-4d00-4e0a-901f-502c104de1a0"
        },
        "item": {
          "id": "06e8e39c-45d7-4c50-bf21-b3b2a49ebabf",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "afc77a87-1fe3-49ef-bc5a-67cd2b444b1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67c7a243-c2cc-4c4a-a3d0-e48716d792be",
        "cursor": {
          "ref": "aad9efa4-1393-4078-bea3-61c99ed08137",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "263b4022-a51b-40ca-b699-8efbc9a75149"
        },
        "item": {
          "id": "67c7a243-c2cc-4c4a-a3d0-e48716d792be",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "b6f29079-8c2b-4ccd-b000-024bd8663902",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b65bbd1c-06dc-4d68-bffc-81b9ee158e6c",
        "cursor": {
          "ref": "63d1313c-acfd-40f4-8a8c-163e0c0fa04e",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "21df94df-ba8a-4366-99a1-eff88ce53cf1"
        },
        "item": {
          "id": "b65bbd1c-06dc-4d68-bffc-81b9ee158e6c",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "6c95e739-7779-45c7-af67-21bf53df1bcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69cf5f8a-5a39-43da-a8f8-e56a44c37cba",
        "cursor": {
          "ref": "73e9f83d-ec8b-454f-9d5e-59cf360963eb",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "cff9aa2f-6946-4b91-8a0e-7a26f3550dbf"
        },
        "item": {
          "id": "69cf5f8a-5a39-43da-a8f8-e56a44c37cba",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "9e60c9e1-427f-408b-a0d7-d0fd6786833a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2847bae8-4137-4558-b322-1a1895bd687b",
        "cursor": {
          "ref": "828174a2-05dc-4b21-bd02-2c4dd04cbd37",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "fa74a947-56dd-4f6a-b744-83a51e3c6df9"
        },
        "item": {
          "id": "2847bae8-4137-4558-b322-1a1895bd687b",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "1e970d6b-ca62-40e6-b391-6661f3566bfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78dd1287-f7de-47fd-b572-c9d4e3d6c121",
        "cursor": {
          "ref": "59d25290-5639-400b-ab21-7d83264bdeda",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "e8f2dac5-0ab3-4d52-bab1-25c73810a46d"
        },
        "item": {
          "id": "78dd1287-f7de-47fd-b572-c9d4e3d6c121",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "ab4aa1e2-1ad7-444c-9b31-515dcd23d599",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4081ca42-98a4-4514-8b3e-789018b9cafe",
        "cursor": {
          "ref": "1990279b-8539-46e5-bbd6-beda73a36e9b",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "e0a53b0b-ecb6-4955-8cee-750f1e2f0cf0"
        },
        "item": {
          "id": "4081ca42-98a4-4514-8b3e-789018b9cafe",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "713afd9b-a726-4acd-915e-748fba50eed1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0761e8ff-dc9e-4af7-ab7b-78a02bf35d75",
        "cursor": {
          "ref": "a8ed1be8-f6ff-4127-9e9e-126320a11b98",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "6b286302-693f-46f7-a3be-3f95d048da56"
        },
        "item": {
          "id": "0761e8ff-dc9e-4af7-ab7b-78a02bf35d75",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "0869c7ba-90f6-4883-b78b-36b6933a015c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a728a652-3cd5-4c57-9c52-949678a3627e",
        "cursor": {
          "ref": "c0a32fb5-4489-4298-83dd-abe6d6dee0b7",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "94221fbc-8041-4ef2-8b81-de9a5b5330f7"
        },
        "item": {
          "id": "a728a652-3cd5-4c57-9c52-949678a3627e",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "6518ba62-3f41-4b62-94c8-118500ad74f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7520a8be-1cad-43c3-93a7-75d26303a578",
        "cursor": {
          "ref": "e167ea9a-d5fe-4e50-829d-41cb8a3dd93d",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "773aaf0f-b92e-4685-a674-202a1a7f0506"
        },
        "item": {
          "id": "7520a8be-1cad-43c3-93a7-75d26303a578",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "28f11e33-7686-483f-9165-d71982cfe2fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8656b00-703c-4fd9-9bd9-f168690e539c",
        "cursor": {
          "ref": "852845a8-a7d4-40c4-9fba-075c3ea040ba",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "00c8d9f0-bc12-426d-b510-2043a8cef22e"
        },
        "item": {
          "id": "c8656b00-703c-4fd9-9bd9-f168690e539c",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "acfc0cd7-9add-41e4-9a22-11cace99fc43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2be046d2-ac76-4012-84b1-129bb1df856e",
        "cursor": {
          "ref": "f3e1acfa-2212-4e4f-a9a2-bfc7c6573231",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "16a95343-2d4a-46c5-8c3b-4aea4bbb020e"
        },
        "item": {
          "id": "2be046d2-ac76-4012-84b1-129bb1df856e",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "db96f993-dae2-4404-94ef-0154377df733",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28053c3d-eea0-4b52-81e6-dcb649550777",
        "cursor": {
          "ref": "0d59b0a0-d12c-40e7-b8f4-9ac85123d911",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "db5274ce-c371-4434-9a0a-d6c853120995"
        },
        "item": {
          "id": "28053c3d-eea0-4b52-81e6-dcb649550777",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "4efc0924-c0ff-405b-8096-28480b4cfe86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b473471-1821-4a4b-8217-cd1ec05b4971",
        "cursor": {
          "ref": "1707e582-99fb-4ba4-8de2-46cea34cb6d1",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "0c821aa8-149d-4ac1-906c-21faae30ba2e"
        },
        "item": {
          "id": "6b473471-1821-4a4b-8217-cd1ec05b4971",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "1630f91a-af36-4643-be8f-c414e4032a0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f09bc677-5ca1-4e6a-ae0e-bd9676f7487e",
        "cursor": {
          "ref": "f09bd67c-fc82-4cbd-a0d5-f4922591045f",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "22a0c6d2-be91-4937-8fe0-0ad5e6ab8c79"
        },
        "item": {
          "id": "f09bc677-5ca1-4e6a-ae0e-bd9676f7487e",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "d16e12be-37f4-4de6-80b6-74d5d6075533",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5a31996-1f86-4c30-adcb-2d8ecdff2797",
        "cursor": {
          "ref": "f5ccf1e7-1de0-4f09-9f67-1c71a704cd10",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "78ae7e68-55e9-4fd4-a770-94f4aba0c61c"
        },
        "item": {
          "id": "a5a31996-1f86-4c30-adcb-2d8ecdff2797",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "eeba9ae5-afdf-47a6-84aa-c35cc7fcc94c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23432b2e-3288-43a7-a33e-f4b3f7a40c8a",
        "cursor": {
          "ref": "8900ebcb-c846-40af-ac6d-c38c2afda680",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "2c0aedbe-302f-4d0d-b577-7ca33f8e76ba"
        },
        "item": {
          "id": "23432b2e-3288-43a7-a33e-f4b3f7a40c8a",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "426bbe3d-e1b3-4efb-8ac0-d3cafd2d23c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21febf52-dad1-4e31-bcdc-735d88ee964d",
        "cursor": {
          "ref": "c9d1dec8-122a-4759-ad26-7ae6d1f17066",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "2536cd1a-659b-4600-8468-5230e22b163b"
        },
        "item": {
          "id": "21febf52-dad1-4e31-bcdc-735d88ee964d",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "2eba2f3a-d1dc-4e84-8ff3-c9bc264254f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ecf5b39-15d1-47e1-a8f3-ce4ace59e61f",
        "cursor": {
          "ref": "9c1d583b-b52b-42ec-bd4e-aea407c8ff88",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "ab3d8c72-f529-4088-aa1d-cc3971930eaa"
        },
        "item": {
          "id": "0ecf5b39-15d1-47e1-a8f3-ce4ace59e61f",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "7a214073-f6c5-4a88-8647-ba805a4ea5f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ded1b78-bcbc-41fc-bf75-f5ae211d1e01",
        "cursor": {
          "ref": "3643c2f2-7b9d-46ae-9bc5-5f2cc0102fea",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "4124642b-2c34-4752-8227-12d3a6fd6ef7"
        },
        "item": {
          "id": "9ded1b78-bcbc-41fc-bf75-f5ae211d1e01",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "33948e29-806f-4dc9-90b5-e6a83d33e54c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "529818ae-5899-42bf-a342-099d69eb9f38",
        "cursor": {
          "ref": "3ce7a5fa-50dd-4170-8e48-13a7c9d0a89d",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "18e466e8-a0c0-44be-92e5-60252f41241d"
        },
        "item": {
          "id": "529818ae-5899-42bf-a342-099d69eb9f38",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "d60db8a0-f092-4970-b782-d6b0188e4797",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d0ae4d6-b550-4167-ae65-8853ae2299df",
        "cursor": {
          "ref": "3ec443a1-06bd-4269-8d13-0133aaae8c26",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "fa9f0c9a-7d38-47c5-a3f0-fd0c000bb670"
        },
        "item": {
          "id": "6d0ae4d6-b550-4167-ae65-8853ae2299df",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "e357dc0b-0290-49eb-81e1-399dd122307f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e50458f-5233-44db-8762-6fa5d90b600c",
        "cursor": {
          "ref": "b3b719c9-323d-4c52-8a75-347a5331c4eb",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "1a906c5b-dfd2-43c3-96ea-832818744587"
        },
        "item": {
          "id": "5e50458f-5233-44db-8762-6fa5d90b600c",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "165c49c7-6eed-4fba-9696-3e97c5910c24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e55b6d29-3f09-4fa2-b8ee-52eedf45b824",
        "cursor": {
          "ref": "70a8e509-6a52-4a15-8c50-955eb77fcd04",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "346a2c30-c1db-44dd-8ae2-5e3ca280f304"
        },
        "item": {
          "id": "e55b6d29-3f09-4fa2-b8ee-52eedf45b824",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "6788f3e3-4c47-4fc4-8244-024faa7503ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8168cfc-c4a0-4627-8c7f-8cb0e52cf081",
        "cursor": {
          "ref": "639f11e4-771b-477f-86f4-9813ad18bf97",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "aae7b632-4d07-46b9-bda2-cff10863a760"
        },
        "item": {
          "id": "e8168cfc-c4a0-4627-8c7f-8cb0e52cf081",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "0e14a055-2e02-418f-ad86-33e6affa70ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e8dd926-d5bb-4862-b52a-530e98059c21",
        "cursor": {
          "ref": "aaff8296-82e0-4a8d-970b-0cb68caaed90",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "9baae26e-71f1-4185-b0ab-d358a32bf74f"
        },
        "item": {
          "id": "5e8dd926-d5bb-4862-b52a-530e98059c21",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "ada56b94-f7aa-443a-907d-e591d696e54a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98012aa7-ae80-4ba3-b0fb-c8b90e893b2d",
        "cursor": {
          "ref": "7ff13702-68d3-4195-9d80-61f4d420fe55",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "1c9df126-883b-4218-9611-f9a0be91215f"
        },
        "item": {
          "id": "98012aa7-ae80-4ba3-b0fb-c8b90e893b2d",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "9e217ae9-4047-4c63-999d-7ed19f16efad",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d5760f4-4e83-46f1-8105-ee41bcc77525",
        "cursor": {
          "ref": "0a36dd11-0410-4bbc-89d2-ba838f025859",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "87479db5-5668-4242-8742-f863e9671334"
        },
        "item": {
          "id": "7d5760f4-4e83-46f1-8105-ee41bcc77525",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "52a47fad-63ad-48f1-b8b6-ba1891cb9087",
          "status": "Created",
          "code": 201,
          "responseTime": 61,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4603f3c-7bb6-48c9-aeb3-8a988372fbde",
        "cursor": {
          "ref": "1013a0ae-4f62-4057-972d-a3714d21146d",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "6b6ea5ca-efe4-45de-b8ec-7e8fbaa84c25"
        },
        "item": {
          "id": "a4603f3c-7bb6-48c9-aeb3-8a988372fbde",
          "name": "credentials_issue"
        },
        "response": {
          "id": "4d4d93b9-ae42-4164-9e9e-10d09ddadd89",
          "status": "Created",
          "code": 201,
          "responseTime": 250,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0c20db6-c7d1-49fc-8b95-48f901488656",
        "cursor": {
          "ref": "00de2ca1-6ffb-44a5-a71c-d7922d2c2e24",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "819dfccd-26be-4809-8ad6-d844e36cbeb3"
        },
        "item": {
          "id": "e0c20db6-c7d1-49fc-8b95-48f901488656",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "0643bf8a-ee59-44e1-a3f0-c07d4a302d01",
          "status": "Created",
          "code": 201,
          "responseTime": 36,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a81907f-d7b8-4e7f-8e4c-1846f82e9ce4",
        "cursor": {
          "ref": "8f01586a-b728-4ed5-becb-cc2d2d6a51f6",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "20d7ba24-da4f-4cd1-8902-494c10323013"
        },
        "item": {
          "id": "0a81907f-d7b8-4e7f-8e4c-1846f82e9ce4",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "087b86f4-ed4c-4aba-b6f5-17c2054b6aee",
          "status": "Created",
          "code": 201,
          "responseTime": 37,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecac6466-ac69-48d7-996e-b6ff685a18d7",
        "cursor": {
          "ref": "2e28bbe2-575f-4977-8a3d-be87369f6ed9",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "e1f900ea-e28b-4a38-9346-77b6a86d56d9"
        },
        "item": {
          "id": "ecac6466-ac69-48d7-996e-b6ff685a18d7",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "fa3a75d9-58f3-482c-8161-f1e572a1f250",
          "status": "Created",
          "code": 201,
          "responseTime": 40,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "06617f7d-6e6f-4989-a5f7-971d64838b8a",
        "cursor": {
          "ref": "0177b414-906e-4e3e-9576-f7eb13cb16a2",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "79e5ce0c-7587-4aff-b309-861d70d12a0f"
        },
        "item": {
          "id": "06617f7d-6e6f-4989-a5f7-971d64838b8a",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "50be60cd-8b67-4238-a186-0b891b00948e",
          "status": "Created",
          "code": 201,
          "responseTime": 45,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "c61eaffe-d38b-4394-8657-61898eb54a6e",
        "cursor": {
          "ref": "7ac782cb-aeca-4e53-b9d2-5d42651f244b",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "dfa40267-d76c-42d5-8200-619ff10cfdc5"
        },
        "item": {
          "id": "c61eaffe-d38b-4394-8657-61898eb54a6e",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "919e00e9-97fc-45d7-8ab0-6baf31ad5dd9",
          "status": "Created",
          "code": 201,
          "responseTime": 33,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b3d325a-f163-4d91-96dd-d259f6e6e807",
        "cursor": {
          "ref": "0a9ea3a2-9867-4b99-9be3-133145d55a77",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "ee9c599a-98f7-451b-9e2f-6c4caffb79b6"
        },
        "item": {
          "id": "7b3d325a-f163-4d91-96dd-d259f6e6e807",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "67078213-d5eb-42c5-bf71-5a20636e6b0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f11d60ca-381e-4ae7-8319-03db907e8952",
        "cursor": {
          "ref": "3d8b8497-d6ed-4672-896d-0b560071a562",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "f0247a1c-724a-408d-a565-32548a2f776f"
        },
        "item": {
          "id": "f11d60ca-381e-4ae7-8319-03db907e8952",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "abfd0033-6cd3-4d23-bc23-98fe40b6096d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70ebd77c-cd79-4c39-b1be-739ec60d0ad6",
        "cursor": {
          "ref": "c71c351d-ce1a-46a5-b856-27d2334c2244",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "47efb35f-6371-4193-b923-3f46504137b3"
        },
        "item": {
          "id": "70ebd77c-cd79-4c39-b1be-739ec60d0ad6",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "0f30a557-326e-4dc5-a82b-8052bec70d88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a1ef0bd-d019-45ad-941d-561718fb4f59",
        "cursor": {
          "ref": "994f9a6d-e156-40f4-9d01-1593d946084d",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "911ccec5-c6b0-43aa-a8b8-338e4eb28b60"
        },
        "item": {
          "id": "1a1ef0bd-d019-45ad-941d-561718fb4f59",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "16747263-029d-4d9a-b5ca-df8619980d5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9acd939d-a7d6-4743-9863-f9c44664859a",
        "cursor": {
          "ref": "a4704d14-017a-42c1-a045-028a34847634",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "0303e883-d525-49be-b1d0-c9d170105407"
        },
        "item": {
          "id": "9acd939d-a7d6-4743-9863-f9c44664859a",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "b4a0372d-6431-4a86-9ee1-7fddd9909530",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeabfe45-110e-421e-a50a-21a817b9501b",
        "cursor": {
          "ref": "165a0b9b-9d7d-40ce-812b-ca763711bc5a",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "d5198d80-5316-4462-9866-488e53228ec4"
        },
        "item": {
          "id": "aeabfe45-110e-421e-a50a-21a817b9501b",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "e6a5065c-0996-4b09-8bd4-f04560e7bdda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef481ecd-a2c5-4277-8b59-fa2439d310b8",
        "cursor": {
          "ref": "fd2c2bdb-b2da-4979-ba3e-324c9199e8aa",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "1f9fdad9-a989-4915-990c-2b1c54f36a0b"
        },
        "item": {
          "id": "ef481ecd-a2c5-4277-8b59-fa2439d310b8",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "1f8c5727-66d8-444e-baf3-d4e74678604c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ca53bed-20b9-45ff-8961-2def96f93d82",
        "cursor": {
          "ref": "f1236f04-6e7b-48e2-942a-7297995c1b3d",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "0fc368a6-fb4c-420b-8cff-f96517d8488e"
        },
        "item": {
          "id": "7ca53bed-20b9-45ff-8961-2def96f93d82",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "c9e27b1b-182d-4f30-b0eb-bf67ee8f0515",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd7718ed-d054-4511-a792-829cf7a9f47c",
        "cursor": {
          "ref": "78bc9b6d-7a41-4f2b-845f-29cdcca9401d",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "feaf3c6b-d841-4bd0-94d4-22733042c9a6"
        },
        "item": {
          "id": "dd7718ed-d054-4511-a792-829cf7a9f47c",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "38692962-9db9-489e-bbc5-464b76176de4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "796f9393-4bbd-4876-8cf3-19eac16a89e7",
        "cursor": {
          "ref": "ba3f8ab4-32d7-4bc4-87b0-b624de728e42",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "f25346a5-585a-42f4-81a4-3d2640836364"
        },
        "item": {
          "id": "796f9393-4bbd-4876-8cf3-19eac16a89e7",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "8a8e61ee-56e4-467d-8611-fadce70141cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cb0e887-5784-49f0-8c04-74f1e0f465ef",
        "cursor": {
          "ref": "c39cbd12-737e-4c8d-be8b-0a8c8af194f8",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "64d7683f-ebd9-45aa-ad3e-fee7fb099b64"
        },
        "item": {
          "id": "1cb0e887-5784-49f0-8c04-74f1e0f465ef",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "1e5164f7-d00a-40e9-bd74-1a944e276186",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2813e2dc-9577-4c49-a82e-859e3101ac60",
        "cursor": {
          "ref": "d177b8cf-4c11-4d2e-bac5-37047d857ca8",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "a33a25b2-529a-4cf3-8396-30ab8f686286"
        },
        "item": {
          "id": "2813e2dc-9577-4c49-a82e-859e3101ac60",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "1705d1b5-2b3a-467e-b858-3bd28218c1be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc054c9a-a3fd-4fb4-9c47-c64cbae08f92",
        "cursor": {
          "ref": "54bf1e9b-b665-4e03-9e88-e41e2aa21d34",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "dc841c28-d8c5-4048-bf9c-78ccb2c160d9"
        },
        "item": {
          "id": "bc054c9a-a3fd-4fb4-9c47-c64cbae08f92",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "6ac3a89c-05d5-4c50-a1d7-80a23b553e4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d8bcdb0-0543-4e6d-bf8d-57c883b0b937",
        "cursor": {
          "ref": "cd9380e1-754a-45d4-9202-deecfc36ffc3",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "1ec1fa09-d452-4880-923f-10db4c6b4946"
        },
        "item": {
          "id": "8d8bcdb0-0543-4e6d-bf8d-57c883b0b937",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "14088a55-cb2a-4780-9261-030b8d68b01e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f58ce064-2b32-4fa7-a175-d2361a1a6be9",
        "cursor": {
          "ref": "b8fcf1e6-6c62-4c2b-bb46-d87454f7251d",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "622e1684-f0d4-4728-bcf8-96e7966db3b6"
        },
        "item": {
          "id": "f58ce064-2b32-4fa7-a175-d2361a1a6be9",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "8b605643-c57d-4af0-a652-db70dec3c4ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cebd0b1-ffaf-4cc1-b619-d4305be2ba47",
        "cursor": {
          "ref": "f2286daf-1f99-4a5a-bccb-f767721a4a6e",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "50f817c4-61e9-4819-92e8-398239c86157"
        },
        "item": {
          "id": "9cebd0b1-ffaf-4cc1-b619-d4305be2ba47",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "4f5b441b-9b52-4742-b545-e3f72b60ef3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0a34e92-04f9-4e9f-b042-f0005a87ded0",
        "cursor": {
          "ref": "68c2bb29-b2f3-452c-8ed0-76d5c47f5e19",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "e82d225f-baab-4081-b01a-b773dc1b4b0d"
        },
        "item": {
          "id": "a0a34e92-04f9-4e9f-b042-f0005a87ded0",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "42629ed1-bdb3-41f3-8216-445ff28f16bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f36e9fe-2ce5-47cd-80b1-32bb728a39f0",
        "cursor": {
          "ref": "8ff42c72-3e51-473b-a1cb-0fdac3d21e5b",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "327aaab2-b676-4fa4-8f10-0e4014ac25c6"
        },
        "item": {
          "id": "9f36e9fe-2ce5-47cd-80b1-32bb728a39f0",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "eb87e014-e021-434b-8c22-da4f4f6d1a0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c3af149-7002-4e52-8fe3-ed83e5f97a3f",
        "cursor": {
          "ref": "a7340381-1767-4a37-b2e9-31541f03c0c6",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "5ccabdab-b1c1-4343-9dd9-b610e9ddbfd7"
        },
        "item": {
          "id": "9c3af149-7002-4e52-8fe3-ed83e5f97a3f",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "2d6ac83e-3361-485a-930a-86a0d87fa1a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8215b154-c9e6-4624-873d-3da09f44647a",
        "cursor": {
          "ref": "d270c27d-4027-422f-a7b4-f9dba6c212ee",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "b261d540-a15c-46c3-9cd0-78bbbd7d1f6e"
        },
        "item": {
          "id": "8215b154-c9e6-4624-873d-3da09f44647a",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "f8b3f0ff-eea4-4708-ac09-d70fedc37940",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f7d1cd7-110e-4278-8025-2f9d9b8bb144",
        "cursor": {
          "ref": "68ac89ea-40e2-435b-b2ab-fa2e0582ca5f",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "f781d08a-b31b-422d-a14e-43673f33a7a5"
        },
        "item": {
          "id": "6f7d1cd7-110e-4278-8025-2f9d9b8bb144",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "c2d32fc7-a5a5-47c4-8710-fc742d7e1732",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2483d371-9a1a-43a2-92cd-4234692d36e3",
        "cursor": {
          "ref": "29530fd2-4231-445f-8b58-02f9ce37c30d",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "adfdee52-6ba9-441c-824c-87b2ff690a8a"
        },
        "item": {
          "id": "2483d371-9a1a-43a2-92cd-4234692d36e3",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "61081850-1b2c-4bf1-a621-3026d19696d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "148eef4d-0e34-47fe-85d5-d2f83f8e0293",
        "cursor": {
          "ref": "202e5c62-d556-4b88-8422-b99111ab4795",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "3f6f95cd-d72f-4af1-8bba-c0d9ecbf2adf"
        },
        "item": {
          "id": "148eef4d-0e34-47fe-85d5-d2f83f8e0293",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "3887565d-e1c2-4ac1-8cc2-4a0954998ce7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf9421c4-2294-4922-b1ba-16bfe1c75b71",
        "cursor": {
          "ref": "67348136-553b-4aef-b56f-6261bbc51a66",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "a5721ea5-a88f-4d5e-a8e9-12ec4f452ab1"
        },
        "item": {
          "id": "cf9421c4-2294-4922-b1ba-16bfe1c75b71",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "3e246fb9-5432-4854-9d33-5c2bc636a502",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a76f87d5-80d0-4c1b-8e7d-d7dc5566b350",
        "cursor": {
          "ref": "a91c1c3f-f458-4b4c-9c5a-1fa7b6192b79",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "8a5ae959-62d7-4af0-85b3-791acde3711d"
        },
        "item": {
          "id": "a76f87d5-80d0-4c1b-8e7d-d7dc5566b350",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "23ede78e-f5a1-462a-8844-3f6731b537a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06a3ca24-d1f7-49f0-91b6-60ddb88b49f4",
        "cursor": {
          "ref": "6b5cd840-034c-480e-a5bf-c201a8f515ac",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "dab9bb4c-ac76-49d2-b6a4-1954a8f60b70"
        },
        "item": {
          "id": "06a3ca24-d1f7-49f0-91b6-60ddb88b49f4",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "62e9ecb5-f29f-44ce-8cae-770ef23474a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "179b1ec9-8c53-4a0c-b88c-5ca4e890771e",
        "cursor": {
          "ref": "c01d6b1e-2867-4f4a-9a68-44b33ea7c41a",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "c4d417fa-2030-49d4-9e72-6a97969f14a8"
        },
        "item": {
          "id": "179b1ec9-8c53-4a0c-b88c-5ca4e890771e",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "1515cd2b-7096-48e3-ace3-7087dd5e8256",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b305c396-801b-47ee-a3ca-b7050b0a6394",
        "cursor": {
          "ref": "533cfc20-60b4-48fc-8709-b2dd89874d76",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "5d7ce473-bf8f-4330-b38e-3633af11405a"
        },
        "item": {
          "id": "b305c396-801b-47ee-a3ca-b7050b0a6394",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "5d52fa2c-efde-4e5f-a865-b6aad40ab634",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "908a6e5f-5c3a-4683-bcb7-8e3d687efd30",
        "cursor": {
          "ref": "c37d7d52-8992-4c41-8c9e-a7e45793aa89",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "f45985b7-8791-453c-867d-f2dfbf668712"
        },
        "item": {
          "id": "908a6e5f-5c3a-4683-bcb7-8e3d687efd30",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "70d368fc-96eb-4d28-8e52-d3f787360085",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b59919a-777b-4700-8b7a-11dab4d38bbc",
        "cursor": {
          "ref": "79883172-4a47-4f7a-908a-1f172f5dae51",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "99c633db-3682-4287-88b0-0c97bab8834a"
        },
        "item": {
          "id": "0b59919a-777b-4700-8b7a-11dab4d38bbc",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "c9c9733e-e969-4e51-86d2-30b681b858b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9409e1ce-48c1-4a48-a09b-e7af95524861",
        "cursor": {
          "ref": "b485f803-b6e5-4fce-ac18-c26ee8e506f5",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "58961353-ea05-42cc-bfa0-1881e5bb5f90"
        },
        "item": {
          "id": "9409e1ce-48c1-4a48-a09b-e7af95524861",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "60de96f9-3e61-47d4-ac7a-a3e5a071855f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "060fae2d-5de0-4931-be05-c20b425f390a",
        "cursor": {
          "ref": "830f93da-5fd0-44b5-adea-d134a6e1d48c",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "1e959e16-c27a-48d9-8641-65f165357a02"
        },
        "item": {
          "id": "060fae2d-5de0-4931-be05-c20b425f390a",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "005298a2-f258-4ef5-8972-37eee0a1f129",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ca54c3b-89e8-4748-a2ba-7f8497ac34a6",
        "cursor": {
          "ref": "b96b0199-9707-46f4-a237-315ec26c2491",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "a5d70e9f-84fa-4215-ac20-3113492544f9"
        },
        "item": {
          "id": "5ca54c3b-89e8-4748-a2ba-7f8497ac34a6",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "28cb0311-668c-490d-8b38-946103d81f76",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f919ca37-cf17-4895-84cf-cc5c8abcb319",
        "cursor": {
          "ref": "fb3177be-8caf-4620-a075-4425e7ab260d",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "1af37926-9fd0-479b-971c-e13453e77695"
        },
        "item": {
          "id": "f919ca37-cf17-4895-84cf-cc5c8abcb319",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "c77fc079-b6b3-47bc-bb0c-ef14710c9042",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de8099aa-5bbd-4035-a925-43313cc23428",
        "cursor": {
          "ref": "bb6267a3-ec5d-472b-a5a7-1ecab30fc3ed",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "827ca188-70b5-4190-832c-57e3ba7c22c7"
        },
        "item": {
          "id": "de8099aa-5bbd-4035-a925-43313cc23428",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "03526144-514d-4284-b8ab-611cd1e1ed7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "832c2983-925d-456b-b77d-ede2c75e5a54",
        "cursor": {
          "ref": "6ed220bb-87d2-4408-a212-76b61c3a4339",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "eace60f2-bac0-42ab-bd3a-ce23d649a064"
        },
        "item": {
          "id": "832c2983-925d-456b-b77d-ede2c75e5a54",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "de66a06e-eb92-4330-9e42-2759c5942c4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edd26345-1e55-4a78-b750-c2fc047911bb",
        "cursor": {
          "ref": "09d5ba1f-ad38-4ee0-bdbf-f54278ab60be",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "624c2f7f-9915-4690-82f0-edb5e825a0ed"
        },
        "item": {
          "id": "edd26345-1e55-4a78-b750-c2fc047911bb",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "709b03c1-ff8a-4d81-b57a-edc48969ed47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd5a5d57-ae79-4ff8-90b8-cce138a42aa1",
        "cursor": {
          "ref": "7346864b-6cc0-45a7-b87f-c97c1fd9c3dc",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "c77813bd-e7bd-4e04-9cfd-c1c267416967"
        },
        "item": {
          "id": "bd5a5d57-ae79-4ff8-90b8-cce138a42aa1",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "b6ee2e16-7778-40c9-8f76-bde4d078dd71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2dc2494-a75b-471c-8fae-e1d85ce522ba",
        "cursor": {
          "ref": "0f453654-3476-480c-adda-8b96f6688e6e",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "f3ab9eb0-3b6f-4695-aa4a-38bb5336a0e1"
        },
        "item": {
          "id": "d2dc2494-a75b-471c-8fae-e1d85ce522ba",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "4ba4c8bf-d937-4b54-8144-627235123345",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62c85073-381c-48b7-81a6-0366d9228423",
        "cursor": {
          "ref": "0483ef82-fa2e-406a-a5aa-8adfaf8b69b5",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "217c2d2f-0f59-4709-ade8-03abc560c04a"
        },
        "item": {
          "id": "62c85073-381c-48b7-81a6-0366d9228423",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "e717feb4-16d4-4602-ab1a-ee8713c7496b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95e0db9e-7069-48ca-b681-113a8002f2ec",
        "cursor": {
          "ref": "59af103e-7568-4ba6-b4e7-f41404dc2b56",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "31993d67-6fcc-4f42-9869-303201323f6f"
        },
        "item": {
          "id": "95e0db9e-7069-48ca-b681-113a8002f2ec",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "d7f8dcb4-a9b7-4440-92c4-153827cfe57e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cfb8c17-8ea5-4ae6-9b09-e06db44d8d72",
        "cursor": {
          "ref": "da5d510c-d021-4ce0-aec0-5f3666e0311f",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "418685c4-d0f6-4802-b638-ef6ed1211437"
        },
        "item": {
          "id": "1cfb8c17-8ea5-4ae6-9b09-e06db44d8d72",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "ce1680b0-8896-41b7-a030-a416e085db36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "920eb92a-38d0-42b9-bcbd-68b8f6b04558",
        "cursor": {
          "ref": "1a20f0ed-ec34-4ced-9442-4b9a99cdce13",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "93ea649c-43df-4cdd-9037-78bc9e9837ec"
        },
        "item": {
          "id": "920eb92a-38d0-42b9-bcbd-68b8f6b04558",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "d56c476f-fdd0-46e6-b5b4-63b9797f50c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca1c1f43-0379-4418-bb53-81fc3a61d522",
        "cursor": {
          "ref": "ac30c3b4-6542-467d-8b27-d35cde8b7ebc",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "302d7652-86d2-48f1-b4b4-1136faae5e22"
        },
        "item": {
          "id": "ca1c1f43-0379-4418-bb53-81fc3a61d522",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "a8e297ec-113d-487b-98cc-bf362642b1c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbfa447b-d355-431a-ab6d-9923681cb1d3",
        "cursor": {
          "ref": "f8ab9ff1-2e95-40d8-be07-40ad853e31bf",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "cf2b2da3-ca2d-4a4e-9184-fa34e4233782"
        },
        "item": {
          "id": "cbfa447b-d355-431a-ab6d-9923681cb1d3",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "394d8a8b-275a-4ee2-ba7e-d65a520ec48d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88c2246e-cea8-499a-97a0-a333c853cef7",
        "cursor": {
          "ref": "0c494da1-8fc7-4436-8a67-0b1e9a367018",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "e1809e2b-f96e-4654-bcbf-0c852d7fc3d0"
        },
        "item": {
          "id": "88c2246e-cea8-499a-97a0-a333c853cef7",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "15a333e0-b5b6-4269-9863-058a053c428e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b628378f-a4fa-41af-ad29-242338b06961",
        "cursor": {
          "ref": "2a5a47c8-6b57-4d3e-b6dc-53209d6fbd47",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "cd42e155-0add-42f4-b78d-13aa4ff66288"
        },
        "item": {
          "id": "b628378f-a4fa-41af-ad29-242338b06961",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "8f573fa9-12c6-4f72-bb58-4f89c1aeb35e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cb5dccb-4936-4f4d-888d-332f25873d13",
        "cursor": {
          "ref": "5c0c3789-e095-40f0-8cd4-fe3e881c4bea",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "d2e5b1bc-96d3-4030-a848-eb5b736c64ee"
        },
        "item": {
          "id": "6cb5dccb-4936-4f4d-888d-332f25873d13",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "ae02215c-82d7-4f47-85e3-7c5be77f5b0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe41eed5-8622-4d7c-867c-6bc22d030e00",
        "cursor": {
          "ref": "57f865f4-02a4-4f84-ae8e-035fd07d35ff",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "475962a9-eca9-4198-b6f2-5040a39d31b0"
        },
        "item": {
          "id": "fe41eed5-8622-4d7c-867c-6bc22d030e00",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "a1512841-8aa5-4e91-83e6-f7a7cf59bdf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7dc75a2-90e3-4619-ab29-8c4952185967",
        "cursor": {
          "ref": "cfce957d-1021-4120-b8bf-812c0339e014",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "11f4118e-2972-468b-9f28-9bcc37fb8c65"
        },
        "item": {
          "id": "e7dc75a2-90e3-4619-ab29-8c4952185967",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "9218aa2f-a821-47d1-8fd5-9aea7a8204fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a558f6e1-767f-4b31-a3e7-57562d0b4c22",
        "cursor": {
          "ref": "70c6a785-c6ca-42ef-b4d0-521aadf8d2ee",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "f7b3e59d-b3de-414b-8ee0-68e67486c909"
        },
        "item": {
          "id": "a558f6e1-767f-4b31-a3e7-57562d0b4c22",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "a5d84125-8ce7-4b72-93af-bc51fd704c8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c274efc1-0613-4383-a62b-c248308c2769",
        "cursor": {
          "ref": "43fc60ab-cadf-4c0f-9725-b72ee3e73e56",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "d55712ce-c051-4323-a927-b9aff9a62c57"
        },
        "item": {
          "id": "c274efc1-0613-4383-a62b-c248308c2769",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "0522277f-c6cc-4b56-9e7c-21d67e364950",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c7ce89d-8d69-4d24-94d8-7d6e39d4e1d4",
        "cursor": {
          "ref": "683dd9d4-175d-4c14-bde8-1b5cb13d5636",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "911a23b5-0daf-4b23-88be-94d8fb10d762"
        },
        "item": {
          "id": "0c7ce89d-8d69-4d24-94d8-7d6e39d4e1d4",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "53e55884-bbd2-4432-ac45-35d71ae809df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68defa10-46be-4384-8afd-d025c8ce0657",
        "cursor": {
          "ref": "58f4af45-78bf-4d36-a501-b7e4d0b98811",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "f8aeeb85-5198-497c-ae71-bed6ac539994"
        },
        "item": {
          "id": "68defa10-46be-4384-8afd-d025c8ce0657",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "2e8fa64a-3997-4542-932f-f7daf814a9f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24f941e2-2623-499c-b2ac-a360669504dc",
        "cursor": {
          "ref": "970b2c0f-53d3-4954-8dee-424d5a885679",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "d12ae3b3-082f-47fc-aaf1-89bdadb85de9"
        },
        "item": {
          "id": "24f941e2-2623-499c-b2ac-a360669504dc",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "3b032ea5-f65f-443f-bae0-8ebd4831600d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adae9cc2-9129-44f6-ab8b-c91b5a329fe0",
        "cursor": {
          "ref": "3ea42c6d-adca-483d-a365-8dea6347d30f",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "8b4f44c3-f6e1-4240-a1e8-7bb94138418c"
        },
        "item": {
          "id": "adae9cc2-9129-44f6-ab8b-c91b5a329fe0",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "cc18a58b-f277-4a6a-9b3c-19b24f3e7711",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "948571f2-f636-4ee0-b384-e21691a7db9f",
        "cursor": {
          "ref": "f103bbf1-6afd-4cdb-9db3-4199a582ca94",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "54b1307a-5422-4ea6-8b4c-d16151a93174"
        },
        "item": {
          "id": "948571f2-f636-4ee0-b384-e21691a7db9f",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "317e2e60-8013-4571-bb97-acd52c79ad14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7c2e0a6-ed83-468e-a05b-88ce010298dd",
        "cursor": {
          "ref": "ccaf4566-fbe7-49a3-bfac-b66add715eb5",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "aaff0a37-2451-490c-8297-8d6380bdc358"
        },
        "item": {
          "id": "c7c2e0a6-ed83-468e-a05b-88ce010298dd",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "16e0aab5-e295-4220-9795-7ec246ddf880",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eebbb0d-798d-4558-8a67-cc2875b65424",
        "cursor": {
          "ref": "516afb75-1f10-4b01-a077-d5156d46c34a",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "4f9d5cf5-5d13-4168-be46-34cc0e0d6750"
        },
        "item": {
          "id": "7eebbb0d-798d-4558-8a67-cc2875b65424",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "c5fb6766-ff0b-4ef1-af28-52d7ffc7002a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5993da63-ac3a-41d1-9532-50b3e28135fc",
        "cursor": {
          "ref": "29ffada3-c3fb-4d3a-ac68-46a2d075c219",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "304fc383-b81d-4ace-92c2-9f84c4bce0a1"
        },
        "item": {
          "id": "5993da63-ac3a-41d1-9532-50b3e28135fc",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "f88b7b80-0a7c-4c87-9329-c1ac8ba01d7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45a3e3f8-86bc-486b-81ec-98df231fd540",
        "cursor": {
          "ref": "64c7c327-bd5a-4ab9-b401-89551e5d13ff",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "16cac69a-b515-4520-9892-7c2ff32bca5b"
        },
        "item": {
          "id": "45a3e3f8-86bc-486b-81ec-98df231fd540",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "86ee8f5a-ac61-42fe-bba5-7bc769266034",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d868f38-7d77-4734-af82-10f9b94ba673",
        "cursor": {
          "ref": "9f6b9f69-97ed-4bb4-b633-9b5f2bdda40c",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "82af2278-c045-4b79-81c3-68f17f0e75bb"
        },
        "item": {
          "id": "1d868f38-7d77-4734-af82-10f9b94ba673",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "6e38356c-5d4f-4146-894c-c43f5e275386",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b4c1f62-a0f4-4c08-9228-936674d7df57",
        "cursor": {
          "ref": "d3574feb-ea41-476c-9101-503dc7e020ee",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "edf668d4-e140-4636-b18a-30c171a34978"
        },
        "item": {
          "id": "7b4c1f62-a0f4-4c08-9228-936674d7df57",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "71fcf738-2e23-4c75-8087-07a662f95dff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86b89091-c429-498d-803e-629045f2794a",
        "cursor": {
          "ref": "ebb96fc1-7076-451f-84ea-00264d945b54",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "67886d2d-f47d-4a02-9b02-1276d295123f"
        },
        "item": {
          "id": "86b89091-c429-498d-803e-629045f2794a",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "920653fd-f38d-48de-8915-4066f3ad3299",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "214239ea-87ce-486f-8c78-00b34df18543",
        "cursor": {
          "ref": "cac3eb6f-2ed5-4240-8e5b-2a128ef41e68",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "9cd753cd-874f-44e5-bf65-daf98c801f41"
        },
        "item": {
          "id": "214239ea-87ce-486f-8c78-00b34df18543",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "33a3c59a-3a7d-4aa5-9d01-648e8db08463",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d2d0249-0dad-4bf9-ac5f-2197f27b416d",
        "cursor": {
          "ref": "5667a9d6-a167-4519-926b-0d4ec301ba9c",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "dde0eb78-f7d5-4843-8372-c6545073da7f"
        },
        "item": {
          "id": "4d2d0249-0dad-4bf9-ac5f-2197f27b416d",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "fabfc3dd-596e-4e79-954d-03fc8f1a1709",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aa77690-2b45-458c-a28f-db1ef50367f0",
        "cursor": {
          "ref": "f3c24800-ac0f-4eee-a810-ecf5fbb97ca5",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "fbbbd110-a9e8-4302-b94e-9418d2909a91"
        },
        "item": {
          "id": "9aa77690-2b45-458c-a28f-db1ef50367f0",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "b63ce11b-29a9-4b31-9045-0e6865cff8fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1ed3f68-116f-4e71-a736-f7a2cba9bd2b",
        "cursor": {
          "ref": "48ccb66d-98cd-46cd-b644-56fcdfc129e2",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "76347681-926c-4677-b5ec-d1fa3935fc81"
        },
        "item": {
          "id": "b1ed3f68-116f-4e71-a736-f7a2cba9bd2b",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "35c380eb-ba82-4013-b31f-75c609a02978",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cecf064-e9c8-40c6-a109-7b971cce8529",
        "cursor": {
          "ref": "671165b7-e119-4143-b5ed-efd65465b161",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "ae895639-e036-4c05-8fca-37f55c74334c"
        },
        "item": {
          "id": "4cecf064-e9c8-40c6-a109-7b971cce8529",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "5cb4bd4d-3f7e-4146-bfa1-d94c3d243f9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8a0aed5-0f53-43b0-9e0b-c44487b783f5",
        "cursor": {
          "ref": "6450d283-6ddd-41ee-a93f-28ad28ca9a59",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "ae879daf-78ad-4234-b03c-4639a3820252"
        },
        "item": {
          "id": "d8a0aed5-0f53-43b0-9e0b-c44487b783f5",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "eb1e6e4a-c2cc-4f9c-9e82-383fec60a7f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f81f854-458c-4178-8eea-8d91ef9f150a",
        "cursor": {
          "ref": "374800d4-e90e-4ed3-8926-929cb8cc5535",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "d2e2906b-2b53-4797-a06d-e58af692aae2"
        },
        "item": {
          "id": "0f81f854-458c-4178-8eea-8d91ef9f150a",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "3545db23-d04b-4169-b9e4-1dc2041631b2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 7,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c87eb8d-38e8-4dde-9824-363c88edcec5",
        "cursor": {
          "ref": "e49e87cf-6ffd-4ca6-ae45-f6e995e0f112",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "485d1927-e6af-403e-8cd5-4df5bb95f5ed"
        },
        "item": {
          "id": "7c87eb8d-38e8-4dde-9824-363c88edcec5",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "c94b7cf8-7e34-4fbb-95cc-c009781f3a31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d355f09e-ef6f-4db4-ac6e-5695d14f4fc9",
        "cursor": {
          "ref": "ea400adc-be02-489f-9de0-19125abe1fd3",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "18fa9169-6dd0-4f2d-a60f-aacce6e488d0"
        },
        "item": {
          "id": "d355f09e-ef6f-4db4-ac6e-5695d14f4fc9",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "ca420da8-d193-442d-b96e-4f2026d3c513",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7106b7a-b366-4231-b869-bf682215e68c",
        "cursor": {
          "ref": "45b38956-f25c-4c03-bea1-3b113fbb77df",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "5bbe2ccc-c20d-4ef1-b86a-e2891f14b673"
        },
        "item": {
          "id": "d7106b7a-b366-4231-b869-bf682215e68c",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "d681a9a0-ccc6-48e2-8408-17371511155e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9799905e-b087-4881-8354-b356240d0386",
        "cursor": {
          "ref": "e22a46f6-3d08-476d-9499-b5afb272530b",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "51314efc-2ae9-491e-8e90-d7b14ec8487f"
        },
        "item": {
          "id": "9799905e-b087-4881-8354-b356240d0386",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "9d408919-deb7-47df-9d6f-d8d4815954dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b773adec-b5dc-4faf-a1c3-9ec5a3000167",
        "cursor": {
          "ref": "64261071-4c89-489c-b4ea-d4dc9b9487a8",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "c6075c19-603e-44c1-919b-5ca142e927d8"
        },
        "item": {
          "id": "b773adec-b5dc-4faf-a1c3-9ec5a3000167",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "194b6837-f330-4975-803d-6eb731b07a20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff0a4b89-0163-4179-90cc-2edbc36e6dc5",
        "cursor": {
          "ref": "1b06f975-5683-4b93-850b-105f6246e5f5",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "23df7bca-c737-45ed-80ed-de37484db65a"
        },
        "item": {
          "id": "ff0a4b89-0163-4179-90cc-2edbc36e6dc5",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "db262353-61ae-449e-aa30-f38bf8a1f138",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e67350a-3b82-4295-ac5d-6d8cbdc4cae7",
        "cursor": {
          "ref": "959a205b-f55d-4d39-ac4c-66fc462350f8",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "5e186092-9869-4edb-9aa3-1467b401ad30"
        },
        "item": {
          "id": "1e67350a-3b82-4295-ac5d-6d8cbdc4cae7",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "d1da48ea-adf6-49ad-9c34-0bd5ce569a38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8e678e7-21cb-4a1b-a47a-792506d83061",
        "cursor": {
          "ref": "9209692e-5a4c-4380-bf0e-294b61deb2f4",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "4218519f-5395-4af3-9136-aeef856fc63b"
        },
        "item": {
          "id": "f8e678e7-21cb-4a1b-a47a-792506d83061",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "d50d70cc-5b98-4ec8-9cd9-d9befb4974fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f7dccbd-d24c-446a-b8c4-80215eee2677",
        "cursor": {
          "ref": "0ccc67a9-2807-4247-b187-91a7596e135b",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "ca8de7a7-3923-472f-bd96-2cb98284801e"
        },
        "item": {
          "id": "6f7dccbd-d24c-446a-b8c4-80215eee2677",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "f8c9be4b-abb7-47c6-bf4b-952452b3a994",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceb4204b-a532-45d0-97e3-3c5806a7479e",
        "cursor": {
          "ref": "9012f343-1388-4d3b-bb40-376a802ae984",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "2794b2af-8027-4de6-9560-34350927accb"
        },
        "item": {
          "id": "ceb4204b-a532-45d0-97e3-3c5806a7479e",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "5e26d210-9a0e-4d25-8ef8-d2953b26f67b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a25021a-7eb8-4ecb-bd8d-0e05018e5e34",
        "cursor": {
          "ref": "f906b511-4630-4864-8f07-c071dbc6c41c",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "f24def8d-3d22-4807-b96d-8008d55ff99e"
        },
        "item": {
          "id": "8a25021a-7eb8-4ecb-bd8d-0e05018e5e34",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "7ac20c72-6a72-4e10-bc68-84074c26ac2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "306dd82d-bcaa-439a-b17f-b7df388fcfaf",
        "cursor": {
          "ref": "61ceb4c4-5d65-4ff6-9b0f-93ec0c90991c",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "58771d8d-779c-4523-bec7-021bf0262458"
        },
        "item": {
          "id": "306dd82d-bcaa-439a-b17f-b7df388fcfaf",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "75eff2ae-605a-4d18-8fa4-71b0fe4d1282",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8705297-0b6e-4adb-9fa8-e09001e37f08",
        "cursor": {
          "ref": "b1a5268d-0987-4987-af80-7af81bc18be0",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "a34c621f-d4c3-4cf3-bedf-f26a33c9b9d9"
        },
        "item": {
          "id": "b8705297-0b6e-4adb-9fa8-e09001e37f08",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "9ec4530f-bd16-4ed1-bda1-164ac7e260d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8327313c-cdfe-4137-971b-ecd4f27094df",
        "cursor": {
          "ref": "3376f4b9-56d4-4c4b-b4c1-a9fce1d20fdc",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "180c1f02-3fc4-4123-8cd7-71e04b6028c8"
        },
        "item": {
          "id": "8327313c-cdfe-4137-971b-ecd4f27094df",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "aef1aae9-2805-4ba4-b52a-4f14ec109726",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a9f71f1-3b4a-4c53-8364-b69bb6aac472",
        "cursor": {
          "ref": "0f3f7eac-dcaa-4b52-b292-3d877c2d7608",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "dd71bff6-5eb0-42f8-8a55-925807c52699"
        },
        "item": {
          "id": "7a9f71f1-3b4a-4c53-8364-b69bb6aac472",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "0117e667-18e3-48e9-a92e-6cdd07135b8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6085bd0a-682a-4b5b-9519-912f8148655d",
        "cursor": {
          "ref": "37c2f938-2a4a-47dd-8fd3-0625830309cc",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "42f1eed9-2628-470f-8589-ad037aa64d8d"
        },
        "item": {
          "id": "6085bd0a-682a-4b5b-9519-912f8148655d",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "cb3a117d-2c87-4ecc-ba5b-84ad63247834",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75b32b4c-a5f2-4a0c-8d31-fa0fda8b139c",
        "cursor": {
          "ref": "d50e4db3-1c98-49dd-8122-2de76b7c23ba",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "1fac1258-b59f-4ad0-9fa6-e106bd8ad8c9"
        },
        "item": {
          "id": "75b32b4c-a5f2-4a0c-8d31-fa0fda8b139c",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "5da91a8e-c391-4cdf-82ff-7cea9cac0662",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd0df992-2fb3-4e36-ab3f-5b69baa9d729",
        "cursor": {
          "ref": "b6140f02-7fa9-498c-bc36-0d085bdf53a9",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "bf7035a7-79af-4467-a8c7-22e012c148f2"
        },
        "item": {
          "id": "cd0df992-2fb3-4e36-ab3f-5b69baa9d729",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "7f7077f3-fb43-4b2b-ba21-26b4bb50eaaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18052883-e922-493d-928b-90060a899236",
        "cursor": {
          "ref": "89bab364-45f0-4e60-ba1d-e2959778d759",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "640cf986-0a6c-419b-8953-880ca275b263"
        },
        "item": {
          "id": "18052883-e922-493d-928b-90060a899236",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "edaea7c2-a1d0-4b31-9931-9a7280ad06ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f36b7dc4-e583-46aa-b05d-733d7d5a2165",
        "cursor": {
          "ref": "c49d1384-f25c-450b-998f-0ae805ed9337",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "8715e22b-db2c-4482-8cf2-1d91ade7c128"
        },
        "item": {
          "id": "f36b7dc4-e583-46aa-b05d-733d7d5a2165",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "00aa83af-9967-4eff-9519-9846ef5e4ace",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90c7c67e-13b4-43bd-bf47-c7f18c540f85",
        "cursor": {
          "ref": "bbd2af52-84e0-451d-85b7-9344a00c1372",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "9e00712f-f316-427d-b4ac-90204dd5bf3a"
        },
        "item": {
          "id": "90c7c67e-13b4-43bd-bf47-c7f18c540f85",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "1e63be40-cb66-4452-bc8a-6532f72f4c2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d80dec21-c5f1-447c-a127-ec16c6e11403",
        "cursor": {
          "ref": "f23dea8d-1e80-4c4e-bf9f-b8e39ceadfd4",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "345021ce-7bb7-499f-87d4-0819c489d06c"
        },
        "item": {
          "id": "d80dec21-c5f1-447c-a127-ec16c6e11403",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "88cd185d-ac02-4644-8473-775ec8b41087",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb19819b-a867-43ac-9e4f-3266f3000d20",
        "cursor": {
          "ref": "a0a5d496-0687-40c0-83c3-3d5802a466dd",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "5ed1526a-56f3-4a31-9af4-16de9b24366f"
        },
        "item": {
          "id": "cb19819b-a867-43ac-9e4f-3266f3000d20",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "ef64f0a7-f47b-4376-a51e-a62fc8a2c9de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60258775-22a7-4554-b130-28028934388a",
        "cursor": {
          "ref": "33b43c59-054e-40cf-bfb4-7f72af71121a",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "8519c5ef-aa6f-4385-89fd-5955444b7b8d"
        },
        "item": {
          "id": "60258775-22a7-4554-b130-28028934388a",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "97b70813-3684-4056-ad79-fa73aa5a0501",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 351,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecef5019-3151-4516-9459-ba4ad43582f7",
        "cursor": {
          "ref": "38251b99-e6a7-44f9-8983-c67dba420c30",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "250cf232-e3f2-4ed7-a6bb-c5ee98cda6cf"
        },
        "item": {
          "id": "ecef5019-3151-4516-9459-ba4ad43582f7",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "ebece104-fe05-4c63-b2cb-1198ce19c415",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d083a30-ccb8-4e4f-9b57-724a57f09a1b",
        "cursor": {
          "ref": "5c0f3a20-0f53-45cd-b5e2-6bfee04fa50c",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "10d09c85-860d-4772-b68b-92219ccb30e8"
        },
        "item": {
          "id": "6d083a30-ccb8-4e4f-9b57-724a57f09a1b",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "6e4a4285-facd-4510-be03-86f63d9d67b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1ecaa66-c931-4c9f-85f6-5d57bdf9abeb",
        "cursor": {
          "ref": "0271d316-250c-4fb3-8bfc-aede6d523906",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "c5bd016d-7bc6-435c-adc3-43d3dc03dd1e"
        },
        "item": {
          "id": "d1ecaa66-c931-4c9f-85f6-5d57bdf9abeb",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "c8b35096-f5cf-49c8-b70c-52d83595ff91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60d7752d-da97-4d1a-9bce-b51df9fcf6ba",
        "cursor": {
          "ref": "deba4cce-09f2-48dd-acca-ad7e5be4a236",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "24d8bbbe-a62f-4a4d-b2ca-522b9cbff16a"
        },
        "item": {
          "id": "60d7752d-da97-4d1a-9bce-b51df9fcf6ba",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "54622d14-0468-4398-9d57-ab9270453278",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ca9089a-e3e6-4f25-bcf1-8d7a0e71d9ea",
        "cursor": {
          "ref": "3150243f-dfd2-4449-a581-68141e54a6da",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "e4e3d270-2942-4a9b-a76f-2bd5cdc63692"
        },
        "item": {
          "id": "0ca9089a-e3e6-4f25-bcf1-8d7a0e71d9ea",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "72fba3f2-bef3-4d3d-9eb5-77c038012eb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c84235a-209a-4c47-a632-737cc61850d4",
        "cursor": {
          "ref": "6b004ca2-86b9-4ff7-8656-edc6f14421ad",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "b360cc21-05d3-4040-b891-37fe7e71a1b7"
        },
        "item": {
          "id": "0c84235a-209a-4c47-a632-737cc61850d4",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "09b9f898-cc04-4b18-b059-27ecc3310bc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0252d81c-47b1-4c99-acf3-2e42ddf486c6",
        "cursor": {
          "ref": "4fa2cd5a-7246-4ab4-ae6b-7e6b17fcf7e5",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "2071e959-0064-45fe-9657-860399738d4b"
        },
        "item": {
          "id": "0252d81c-47b1-4c99-acf3-2e42ddf486c6",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "3942767c-c958-4db1-86ea-575e4cda7196",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ee38f89-fe68-467d-9b8f-2abe242ae1bd",
        "cursor": {
          "ref": "ecd286a1-eefc-482f-897e-800ab94b8d88",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "463376ad-09f8-413f-9a5a-46f7e51c4b26"
        },
        "item": {
          "id": "1ee38f89-fe68-467d-9b8f-2abe242ae1bd",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "feceea4d-2805-4715-911f-0713f2a5f0d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2044ba96-ee26-4e83-add1-4f1ffe0c6907",
        "cursor": {
          "ref": "f28270a1-fb61-4c7b-a017-f28c7cbffbfe",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "8b4e4698-aea5-42e9-b16a-1a82d86731cb"
        },
        "item": {
          "id": "2044ba96-ee26-4e83-add1-4f1ffe0c6907",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "9d3fd9ef-ea8f-4f4a-b496-2c1bef74a038",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dcee641-7afa-4002-9087-3023432ce97f",
        "cursor": {
          "ref": "5ed72917-9430-4fe8-81d4-d49d680a5d16",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "a1bc96de-2eb0-49e6-88a9-ce8eb2118a4b"
        },
        "item": {
          "id": "3dcee641-7afa-4002-9087-3023432ce97f",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "ffcf195c-3341-49e3-998a-9d74da5d5c06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea79c6d5-7871-4cb8-91b8-1e93e3a87d5d",
        "cursor": {
          "ref": "a680a30e-1302-4a90-9e33-c5846382cee4",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "b85188bd-8a89-4f31-a6b2-fc1da5aa28d7"
        },
        "item": {
          "id": "ea79c6d5-7871-4cb8-91b8-1e93e3a87d5d",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "58427961-ac38-49db-99e6-ab461cadc848",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5032dc93-c933-4094-b899-a2ea2434a90b",
        "cursor": {
          "ref": "c1c4f010-c678-462e-992e-290e81b3aed1",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "8a3d381d-d2e2-43c6-be0c-cf3132d733a7"
        },
        "item": {
          "id": "5032dc93-c933-4094-b899-a2ea2434a90b",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "e0e3314d-40aa-4745-bffb-8e02fee81d5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42343ab8-445e-46c0-90ef-235a5d521357",
        "cursor": {
          "ref": "a877d93b-728d-4c06-a05f-ad2b64d8dcea",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "97115024-a76e-40a0-bded-73da94e778f1"
        },
        "item": {
          "id": "42343ab8-445e-46c0-90ef-235a5d521357",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "09c639b7-df9d-4465-8c06-a28a13cc9e8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cf3b281-0bc5-4af4-b09d-29c1901d132c",
        "cursor": {
          "ref": "628ee07d-a710-4847-91fd-c6a86e9d8c67",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "d080d5a5-6639-48d3-84e2-8e3155b5b010"
        },
        "item": {
          "id": "1cf3b281-0bc5-4af4-b09d-29c1901d132c",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "2e1e2c7e-a8ad-496b-8d98-d92c7fbfa99c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2159f3c-7b33-42f8-b287-a79bd764f359",
        "cursor": {
          "ref": "def9f5d8-63eb-473d-ab2b-a77d67ae0211",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "21d42dad-318c-44af-9579-ec72469b647b"
        },
        "item": {
          "id": "d2159f3c-7b33-42f8-b287-a79bd764f359",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "d1c52b8d-8715-451a-b7f7-46534350220b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54361e59-9316-41f4-91b9-83a54c95ff2c",
        "cursor": {
          "ref": "4c37248c-955e-4148-986b-9dee77197ced",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "15f08d14-c115-423f-972f-c84d6664b491"
        },
        "item": {
          "id": "54361e59-9316-41f4-91b9-83a54c95ff2c",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "97b23778-b09d-4466-a428-c092660e737d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7afaee0e-5ad4-4711-ad83-ef1193c0aa69",
        "cursor": {
          "ref": "27fae1fb-62b0-4552-af45-3f36af27d77b",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "b52356b9-9ba8-49d8-a9b9-b6d66cbbd738"
        },
        "item": {
          "id": "7afaee0e-5ad4-4711-ad83-ef1193c0aa69",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "2a3b6b0b-4b57-47c3-9f0d-1841eab98d15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f494600-455f-47b1-a0ac-8a2c19a38a07",
        "cursor": {
          "ref": "ce093591-ba92-419d-b8c9-ee888f95b4be",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "13236f3b-fbfb-4e75-a645-a748cd6b3949"
        },
        "item": {
          "id": "6f494600-455f-47b1-a0ac-8a2c19a38a07",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "9e6b97f4-a849-4b71-9a91-e80d10b50ee7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5132e429-0be7-4d21-a88c-4320d2a5adf2",
        "cursor": {
          "ref": "6b065f1b-2608-4097-8fb0-3bd0281f1733",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "54a2d942-ad59-42ed-998a-a1ad0de6b73d"
        },
        "item": {
          "id": "5132e429-0be7-4d21-a88c-4320d2a5adf2",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "a2e6cd0c-0088-4c0a-8d74-5931639ca9d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bd03441-a471-4352-942f-0caf05e7742d",
        "cursor": {
          "ref": "e1b7de4c-87a3-40cd-8e8f-e37a3649da71",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "fb63a7ab-f527-436c-b0fb-07c86332d145"
        },
        "item": {
          "id": "4bd03441-a471-4352-942f-0caf05e7742d",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "b904c576-034e-4c06-b30d-de193b1ac771",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4a22cc2-1234-4c9b-9b37-58a3579cf235",
        "cursor": {
          "ref": "7b392054-080c-419b-87ed-86913e06ca2f",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "6aad7750-5a03-4ec9-9eb3-bb42ee813eaf"
        },
        "item": {
          "id": "c4a22cc2-1234-4c9b-9b37-58a3579cf235",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "64166e41-790f-4e13-818d-d54826f3e0c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f73f91a8-9789-4411-a042-a7a51cd59000",
        "cursor": {
          "ref": "5c7b888b-4039-45be-9a92-fd2607928541",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "5fdc779e-6dd0-4e2c-994a-9d4d1d08b085"
        },
        "item": {
          "id": "f73f91a8-9789-4411-a042-a7a51cd59000",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "aa7fb069-5c85-4365-b771-81f4e94567f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b2fd941-abfb-4eaf-a7ed-ae37dc86b39b",
        "cursor": {
          "ref": "2c90b346-2ffa-4ee4-a6c1-6638f29bbd6e",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "8156c8c0-e2a3-4af5-b467-944a3dc791e7"
        },
        "item": {
          "id": "7b2fd941-abfb-4eaf-a7ed-ae37dc86b39b",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "d6c7b574-d209-4001-9c0d-4a689fc7f1d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fb5a826-5333-4653-92de-9f68d5e5b533",
        "cursor": {
          "ref": "446c2a21-da66-40a9-9e5e-131bad69b5e4",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "716f89d5-4596-4aeb-b4b6-1d732c6e3a8d"
        },
        "item": {
          "id": "5fb5a826-5333-4653-92de-9f68d5e5b533",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "c1059bfd-c112-413c-b946-0c3d8a9a2366",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2d235c4-63fb-4e49-811d-3e2bc3f2fc0f",
        "cursor": {
          "ref": "4a2009ef-2eb3-48e2-9df0-f5d0a17cae91",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "ff131cd5-523e-4f96-a035-29b6f97b8ef8"
        },
        "item": {
          "id": "d2d235c4-63fb-4e49-811d-3e2bc3f2fc0f",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "733c1f79-7442-4e34-91c7-64af5cd0d71c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4a7d236-4bc1-4f57-9e05-cb7e7d5b06d1",
        "cursor": {
          "ref": "9f36e659-3bf8-4696-a1a1-428189deeb6e",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "758ad3eb-f3ee-4d3b-b3e9-ab154a11ec0f"
        },
        "item": {
          "id": "f4a7d236-4bc1-4f57-9e05-cb7e7d5b06d1",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "6cbe98df-655a-482b-84e4-9b3d1f29d948",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "643a2b9c-0e0b-4099-9590-d39b65cbe425",
        "cursor": {
          "ref": "2bb853c7-338f-4e24-8a13-954c3e5e6e90",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "0eb9fb34-3381-4515-9a58-056b31abe148"
        },
        "item": {
          "id": "643a2b9c-0e0b-4099-9590-d39b65cbe425",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "a1e54969-bb99-43ed-a68a-71c87e125a6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1489075f-dee2-4508-851a-0d1a960df284",
        "cursor": {
          "ref": "6dbba605-592a-4c95-a158-11d04fe9d225",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "ac5fa557-3861-425d-877c-3a38c1edbfb7"
        },
        "item": {
          "id": "1489075f-dee2-4508-851a-0d1a960df284",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "918556a9-634a-426a-a3c5-c33651064ba3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bd0a101-929b-445c-a376-551ff2c919f5",
        "cursor": {
          "ref": "fce0191a-7e0a-4279-965a-3b92f2554754",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "6fe1ed7c-3b4a-461a-a825-9cb9aec8df72"
        },
        "item": {
          "id": "6bd0a101-929b-445c-a376-551ff2c919f5",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "c23ff0ba-9f36-4956-9d7a-c1ee1dbd2546",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "556a6ec6-c5eb-48da-9f6e-efdec54f3128",
        "cursor": {
          "ref": "8cb1414a-8543-4513-9f55-8fd564109ffc",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "011eb0c0-2f4f-4c6d-a8f8-18ea41be5230"
        },
        "item": {
          "id": "556a6ec6-c5eb-48da-9f6e-efdec54f3128",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "3f526c52-724a-44f9-a08c-074554f8ee0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7885adec-d74b-4fe7-aaa2-172ffea67a2d",
        "cursor": {
          "ref": "a6d04c94-214e-4c34-83d0-2194681a9fdf",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "e65678a4-f876-4be8-aefe-cb34b4c52af6"
        },
        "item": {
          "id": "7885adec-d74b-4fe7-aaa2-172ffea67a2d",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "d1b1ae3a-15cc-4cb8-8e7e-0341df69d2cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77f78263-98d1-4261-8705-1ea7768a4944",
        "cursor": {
          "ref": "66c7c793-e422-4f6f-baea-ef44bc9bbb1d",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "f5063e06-fce6-4126-b538-0af93e465ee5"
        },
        "item": {
          "id": "77f78263-98d1-4261-8705-1ea7768a4944",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "cfd04784-cf50-46ef-83ab-950f3683a5d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f0ee855-93c9-4cff-949a-f2d8326f5e93",
        "cursor": {
          "ref": "599cb65a-a648-45b4-95a7-3c6990d179f8",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "5c55949e-5af5-420b-9d81-67c0c5ea0c12"
        },
        "item": {
          "id": "7f0ee855-93c9-4cff-949a-f2d8326f5e93",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "b1c187a4-d491-4227-be0d-03e3c743f5b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df6328b2-1c56-42bd-bdb0-d0c89945c530",
        "cursor": {
          "ref": "944deee6-dde1-4077-8a3a-770833617920",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "66d55a78-2073-4a4c-80cb-b6f187726211"
        },
        "item": {
          "id": "df6328b2-1c56-42bd-bdb0-d0c89945c530",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "9ece6ef1-f54e-4c63-86d9-2d03096f23ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d1733c5-ba49-41c2-887a-027a9b6483e6",
        "cursor": {
          "ref": "1ceb0b2a-75e2-4e33-9798-04b9d6155da8",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "a856c2c8-6af5-4a54-b97a-ce43e842eb55"
        },
        "item": {
          "id": "1d1733c5-ba49-41c2-887a-027a9b6483e6",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "b6b036ad-819f-4a3d-aa96-52d138846f45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e86fe8bd-0fa9-4ab3-9433-06e28357ffcd",
        "cursor": {
          "ref": "47932ec8-4296-4e29-9c03-9b3a2fdfb9f7",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "b0f1f03a-2939-4dde-b8e7-9977430edd8d"
        },
        "item": {
          "id": "e86fe8bd-0fa9-4ab3-9433-06e28357ffcd",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "f4da35e3-3cf3-42ba-a30c-5f29a83c340c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7da9cf5-2eb4-4c03-b752-d54859600583",
        "cursor": {
          "ref": "a91a2a6a-35ba-446d-a1d8-f456e01900b8",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "563fd118-c1ce-4429-a2a3-95a70bffe467"
        },
        "item": {
          "id": "b7da9cf5-2eb4-4c03-b752-d54859600583",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "0879d435-186a-4d2a-a3ea-bbef25266352",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0e3a8c4-ccf0-439c-9616-b833f8685e28",
        "cursor": {
          "ref": "1f69352e-f3f2-47ce-a3a3-71c97ed5e2c1",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "06345a4b-07ef-4d85-9f45-58aa57cdb93b"
        },
        "item": {
          "id": "f0e3a8c4-ccf0-439c-9616-b833f8685e28",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "1de9a2c1-984b-4401-9a2b-d81757fe338a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab2aa9cd-14d6-4a97-bea8-169ba2f1f284",
        "cursor": {
          "ref": "6b66fbcf-787b-424e-bd66-8902445302de",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "0f5cc0f9-bead-48b4-8128-3bcada4cc71e"
        },
        "item": {
          "id": "ab2aa9cd-14d6-4a97-bea8-169ba2f1f284",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "3c956344-7f1c-420e-b7fd-f348ca947f30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28dae765-0792-4e91-8a05-bd4ab4909b46",
        "cursor": {
          "ref": "1f12ae36-3164-4cac-a87c-fb55ee6fcfaa",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "e03de8bc-b130-4a46-b98a-91c6e69ddcae"
        },
        "item": {
          "id": "28dae765-0792-4e91-8a05-bd4ab4909b46",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "e080339b-aa82-4abd-9f09-64f0d8804719",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "689138c6-c642-4df6-897d-da830e49154a",
        "cursor": {
          "ref": "ddf79c0b-b68b-4384-b2e2-76452da73839",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "72315890-8ae3-47a2-b4e0-fdb526ddadb4"
        },
        "item": {
          "id": "689138c6-c642-4df6-897d-da830e49154a",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "585b8a20-b6db-44e1-b157-f5b006c7819c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "664c1c1b-8a8d-4e82-978e-f4ebd2ae39c5",
        "cursor": {
          "ref": "d292a951-a795-4948-b8c5-a98a498718ca",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "cf6bf2ac-dd85-456a-a7a3-59dd185be7c1"
        },
        "item": {
          "id": "664c1c1b-8a8d-4e82-978e-f4ebd2ae39c5",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "d375df5a-263e-4e7d-94b1-046d6c054f7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b73f520-d69e-4083-9a3e-6e67a581367d",
        "cursor": {
          "ref": "40c416fd-2c95-4fe4-8d39-3b71c30ca8db",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "20ad3284-381c-419e-957b-09ad3f66ec90"
        },
        "item": {
          "id": "4b73f520-d69e-4083-9a3e-6e67a581367d",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "0ff83085-53e0-4745-af86-1687137c2eb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75fcdb7b-c1c4-4a67-95f1-4d64ece83b3d",
        "cursor": {
          "ref": "b0333904-8d6f-4249-bdcf-8112abb8b653",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "bbc72d51-12de-4379-b65e-ca320d9d66b7"
        },
        "item": {
          "id": "75fcdb7b-c1c4-4a67-95f1-4d64ece83b3d",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "c494987f-e7d9-4860-a012-3a0595d0fb0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d73380c2-cc28-4796-b332-d5beb4f5c9da",
        "cursor": {
          "ref": "66c5eb50-820a-4506-bcbc-f4f9d7b5c6ee",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "e4b268f0-0106-4442-9be5-a4a913439eba"
        },
        "item": {
          "id": "d73380c2-cc28-4796-b332-d5beb4f5c9da",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "2ab43a8a-41f6-4289-a941-20c54b6703fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "774d3a21-d212-450a-8909-4c56ced52d83",
        "cursor": {
          "ref": "1d176546-e4b6-4f4e-b5db-a2ab46465526",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "9a3618fd-a91a-4d96-b6ca-bf9bb08ba84b"
        },
        "item": {
          "id": "774d3a21-d212-450a-8909-4c56ced52d83",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "3f7389ff-89c6-4b63-a7e5-d07fe04d2dcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c2c06fd-d56b-4522-88ec-07778f7c881b",
        "cursor": {
          "ref": "0c099a93-1560-4852-b63c-785a9c36809b",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "87e80353-a005-42ae-b2c9-198be013df50"
        },
        "item": {
          "id": "0c2c06fd-d56b-4522-88ec-07778f7c881b",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "4020cdcb-8c8b-48b1-bcb4-23b941652638",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8b2e895-0743-484e-96ab-ca2dbbed5e95",
        "cursor": {
          "ref": "0f899ece-c6e0-4881-afd9-ab7b5875fc91",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "02981cf0-c43b-4c7a-b408-11ca8af0ed75"
        },
        "item": {
          "id": "b8b2e895-0743-484e-96ab-ca2dbbed5e95",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "374997b2-5c8f-40f4-bda9-20f51bc84138",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cab52aa-271d-436f-905d-d86c68f66e9d",
        "cursor": {
          "ref": "0d4d42f5-713c-4e75-b4ed-e5b3c35519e3",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "cb65c15a-68e7-42d5-a187-799527b25e70"
        },
        "item": {
          "id": "9cab52aa-271d-436f-905d-d86c68f66e9d",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "4b0f9e3e-b92f-4591-9a24-d9574ff2418f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61aeb028-b0c3-4f18-b015-2af4633a2ada",
        "cursor": {
          "ref": "3cb8b959-cc23-426f-b78b-f9947ef65c00",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "02302f69-3976-4054-acdb-23a2773e4691"
        },
        "item": {
          "id": "61aeb028-b0c3-4f18-b015-2af4633a2ada",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "0c7b64cc-3915-4ead-8430-3e60263aec54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bf56e6d-0db0-42d4-9be5-9fcb75e14bcb",
        "cursor": {
          "ref": "2e91d886-f80c-4ced-b48e-868921664fec",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "0692e6a7-6d9e-4436-aa5f-96dc8075f9c9"
        },
        "item": {
          "id": "9bf56e6d-0db0-42d4-9be5-9fcb75e14bcb",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "f9d39ec7-3ec4-413c-a8fb-cadbcb25b6d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3bbcbf4-9d20-4ead-967d-84eec87e1359",
        "cursor": {
          "ref": "8c170d56-66b5-4acb-a9d9-ead1fb6f520f",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "19c58267-d953-44bc-b63e-725c8fa82273"
        },
        "item": {
          "id": "d3bbcbf4-9d20-4ead-967d-84eec87e1359",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "9684f127-b5d5-4d2a-82f2-6a51f8d4d64f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8ba2cac-230a-40ac-a927-045938688fe1",
        "cursor": {
          "ref": "542b3265-f5da-44bd-9ed7-fc2dfc0f0a2a",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "73d058da-d042-473a-b8dc-0ff0d7bb014f"
        },
        "item": {
          "id": "b8ba2cac-230a-40ac-a927-045938688fe1",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "3a645bfc-e057-4ac6-be60-6f829bc41984",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16822eca-5678-4a78-8b0d-072443da8f87",
        "cursor": {
          "ref": "10abb421-b8d2-41ad-8a38-9270ec0e3c6e",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "8186cd22-491e-43a6-abde-e1ef600847d6"
        },
        "item": {
          "id": "16822eca-5678-4a78-8b0d-072443da8f87",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "6213d108-2379-40d5-834a-15f10ff85b70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e009bffb-9444-4e39-bfad-6351d090f643",
        "cursor": {
          "ref": "650cb3ef-efed-40b0-bc08-a0e301de680b",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "6759521f-162b-4f45-92d9-0d68ea71a982"
        },
        "item": {
          "id": "e009bffb-9444-4e39-bfad-6351d090f643",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "b93b817c-95da-4499-80f3-8605b25420d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1642bf96-0179-499a-831b-0703ffe4269d",
        "cursor": {
          "ref": "b5f96e43-acf3-4b6b-85c8-83d308b12f79",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "fec2d7ef-fb3f-4b5b-8780-c7441f482894"
        },
        "item": {
          "id": "1642bf96-0179-499a-831b-0703ffe4269d",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "606d0cee-425a-4c0f-8639-81d11c2d71f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9deeeb9b-56e3-4abd-99e3-130f2da3c7c3",
        "cursor": {
          "ref": "5a9d80cc-484e-41ab-a391-4eaf109d679d",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "aac830d3-5371-49c2-8fad-4f9cb8a69714"
        },
        "item": {
          "id": "9deeeb9b-56e3-4abd-99e3-130f2da3c7c3",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "b2972eed-1338-45fa-a7e8-1a6b4a4c477c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "572df915-0354-4e24-b2c5-47433374d8d4",
        "cursor": {
          "ref": "f3c73407-3058-4421-ab44-025f3d3693a7",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "e023ff92-5ee9-446f-b584-c30e97323aa2"
        },
        "item": {
          "id": "572df915-0354-4e24-b2c5-47433374d8d4",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "a40186b4-f370-4cba-ad1e-d5bfbc426e67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7cab39c-0220-443f-a728-5048ae358d2f",
        "cursor": {
          "ref": "c2159ce7-1967-49fb-96ef-3a92c15a5133",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "5fa25667-064d-4889-a13a-55f38e16de37"
        },
        "item": {
          "id": "d7cab39c-0220-443f-a728-5048ae358d2f",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "7e44dfe4-d67d-466c-adbc-f7b1f51f79e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dd4a202-7ca1-4bac-98f3-e95781821ee6",
        "cursor": {
          "ref": "eb0be51a-f9f3-460b-868d-d3b48d8df64c",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "b3842d41-ca62-4e94-b776-67e658aa7065"
        },
        "item": {
          "id": "9dd4a202-7ca1-4bac-98f3-e95781821ee6",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "57eab4b1-4576-4aef-bb06-6a5272ed2e56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b93870f-27a4-4b3e-8f23-15ac53f95818",
        "cursor": {
          "ref": "e5b0ad69-73e3-49fb-90be-c172aba24c84",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "5e6ac4b7-3df9-4978-ae3c-4fa9bda70663"
        },
        "item": {
          "id": "0b93870f-27a4-4b3e-8f23-15ac53f95818",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "1ba4efb3-a16d-410c-909f-53fd3596e123",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13cb06d0-382e-4eae-a581-a854f4d276aa",
        "cursor": {
          "ref": "373ddce3-2cb3-4cd3-9c48-d54442edf39e",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "1e494291-58ba-4434-ad95-0e8e0e96b0c8"
        },
        "item": {
          "id": "13cb06d0-382e-4eae-a581-a854f4d276aa",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "4f7cb4a4-94fe-45fd-84bd-1aed9d4291f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66f40eee-24e5-4051-bd02-1a8aa032a536",
        "cursor": {
          "ref": "12d0a4b1-6863-4295-8290-d63ce72b6bbb",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "a74efdb4-6f84-4ad7-a85d-6b2b64274fda"
        },
        "item": {
          "id": "66f40eee-24e5-4051-bd02-1a8aa032a536",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "d9c164f1-f778-488a-a8b7-22d05edff419",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "966dc2f4-de3a-4a8c-9c25-1b1c056b6322",
        "cursor": {
          "ref": "3e448bf2-b386-48eb-bb4d-e7028fb88cc9",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "f94cb369-2fd9-4a53-a53f-26ef2fe207ba"
        },
        "item": {
          "id": "966dc2f4-de3a-4a8c-9c25-1b1c056b6322",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "c19f1344-982b-4a29-acd0-2ebaa02b03bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "736ab76a-9493-47f8-a995-3a389e3feb12",
        "cursor": {
          "ref": "3be8182f-fde7-46bd-838f-cbd3d83e40d7",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "a55a78fa-ffa8-4f39-b7e0-8efcd92f8280"
        },
        "item": {
          "id": "736ab76a-9493-47f8-a995-3a389e3feb12",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "e442d1af-6cf4-4196-b27e-fcc6691e0f03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fd3db9d-15c4-47b5-bb01-63734d663b84",
        "cursor": {
          "ref": "95c409f8-5d98-40fc-90b6-a93421f992c4",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "22746010-102c-4eec-b1bf-92bef17d5ea0"
        },
        "item": {
          "id": "2fd3db9d-15c4-47b5-bb01-63734d663b84",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "c25cc2bd-69d6-46ba-92c0-a4746ef16c2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f9be884-8382-4e39-8763-eec7693885d2",
        "cursor": {
          "ref": "f8c22e88-b27a-4ae9-82f8-1ca861857e3f",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "015b3ef3-fbcf-4e18-8a3e-86f2d0e234ee"
        },
        "item": {
          "id": "4f9be884-8382-4e39-8763-eec7693885d2",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "3ef5efa2-a702-4a21-8092-761ee218fc60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6d95de6-b94a-4514-bf31-3551d1c348c0",
        "cursor": {
          "ref": "350429d6-efb8-4a86-9f49-f3ae9ad2d480",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "5363b0ae-034b-4a27-9169-4429f4acd43a"
        },
        "item": {
          "id": "c6d95de6-b94a-4514-bf31-3551d1c348c0",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "b59c16fd-2d71-4071-acb6-6b56ed555c49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb436687-dd0e-44ff-9133-15e73ac2ab45",
        "cursor": {
          "ref": "2f248d52-f2ba-4958-baae-a565d7d4dd1e",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "d598158d-d744-4804-9ef6-3bc04b6e7ac5"
        },
        "item": {
          "id": "eb436687-dd0e-44ff-9133-15e73ac2ab45",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "73255ffc-d1be-4ea6-b8f4-b0282d555d79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "188b4e52-de41-4efd-91fe-b154aea11cfe",
        "cursor": {
          "ref": "ecb64dd1-0bd5-4fd6-bce4-4ca1a8811152",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "76c810b4-868e-48dc-ba23-0c4fc3ca3196"
        },
        "item": {
          "id": "188b4e52-de41-4efd-91fe-b154aea11cfe",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "5e2483aa-e0c5-49ac-b66b-5be7a750bf25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2038abcf-24d2-4659-a670-ab342159cbe8",
        "cursor": {
          "ref": "db399b3e-0c2a-4159-b752-048b8cc83149",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "87c04f97-b5ee-468d-86ce-963742d6ed1a"
        },
        "item": {
          "id": "2038abcf-24d2-4659-a670-ab342159cbe8",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "e105cfb0-af08-4d63-acee-1b03b9670fcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4850d9c-b900-463f-929c-d188b42ec5f1",
        "cursor": {
          "ref": "a166126b-52c8-47c0-b911-3a3d433b2ade",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "76016d4d-bc1c-4b6f-b264-71ce0ba17be8"
        },
        "item": {
          "id": "c4850d9c-b900-463f-929c-d188b42ec5f1",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "6ede2221-2de0-4f31-a53d-d569d193dc00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a09164e-63ad-4755-af53-9f6ddc16ad5a",
        "cursor": {
          "ref": "f4199932-eb48-4c51-8d15-fda398af052f",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "408b22ce-ab91-475b-8c2f-bde0730cd0df"
        },
        "item": {
          "id": "8a09164e-63ad-4755-af53-9f6ddc16ad5a",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "1178d6f5-017b-41fd-b7b5-5933af3fa018",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50e1b648-585d-4259-97b4-ff4966401333",
        "cursor": {
          "ref": "15f0d660-b4d4-4247-827a-e11141572781",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "356f785f-2626-4f38-a384-758ec566dad7"
        },
        "item": {
          "id": "50e1b648-585d-4259-97b4-ff4966401333",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "5ab74e13-8547-42da-b78b-416276012811",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 10,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ea3ffc6-7a89-41c3-b87a-6e5acf77b97c",
        "cursor": {
          "ref": "0e34d889-2081-4829-a25e-ca8708a9eeaa",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "8e9fd39a-1d50-48ec-94d8-0989f7f87813"
        },
        "item": {
          "id": "1ea3ffc6-7a89-41c3-b87a-6e5acf77b97c",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "c54cc977-be1b-4f10-ae24-6d1a0ff112c6",
          "status": "OK",
          "code": 200,
          "responseTime": 11,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab527eef-3a9c-4aa6-9b39-7aff7bdc7e1a",
        "cursor": {
          "ref": "78601bf8-5312-4222-b604-32bda7cc9759",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "22fe0458-9c3e-4b44-848b-f2c4260a56a5"
        },
        "item": {
          "id": "ab527eef-3a9c-4aa6-9b39-7aff7bdc7e1a",
          "name": "credentials_verify"
        },
        "response": {
          "id": "6034088b-08c4-40f2-99b1-5208ef4ce43d",
          "status": "OK",
          "code": 200,
          "responseTime": 24,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "109888a9-c2a0-4aaf-a2f7-c262f7fc1211",
        "cursor": {
          "ref": "96aab0e1-8ebd-409a-b5d8-06b92eb37730",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "4c48ef87-8831-471c-8835-cf2d0d965ddc"
        },
        "item": {
          "id": "109888a9-c2a0-4aaf-a2f7-c262f7fc1211",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "8fcdea9e-76a5-4194-bdbf-0a0d140e80b0",
          "status": "OK",
          "code": 200,
          "responseTime": 23,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "20c6ae52-9b9b-4372-be0e-63f1c55c97d0",
        "cursor": {
          "ref": "d68a169c-4ab7-4468-9e80-dce3ffe01921",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "e9ce2c6b-9860-436e-9a0e-d1f979dbe136"
        },
        "item": {
          "id": "20c6ae52-9b9b-4372-be0e-63f1c55c97d0",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "0aa187d9-ab2e-4d9e-908a-7e2b83b82f93",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20c6ae52-9b9b-4372-be0e-63f1c55c97d0",
        "cursor": {
          "ref": "d68a169c-4ab7-4468-9e80-dce3ffe01921",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "e9ce2c6b-9860-436e-9a0e-d1f979dbe136"
        },
        "item": {
          "id": "20c6ae52-9b9b-4372-be0e-63f1c55c97d0",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "0aa187d9-ab2e-4d9e-908a-7e2b83b82f93",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8964349-eba7-4ed3-a5e9-219d1dc94eb4",
        "cursor": {
          "ref": "531e9d88-5f2f-414f-84bb-48f8d7d12bf2",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "d59c81a6-736a-478f-b562-725a0e6d2c5e"
        },
        "item": {
          "id": "b8964349-eba7-4ed3-a5e9-219d1dc94eb4",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "72d3d278-d291-4d5d-b8d0-76034dcb7c81",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16cbcd4c-d3da-45ec-99ac-1f1e49d52346",
        "cursor": {
          "ref": "3050d8b7-166a-4fd6-b1cd-e6abb9c3d617",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "1473941d-821f-4086-bcf6-5f3231c275ff"
        },
        "item": {
          "id": "16cbcd4c-d3da-45ec-99ac-1f1e49d52346",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "dc6b2f6c-ff73-486c-a6db-1f2db2ffd16e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}