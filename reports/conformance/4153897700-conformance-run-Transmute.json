{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "158e0e21-37b2-4068-80c1-11b7459910a4",
        "name": "Clear Cache",
        "item": [
          {
            "id": "20c51fcc-1edb-49fc-aebb-6abbf388cc49",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a01b6a8f-cc37-4066-ad5d-43494dbcdb41",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "54d7e01b-8c3c-4cb9-a48e-dc7991ff4a24"
                }
              }
            ]
          },
          {
            "id": "714fc8eb-9398-46a3-89e0-8ad7402463bb",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "095ba7a0-826e-451f-925a-901d61fccd5e",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "98d48e7b-81fe-47a7-879a-22b734d4f3e3"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "6cba8804-7bc7-4311-a1eb-f943e45a77f5",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "460222b0-1636-4a94-a411-1abd4cb05d6a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "cb1b0530-4f70-4435-bebd-0a1338aa6af8",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0c3d56e9-9098-4fe0-bbc9-61ec79a4dcff",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9d12b215-4742-4430-8e7a-0fa36e9ef6f8"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "de6ea341-70ca-453d-a5e4-02472f31a4c0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2e66fd44-039f-46fb-a932-b469ea1ad683"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f52b5bcf-ac65-4df5-8b42-4fb659ec35e9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bbe05177-be10-4119-9221-edbd9c76f02e"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6ef70d3b-c29b-4d03-b908-65482df2cbdc",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "21cbaf08-a9b8-4965-8b8e-dd12460b98de"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5935d5de-1cbd-4d37-97f8-f63bf4d74ced",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5fb89900-d530-4cab-9c7a-d8059bd94dd2"
            }
          }
        ]
      },
      {
        "id": "f24226a1-39b1-4404-8320-42f00fc055b8",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "3451e963-5dae-4f92-b8a0-7e4107c30367",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6ff23d3c-ca8a-4aeb-be07-86d742d1c53d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8bed0e64-414e-4752-b3be-61c8a71399e5",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61424acf-a427-4d3f-8c64-839fd1c96531",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7da59ad8-6712-4be3-9c0c-ca7026beb41e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c23ef2b2-b379-4752-ba85-3ea13e3efc92",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d1b0cd0-6dc0-4bce-97bf-e85345f3425c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9e91824f-0ac3-498d-8c46-e99a3918b178"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e308a25-6dfe-4472-a4e7-4f47ba433883",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1838db64-1573-4203-b610-f23c05dce89b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4a3f1f82-9e52-4185-ad3b-a703c14a0e0b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "516c01db-6232-41da-82af-322f45cf7c35",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ab215a42-6cda-4602-9a78-d8916f766dfe",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b34f3ebf-2663-4b0a-b1ce-218395ef9708",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fa517e1f-13a9-4970-89cf-eb66ccd1cf15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d1c20ba-d068-420a-ad81-387603b51cbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf8aff7d-9350-4014-b489-7f9b4d01b52d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fe43bab-9b17-462c-8de4-61d55c58e965",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a486603e-1a12-4c6e-b50c-60624cdef057",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a84caeb9-78bd-44a5-b1f0-7ec847c2a657"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bd9e258-f23e-417e-b2b9-cc7ed535f0cc",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "dc43bcc3-4aef-4cee-aefe-e462bef8a6c6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "e1d4033e-a098-4732-89c5-39c9839dba64",
            "name": "Positive Testing",
            "item": [
              {
                "id": "30ae048b-6644-4c0b-9baa-867de74ebe8f",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4baaaea3-54a4-4594-9e78-a429462cb6f5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "212480d5-13cc-4a3e-91d2-201a1b7bf48e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ab195078-7400-4480-b8a7-cd58b60860be",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "dbda3f6c-eccf-4c89-8ff0-f399b555ea1f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6ae80b5d-fed0-494e-a8ce-b04b585e5d19",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d61c2d7f-ec42-4193-8b3e-8e1a344509f0"
            }
          }
        ]
      },
      {
        "id": "12c1d098-e7b1-4a84-9f10-5696a593c5fc",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "c89393eb-edde-44a4-a27b-67579d549564",
            "name": "Negative Testing",
            "item": [
              {
                "id": "988f6a7d-951d-4672-ab46-a7d1bc0b00c4",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "43321119-6dfe-4f14-8b03-9abbfa5f94e3",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ae48459-e85e-40e9-ae85-ee432324b0e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abcf7dd4-1775-4886-bebc-cb426e87d71f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6191222-c2ef-4abc-bb0f-4a320993e956",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bbce84f6-9317-4635-92fe-a8c7b6924f86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f66a1823-a97b-471a-b26c-399a5028ec07",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2e1568a-4daf-4a24-9016-dfe0584337ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cedda1a4-0a3a-45c8-96e5-9627cd0eff5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9a0f7df-1284-4e94-8a8f-c4391514293b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c93bec9a-136b-4836-aee7-374ec37d714a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf7f764f-2c03-4081-a78a-517b4193287a",
                    "name": "credentials_issue:credential.@context:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "444ff941-6c4c-4921-ab09-421c77761f90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d5e973c-a764-415e-9984-cfb93a6d0bc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e85946da-d8ce-4b74-8ed1-8a07a43cf160",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must contain \"https://w3id.org/traceability/v1\"",
                            "    req.credential[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f900955b-cf36-4037-9b20-d0a1fc68a491"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f18f46f-face-4dd9-970f-d8d630258966",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60ca7bae-7044-4d5b-beb5-b55b8fca34a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d07af622-e503-4a45-9fd9-b6ca02a3aed8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c2fdd76-67f4-44f7-a3bc-cbab241548a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ac8a54cf-bcd0-4ad8-87d4-14dffc7d9f77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9db5d91d-6498-418a-b199-a8a81101b9ff",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b872be3a-7a0f-46fe-acaa-1dfb2002de82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e13408e-2ee6-4998-8f3c-06deda3580bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20a1271f-9e85-497c-8ace-ca7769c2e273",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "80244718-32c9-4132-ad85-7f830a6c77c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c83ff59-35ed-46e2-a226-4a29b11f3ad0",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed1d48b5-ec8a-49fc-aa47-68fcbca2c10e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f86e1cfe-6419-4565-8e57-85ba8d7f6900"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d27d127-339d-4d97-87a9-5daf4232b819",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "681d175c-6822-4c95-883c-953cde8ca6a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14f4b1be-de8a-405c-8ed7-d192e89a9ed8",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b433ea84-7968-4261-8086-7fadadb7e877",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72006610-3f82-417d-bae0-276e10a17a1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb33211f-7ea9-41ef-97a4-756e34a3fab3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "56c07b4f-f60f-4edc-9219-f81ab9e84658"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4c21ed4-6341-4630-8b62-131524d96a70",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fd95232-48a1-444e-834b-8e8a52b3a899",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c62bec0f-288f-4494-b1a7-67b0fafaeabc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b66427f7-768e-481c-bae3-0d43c25c3a1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ac554230-a908-4ee2-b9f7-eae48ad1744f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6def55ac-6620-4d89-a4c7-aa348e103a3f",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65262877-648b-4c4e-a1ca-fdfdd76e455b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0397a14f-7d4d-470b-a7bf-23fdef3e3daa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abf95128-d5b0-4c1e-afad-b43cc1ae3935",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "98832d12-bd7e-4a76-9272-ee8561b525de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b9e8577-bf76-44b4-a11f-bee11c6f7276",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f35dd06-8ccb-459b-9a69-82579ae0f912",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4249186a-ec3e-4930-a6ec-e7ce44336a98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61bc070d-eb73-4222-9d2d-1aa21dace7b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ec3f1408-11c0-4a48-9333-1706daca0bb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d64eddb-debf-49d0-be54-b2396107be9a",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "894b371c-3f6e-4649-a447-2b509ec705fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd6773da-fd09-4f0f-897e-0a2c3dd5391d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bbacd8b-547e-4d0a-9aae-65d773987bd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eb3db156-ba2d-4bd0-8f9b-dfbcb9975772"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4422ff6c-063e-4dd4-a4ac-87556daa5851",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71970191-6a60-48e6-b34a-20196325bec3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1c6a718-da76-4088-8a6c-4e6b84e6bfd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba9326b1-4aaf-479d-b6a8-a1180633e832",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fb09cb3e-f2de-40e6-a66c-5e51d1fe5f53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f59566b8-2ac0-44c0-b4ef-95d8195240d5",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f103d3db-c0e8-4633-988b-f10c0a3c97e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15acbacc-241a-4d34-9f06-7168e025dbae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f2e1226-555c-4a41-b4c3-38713a18c35e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8a0dcbd2-4b27-46ed-94f4-461f4fff4e7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98a3e877-b3aa-4986-bf38-76af5ea7e0c0",
                    "name": "credentials_issue:credential.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0617ddd1-b6bd-4062-aa46-23e249f3f6c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bb91ed0-faf0-408f-9914-30204af83407"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e84eac42-a8b3-4aac-965e-b8da41cde2a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.id is a required property",
                            "    delete req.credential.id;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ff40015-dc20-4219-8ea1-25d7e16aabe2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6866253-343a-4dbb-95a4-55dcf85197b3",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5af6ea44-a45d-4a8f-9409-3ea18a1da4cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a8f5eb8-2c09-4835-ab5d-33734d858e3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79102b75-c2a7-4b29-bcc1-afea73405cca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dc8337a9-7888-4c17-99e8-036aaf982f84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bff08cf-ef62-467a-84ba-bd31a9fccacb",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bea4a90-f0e5-4b19-a6b1-a357c59d7642",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7cec527-37c1-4b04-8981-3d8c6475d25e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12798ec3-f933-4b76-8786-c3fc111717c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cd6b9f17-28a9-44cc-85a8-1e367d7e31c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23afb9e6-26b9-4c7d-8127-8a622191eaa9",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35602dcc-3d64-42fa-8893-4904bf77ff35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d257e1aa-8b8a-4909-9bbb-0599cd48f639"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26d6921e-d7f7-4317-8a10-48e1a0bdd560",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0a79aae7-39bf-4290-8f7d-93febf14ebcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6cec5f0-196a-41a5-907d-ab4dd94eb2dc",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cdd58e4-dc79-459b-ae3b-1fd7d304a449",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5755ed6b-5c95-4a64-a439-0b1bd7e56657"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1ca90d5-866a-42c1-9dc7-e437d3fcaa39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6289d703-6313-4b1e-8122-c4c168080796"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b7fb813-2538-4754-9794-84822985c295",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96cf70e8-973d-47b2-83dc-39e82a87a55a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c699e400-b53e-4842-a4f6-e068f48b2a13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1b71820-048a-4779-9ab3-1a1577388e3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "956303a7-9857-4fea-bd80-87b9132cea62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28c2c80e-c30c-4565-8eb8-fb95a782045c",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7749e8f-37e7-441e-a8ae-222bbb9495bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0f19c63-b35f-4adc-a36c-5c30720ee08c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a97ee42-cfeb-4089-aba6-3b726c838a79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "375a130b-2959-44e4-bfc3-7cd684df7b12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fec073f7-b4cc-4b98-bd3b-a0c384b9d92d",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4859f54e-9a82-4c9f-bd31-3c4640e23dc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b100cb26-9a47-44bf-812f-e6d93ee6479f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d47b3401-9342-40a0-8ef1-5b9cc3fc3dfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c83948a-5212-4908-861f-a7093387b008"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc116c9a-0517-40f8-bbf7-1ee2286561f4",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11a2c756-2676-45c5-acf6-8fd10dfea95f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b275838-3c2f-4f94-97d1-afc71d1833f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e3adc6f-8b7e-464b-bbc5-de50e788a425",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dcb41932-5470-440d-b350-8c30f57103e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e55f5c96-2a5d-4481-99dc-70db3742f7b4",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11068c42-5a1f-4bf0-bc96-b6852528ddcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "611bc7d5-004c-4175-a7bd-ba1402bc6c9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "920aa18d-b2cf-4fde-9371-1e9f86a08f94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f87ce65-581f-4700-a2f6-288a2c0ba621"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1223bb3-474a-4ff9-87ab-72f9adc1d1f8",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c09d9bd5-099d-40a6-a521-5b45cb089f8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55192ece-bcda-44a4-b9b9-0ff189c74ce7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a17aceee-75fe-452b-acf8-eb0cb842248b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d97ccbe7-e02f-49f1-a2d0-1aa7216f76a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7843d27-5969-4a98-a68c-139a46428c45",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e692c1f-4be0-495b-aec5-35257e96ed01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a578184-561b-47dd-8cc5-b16196693c62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aa50b4e-fe0b-44a5-9ea9-8eb53921dba7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "26f9bb26-8082-4030-80a6-35b8deadf356"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15eb4ceb-cae9-46c8-96b0-86c7d4481680",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "400af164-93cc-49a4-81b9-2fcc9057d73f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e3c7cab-0537-48bd-a868-268ff112a3a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5795116-38f6-4bd8-82a1-8f4bf2753454",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "b23a0d79-fa37-4093-9236-26a04a79ccf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6943a7c-c523-408e-9365-bbdd7f511842",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a51d1f4-d2e3-4142-ba42-5752d5997155",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "244e0c69-308b-4eaf-ae56-6d0a760a1aab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b18319a0-ef17-4ed6-8a5a-e6a76adea38b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "335cc20e-0fba-4f51-8aad-cc9065d65691"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc17b025-fcea-4640-a732-72d9f378c078",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04d12709-df2e-4e49-a536-1714aeac1c0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "249d4dc1-32bf-4020-a75c-1ac73c12ada0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72cd0249-621b-44aa-b006-9e74eed53d1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd07c5d4-9a97-4424-8155-ae06c3fc039d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e45e1c8-a9b5-4352-894f-62313980876e",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f98c87a-6049-4201-b360-df580cd37d77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27a6b2e2-ba38-40a3-b6d2-91ec7a304507"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f16705a0-cae1-46d5-b80b-31c25d3697d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2136c03e-abc6-4d7d-924b-9d8593831b5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2912949-be92-4b67-9e8f-f51119a00de1",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54b7b8d8-91f4-4de7-89da-5d63d330fe3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f1167f3-407c-460b-851d-d09c3cb7ef2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdb27391-d248-4f92-af0c-98dabd174786",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2cb67a69-c879-4e99-97c0-1fe8711110ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf9dddf0-4ed0-4685-aa0f-94ed3afe8bf3",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6897286f-fbc7-4323-8771-0bd83136f5ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00f0b7e5-74fa-49d1-8ad7-01ad732bdeec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddf9aadc-5a58-44a1-bce2-9cb31a820c5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ebf5c26c-84fa-4e32-a5cb-356394c9d445"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72566ce4-cb54-4b3f-a364-910959b01fa8",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2e92c69-a918-441d-aa07-0984788b2f31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3beeee7-3bee-4475-bc41-ea86330daa40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d29db27-a3e8-4378-afb7-bb4232fdbbdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e484bed-51b8-4ff9-ae88-cf28cf8f07b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5deacd1-4cf4-48e7-9b99-1d1826a29595",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5e20d62-5631-4182-bcad-0e0de20d279b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "461087e5-c67d-42cb-9838-4cf20c0ab2c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a0b6cae-26ff-4d34-a3b5-4be58be509f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8761409-044e-4dd6-be7b-c2895cd337c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96641386-83bc-4e55-8e42-c9af3c6a09d0",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ecfea70-a381-486e-90b0-495463c9a5ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dc54c56-8b7e-419a-a251-ca64c4f6b491"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1b2187b-cb94-4cb7-80a1-061cff183981",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca833844-eee8-4d39-bac9-48d0eb04cd55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21cd2dce-76d1-4d7d-8005-3f3688848275",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68d93c5d-3011-4807-8bfb-c69fab42a378",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19cf9060-8301-43a9-a241-5cdc3ff76536"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4d0fe0b-5b45-46e1-adab-e8302fe54ff0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f0b4357-6069-45a8-a02a-bce9d30f8898"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4c15002-36ea-4fc4-9c49-af82d064d7d7",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fba85db-5e8d-4d2f-8497-4ecdf43e986e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aff1172b-5e35-4f78-b873-53f6a3253ebe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffed60ad-656c-4d54-ae73-ac0bd377bf06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "220955df-eca6-4a01-a49d-b10895d48ef5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6850be52-d88e-41ee-bae3-7c86e139a2bf",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59afac78-7c33-45c7-9c64-90aafcd739c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2015303-c4ab-45d8-87e0-548e6b906447"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63e4e0ec-1bc3-49af-a8fa-8338897313df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "599ef26b-2310-4c09-afa6-3b93c4efc4c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84b16ad3-3c4f-4f27-9ca1-0fa6e9f7dcf3",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc822011-1411-41ef-ae1f-13bcfc8c334b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6978cb59-0aa4-4c99-892c-04fddfab9bef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19808f11-7a4c-4592-a7e1-c0238276edbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "deb21295-0063-4cde-89b2-17169093f708"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6093c0a-9793-4704-8c8d-82a924bfec41",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de75fe4f-d850-47ab-922f-c89ccc5fb105",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b7ec09f-4d27-4f47-87e4-75e4e38ba881"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48a3af95-5b1a-463e-9d0f-7673bfc3bb0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "de0b9cce-7840-40e0-8026-d370c83e85f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa84c000-bd75-4855-8036-404c113da1a7",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24968145-4b98-467e-a772-6e2340cf5ba5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd75fe95-9730-4c43-86ea-6f090e16bd54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4551066-d557-451d-914a-eee50a718ef3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "57978c7d-1542-4dab-b24c-bab6f84f2a3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15d41acf-198b-4d2a-aadd-b3b40a190819",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b08ee846-3877-4678-be3a-4e8245d70884",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "988ec1ff-5797-4703-9b1a-b812f83ff778"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9365e94-1f0d-45e5-b3ed-8a90b4c2dc9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "270e9958-7494-49d5-8b06-061f2fac6292"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cf8b4b7-3485-457f-841a-911ab1e85dab",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddb12f59-2262-4049-a581-f578809f4593",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddd9cc4d-30bc-483a-ba06-bc8abd244c4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f548102c-b58c-4309-833d-b4c4fbfe1754",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "8164ac42-63af-4016-97f6-4da5bb0d013c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea849a11-c015-4381-b23a-e63b7676487a",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4e44203-bb5b-446f-b1e2-c7c57e8eabfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4320c78f-f36f-4aaa-ba42-28822326a1f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8be6824-49dd-4faa-95ed-0ed9bd9e8896",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "bfe585ef-9298-490e-94fe-eda924df0bc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4e84748-4980-4bbc-b31f-c2df86e1f77d",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "260e8b92-1988-44ce-be38-df7c6c5c496d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f47033f-a125-47c2-972e-57a40c9975f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd279b2e-5c6a-49ba-ac15-acfcee86fcb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "0d75c2f4-74b7-410a-83cd-660fbf233d6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb7f74fb-2551-45a9-af55-34b9e3664817",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6860d70d-98fb-43c3-bb56-069c7a5bcd9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81e06980-4f74-421d-b20f-0212a00e3910"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4b39ce6-15f8-4854-8035-6535f8660610",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "5f28ab04-890c-4ddb-b162-ad0c2b14f55c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab0670e4-ca60-4352-9575-b31d45cfbb21",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccdcfd33-999d-4747-81aa-0d11a5491d40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4552a82e-ae43-4607-a511-8f8d07c9dcc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d66a5c1b-a607-4fda-a24f-13e5fcc6cd75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "edb4a8a9-84d1-4499-b807-efeb6fbac55f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ad55096-a166-43a0-ad7c-4e760aa47095",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b82fa1fd-9f5b-4eed-a970-889c23323b27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "679a0246-b723-47be-afe9-b4f5f83006d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "170303d0-8fd0-447e-aa1a-cd2c87548fa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "685c6f96-33ab-42ae-9d7a-cb727fc10bd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fc65e6e-6814-4743-92aa-2f15b3ad30fa",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e35fb70-5899-47b9-82fd-a4d1cb1616b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01b252da-77d0-4c62-9cf0-de0e8d0bd229"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3da21b25-84ff-47be-aa4a-9aafc17ed6e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c9b5bec-470e-4e10-8a98-89c1f17fcaee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a97005a0-910b-4d0e-8225-afc930492a32",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4016121f-4406-4a15-9f4c-66fb99a5f979",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14daa3da-ab46-4673-96a0-9758c2e4cc13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c0791bf-17b7-4573-92c6-b632a4b50ed9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e93072a9-cdaa-4b35-a23e-2b7bea287cbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45dbb071-dd89-48dc-90db-260573ef4a8f",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c78b54a0-1b2b-42aa-b401-ac81effd45a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd3ad3ce-d8f6-4c41-b174-94938802f87c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ac2905d-079c-4558-81bc-b67e3edf6182",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a649bb64-a14e-4fe3-b6d6-e746de6c461f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c9c4ee9-0385-4c9d-8cf0-3dffb9fcb813",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13ac184d-3d57-4e81-8050-852775b8bd63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1964ba65-cf8e-405f-905c-b061e2ceb814"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d9df59c-1d5d-41b8-85d0-20b466de23bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fcb75a08-ace5-4926-9d91-b9feb9ebe06d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54af504e-aee4-498a-9e4f-1d6d860c7434",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e1ce8c6-53c4-4f53-accd-d9df5ddab99b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b73df478-9d71-40bf-a00a-b9f66c04ae3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12436c2f-6809-43d5-99b6-bae2198b4764",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "48bfde18-1af0-4018-9745-c22602d8db78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63db27c9-f31b-4632-9083-b9627ab9a1ee",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77a49384-dac5-4e61-adee-ed60e6d5d2c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a929a7a7-2d64-45f7-8b7a-a144fb6b5b4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94600ac3-7c02-4e86-b5ee-6270da8b0f60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6094532-0e54-47e2-87b4-5a5761913365"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d75c008-7a55-4dd2-9c23-32f22b678ece",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18389d2b-01f1-414a-b5d2-2bb671a7f91f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13f8247e-6233-4af9-a6cc-2856616593f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f6c8603-7777-4297-b8c0-4ae97773f2da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "faa45808-eaed-4e19-a8bc-ec55124c2389"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b04702d-836e-4d00-b6c6-a13bf8a0bc5e",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09080995-217d-4207-aea1-d2e8de9d482b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74a566aa-0fb7-4ef7-a5db-b9afdbf96eef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0009b345-66cc-4ab5-82a8-86831699dfa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "da512fc3-e492-40f3-81d2-a64a445dd588"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6bc0fbc-61e9-4629-8177-a469866dc65e",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d17acc7d-5ca6-496c-8dbf-552cc33ba92b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e80bd2d-b88b-495b-917b-e8ec74e4650d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c0150a6-3d1c-44eb-becb-0c7012ff8e36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c677f03-1eb2-4b27-99de-54848fc0a86b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ec6a1a4-4010-41ff-bbd6-c53a0e409c34",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db5b0e62-165d-4de6-a8e3-83952dda3515",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa59bfd3-8c56-4f89-8683-0e7df75d8604"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16a3db4b-7133-42b8-b77e-25cfdb862a88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "de893e72-2662-4b00-8073-9d626b48ad07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b7e9f27-eca8-4b61-9ba9-e62b0de79788",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87e7a370-a902-4095-8c03-24bea3b611fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b44ffc0-b948-47c0-b894-2a4519999160"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af2dc909-2cc1-4b50-97d1-9c5abad3754e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "4c8d2d19-dca4-483a-8a48-781cd058c469"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cd1ac9b-8c49-41ef-9a4b-f6a2de189f00",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aeafe3aa-5cd0-4d14-a2c3-8cc084a57055",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2976b29b-d2d2-4560-a23b-a39e893f1ef4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4119b069-6fc9-4f1a-937e-d2e28602f1fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a1a15815-e287-4994-a608-3f571f7b42bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ca0bbb6-d8a2-4077-8f32-26e44d973d64",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "828b37a5-fda3-47f2-afda-b377659ce5fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c62a3fb-636f-4b11-99e5-b63613a1c17d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c341fdc-1f1b-41fd-86b2-289f104e3c72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "2e19bfc1-1605-4c1c-993a-56aa92549f61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d62b08a2-204d-4fee-8f85-f3de9082c440",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c1255de-f4a8-4aad-9a92-c629349fffc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ae2d0d8-c7b8-4344-94de-b9689de459a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8d8bff2-fcec-4368-a591-741be54d0735",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "53ed37e0-7b5d-4698-bc7a-dac7648b9be8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "838b304a-3ebb-4152-92a6-5825e34b9546",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b96d864c-d82a-4257-9578-aca80ab66445",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2c52379-b240-44cd-b482-6f1d760d259b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e80b3865-a83f-49f6-940d-359915861508",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e9bf2372-c4be-4f95-a209-3e71b8cc2280"
                        }
                      }
                    ]
                  },
                  {
                    "id": "759e14b1-9018-40fc-86b2-43325ed08738",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a787985e-ee09-4555-878b-8b1d68ef3b32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f176163-447f-4ff6-b1a7-95a6b44748b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff557d82-be82-44e2-80fe-d55cf799c88a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "fb306be0-219d-412e-8c22-83d19d70f6ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba3b528b-e1ae-4441-a1ba-44fd66de275e",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24a94ac3-2473-489d-b3f7-1deb0aacc382",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0420644-fb68-4ac3-ba74-dbc6eb2d1767"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8847721c-e912-44a8-b06e-d864c7cf9b5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "f3ce77c1-123c-40ac-bbd6-e2e2d03edb2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2681aaf6-96d3-400c-8a2a-1c907011aa68",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93f0b3a7-4a34-4d16-b8a1-59854b46099a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aba5c9d6-8135-46d1-92ff-b536a3a4c3ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8324588-ef33-401a-9673-b258931cc6cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc8d5895-c824-442c-b914-b783f3abd1a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73aaae1e-c0f6-4d4b-890f-026d249c3f4b",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09f5c72e-ee8d-4185-8d0f-01f8561bbe20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe6cc4a8-4053-4d5f-aa4e-49ce1b8d7f5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9965f1b5-df6c-425a-8093-6671bb90db47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab08ac14-c467-47da-bcc3-f52f64cec06c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40de6bdd-6018-4bf0-91b5-8d416cdfd02f",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04577bb9-391a-42a0-8149-62f1e5c23989",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81d072ed-a4dc-436f-b27e-119832d53aba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baef99f6-d8ba-400d-9bd1-3b1ec7b8b621",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c0d0b526-7e03-4a9f-89fd-58eb4061c8be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e80b3b0-13d6-4f76-acc6-1aa9ee267a67",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a853da9c-a392-40cb-ba47-7fd5ac96c8b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e6a0652-28a7-4dce-9663-bd5b67822605"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1487df78-f8be-4d07-aa05-0be20953dc02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c210d346-e567-40c9-90e8-3cf1286b41d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa4c851b-6ac2-4121-9da5-483b204e81c9",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eb7ee9c-2776-4e04-99bc-9a0bf96862fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b0aa6e1-dcad-488c-9ea2-079e6d151499"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14304942-8092-4763-9478-f37f52b3d40b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e523c0dc-afb0-44eb-bb18-97c9e08dfa59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40cf9807-b77f-49bc-b52f-55905a2f8979",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c7c6b97-af13-4960-8d77-86a703f79850",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "909e4427-55f0-4373-be8e-99e89c5e9fa2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a43598ba-391a-4723-b19c-8155696f3322",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "53467def-df07-45bb-b5ce-71e602855bc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1113c401-43af-4bfe-835d-2bdd9308a9cd",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8399e36-78a7-4fb5-bf41-0d0e68a83b8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a35d714d-226e-43fd-bee6-1119b5ab0719"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84883ec5-3ce4-49f9-b871-e10f7809ab14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e930eeb-f69d-43f4-b345-2cf70dbf00fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cfee5a0-c83d-444f-ae80-038c9352ae8a",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af00e4d1-e06c-442c-91f3-42fb27b9561c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aeaed87d-0781-4366-9b19-19cce3ec41e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "506270d3-9485-4351-81a9-77397078e9bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c1a4e74-cc45-4315-9608-0e472ab35e12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99131079-fee2-4aa4-b9ec-5d3dd96899ea",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf65e041-8c3d-4745-9eac-04bd12e63edb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce3c52db-fff8-4db3-a149-19e93c13c7f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39ac2006-aba1-4030-ad58-17e50bf48e2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab957b0d-a014-44e5-b62e-c5a2f4f3a3b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae1d6ad0-468f-4fb5-86a5-6f05ed0e67df",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7044b6c3-ab17-4ec1-aead-7344a50a99b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0963c457-0499-447c-81cd-4d30f38772ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a8c8db1-ddaa-4469-a293-9770bd6739e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b792cfb-58ac-42e1-b570-f67d40dde5bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f82b204d-5bbf-4578-af6a-3a9c1723a525",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7393d73-597e-421f-9ca4-24182b4e6bf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c42fbef1-55fb-4d61-a094-5b2e805f1196"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f177d7af-f238-4a6c-8bc8-ea3e9dce4c71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "856ac11b-ad23-4c54-8335-ebe971c1d91e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "676c54ee-9efe-4e1f-89c4-5e7924929cec",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca360552-3b6e-4f1b-a6ee-b3ef5e4ec627",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bf451e0-e351-46eb-9220-198df9c74201"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fabfa839-6daa-4021-aa5d-7a86c313cf24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "42522b83-bfff-4c60-98fa-861cff7fd45c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d953065-3b70-4295-ae6b-702d827509b2",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "153a0e9a-47a6-4387-807a-9bbde03acc40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7079a954-cafa-451c-a487-cf27c077e3f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19233df0-bdbb-4ec9-a5ef-1f265eb3ebb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7dbf6f09-9459-45cd-9b98-e2eca977837c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec417c6f-2275-43b5-b1d6-bdece7618e72",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ad2c720-4948-461d-8412-40532a090e37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67641e69-a966-423b-b9c7-1168867f9038"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abf63bda-03cf-4ad7-a2a9-9e3ef71688be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e9f87503-9330-492f-8285-8af5a5ea21e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59119cd5-a00d-49b1-8728-b1e142fe9e54",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c37a6f95-2e90-4c01-b9ef-f9832c202624",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56c67166-de43-4e00-85b3-90c86b9357b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f349baa9-5589-474d-ad7a-94c98430f5c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d4b516dd-ca9c-406e-9163-07a558ee5dae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92e29dd9-5144-4944-849b-7f658e3fd6ee",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5b4d619-154a-4468-bcbd-bbe67f3cd0ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fd448d8-bc6e-4945-8ee0-2415d6541b6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a00e76b-47c0-4a4a-b64b-8f77d774ebb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5be29523-af87-41bc-96ea-e7c22d5f2389"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9888012b-c72b-4de0-93a6-9c890be670a7",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "686fdb27-6582-4898-82fd-7e425141e584",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4125b6d-fe5e-465b-9119-bb5fa49de133"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf528583-6350-49c6-a839-30f96d21809b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d071925f-de94-416a-bf9b-c2c7faa485ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b88c1d8-0e7d-477f-8687-75cb6a4c399f",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a913d6ad-4718-4733-8de0-0b0e680b7431",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5532b5c0-11ea-4588-ac2a-cca2babfda9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b48a3145-c354-4e4f-9167-56a9c3077fc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7d16b438-7f10-45fe-b159-8258a9a11d7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5df46b58-8db8-42ce-aad3-1fc7961759d0",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b8e8e21-f512-46b1-9200-d182cf620711",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f00c2da-b585-4565-8271-ea767d98f30b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2aac26cf-a916-4c17-a5e6-75961f890750",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c11f1761-53e9-4ba9-80d7-ce011edeca25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "007a340f-e66a-4837-9a79-da12a0cd3ce6",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "602ba1e6-637b-4347-a27c-edbde70ff210",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d57dda9a-6a3d-4835-aecf-21985ed9ca44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b61405e-570f-4d7e-9669-ce3b3159939f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d452be94-ebb6-497d-9232-f0133669e881"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a452b922-e9e3-4002-89e0-555df8e79268",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a652a74d-fe8b-4275-b5ae-8028ccd66b08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db219920-a63a-4120-be7a-3699f2ee0ef1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c9be557-fda3-42d0-95ab-73c26a0ad42e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee6172ca-26fe-45ea-b63f-a9ad13f022d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6c037c7-3580-4329-9d02-115ec176ec7e",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80e03a9f-b22b-4fdf-9e79-11542859942e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e20f28fa-5d8f-4846-a5f6-ec4fa8c15a93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1baab8c-fed0-461f-919c-2d3f4d38061f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d602950a-7b3b-4037-aa01-f3d851499a21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0a59311-0ccc-4b46-abe3-8e9fe8c866a8",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39cbadf1-5ce6-4eac-8fca-74c1e6bcb646",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5643bd0d-6b59-4a43-a307-7e3bca3d1edf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2feec5f-44b6-4c88-8abe-e08a0055e0e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "45867262-9ed6-469d-857d-752145caa58d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33490400-03da-4031-9436-20617fc41940",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa69d70b-a8c3-4f85-b7f5-a29a2d57d4e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a449d7f9-c2ca-410f-b172-079392a24298"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c86e622-96f2-444b-8d45-e0e09aecd6b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "637f7cb6-a803-4acb-bdab-afa7cac08a4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2ad7436-a62e-4910-ba6d-3f3dbe22a4cd",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "262353a3-c3f8-44a1-b62b-378ab70b3272",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9808625a-dd03-4822-88c1-f444dda11704"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "847359e3-860a-4ff9-a956-6e6f5ec34e24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "8bd65b14-fdc8-40c2-9468-778abdb64be9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c685badd-8535-4573-9d62-164492cc82e2",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76686432-b660-4285-aa1e-71ed0122ee7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e2f8e29-b7d1-4d86-b135-7485cd6a9480"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a4595c8-10a7-4dda-bf12-57a59610c5d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6550e50b-4ad6-4db4-bcb9-4bd756895c49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1e0df99-17a2-4c87-a0d4-a9ae6ef28d2f",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1abff70-1da8-426f-baeb-2c54c53186fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "266844ea-0dc8-4d2b-9689-632ffb73b311"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b7e24d3-2d14-4bf3-8fcd-a02d3c714b2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "248231cc-39b9-45a4-9589-d1c3db8dc0c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa737322-21fb-4358-93f6-1bcd4102cccc",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4199954a-4641-4093-8eec-3541558d13ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9b18fe7-ef74-46d5-b22a-27d5f4adbde5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a92197d-bb63-4c5a-a819-32cafd06c39c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d9d2b4f3-ae71-40bb-9d70-d743e7b118c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39e4039c-a2ce-48a0-ad3a-2fb8ca26ed52",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4afff5c-73f7-418d-aa21-e85223b7f596",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b9ffafd-a5a2-4475-8e39-08676a13e639"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4dd891a-a646-4bf1-bdcf-dd1ddf88ac98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "66a4ca19-a13b-486d-b251-456d810e42ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d388a18-e298-463c-8c9d-8f5e5ad628cc",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb3f75c2-88cd-4af0-97cd-328e4ae0f6d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "c3cf401a-48ab-4bfb-b419-517b0400376c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a864a3dd-b07c-47ca-b7ea-efc37f1414c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "f0c31337-adae-4a1d-b823-3812c53cc42b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2fa77a6e-1e00-4926-9bce-03e3f92f6d77",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "56e40392-d07a-4582-ae99-b19d75c0c234",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2af9e13-7b04-49e3-9e0d-9c3af6120e40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "75f916ab-c24a-4097-8889-ac713c6a1ab9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1adaf09-b0ab-4abc-9815-2004c3197d79",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "dfc2d29f-0a38-40ee-b5b0-9831d0b6ee83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd7b68e2-9f0b-4953-b68b-eed2e24e8629",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ba7f78f-c729-4c49-944d-38bb14b482fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "79e2084a-b427-45f9-abdb-2b769a171062"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69253bd7-0e63-4ffb-96ba-3d17c0c29a6f",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "fded3665-658c-4766-ad33-ea953b6b59c8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "37189fd3-1aef-4e25-8ea8-12aa527eb461",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7e85899d-b387-40a9-8314-c9380245da37"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b951001c-2718-4d6a-9695-eba4fda0206c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6eef8277-d53e-4364-acbe-fc85708c7535"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0beaf987-83eb-4e47-8678-272464202c66",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5a970591-27aa-4cb9-80cb-a0675cc1cd4f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9a658169-a7e5-466d-a088-95ae240ad1ec",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "db70214d-3858-491c-9a2c-2b8e07ea8101"
                }
              }
            ]
          },
          {
            "id": "9d5a014b-9689-447e-bffb-c7f2aef9608d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "115bcdee-85bc-46a3-bc0b-765eba68ab51",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "947aad0a-4525-4278-9f06-3393fcd56543",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8720a373-de13-418c-92bf-db50a76a8b54"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e94898ea-07a7-4563-97e0-5d9a22e6dabc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b4db3f52-60c0-40b0-a4ff-bf0d4f761af7"
                    }
                  }
                ]
              },
              {
                "id": "cda4bd3d-8f06-4d3a-b275-13679e519643",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2a9f9c61-4f10-4502-aa1b-aed6eb90b9ef",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "168c565d-29c7-4cfd-8026-b219ab2406bd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0f404f2f-d28a-496d-933a-85c211e2cfcd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d272f12f-b4d5-4d78-9eda-07ceafcb454c"
                    }
                  }
                ]
              },
              {
                "id": "b0bc1fea-c64f-49cf-acb5-f7d078c201b1",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7f144664-f07e-4e45-935e-6b5279801ce3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "be007c63-5d1c-4f4e-a6a5-66939fee8710"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "07a565e5-415b-43da-978f-c5ee536f4b4b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "cb1c8a0f-788c-41b7-9510-0b909441f8cd"
                    }
                  }
                ]
              },
              {
                "id": "6dff16cb-bff8-44ef-90b3-1188d0dfa686",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "388a1e5b-e4e5-47b5-9fcc-c943f96e8a5d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7f275196-942d-4bc0-a165-296e70452688"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b43b695c-8e16-40c5-9053-8a9e05720117",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "7abc0ee0-ddb3-4f4b-956f-25a15f9d6317"
                    }
                  }
                ]
              },
              {
                "id": "c839df82-7642-44d6-a69a-812d41ae312b",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6554da82-b7ae-4165-90c2-f92f48198aa6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "96442b0b-c6d5-4bed-ad1c-695737af0748"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "47335bdb-7244-4320-9de8-435453f80d09",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "641e3f24-37fd-46c3-bdb7-0513799c4ac8"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "13505b7d-903f-4437-8cd4-e74f3f1388f5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b774fea8-55b2-4eb6-bd70-8c0e914c3669"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3c3b8c0f-231b-44ca-9e2b-3d0d3019e0a2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "634dd10e-7468-4092-bf0d-afada045f947"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c5bc6139-6fd6-4641-92ff-221314481ec8",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"id\": pm.variables.get(\"credentialId\"),",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "f2d910db-ab09-4690-9346-e7658a86061f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e4a80cd1-3a2b-475c-b846-585b1e183720",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8b983cf1-2663-4409-ae20-4e2faa3a5367"
            }
          }
        ]
      },
      {
        "id": "78e2d87c-09d7-432a-a261-cc3c9e17b6a8",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "90e56940-a5c5-4928-bf65-a1b0d8c14a34",
            "name": "Negative Testing",
            "item": [
              {
                "id": "250be3d4-c907-4144-a856-050a27626f7e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0b822b40-85ff-460b-a729-cd951e6084e8",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6604e993-313f-4307-a789-70ef57f6cbdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b36884eb-ee9b-4443-a683-de6dc9b191fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bd22407-3db3-4432-adb2-fd3d586b639e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e05db87-1b3d-4e7d-9204-586b55f5fa64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c3edc36-a0d6-4e10-8437-1c536b2dd8d4",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15408bc4-5e8d-4100-a146-4632e21b4b1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8974c92-3008-419d-b718-a18c98a06084"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ce2be63-62b6-4b2d-9a65-dcf6fc8ba8ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5fd8a380-c973-4d67-92c2-47989fc8356d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a005f92f-bc1e-485d-9e49-23a79425243e",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42882e98-8cbc-4a21-89e9-a10795b06638",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdb23f58-69a9-47f6-8417-4a02a13d0d61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "862af89e-fa4c-4b28-9898-ccd7ab95aefa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec3b4c0b-ec6e-4291-b9f0-00604dca99c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3728acd3-1c95-4f53-a976-2387541c34e7",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "822cdee9-f2c6-420f-8e3a-6576a0d0b041",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bbd5fc7-798d-493a-9520-84a2df36c776"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "124c0aa8-f37f-4692-bead-416a8bec9cb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d642041c-302d-422c-851a-ad7244e470fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98538769-6d13-4a1a-b545-5f32d1240e05",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "013b5572-182c-4934-9daf-c72d19366690",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c974c41-efbf-4285-aba4-43c79ae52187"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "967a8560-4fb5-4145-9aac-c2f564535f20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ec76218-99f2-4102-b680-e4da646d4da7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8b33083-0ed6-4396-a0e7-f25df8b6d588",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2f25185-a46c-4d09-bd7b-286724fb3b23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "996c66b4-16d8-4283-aefa-55d41db532c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1879e133-c449-46ac-923e-cd44705800c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9e98541b-1310-4b93-90dd-451f3818a027"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eac0a086-160d-475c-9f69-d8972eaa9538",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dd21db1-8386-4aa0-a135-d2bb857658f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92d3d4f9-2c49-414c-a019-8617385ce110"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcc98e32-858c-48a1-8cb1-38bb7041b4d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "77b48a74-9cac-41b4-ab4a-6cc6aa4efe06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9eb31c60-afb1-4781-96b7-d4f1b3630286",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3eb2dc70-1848-4d63-8eec-5f83679c2672",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8fd5cc7-0e3d-4dd6-88cc-f4b012f53968"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5364fe39-5481-409b-adb9-4eab98844919",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d71a4e25-3704-43fb-a411-d8960af0b3bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19cee389-eb30-4088-aa37-68881b0db4e1",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "939a6eab-8976-494e-8ce5-f8a54a2ac1c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00b053b8-8a60-45a8-864b-24dab6700fb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42fe33e4-9f31-4514-b1cc-111682d338fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "06ce9d64-c4a2-41ef-af1b-ffc7d21d8cfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2efcf510-c229-4647-98bf-b935e5a6c708",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42ce482b-0379-4d5f-9d2b-c5b78331f833",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d89de4d5-df65-4c7d-ba19-8684698e7150"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce5d81ff-105f-46e9-a617-bc6f68a89471",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b541b4d-c8c9-464b-9ff7-fc9be1972379"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5354e9fc-5a5c-469a-aa47-2395cf19cba0",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff4f718c-fb00-4cd1-810c-7770a22a6133",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5699b69c-36b4-4a5a-a425-375c53212a55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b83fa5c-66be-4788-b2e2-70893c813c22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "352a1971-576f-4920-9935-53e306c3f422"
                        }
                      }
                    ]
                  },
                  {
                    "id": "669ce590-d728-4488-8694-88aab40c28a5",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "496d48d8-ea8b-4856-9b10-048f8463a871",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d72583c6-fb79-45a6-a99e-55d55c55bd29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90133f8d-e2b8-4d24-a5ba-8c18267775a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9d970dc3-376d-4145-a5e0-16ceb7cc2b8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc6faae3-f72a-4556-a610-8b8ec09b3d92",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c71ad838-1b6c-423c-a256-c0e915d79856",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5af63ef6-f021-4692-8c92-98bfb25c97ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "564d0fbe-fa72-4e5e-8623-de38cb779e76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5723be65-7a7f-42dd-bebf-5254552984d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e792f382-8ff3-479f-ad37-ad02320b0538",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7194ccb-a5eb-48ad-80ca-be8e1ca8a8b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a47c7e46-d3c6-4686-892c-b588d7d4bb01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd749892-3af8-491a-b2b2-4957447fdddf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "98eaafa8-0c6f-4f6d-aa73-b0b338e750dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b770074c-6820-4dc3-a3c1-fe05b33aa304",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b269192d-f05c-4183-8dac-a7d3c18afb3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "797c6b7f-2023-4ecd-a0ba-8ddf99a1f9ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a22349bd-9636-4d53-a084-5200335a465a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b1ab4ef-0dd6-4fc6-b5a7-aa6eb06a3915"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cf65566-da77-43a2-a11a-c159b615ecd5",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22a8e6e4-dfc2-448e-9528-edd307a3dd4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cab09301-9503-4d7d-bead-0685d9382d31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "268b14e6-f408-4797-81d2-d5261398b173",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "56bbda6b-e470-4c24-8e38-5de5b7fdd2e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bd327e7-2baf-4b31-b855-3ac0a3efbeef",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e37625d-a94f-4153-aa6e-9d86c240398f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7c0e9f7-4867-4885-9c6e-3b072c7b1a9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f39fb50-70f4-4b25-9950-8802da3da89b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "bbc040cc-515d-49d5-9eb1-b99f8ba2c57a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81c25559-3b0d-4919-a566-b573ea22a9b4",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d3db19c-4329-4ef8-96ac-2a9f92bad05f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a59905b8-d27c-4b6f-a16e-a45d6e007be2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77816f76-40d8-42ea-a5c7-a80efa4eee63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2098e0a0-0fca-4e12-8417-42622d68758c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1186d988-da47-4b4c-bbcf-ec62da86f9f5",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a2aa991-be8e-4147-a847-a2c5b862d759",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd7cf6af-774f-44ff-beca-950625ce4f5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34318e09-9778-4841-8d86-65ff18be29eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e51d94ac-54df-4380-a182-f78b73effa3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6410ff85-f9ed-4228-a735-72530fdfe031",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "483419ac-5e39-4676-90b0-5eda13adf7f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79ac3f62-d2b3-430f-8a4f-e53d16c553fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ffe4ed8-93cc-4e84-bbe4-e5eee7edf0f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "308ff010-ac5a-4f76-b4b8-3bfcc7dc1d82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbc9beea-5a98-4ed7-8758-f4e73f3d748a",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "478bc8ce-3627-4bf9-853f-80663390109b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "002be8d9-0361-44d6-a10e-b429f6fe7f7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "363c16cc-31f6-4bee-a097-27d84aa32b80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef9abc57-316d-4c8e-8fe7-d0f350924c85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c4fe7d2-e3ee-4245-b83a-8320918e29d6",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c346353-2d7e-4fab-801b-b5aa73e647c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f5f8829-6952-4334-846d-76c452702965"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16fd3384-cfee-495e-ba79-a64a2f1b821c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb5a9d41-74a7-46d4-a2b7-1cead31da254"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93d6a615-a502-4b75-8617-3acf1e9eaad1",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c44c6a9-0a24-4252-95bf-dc7815fef753",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34478419-a614-4b8d-9a14-1b4e14e9c52f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "878281c0-4449-4b75-a102-ccd68bcd83c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ea80b3b-95bd-4ba5-9f7a-206ba5d9a2a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75457b94-af67-4494-a4bd-683101aba7b1",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c1d4ebb-4e25-4ab5-b59e-51600307f029",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46224830-8c48-4929-a9b2-f4d1ee676445"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "262456ec-9290-49fb-9d80-bac3e55baded",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "64fd2809-6aa6-4cc9-8a6b-a19a17d52e43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2a49541-b94a-432b-9a04-27cce20826c2",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60d4e3c5-8537-4003-9a1d-10c5626595f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1522199-751d-4acd-b85f-e28cd6820e77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "987f4dd3-beea-4989-b6f0-e6d127f3b3d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b15d626a-090e-4b1f-81c2-1ae7f644f793"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22457f94-adbd-4d84-8672-508cc9f0f711",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7115360c-bf0c-40f5-8160-c8eb3f2d6db1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a81ee802-c5f1-4735-8705-bc0d5d763207"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4596bb37-de21-4a32-93eb-a6ccb27774a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "671a299b-025f-4915-bc48-a160b66d77b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9398e398-73d6-49b4-b358-2bbffc8b51d1",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b3c83c4-8d3c-43d2-b6cd-5e57224aac93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "163e4164-339d-4ed0-bf60-7caec2e6ee6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24b75d06-21ad-4417-b4cc-370ffd0aaa1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "10ce05d0-dd47-48c5-be9e-3971d436d167"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ea1b990-9547-4905-976f-7a0f1e02650d",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9055b4f2-a61f-4735-a5b4-1a5d8a85c0f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20ada508-f206-49f3-9cca-da4c027c140c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "196a5fd4-447c-4d8d-bf01-c12ba490c8f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4775a4a-9eef-4a54-8147-d1fe4d34282e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1f1c0b0-1218-4843-9cba-cffdf02bcc44",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58908e89-6b4b-4b27-82dc-9ea18b721b4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "218939fc-fc36-4d1e-8d22-05434a5b3756"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0402d4e-5051-4bde-8592-a2799f5e5628",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "36473de1-65ee-4a7e-a34d-f6df4dfd8665"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb6917d2-72e9-4e95-8613-44383fcf20ec",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b45cbf92-c49c-4cac-b610-c976429e7c04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28d527f9-4478-4a2d-bf8d-4d12afe2cccf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26718d66-5d8f-4613-8d36-b70383a5cbc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "65465a38-ad37-4a5c-8c6a-35c4a6195d69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50ca4335-fbf8-4593-9784-3ed30d9f95fc",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1851b296-4084-4011-8fc9-209f72632b75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d51e562a-b706-4cd4-87f0-242d2482e6c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21d0fa2b-759c-4cc2-bb66-accced984773",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "58170568-03d1-43a1-965f-5d8008941477"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af6d4988-e470-4da6-99d2-e92b177c9c3d",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01045004-0a03-4452-a33d-c858e6a0120d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e32e21b1-fa85-43ab-93fd-8f1888fcd930"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5a885dd-35f3-49ae-915b-0499b7022b30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "effb9c2f-508c-4419-9c50-4e6238da7ec7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8d796a45-bba9-4173-be84-61fe91117d08",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "20441dea-dd9a-4d9f-b564-f416ec39b1c9",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94998f5c-42cc-4449-bbfb-7057819b90a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7819e20-6f9a-422c-bc0f-aed8181e59de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b6bb32e-3cff-43de-acde-130e090bc0d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c50039bc-4441-448b-ad0b-e72e0173faed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d82580d6-9cd2-46dc-a737-f90166f1c9ca",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7068e13f-4ef4-4cc1-8c9e-f884b6e1c05c",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "82744d4d-e0f4-4604-8bdd-3368c9cb97e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8942b409-fde9-4cd5-88dd-851d1e5b5769",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f94fb35c-62e8-4828-9f2f-6cc58214c964"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f616570f-7865-45f6-9dbc-e9004f15fede",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "537e2965-b764-49de-898d-201f666ecacd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ade77f7b-62f0-4d07-8eeb-666267a679e0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c31c0236-c81f-44d3-8ef1-fc388d77dcee"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "80279c93-5001-4200-b95b-709bd99fa214",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0309d4ff-dd38-4b17-ab16-5104b55a07ff"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2c8f4aae-7988-4bd4-9b08-e5a5a185d77e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b953938c-0492-409e-84af-be484f26d065"
            }
          }
        ]
      },
      {
        "id": "6314ebad-4702-4fae-becd-77dbdafd57c6",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "32a1cea6-084c-4305-b74a-9cd65ff90eb0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7b7943d4-d7e6-48ee-afd9-f431d5750551",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0f3ee766-369f-479f-8192-2e76c9d11148",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79492789-60f5-4f10-bd2e-8f4085868f4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e5ee96f-5c43-4f5f-96ad-eeb19c534865"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b833109-585d-42d7-8993-cea8f5e2364a",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "666f4579-c101-4264-992e-3ee7e3cfb176",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea8c9423-788f-43ce-9216-3874c56d8fe8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e2cf6bd-5521-4652-b357-43cf6c5b4a22",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a728cafe-7f6a-4ee1-9ecb-05cd7fab8d76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24efc97e-cc99-4487-a978-fffaf283323e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "754e0a32-d397-473d-9d27-ccf6d52c2b20",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f973b66-b437-4429-a66a-105705a05637",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6815aa44-643c-44e4-a11d-8f0487f237d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36956b46-be69-4dcd-89a5-ba17265449a9",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d900f0f3-235e-488c-8646-dec61537332d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2646453-602f-4941-ade4-4bea4dc4afad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e32abb3-63c3-44e6-93a8-a61cd9c16508",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cfe87a9-9f9f-4704-8702-2980eda1b162",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ade7c938-7f95-421f-9539-fc23a2bcf388"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2d9bfc3-7ce2-4039-b564-fb4c1b23aa44",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d902bd3-270b-4630-829c-7d50380de75b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78e58d48-1eb9-4956-97f8-0ba3035dd118"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84673cfe-f719-4920-b424-d42ee9fa6500",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23c61608-b2de-4c91-8497-da483fcb75b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6025b435-ec12-4356-9425-a4ece75827b2",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "367d759f-e0d7-42f8-911c-b24c39f16b6f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "649f51a7-1c31-4ad8-b495-fc79bad5093f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b65e80e-b65e-4ff9-92b1-39adb1a102cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59c6b805-d711-4a94-8729-32985035cca0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2af4c86f-f4b6-4176-968a-1548f19835a3",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d040067-c665-4d1d-a5e7-67ebfdfcdcd1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5be1c0b9-ec8a-4fbd-8109-26bed61c8839"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f81de9a3-cd57-492a-a730-f2c587fd654d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1338f1b-5483-4c40-ae30-2feffe9eb11a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cc3344a-b8e1-437c-82e6-61114324287c",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45a52439-e3ec-44e0-a808-236c23acbeb3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "627444d1-0f33-4152-af4b-5c15393a7b84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cd91b4f-df20-47ae-8d2b-b65ef2a9e4d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f38017ba-07fc-4b1b-9d42-4c920343ce05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3737fb32-7db1-4560-ad05-1d62a3cdccf8",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b7d0ffb-f7d4-4a81-8746-c8717dba0176",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "699a42c5-a561-4e93-b05d-623b9b2c7a38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e48fd68b-f370-4175-ad01-46949d8e195d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48f01213-5068-4a9b-bf79-2150fc65c01c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64eefbb8-0266-42c0-98cc-d26860a97283",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57573556-7dff-4065-aaf4-b845293687b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8bc09e8-9ff0-458f-81c1-f51383e87fca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a27d3417-509c-437a-a4eb-a805b15bf71d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "645e5be5-9912-4d36-b3d0-afe2fd8649c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7508a98-d132-4d0f-a339-127e4e9d5b5f",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "430bd923-ef6a-4146-bef0-b759f83fd02a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "228aa5b7-a6a4-403a-864b-ccc2eab88df3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a20631a-0844-4132-a76a-eab3a5f15594",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7223da26-11f7-4421-861c-41838f8bfa91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c7aa7b4-5c5f-4dab-b3ba-00e6fe867425",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75064986-911f-4829-8fd9-77cff0743ff5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27760f61-7be4-4692-a4e9-1caf478e6b01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fb60efb-5aaa-4b3b-81bb-9fcc5e3445c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "694094d0-90f0-4f25-be76-3a7f4f565787"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5610a46-91f0-4bba-b9a7-39b09eefc4ad",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d2e056c-c18f-4c05-8893-08e16e9465a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69eb5ba1-bb0d-46f4-9456-520b82122352"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a9d1aa6-221c-40e9-944d-b0592a0150dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f921b3d1-a3c9-46a1-a77b-67bb44543441"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe6901c8-a6d8-40c4-a5be-cc52a95840c6",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fc1cbfe-1d9a-47dc-9585-1ce11d953920",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68de7b75-c716-401b-8e29-d6fb7b5a3491"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8fad89e-090a-4ce1-8707-fcc5d8059b1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "085770bc-1355-4b16-82d6-a75e4f1383fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab7ce58f-a92f-4c7a-95d5-47451d6db03f",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c73769d-87fc-4c9b-b3cb-d52d1c3f2917",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "730b26cf-bb25-40d3-8891-a9d496067370"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efa53983-b676-4b4d-9722-42331e05c71c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8290e4b-47ff-45e9-8479-7ec72a8ae520"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95598294-b969-4c26-bda9-5b7dbb8340bf",
                    "name": "credentials_verify:vc:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "333b92c7-29cf-4615-b471-b42fde04230f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5e01741-9885-4204-a420-1cfacc198231"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf8389a5-025f-41e0-85f1-2fc9d1d90c8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5add02d4-de26-4563-be84-a55b882f50f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86c8fb27-4f6e-499d-93bc-5545e794ac07",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ad46bcd-3817-4ba7-b658-0740a45a4538",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "693d174a-f847-49d7-a913-f0c3e3b06440"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00132b2e-a17d-45e1-8e02-4ec9e2d9a1c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e040f39-ee56-4f26-aba7-be71faab1edd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b22df81-4905-4dcd-816f-f23ffe8b0a64",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8124b1ce-0690-4651-b864-3a463e2d28ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42f1e8f4-e19c-4107-a22d-1dcfcbfabe15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efa1f1d6-f0d0-4cae-8ba0-961d98971af3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "935077a9-0eb8-4fbe-b4a3-418bd53079fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f19e0fe-98ae-47c7-9718-22c58ea30828",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dabb128d-99f9-4b40-a655-4ebef2e3b7aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc6b99c8-3c97-4cf0-aa63-99616ad30542"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1bb645c-9fdc-409e-963c-a745634e13b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "611d7464-89dc-41b8-a514-4ef1db19613a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9f95da0-bc09-4020-b73c-9c578a3494cc",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ea7a263-4f20-4745-bcee-68a7e263ec31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf3ea04e-74ac-4838-bd92-bf2409ca34a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3688b6c8-8687-4e14-9916-0666d43ffc68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed5a2a6d-c0c4-461a-9d77-bb6646fcd433"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf273551-0cd2-49f4-83a1-28386c75e0b1",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24ff8344-5084-4deb-8526-3f3fe9a82021",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b25e814-909a-4e29-9b99-2376657be4e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8508ccfd-1acb-4dd2-a2aa-5d264861e63b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50219c21-6544-49e5-ab85-6342bf4cd7ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e00a873-e5a1-4a41-9b2a-dbdaead7c1f6",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76f87b44-0cba-4f55-a2c3-d37b20dac2e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8928322-0c83-4e29-a9b2-52ec2c99cdca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec9f13de-e45e-4311-9615-6b862915fcd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b730d04-fe92-4a5e-b17e-f4a0d4a18cea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bac5e595-76d9-45cb-b196-d5f4ec2f3541",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63f01db1-3020-41dd-963a-a328c85cf39c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc5338de-9821-46b1-9979-afdb668fa30a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1f3bce5-8eb9-4a60-a8fd-f4dd6550903e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "641e2a1e-7887-4a14-8814-8826bea5f45c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c271168-95ce-4c67-a089-9d09f5ab7969",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f8e7d47-c1d1-43b0-ad77-0b707d31d8be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "200d3ece-4e1d-4eb9-96b0-799241486241"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e09d7eed-2247-423f-92f5-364a626e7755",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01d1addc-26a4-4e96-968d-94de822098b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d5f4aa4-9bea-4a19-97d0-15ae200f1a8b",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c273ebae-a9e6-4ed3-ae03-13795fafe867",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c0d7153-8277-4e45-9124-816b82851d6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1f84ae6-860a-4290-ac4e-42335f8b166d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "665a50d9-3991-45ba-a360-3a747268cdc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "003ba48d-427a-4d87-8d87-34c79977842e",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeafd882-63ac-4b1a-90b5-045c1a243290",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "258cfca6-7011-405b-bd60-492c2d1368b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bc7102f-05bb-4451-b530-c7d3ed4d23b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eab94403-49a2-4326-9ec2-f6cf95a697bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be93d4c8-6502-4966-8ad3-28e1e02f9ecc",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d83ebead-1aac-4321-9b25-2effb68d591b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab51b3c0-a36a-48ef-9ed9-d88314c7a191"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fc4dce0-aa27-4515-9819-b3a2b5a06e3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e2672e4-1455-4033-820e-a5cdc66e5205"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea000cea-2009-4499-bcc0-dc5854a595b1",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd54cac6-2f8c-44a5-bde7-aae3b4e1f30a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7019c671-fbd7-4a0e-819f-fb66b5b49430"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c649ac2-3a22-435b-83fc-6ffbe64b8503",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc7dd95f-2218-4d36-93c6-18fd9537d975"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5cee4bf-8959-444e-8ea9-7782dcc41457",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d2d0362-ffbd-42f9-ba51-3f2771a43a8d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "970ebd5a-58a6-4fc2-b348-3514dacfc8ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d889420a-3ae8-4783-be78-72154985e47c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "667995ab-7abd-4171-8293-b10694c5c3c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd12350e-fd31-4129-afda-0cfd3eef5014",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b27a9f2f-8732-426c-9fab-492800d83de2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20fd3afd-5ad6-4a54-862f-a5fa21aeee26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90b3cd5c-3171-49a8-9044-6d7c1f015885",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03e9d1e6-3687-4622-a093-afc91407955b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e218af19-1453-4e55-93bc-449cdd355d52",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ae57774-75a4-46e8-98ea-304f5e4216d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72db7202-54fa-4d24-b91e-02fa811db7ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0c228d6-12ea-40f8-a49f-78f734f799f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6090c04-3863-4c35-8a26-ee100bba1a6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d876159-0e47-4705-b008-594ee817c06e",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10438a4e-2545-4273-8a8c-8fe9c1f81b00",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c103d8cc-bdb4-4ee0-96d6-e32873d3b768"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "215576a8-3d85-4f8e-93fd-d644e7ff0d28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36bf3cdb-160a-424c-9f59-cfa42127f968"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58415c96-ace1-4d29-8392-23f4658cca41",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b36b9c9-2ef4-4a17-b7d8-022847fe8cd9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4eac8b1-be58-43b3-92b7-795e003b9222"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf8211d3-1319-4fec-8030-f7b842b67093",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee18035f-99ef-4219-9209-0b11f9db44be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cbe82a8-73a8-4b70-99f6-39de2c5fe78f",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7458cb9e-33d1-42ec-a026-9d475e50206f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "671bab6f-dc71-4a58-b6f9-e1e6f9334cbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "182f329a-e142-4cab-b5c2-426d57252997",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3fe9024-b416-4190-8aee-45b7bc085c6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68d742fd-336d-4329-bf7c-c3a6da414729",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b678a62-aca4-473e-94cc-286d74980246",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31b513b3-b80d-4a0e-9fe7-566075fcdffe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30a12dc2-97ee-44ee-97b3-65dd3e76019b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5d98306-ae71-4b8a-bab8-aed4abf66a8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24e3ef4d-4b80-4da8-9d95-aea7461877b7",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bac9c8ef-d2a0-4111-a204-f03d240f71bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4732ae6c-6c53-4389-b758-7d29ebaa96a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c813b796-8fa4-44bb-aba0-4ed9e03aecf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "313cda17-6b12-4e0e-946b-6518829a2271"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d49ca67f-6345-4e71-9055-9ced7d42acc7",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13ddee19-221a-4223-987c-4dfb98fd45dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b80a6b6-8b85-4177-8314-492d5895be78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f095a4a-0d51-4260-a290-2474f80ada38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94f57716-09da-45b7-8c3a-0aa3d8df3810"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a97bf409-6c98-47bd-a3bd-1f8fe593ab55",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34618933-11ca-44aa-a5dd-ee9478e9699c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2ada476-cecf-4290-9932-faf1c3611c01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d74af71b-0021-42de-b56a-9b53bed2185f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e040350-e30a-493a-bed6-0d7b270ffa54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d802450c-5934-4f02-bf27-eb0bd44842db",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d4ab7f3-45d7-4130-b7b3-c4699265a87c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68078cb2-4a90-4fbe-8448-c0ad62092d9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c0d11af-27d9-436c-8804-0470518c3a1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "115b03ad-8716-41bb-89b2-20d8f1369c30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb5e6e6a-e564-4b01-a814-28291df45f12",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc42a3ba-7de1-4d5b-986e-517aaa488be6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0ce8d02-1e29-434a-a99d-0739a6cab022"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6634db1c-7308-4a8a-a303-7763a0d4b63a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2116465a-f976-47aa-b51a-908bfa591391"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac5fa96f-5650-4398-9e73-ff417096b7d9",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "665104e3-f1a1-48b3-92e6-a9bc1d184727",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18c00e06-6bb7-484f-a71a-c2eb510fa31f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "824da0e4-3cbb-40cd-8aab-ed8829d4c8c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b2b2726-60cd-4b2c-a71d-ad2c4d8fa3e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "112c6557-c046-4523-b24e-40a1c26fefe8",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a234dc0-83d2-4c5c-8516-4e1146a53f92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20febaef-cd23-4d3e-bb13-8e219818cf13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61c23e24-e821-47a8-a2b5-d5654f6f02ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "856246be-ad17-4e0d-aaa0-7ac3b4af8693"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16b1c09f-c05f-4627-a17d-d40aea4f0d2b",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "643f5c98-3486-47db-9e9e-ee220678ce50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5626e350-e3df-4b82-87b5-a779952e7418"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83578137-7ed2-4650-a9fe-1365b8c632c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c010f059-97a5-4471-bd37-56b808920e8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6654a000-5c5d-47b1-bd73-8c8b03f17981",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fe05fcc-7cf6-405b-9585-3a2567e49565",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e205320-2263-4672-bba1-d99eb9637247"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c5a7cd3-4c2a-4e2d-af59-469ccab7d183",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b009df1b-ec29-497c-9a5d-d74971063b58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4171268c-4980-4b79-864f-6b35e9f5a56a",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "893a214d-ffdb-4157-89fe-85640fee480c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8208bc3-1027-4ec7-9899-09f67b668d23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "746bfbca-93d7-4929-9a7c-7f0366bb1631",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59047991-59fe-4c2c-ad28-abdf8a2f55d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78404af0-fce8-44af-b1f3-244edf810ede",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "616c45cd-aba6-4907-b0a5-b0c9a03bdf43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c177a45-9e72-4848-800e-8807a1c6b86e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ceac49f-e46f-4fb9-8882-868df0442862",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "480a82cc-6502-4fad-a370-c4c55de41aac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "512401ce-2487-4df7-880e-ed0428676c58",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48afb84c-23a8-4eb8-b29f-d4763f85ae33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cffa9ddf-93ce-4ae3-8135-c2e04d6850a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c467cf27-7b1e-4494-a8a3-218120b7cd1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ad43fd5-98f2-469a-8fbd-147dcf628c6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00047c4b-2e42-478b-9396-83e771862e91",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "199ac0e6-3f8f-4d2f-b1ec-3e0392b76496",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6814a4da-00dc-40a7-9c72-5e6b9ae1c4f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7921d35e-1d85-4d96-8062-3e982a1af76c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d9e4157-e1f2-4237-928d-52fedeed0337"
                        }
                      }
                    ]
                  },
                  {
                    "id": "638bc8cc-58cd-4ebe-afd5-40caf86b9990",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b9aa8c3-a852-4781-b2da-b420c40cb0fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bf60ece-13c7-467b-a59c-da74d82907da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c867b31f-8b1b-48bb-832b-459f450a75b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d3e0471-52cb-4068-a7f7-a6c45df7f251"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f9c2608-9127-41ec-8e6b-790c97a8454e",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9add6f41-415b-4cc3-9826-17b726b815d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5820407d-4609-4720-a5be-63120a6b8c3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7bda482-ba23-4ebe-a37b-310946f99bb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "363c5593-cd16-4cae-9f46-4d02344e22ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d359ed88-7e4f-45d4-83b3-38b9080ec45b",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7da718f-966d-45fb-934c-e423a7f4acfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd7444e5-3052-44cb-bc56-7fd9ce0bcdce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "939ff622-35cf-48d2-a54d-585be52f439d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c761c0cb-8308-42f1-ae45-cc613c297bc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d264a05-e61c-4903-99c1-4eae7827e6de",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb1ab577-28ba-46af-8972-039c89e336c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "233c88e8-54ee-4b3e-a823-f088fa021c50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fad5db6-c874-44cc-9811-36861d6caa6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e3dfea3-a16c-4d06-a0e4-cb09f03783d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c9dcc8f-a3c5-4758-9b2b-0c5ea03c4f7d",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ef4f728-9abf-4939-9f62-186721db2cf6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb0b577e-5416-4330-a726-c50790d2f329"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e41fbe08-ab53-4591-8c13-f84771a9aa7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28364e64-c982-41ff-8531-925317f97306"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06237d58-734e-4b38-8f06-9916ca265e2f",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55732d2a-ced2-4026-946e-4d347fe9cab6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a6353a5-7340-4399-9b85-2360c84338f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac8a67b4-a87d-4f61-8645-2db310e21c5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34dbda4f-eb2d-48a6-8497-72556470eadb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52c2968c-e16c-44c6-9d65-0ee1785bd101",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c89a606-2193-4b4d-98fc-f5d0758df127",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7498f1f-217a-4e8e-b2d4-47ebb9bebf0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "660bc580-b659-4ff1-9ae1-40ce5a6e00d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "630b3e30-3f3f-4bce-b3e9-e1bb940557e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c137cb4a-c03c-4a75-b203-2a1c41f96b05",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b546512-03ff-4e41-94f2-40a1f9999483",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a1a30c7-0858-47c6-af43-c15b765d7304"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9f3e1d0-3d17-4432-9d3a-350650721005",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7af3372e-d3d0-4750-9190-857b61f57e82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59600a51-5ce5-4b54-81bf-0176bde6163e",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7782d64d-ee2e-4808-af3c-060abe41d1b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e28ae990-ac55-4432-ab56-639899e8d902"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40244a7a-32c4-4757-a157-d156ab45c1ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b17e0397-3fe1-4aba-921c-5b03de040129"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54442568-b0e6-4b8e-b797-d20ed7381c31",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67b99a1b-f2df-4796-b2a2-8aae6f28f3ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "610054f3-28e8-4185-b94a-cdf56cd10860"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bb93c63-2adf-4f3b-8a27-4c465785ad49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62e713bd-50e6-4a9c-9232-819bb66d7e0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8e9214f-fa6c-4e1c-bc50-757f2a353efd",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bc10a96-521f-45d3-a54e-23c301d2ecce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "296308c8-110f-44ad-aece-7d38844abc3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcf37a27-2f37-41f1-ac2a-2cc0251e4d3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56ff1fc2-0107-4898-b252-a7ce317e7f3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e974012-a49d-41f0-88cc-f4060b84065c",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09e78df8-0da0-4cca-9edd-8dec5ce891e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f70edc14-62a3-480f-9e5b-e3e38902a382"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ca30d4b-8018-4196-9d58-c971e79e4727",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16c99b81-7a78-45fe-9719-13e0d77b1ad9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7828d72d-7a99-4fc4-8582-05b27a9e0e51",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1a8bf4b-cfc2-4c01-9cc3-89bf021a6598",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c56af659-ff4e-4ffc-bf40-565deb652fee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "787eb2e0-d03a-4b65-b485-e737df8e4bb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7215f5a1-deeb-45c8-a6b8-7cc50e7af285"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3a42bf0-4b4e-45e0-85ce-b01ebc2438e6",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "264ba406-809e-4974-92f5-ecdf1e2a0921",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d419a49b-1e1c-4a7d-8307-05b88b67dc1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dacced0c-83de-48e5-bbfb-92b0d0ebc5b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae03ddf9-40a8-438c-bb68-8f9cfd3800cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50cdf60f-8d9a-45e4-b983-d2d62cd5620d",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "447c24b2-bea5-438e-8cd9-04b6b70a8bd7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7fbcb9db-222b-488e-a7d1-957e57fed0cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ec34db0-8f78-4b0c-8df5-2d8f60c382ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47921421-6702-4ee2-b534-d5643baeba50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cf1d819-8a58-4c9c-b301-2468059ed2f3",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d195b5a8-e72b-464d-9a53-9a4c386ec9f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "815149a6-525b-4b09-907f-495292c79c89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9addd6c6-291d-4cf0-bab7-57849aa22ad0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b36e5a8-f399-417d-b47a-ee504c52ddb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd24122a-4585-4622-888c-c859bf75bf60",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7442b034-bd24-4609-9fc2-e3a58e68b2aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43a6f5ba-7ee9-4191-9216-2df3afb37157"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "211ccd56-317b-4e8d-b406-226dbd111ae2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46c17942-2033-4dc0-bc29-658d7f4fb868"
                        }
                      }
                    ]
                  },
                  {
                    "id": "442ea734-b5c7-41cd-8c33-f056a5fdf67e",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cbf7722-8446-47c9-8e35-240e6d6b1ae4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "915da85c-8a20-4f58-8734-c24b6e80269b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72a4d829-dd46-45dc-aa20-b20d030339f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11247b9b-f0c4-4251-a605-7bdd6cdcab11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4c2b817-b514-4b0f-b067-28e6cb8025ff",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2366e84-c907-483a-a0da-92e2dcb33dd3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e1c9b90-da4e-4d59-b52f-74ce2cc4c9b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c15f1553-1eb6-42f9-bd83-d14271fbb9cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "844e23ac-88f5-4812-a905-8cac8d21912d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4e6ad42-9eb3-4c99-8ff9-5d5090f2d7fd",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ece94375-814f-4553-b851-aae3ca0f1ffe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "214891d9-87de-45b6-b744-ac853de7ec58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ae8280a-718c-446b-87f2-897696b05cfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5323bf74-b6a0-4e7c-83d0-4ded8e811d56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "695f82b4-f7e5-4158-88e8-7bb04a92555a",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca3d9258-db8a-44df-bd96-f86dead5a9a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc124fc6-f4ef-4df1-9788-067d8469b8b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cab38623-8d1b-444f-a902-0c7ae04aa8ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e8ec047-0956-41f2-844c-377a1f1cafa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db3610b2-7634-4995-afe3-97714a7ca317",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7159eb17-21f2-4f5a-98bc-ec342e34505e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd7005a4-a3b8-4564-b595-e1842421c09e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3937ec2c-4387-4e91-93c7-75331ecb9c46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3722d7a3-9a52-4e85-82d8-438e0ec98e3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c70f9bc-2f75-4d94-83bb-ee5c55fcbf5c",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72d0af0f-bde6-48d8-9f33-aa6b7ef22c49",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6240d28a-4c5a-4e69-b780-241bb306961c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdc2b1f3-f890-4ef0-81eb-e008b51270a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "477ff7be-2657-4720-8b76-3be9338f2440"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e41514d-a38f-4fef-a411-b0296f762f4c",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ee23251-f8e0-421a-892b-f9ae4aaf4f15",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d658a0b9-743b-40c0-a26d-fa887a060413"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90dc4c25-6417-4d1c-8ff0-0638d313dd4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c54e5630-ad6d-402b-a778-eb4801570322"
                        }
                      }
                    ]
                  },
                  {
                    "id": "727bec41-1819-445f-84df-887b97522b2e",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63d64de0-ba57-4992-bc62-9d830c3e2a5b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9945404a-eaaa-460c-82d4-b8b4071a3cef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5663fabd-1183-498a-916c-1b0d62f12e24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "266811ac-ca05-4471-9b08-00f500346bdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1f80f29-0dba-4190-bf6e-5e5158d79c1e",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fe643f3-6357-4889-a08a-079134277fb7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "988d5926-3079-4cdd-be69-c8817651339c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d17fc3e6-a019-4838-8f67-8c722fd2c5a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c271aef0-d945-4dfc-afe8-af88c75865fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e52af9a-20d7-4504-99eb-a08684270fca",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa81adbf-d8fa-4604-9a72-fe3af48e755d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1076a244-f4e6-4abf-b9f7-d7758e75c5a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "896cf0e4-8e05-434c-8d45-08385634713f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6534e318-53d4-4b71-a74c-e05d3a578394"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69b062e7-8cbd-4cf9-8a4b-b4bb71e039ca",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14f187f3-4964-405e-bbc7-21028b02a278",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd130849-1562-4923-864f-79203b6b3f62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a036077d-48a3-4249-95c4-8f9fd13baf33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da933536-5535-4d93-a4cc-3b68951fdd6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "664fbd4c-74b8-41b2-b636-9f53404a0a6a",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "259320e8-ef37-47cc-bc31-f020a8bb312c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a167292-b129-4900-bda2-c71b5502f484"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52495819-689f-479d-aa73-28a95015c840",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1003d6e4-0869-4b5c-8c87-9a9b4e8835d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1876d82f-e971-4c3f-aabb-ac44b72558ea",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7409d9f3-eee3-4c61-8fa1-29cce0a7987a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33f96e99-c7af-4122-82b1-e83080db5e30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79681e2f-f809-432f-ba1b-eaaba63e8b23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4db98a93-4a15-47cc-b499-759749f54bed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dd2ca8b-f4cf-4af6-9643-f96f7d91e895",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97f4caab-d189-46eb-815d-6433675b5de8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5acc1820-0263-43f8-b29c-7867a78550d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "988a62e0-dee5-408b-a7e7-cc89cc105934",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b74e5112-3308-4a35-92ec-93537a004587"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb1db120-ddf7-4ccc-a13e-29bb613abeaa",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "492d596d-c25d-43a1-b23b-2706c002c646",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c82a9f27-c47a-42fe-88c5-4053172b375e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfbee02d-fbb3-4b76-8b63-cfc518027fbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b3f307c-48ee-4cff-8b5f-f121f0a27f7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7321aabd-48e8-450a-81f6-fedba22a4bfa",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e700d14-7cf9-4487-932e-2b109993de4d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d3bd64e-efb5-42ea-a298-8b9fa47ac497"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "541f9bad-5eba-4c86-b7b4-460db8f3455f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d06838b-1f31-40b1-8238-5d623e2d5d39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06ef0b27-0fa4-4f68-b1f1-ee7ecf2c94b5",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cde49ccb-ee64-442c-b40b-fa24175b038a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a56d118-d457-466f-9590-ccf70c3f7e66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0f09a14-5fb4-428c-bf07-1a2034fe96d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea1b7ec1-be5b-43b4-9e66-3a88db120354"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d02fc8ab-4d43-4aee-b8c2-e9a512465703",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53798131-a4b6-4574-9ef8-e992c9c5f262",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba6cf462-b187-42b8-aedc-16bc07ab090c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b58fa50-6cc3-486c-a0aa-218a818bdcbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40e8efe8-060f-4443-8a38-2e7df5237ebd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57aa1b45-9efe-4cac-b832-530ca7bac9a1",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eabf75c-650b-4477-8355-7d4e6d9902ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4fa41bd0-c40d-4686-8e10-dbc426a507c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bda42a7b-732c-4ef2-be4d-0000a40aa543",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e0dff4e-3002-4087-8e29-c78aa75afeec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb081258-fafa-4c45-9751-ba6494626b2f",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2339f20a-e4e2-4027-9efe-69ffbded691c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "547cb32e-b7f8-4dc0-b780-b89fa7511072"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dce9f4f-ec9c-41ee-8959-f374e8d06108",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47ef7fbe-3b19-498a-90cf-42929d0b1b16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd669410-154b-457b-a69b-4616a24cf330",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5855655a-4bfa-41f1-b1c3-7cf4544971e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1781a01a-9665-46ab-a65e-c018b9857518"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b753db98-f927-4185-b1fd-ba5269cf1d53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe4b78cc-3676-4aa8-9522-6e26cfe31e4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c088355-bbae-4b0d-b2ab-374edb0153bd",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17004da5-6125-40b6-8d79-52619c262ab3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad62fab3-0fc7-474f-8cc3-d7ecc62bc0e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69b9de4d-4b43-463d-90d7-989d3273371a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e31d72d-689d-4553-a3ce-0a3bacbba2b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f9ca52f-5a77-4895-8154-5289daf7f5d7",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78aa6d37-a475-4a2f-99ad-d0c927d04946",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee9cf0f4-65b6-47a7-ac96-f4dbfb4e3d6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c96f6b0-168d-445f-bb57-574618eb15af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d16c9bfc-128d-47db-a7f0-84dff8b2b7e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7027d1ce-6e90-42c7-8b76-4bf44695ffef",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c26e46a7-7896-4f13-b1ae-1ef6e5f0c43f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d9adf42-59ef-4a50-9274-753402fdf4c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb4d8543-9ed4-4ebf-a182-5cd91cb703b9",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60c5cbb9-3b26-4f01-95bb-1235f7f34359"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59556095-fc88-4ab4-bfd7-590f606ee53a",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f87c856-848f-40da-98a2-cffa67e2f588",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "265a5ed3-785f-4a51-b862-7d6ef31400ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "065f59b3-b898-4bf1-9747-d9741fdf7550",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c41c5cf-7b9d-4103-b77e-5843a25300e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "424be13e-4847-41fc-890c-8f1c84f313b9",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e684e3bc-b174-4bad-b6a5-a9e971f26532",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd48f46f-a269-4ee7-a408-3ca94f7f259f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c339355-e382-434e-b3b4-75417b664987",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc60c994-152d-4ed2-ba00-1bd6e0a1f108"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bd4af95-f69c-4c9b-a107-52071f1d3c48",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3a077e5-4bfb-45dd-9fb6-23104964a59d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44874d2c-05ed-4f1f-aede-74f09224da2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4f170e7-bc59-4862-8f83-1410ebf81ac5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9232d576-0953-426b-a364-a4b8680bab90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f9543e9-96d6-4b5c-8eb0-f99b8067b112",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53fc0c45-f4e4-4d8d-b158-e345b8ff54fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0fb0907c-4eb0-47eb-be6d-ffd3c9f5c95c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4c94587-690f-4696-a03d-19f6898bca11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e4fc256-d26f-4828-8152-566154162399"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2d3fd13-b1bb-4b7f-8ca7-c4c104f3dda9",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2999966-7fbb-4ee4-ba91-058a07bd67e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "397696dc-f432-4a6e-8c99-43bdd9d72670"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64d4a11a-4663-4065-84cd-a83d8dab38bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58eb4378-d91c-449e-94bd-aa00bf357a8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae6d9a4c-54ec-4dae-a199-c062558eaf85",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b0e8c2c-9313-4a69-ace4-51415473503b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a6aaa888-e008-460d-b445-0c5de98596d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fe2249a-34e8-404e-a734-fb978f5c18c2",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0da5eecf-86f0-44cc-a0b0-520e85ed3f60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e874313f-7b22-4521-8320-d76ee9933aa4",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5323eeb1-b47e-4225-b364-c8ff5f8b85fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da231fb4-7e98-4a21-84a4-94f0db89d003"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de7042ed-5a47-4a2c-a537-67c7b6f3f1e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4534660f-36d7-433c-923b-c31f29725c5d"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9ccce036-ea42-4571-ab34-38369066d462",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "29d533c7-f964-47f7-a31b-9c8cc87bee7b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0a347ffe-6349-4795-960e-46948b1edc85",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c01f1ca7-b067-40d5-b356-02b370d96acf"
                    }
                  }
                ]
              },
              {
                "id": "9b09e701-28e6-4664-8441-e61fb01da87f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2abc9b0d-bd05-4360-ba97-c7b31492876f",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "571fab9f-61a3-47fd-99a7-39041d0d50d5",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "ac282491-8894-4b46-abc6-8d06dfad8a07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "532ef434-cf48-43e8-a5a5-e4772a22d701",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0732fa3c-12a0-4a7f-a5cb-07726bc7c570"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7140ce7c-3f29-4297-bcfc-ad604fd05bdf",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63b5f034-4345-4422-9c74-ea84852806d9",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "cbcc65f8-306a-4588-8a29-03d0339d5d1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dea53a4b-1fff-4e41-98cf-cbf29bf33ad9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "67f4e66e-13b6-4c1c-8806-3b3c83e5b613"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "50ed3ccc-8b3a-40fe-b884-9eb1afca937d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "33e66785-e12f-4835-a0e0-dd9f2175c2f8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "20cac5f6-d80b-492b-98f9-9c2aef6f598d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dd4978eb-627b-478b-9c99-d92158b1965e"
                    }
                  }
                ]
              },
              {
                "id": "9329a0e6-8ae8-4bd8-91f0-183fda505e48",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "0df5a689-a844-42f8-9f6b-b4af583b1f28",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5575c9f0-7a76-4a9c-b2a0-d15442927a8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "7092bbb6-20e6-4932-bf8f-8c4319e4c71d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cba0a1f-2b5d-4185-8ab1-3fc89428c481",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5b5f898-d7b2-4174-a92d-ac5e7de67e68"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "13c739e8-9a00-4388-bc50-100d0a35294e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "28ed8da9-02c2-4688-86bc-ee685a9336d0",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "983e6357-a78f-48de-a860-c8bcf29477b3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "8d227090-ea03-4e34-86aa-e8e56451b61b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4c04aa73-9c61-470e-8d77-e69886ab73f7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d2ef72df-fce6-46bb-9799-2b82b083cf3a"
                    }
                  }
                ]
              },
              {
                "id": "74afe0aa-f3b2-4edf-a775-d50b88c0b4ac",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "05c96b14-0066-425c-94b8-b920e89f1893",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "144c49da-04ed-4ec6-8f84-d78bebf831e6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8ecf296d-61ec-4637-80b0-10b9163ea59d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b01a5a57-4253-43f7-9c2e-d832b4322f66"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a220e1c6-d6b7-4d95-9875-54b75848577d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "a8ee30a5-aac6-46e2-bf45-014ec6128b8e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f28d4129-f36d-41c1-a341-12130b3605a7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "90b3ea0d-0580-4e26-97e8-4af2c7df0f34"
            }
          }
        ]
      },
      {
        "id": "3e104744-8e4a-4257-9e26-39da69227c2d",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "6fac790e-20f6-4759-bc21-646eb11fb0e9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "95e25848-1e88-4d14-8623-06a2c749a66d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "41c2f525-baa9-43f4-baed-72da29953279",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c6e25bd-ee80-4085-8dca-0a4d0a5a57c2",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "cfd94123-1aa5-4cf8-a45e-99249b38a5b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19e065d7-7305-47d9-8650-31efb01b86e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4d0c032c-fe3a-4271-8f9c-59b4836f6a43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42d2e83b-958d-4d6c-b8af-92c46b75e56f",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3148bce5-20ef-4257-aab7-0bcd03478c96",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "9748345a-a482-45e8-8431-6967f5a1134f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15e4a05b-f492-4c67-b549-63f05e3b8850",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1b83027d-55d5-4415-bbe1-47dd43cc58ce"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4a17ab2d-8d2c-47bf-9407-828a5492f6a6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ac4dc067-338a-4909-84a5-120fa66152f6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "243aa726-701e-4932-8599-42a3e60badbd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "baad3114-9231-4699-a2d4-a024e9567fc6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9008ce40-5f3d-47ee-8e71-ef23a231e092",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "1138b9b2-4ca9-4d46-8416-2b675ef101c8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "63b2edd0-13b5-4cdd-85c1-78221142f5f1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "92da6376-1bb4-427f-80a3-df0891de4d3f"
            }
          }
        ]
      },
      {
        "id": "9724649e-248d-4de8-af81-5d539c1e0f8c",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "9a5556b1-99ae-446d-8aab-4cb310ef9a1e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e4853986-a4ac-4d23-b865-4d3a97de8303",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1091ec19-cdb0-4068-8255-f2822b010876",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c40acf86-0235-439c-af24-8ba0f76ea743",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "3cc1bf12-6dac-4933-876e-2b8dbc411ce4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e28fd12a-4c34-4bfd-82ab-2b63ca3dc079",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0180d326-b59a-4462-aad4-1a1d8ce7b49e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec38b08e-ee70-4629-b517-bc9a0e514e1a",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "266f5651-be94-4cb1-975e-e568a157cb5a",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "6022728b-e087-4211-8891-49e98ab38e38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea5f2b0e-9986-4854-bc9b-10bddcb306eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8fa1cc7d-e84d-4e2b-a120-7eb7f7feb18e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d94cba1a-9e43-4c6f-b041-e7a35c0560e3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c81a3cf7-55b2-4f8a-8973-5adee1b851ef"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "01434e46-4a88-454b-8e5d-fa7a1ec301d5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "aab2c5c8-6cc0-44bc-96c9-7fddfaa4617d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c7845bac-ecd7-4b35-85a9-78bb60e9d5cc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "0c29837b-bdba-4cf2-85e3-24715ec52a98"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bf41aa79-952d-4944-86b2-159a4558ef78",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cc58cf6e-c8fb-4a8b-b4cb-c7f5bbb162ec"
            }
          }
        ]
      },
      {
        "id": "f6d73841-d34f-47cc-9a18-68bc4d667c9d",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "0fe79f11-30b8-48fa-bda8-994f1717fbba",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bab69649-c037-4cc6-b466-bed393966316",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b983f20a-c65a-4ecd-ae56-3e4dd666f47c",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9070082-8817-4d78-b46c-ba9a5930450a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "79f9d20d-7e70-4e55-ae17-5d9ac09c8871"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a19537c7-73aa-4e49-8da1-c3c78e6a1001",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8029b529-643e-4964-b74e-f41b67393f2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0550aafd-aa7c-4a22-8c23-b2e168e124a9",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70a96339-fd70-4e56-acd6-b2d66243b6e4",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "ec840ae0-387c-45d4-b58e-6816523ecaf2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a377f6b-8243-40d5-8907-bf6d344c6f75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "05fc61d7-2883-4908-b97e-9228103297a7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6fad3460-dc02-4387-a4af-2bdb6a0837d2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5dd312ab-1551-469c-887a-1851980cbfd3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d9f8aaaf-d5ee-4002-9e6a-b87143f51dc4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "424ef360-e63f-44a7-b945-bbe58a803dd3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3144abc7-954f-4310-947d-0ad65deef21f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "177b23d3-9e74-4869-a286-872b03b06220"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "44369d6c-8615-437e-af12-74ac04c7f206",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "842d5f84-dcd5-4cc4-9c31-e94ae76e6b17"
            }
          }
        ]
      },
      {
        "id": "0496d38a-27e8-49ae-bdf0-5c2e383d41e2",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "56a39107-c219-4141-90dd-abd95bb3ab37",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5db0b651-01bb-47bb-b470-e0fccbfe3948",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "cad81623-bcda-4efb-9a82-d217a6011d36",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ae5a6de3-081b-4c2a-9189-1e8e5ba732fa",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3f2385fc-1892-44aa-ac50-10b8256dd840",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1925,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 262,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 517,
        "pending": 0,
        "failed": 28
      },
      "testScripts": {
        "total": 967,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 958,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 713.8931297709923,
      "responseMin": 22,
      "responseMax": 5021,
      "responseSd": 698.094300722253,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1676162573796,
      "completed": 1676162771419
    },
    "executions": [
      {
        "id": "20c51fcc-1edb-49fc-aebb-6abbf388cc49",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 253,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "220153ec-df08-4b34-900b-8145eab22d2f",
          "httpRequestId": "a311f20f-201f-460f-b78c-f6c08acbfd0a"
        },
        "item": {
          "id": "20c51fcc-1edb-49fc-aebb-6abbf388cc49",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "78406a35-2087-4340-9f7f-7f39345c6b14",
          "status": "OK",
          "code": 200,
          "responseTime": 85,
          "responseSize": 0
        }
      },
      {
        "id": "714fc8eb-9398-46a3-89e0-8ad7402463bb",
        "cursor": {
          "ref": "c46e934f-6549-405e-af31-c67c6b7676e7",
          "length": 253,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "4e46d86b-24c4-40c8-8694-34e24ef73a5a"
        },
        "item": {
          "id": "714fc8eb-9398-46a3-89e0-8ad7402463bb",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "36f6b6d2-3734-4c18-8441-babce86290e6",
          "status": "OK",
          "code": 200,
          "responseTime": 22,
          "responseSize": 0
        }
      },
      {
        "id": "cb1b0530-4f70-4435-bebd-0a1338aa6af8",
        "cursor": {
          "ref": "d7964a28-6a55-4cbd-ab38-ecdffba9c6dc",
          "length": 253,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "51d288a6-8f4d-4ad9-8561-c2c227b6c7b4"
        },
        "item": {
          "id": "cb1b0530-4f70-4435-bebd-0a1338aa6af8",
          "name": "did_json"
        },
        "response": {
          "id": "05d5a303-6826-47af-8ccf-3d47826317e2",
          "status": "OK",
          "code": 200,
          "responseTime": 962,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bed0e64-414e-4752-b3be-61c8a71399e5",
        "cursor": {
          "ref": "a92978dc-7c3f-4f0a-b3b8-833fdc5ccd66",
          "length": 253,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "0bd68005-1d69-4301-909c-e8f4887bdf1d"
        },
        "item": {
          "id": "8bed0e64-414e-4752-b3be-61c8a71399e5",
          "name": "did:invalid"
        },
        "response": {
          "id": "b950bed7-698c-42e7-9992-3a54ef622b9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 699,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bed0e64-414e-4752-b3be-61c8a71399e5",
        "cursor": {
          "ref": "a92978dc-7c3f-4f0a-b3b8-833fdc5ccd66",
          "length": 253,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "0bd68005-1d69-4301-909c-e8f4887bdf1d"
        },
        "item": {
          "id": "8bed0e64-414e-4752-b3be-61c8a71399e5",
          "name": "did:invalid"
        },
        "response": {
          "id": "b950bed7-698c-42e7-9992-3a54ef622b9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 699,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c23ef2b2-b379-4752-ba85-3ea13e3efc92",
        "cursor": {
          "ref": "e1af2d05-d69d-4256-8f86-c8ca260aa0f6",
          "length": 253,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "3f854bb1-7eed-4121-8507-65e2f30ea95c"
        },
        "item": {
          "id": "c23ef2b2-b379-4752-ba85-3ea13e3efc92",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "2174f1e7-0e49-48d7-a0b0-2a445af81ffd",
          "status": "Not Found",
          "code": 404,
          "responseTime": 755,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e308a25-6dfe-4472-a4e7-4f47ba433883",
        "cursor": {
          "ref": "3fbfef1d-0279-429f-8346-483c0a7ad02e",
          "length": 253,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "75dbb737-40c3-4ec6-9334-4aca666ecf15"
        },
        "item": {
          "id": "2e308a25-6dfe-4472-a4e7-4f47ba433883",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "a63b49c4-0be6-47c0-9f56-2f8bacfff03f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 612,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab215a42-6cda-4602-9a78-d8916f766dfe",
        "cursor": {
          "ref": "9969030b-76a7-461c-8dbc-29f8084adca6",
          "length": 253,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "7df017de-e52d-4af1-9499-f3a8c5a51297"
        },
        "item": {
          "id": "ab215a42-6cda-4602-9a78-d8916f766dfe",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "c8e3f1fa-e088-4774-988b-d655dd498552",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 68,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fe43bab-9b17-462c-8de4-61d55c58e965",
        "cursor": {
          "ref": "4c361f5b-beab-467b-9c2e-1ec2d0917910",
          "length": 253,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "28ab5618-496d-43dc-a949-bf207a4fca37"
        },
        "item": {
          "id": "3fe43bab-9b17-462c-8de4-61d55c58e965",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "8e660d2d-ace7-431a-9467-e2c566db00c6",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 611,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fe43bab-9b17-462c-8de4-61d55c58e965",
        "cursor": {
          "ref": "4c361f5b-beab-467b-9c2e-1ec2d0917910",
          "length": 253,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "28ab5618-496d-43dc-a949-bf207a4fca37"
        },
        "item": {
          "id": "3fe43bab-9b17-462c-8de4-61d55c58e965",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "8e660d2d-ace7-431a-9467-e2c566db00c6",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 611,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30ae048b-6644-4c0b-9baa-867de74ebe8f",
        "cursor": {
          "ref": "e7928064-4dea-4a0c-b7d5-98915923d561",
          "length": 253,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "a15f9bf1-fd19-4c8a-b095-33f581f227f7"
        },
        "item": {
          "id": "30ae048b-6644-4c0b-9baa-867de74ebe8f",
          "name": "identifiers"
        },
        "response": {
          "id": "4fba6b98-3041-49c3-b541-126975b33cbb",
          "status": "OK",
          "code": 200,
          "responseTime": 998,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43321119-6dfe-4f14-8b03-9abbfa5f94e3",
        "cursor": {
          "ref": "6afb9764-a028-42aa-aa2d-d85c17f98653",
          "length": 253,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "1b9536e6-d4a7-4258-918c-d7f17d3ac887"
        },
        "item": {
          "id": "43321119-6dfe-4f14-8b03-9abbfa5f94e3",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "b0409721-ec32-4911-81c1-d18695dc638a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 609,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43321119-6dfe-4f14-8b03-9abbfa5f94e3",
        "cursor": {
          "ref": "6afb9764-a028-42aa-aa2d-d85c17f98653",
          "length": 253,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "1b9536e6-d4a7-4258-918c-d7f17d3ac887"
        },
        "item": {
          "id": "43321119-6dfe-4f14-8b03-9abbfa5f94e3",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "b0409721-ec32-4911-81c1-d18695dc638a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 609,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f66a1823-a97b-471a-b26c-399a5028ec07",
        "cursor": {
          "ref": "b697a08c-32d5-4291-83ec-9638d050a495",
          "length": 253,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "61351b8c-2458-4b3b-9e21-23a841d5b2d5"
        },
        "item": {
          "id": "f66a1823-a97b-471a-b26c-399a5028ec07",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "466a1538-c1c4-4ae5-8d2e-6cc7415eeff2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 633,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf7f764f-2c03-4081-a78a-517b4193287a",
        "cursor": {
          "ref": "8dbabccd-b190-487b-96b6-d4fedd03b55a",
          "length": 253,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "ab80345e-bffe-4520-bcbd-6957bcd53e5c"
        },
        "item": {
          "id": "bf7f764f-2c03-4081-a78a-517b4193287a",
          "name": "credentials_issue:credential.@context:invalid"
        },
        "response": {
          "id": "94d45abe-9ae6-4079-ab4d-3b1c754bc7e2",
          "status": "Created",
          "code": 201,
          "responseTime": 2961,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:12)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:12)"
            }
          }
        ]
      },
      {
        "id": "8f18f46f-face-4dd9-970f-d8d630258966",
        "cursor": {
          "ref": "3b650a8d-f3f8-4938-9e20-d267887d1db4",
          "length": 253,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "757fb905-ddb2-4859-88ca-52480850151c"
        },
        "item": {
          "id": "8f18f46f-face-4dd9-970f-d8d630258966",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "136bc581-2f79-499b-81bd-3344bc5bae13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 721,
          "responseSize": 1117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9db5d91d-6498-418a-b199-a8a81101b9ff",
        "cursor": {
          "ref": "9c937ec2-7745-40f2-a194-c27c6453f42d",
          "length": 253,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "11fd4e87-9623-40c7-ad21-f55f747b6871"
        },
        "item": {
          "id": "9db5d91d-6498-418a-b199-a8a81101b9ff",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "ed41f1db-5b03-4305-89ca-3aba06076c83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1070,
          "responseSize": 1114
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c83ff59-35ed-46e2-a226-4a29b11f3ad0",
        "cursor": {
          "ref": "b41f79e4-c94c-45c0-bc76-0d273d3af376",
          "length": 253,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "6d151717-1f4d-4fff-a5e2-21becc6c3870"
        },
        "item": {
          "id": "4c83ff59-35ed-46e2-a226-4a29b11f3ad0",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "d503051d-957e-4b0e-ac6d-e25cb46e4358",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 992,
          "responseSize": 1116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14f4b1be-de8a-405c-8ed7-d192e89a9ed8",
        "cursor": {
          "ref": "47242f11-87c2-4d42-9d8a-d53afcf8a9fe",
          "length": 253,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "28b3bc98-40b8-4bbc-bd0b-a38165001072"
        },
        "item": {
          "id": "14f4b1be-de8a-405c-8ed7-d192e89a9ed8",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "45c29c88-6ea9-485a-8180-468ce5850dc3",
          "status": "Created",
          "code": 201,
          "responseTime": 3361,
          "responseSize": 723
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:16)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:16)"
            }
          }
        ]
      },
      {
        "id": "e4c21ed4-6341-4630-8b62-131524d96a70",
        "cursor": {
          "ref": "6e5e047a-96ec-4bba-9f44-197a7cb16ae8",
          "length": 253,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "b29aafa5-16be-402b-9b67-67f49aed075e"
        },
        "item": {
          "id": "e4c21ed4-6341-4630-8b62-131524d96a70",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "ecea68c1-4332-411f-a8bd-ae0419c2c2eb",
          "status": "Created",
          "code": 201,
          "responseTime": 2855,
          "responseSize": 712
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:17)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:17)"
            }
          }
        ]
      },
      {
        "id": "6def55ac-6620-4d89-a4c7-aa348e103a3f",
        "cursor": {
          "ref": "188de9ce-6c4e-4a86-b005-405d6c6c7e3b",
          "length": 253,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "8f7dcbe6-4f79-49ff-a11f-08d5f4c9917e"
        },
        "item": {
          "id": "6def55ac-6620-4d89-a4c7-aa348e103a3f",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "61a0a146-da60-4679-b778-161a7d47abfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 646,
          "responseSize": 1574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b9e8577-bf76-44b4-a11f-bee11c6f7276",
        "cursor": {
          "ref": "c5bc39b3-9c73-494f-9fb0-ba2f1964abb6",
          "length": 253,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "141bc81f-fad4-4ab5-9b5e-f65071146538"
        },
        "item": {
          "id": "6b9e8577-bf76-44b4-a11f-bee11c6f7276",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "6ffa828b-b3d5-403c-8f86-7ba7fdccf21a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 640,
          "responseSize": 1543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d64eddb-debf-49d0-be54-b2396107be9a",
        "cursor": {
          "ref": "e7c7bf4d-877f-46e6-9456-4aee8a89322e",
          "length": 253,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "53ae6319-42a4-452e-b1dc-82a36b75dd1f"
        },
        "item": {
          "id": "7d64eddb-debf-49d0-be54-b2396107be9a",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "2cf00bed-e0db-4f6d-9082-37316b5d7074",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 619,
          "responseSize": 1540
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4422ff6c-063e-4dd4-a4ac-87556daa5851",
        "cursor": {
          "ref": "66f56fd5-7872-4f62-8ff4-16fd59a1afc3",
          "length": 253,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "451cd7ad-0ba5-4ee3-af56-23e5fb75e3f3"
        },
        "item": {
          "id": "4422ff6c-063e-4dd4-a4ac-87556daa5851",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "4d92f57f-85a7-4492-b58c-f5e1bf7f6f89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 611,
          "responseSize": 1542
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f59566b8-2ac0-44c0-b4ef-95d8195240d5",
        "cursor": {
          "ref": "ae13d548-afdd-4e70-a38d-bce6fe02ee40",
          "length": 253,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "629632b2-8738-45c5-95b6-c060f1684d58"
        },
        "item": {
          "id": "f59566b8-2ac0-44c0-b4ef-95d8195240d5",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "12024c8c-03bb-4d89-80de-1c80204469f0",
          "status": "Created",
          "code": 201,
          "responseTime": 2958,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:22)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:22)"
            }
          }
        ]
      },
      {
        "id": "98a3e877-b3aa-4986-bf38-76af5ea7e0c0",
        "cursor": {
          "ref": "fc401874-4c20-49f0-a9fa-c0b11ed3815a",
          "length": 253,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "b6c5489a-c4d0-4f91-ad9b-c8f6de3b91d2"
        },
        "item": {
          "id": "98a3e877-b3aa-4986-bf38-76af5ea7e0c0",
          "name": "credentials_issue:credential.id:missing"
        },
        "response": {
          "id": "9f449772-0a92-4d4a-90cf-60849eb65d5b",
          "status": "Created",
          "code": 201,
          "responseTime": 4401,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:23)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:23)"
            }
          }
        ]
      },
      {
        "id": "d6866253-343a-4dbb-95a4-55dcf85197b3",
        "cursor": {
          "ref": "f2c693dc-2a9a-4754-b6f2-9cfcffe98251",
          "length": 253,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "57f6a25c-6a0c-4ab5-90b3-651a9c710a0b"
        },
        "item": {
          "id": "d6866253-343a-4dbb-95a4-55dcf85197b3",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "855478bc-600d-4811-83f7-84251141af13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 624,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bff08cf-ef62-467a-84ba-bd31a9fccacb",
        "cursor": {
          "ref": "59ce1983-e595-44cf-b4ed-5c9e5cde0ca7",
          "length": 253,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "22dc15fe-6a6f-4da3-a2f2-3a4b278cc979"
        },
        "item": {
          "id": "5bff08cf-ef62-467a-84ba-bd31a9fccacb",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "1165db9b-89f7-4da1-b099-a0a9063685d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 640,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23afb9e6-26b9-4c7d-8127-8a622191eaa9",
        "cursor": {
          "ref": "54674771-60df-4dd2-8fa1-6c807cb517c5",
          "length": 253,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "f75ab1aa-40a6-4f61-9e02-e3284bc08a3b"
        },
        "item": {
          "id": "23afb9e6-26b9-4c7d-8127-8a622191eaa9",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "73bb29c0-a4c3-4e86-8748-a1849cc06c64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 619,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6cec5f0-196a-41a5-907d-ab4dd94eb2dc",
        "cursor": {
          "ref": "46c3b94f-91dd-4ac7-a2d9-9916e72ccb48",
          "length": 253,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "603105d5-f7fc-4e9c-9a82-a996f9ebcedc"
        },
        "item": {
          "id": "b6cec5f0-196a-41a5-907d-ab4dd94eb2dc",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "021f51f0-c1f4-4834-89f7-c76c4bf7695b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 650,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b7fb813-2538-4754-9794-84822985c295",
        "cursor": {
          "ref": "36d50400-c2a8-47aa-8bcf-7cb65908eb94",
          "length": 253,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "2e7d2b65-407d-48b7-861e-8f567ae8c4b6"
        },
        "item": {
          "id": "0b7fb813-2538-4754-9794-84822985c295",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "3474e86f-9fc3-44ea-a23c-1c9ddce9b624",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 666
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28c2c80e-c30c-4565-8eb8-fb95a782045c",
        "cursor": {
          "ref": "ae8dfedb-bf4f-41b0-8211-ab8ecd081268",
          "length": 253,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "432f299c-1393-4247-886d-1c345011566e"
        },
        "item": {
          "id": "28c2c80e-c30c-4565-8eb8-fb95a782045c",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "6bfe1a13-b815-4c93-8d6f-e5db181e5309",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 613,
          "responseSize": 647
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fec073f7-b4cc-4b98-bd3b-a0c384b9d92d",
        "cursor": {
          "ref": "02451eef-a149-4473-8eaa-313fe88f2a64",
          "length": 253,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "dc5cec0c-4bd4-456b-89a8-1c9544e7ae1d"
        },
        "item": {
          "id": "fec073f7-b4cc-4b98-bd3b-a0c384b9d92d",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "9d6eb239-f7c5-4d5f-afbc-982b7769674f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc116c9a-0517-40f8-bbf7-1ee2286561f4",
        "cursor": {
          "ref": "138bf33d-6a1c-463a-85e4-17c6538e21a2",
          "length": 253,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "5af10ee0-aa5f-4bc0-886a-4d048d0a2873"
        },
        "item": {
          "id": "cc116c9a-0517-40f8-bbf7-1ee2286561f4",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "aca48245-ae82-4588-a5d4-b04e898890ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 747,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e55f5c96-2a5d-4481-99dc-70db3742f7b4",
        "cursor": {
          "ref": "98c3c6f2-167f-4638-aec2-e9ce030a4868",
          "length": 253,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "6338e52c-cb7d-4f72-880e-9b4090e16d53"
        },
        "item": {
          "id": "e55f5c96-2a5d-4481-99dc-70db3742f7b4",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "8f283d5d-5b92-425f-a9d8-f680b6b5a78e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 704,
          "responseSize": 641
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1223bb3-474a-4ff9-87ab-72f9adc1d1f8",
        "cursor": {
          "ref": "7fce4bb3-275b-423e-a89b-905cfe65ce24",
          "length": 253,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "bb9d5347-aab1-456c-84ac-df3edc6b8d2e"
        },
        "item": {
          "id": "f1223bb3-474a-4ff9-87ab-72f9adc1d1f8",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "218f85fb-1318-445d-b203-e82943a35793",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7843d27-5969-4a98-a68c-139a46428c45",
        "cursor": {
          "ref": "6a8220f1-e35b-48d4-adbc-032ee8e4e839",
          "length": 253,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "4573928c-cbc6-4f30-860a-dca5093a41b3"
        },
        "item": {
          "id": "f7843d27-5969-4a98-a68c-139a46428c45",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "6c1ca896-ee3a-43a4-91c8-aecbe4829cfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 610,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15eb4ceb-cae9-46c8-96b0-86c7d4481680",
        "cursor": {
          "ref": "c56edb58-416a-48ae-b777-b93e824df00a",
          "length": 253,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "c3c6c1e7-41fc-4edb-b0eb-70856cd11f81"
        },
        "item": {
          "id": "15eb4ceb-cae9-46c8-96b0-86c7d4481680",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "adf553a9-4a0d-40ca-8e76-12ac8b3dfd79",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 2400,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:35)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:35)"
            }
          }
        ]
      },
      {
        "id": "d6943a7c-c523-408e-9365-bbdd7f511842",
        "cursor": {
          "ref": "69196829-30fa-4633-8306-c9fe86e4025e",
          "length": 253,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "0c36270a-16d3-415d-95c3-0c9f4832541c"
        },
        "item": {
          "id": "d6943a7c-c523-408e-9365-bbdd7f511842",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "db4da17e-1f68-4e35-8075-7bac690f1857",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc17b025-fcea-4640-a732-72d9f378c078",
        "cursor": {
          "ref": "da6d08a6-b876-4bd5-90e4-dc3dcc771fb5",
          "length": 253,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "36073686-7898-438d-9bf5-18cf14373d96"
        },
        "item": {
          "id": "cc17b025-fcea-4640-a732-72d9f378c078",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "6009ecc8-9368-4cd5-aeda-dbf6bcba85b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 628,
          "responseSize": 677
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e45e1c8-a9b5-4352-894f-62313980876e",
        "cursor": {
          "ref": "ba73ef80-93ff-4277-81e2-bf2c3fe5f2d7",
          "length": 253,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "8baa8678-cd89-4d5c-9bb8-2f87e781951d"
        },
        "item": {
          "id": "3e45e1c8-a9b5-4352-894f-62313980876e",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "632e510f-3532-4982-aaaa-81691b6c9c48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 597,
          "responseSize": 674
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2912949-be92-4b67-9e8f-f51119a00de1",
        "cursor": {
          "ref": "42cc4b7c-5389-4723-94d1-4c6d52df1531",
          "length": 253,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "a1cb3966-c547-48ee-8b96-0ded74a13666"
        },
        "item": {
          "id": "c2912949-be92-4b67-9e8f-f51119a00de1",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "81c51c46-fa98-418f-95d1-e95795f49632",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 768,
          "responseSize": 676
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf9dddf0-4ed0-4685-aa0f-94ed3afe8bf3",
        "cursor": {
          "ref": "ceb15d6d-91be-45a5-bbba-d6de29bf9630",
          "length": 253,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "c5304402-939b-46e9-b32d-6ec9c25abd52"
        },
        "item": {
          "id": "bf9dddf0-4ed0-4685-aa0f-94ed3afe8bf3",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "75ebd71c-7af9-48a8-b244-a5d201ca9ea5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 674
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72566ce4-cb54-4b3f-a364-910959b01fa8",
        "cursor": {
          "ref": "6d1af67f-c279-4c95-b83c-999663f5f8eb",
          "length": 253,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "df97b183-e099-44a3-ac1e-5c7eed1544c8"
        },
        "item": {
          "id": "72566ce4-cb54-4b3f-a364-910959b01fa8",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "5c9c5110-aac0-4ccb-adf6-2758f4f8f06c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 588,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5deacd1-4cf4-48e7-9b99-1d1826a29595",
        "cursor": {
          "ref": "195cb850-74c0-409e-a288-8536458ef5b7",
          "length": 253,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "e2985c4b-7aeb-46f9-8e29-153c99b64efa"
        },
        "item": {
          "id": "e5deacd1-4cf4-48e7-9b99-1d1826a29595",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "7a7382ae-a9d9-40da-897f-854eed13d994",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 1099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96641386-83bc-4e55-8e42-c9af3c6a09d0",
        "cursor": {
          "ref": "0cf91e70-1a1a-4552-bf1d-2af3f08f7db0",
          "length": 253,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "2728d30f-7f69-4369-a1c7-8b5a3f1df7c6"
        },
        "item": {
          "id": "96641386-83bc-4e55-8e42-c9af3c6a09d0",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "03ff7e3f-51c5-4114-a264-59f6ac098d40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 1028
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21cd2dce-76d1-4d7d-8005-3f3688848275",
        "cursor": {
          "ref": "d91b2d74-7113-4dbb-96be-99c87ddf7d5b",
          "length": 253,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "c1d0d8db-c674-4d1f-a245-a58e7b688c73"
        },
        "item": {
          "id": "21cd2dce-76d1-4d7d-8005-3f3688848275",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "b4a77863-e582-46db-85cf-6091fa79bcb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 625,
          "responseSize": 1025
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4c15002-36ea-4fc4-9c49-af82d064d7d7",
        "cursor": {
          "ref": "c198eee1-e24f-49f7-9690-5e23c35930c9",
          "length": 253,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "6ff0001d-bbe5-4aa8-8054-26e633467a0c"
        },
        "item": {
          "id": "c4c15002-36ea-4fc4-9c49-af82d064d7d7",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "6ca0a936-0200-490b-b307-6d052e03d712",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 637,
          "responseSize": 1027
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6850be52-d88e-41ee-bae3-7c86e139a2bf",
        "cursor": {
          "ref": "a055be6f-cf89-4024-80c4-36d216534e68",
          "length": 253,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "cc350253-a2a5-473f-be5c-8f3b43eee372"
        },
        "item": {
          "id": "6850be52-d88e-41ee-bae3-7c86e139a2bf",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "480a8a51-cdc3-40c7-8c82-cde646db2793",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 619,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84b16ad3-3c4f-4f27-9ca1-0fa6e9f7dcf3",
        "cursor": {
          "ref": "5abe7f7c-2bce-469f-93d5-d12d666147cb",
          "length": 253,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "2198f456-ac37-45fc-8b6b-2746f8e8319b"
        },
        "item": {
          "id": "84b16ad3-3c4f-4f27-9ca1-0fa6e9f7dcf3",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "0c91de34-456a-45cb-ac3f-edbe1a6b8e1e",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 666,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6093c0a-9793-4704-8c8d-82a924bfec41",
        "cursor": {
          "ref": "1f389d1a-49b7-433b-a539-b81cb8e47efc",
          "length": 253,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "bfd3158e-d75b-48c4-8f8a-5ced93f87fda"
        },
        "item": {
          "id": "d6093c0a-9793-4704-8c8d-82a924bfec41",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "88af6960-4f3a-4e61-bc0e-35421f7aff8d",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 600,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:48)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:48)"
            }
          }
        ]
      },
      {
        "id": "fa84c000-bd75-4855-8036-404c113da1a7",
        "cursor": {
          "ref": "420be269-1ec6-4fa5-9248-d9d32cfa6e28",
          "length": 253,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "74e9da7a-6ed1-4d94-a057-67bed64ddc1a"
        },
        "item": {
          "id": "fa84c000-bd75-4855-8036-404c113da1a7",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "b2d5543d-9c22-4f29-88ba-ebb6d634062d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 1438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15d41acf-198b-4d2a-aadd-b3b40a190819",
        "cursor": {
          "ref": "a86a0dde-aa6f-48dd-bdb1-6eee52e74c3b",
          "length": 253,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "bba6878e-4151-4f79-8b9e-6afc124a44d8"
        },
        "item": {
          "id": "15d41acf-198b-4d2a-aadd-b3b40a190819",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "bf069859-cd40-4a94-8ed7-92396f7fdcbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 601,
          "responseSize": 1367
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cf8b4b7-3485-457f-841a-911ab1e85dab",
        "cursor": {
          "ref": "e3a5fd0a-895e-4a69-86cb-2d8960ea8316",
          "length": 253,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "e77a884b-e3e0-4fcd-8ad2-b092011e190f"
        },
        "item": {
          "id": "2cf8b4b7-3485-457f-841a-911ab1e85dab",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "c5f41326-3389-4644-bc6f-f82bbd7399a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 597,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea849a11-c015-4381-b23a-e63b7676487a",
        "cursor": {
          "ref": "1bd36e29-3b9c-455a-ad6c-5c036c1c9499",
          "length": 253,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "4426db27-e705-4766-9652-184b7f54e40e"
        },
        "item": {
          "id": "ea849a11-c015-4381-b23a-e63b7676487a",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "ed711695-3e58-45b8-a997-d41643cd6e06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 1366
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4e84748-4980-4bbc-b31f-c2df86e1f77d",
        "cursor": {
          "ref": "8ff099e3-62ce-48ed-a1ce-af1199c3d899",
          "length": 253,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "6fd07a85-25e9-4a00-a3d6-2253aec2649a"
        },
        "item": {
          "id": "a4e84748-4980-4bbc-b31f-c2df86e1f77d",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "49fec332-682f-4f4f-b307-dd3a4814a18a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 582,
          "responseSize": 1769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb7f74fb-2551-45a9-af55-34b9e3664817",
        "cursor": {
          "ref": "77b4dd71-9805-4788-8004-1edcc1decff6",
          "length": 253,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "6f92cbf4-afe6-4907-98ff-6aadd5e278e3"
        },
        "item": {
          "id": "eb7f74fb-2551-45a9-af55-34b9e3664817",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "e24964dc-dae8-4342-8c7b-56b81adec5d6",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 671,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab0670e4-ca60-4352-9575-b31d45cfbb21",
        "cursor": {
          "ref": "1de0d3b7-4943-449a-9b31-ddb636d75ad9",
          "length": 253,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "80efc9c1-9468-4e7b-96db-9eb3a4fca32a"
        },
        "item": {
          "id": "ab0670e4-ca60-4352-9575-b31d45cfbb21",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "2cf9243c-8f5f-4452-90cf-0fce10d8b3eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 657
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ad55096-a166-43a0-ad7c-4e760aa47095",
        "cursor": {
          "ref": "ae1a38c1-1d5c-4ac5-9deb-e606b7463440",
          "length": 253,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "beab1eee-2468-41bb-9984-9c68eaabb195"
        },
        "item": {
          "id": "8ad55096-a166-43a0-ad7c-4e760aa47095",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "c7fdaa26-f401-44fe-b37a-650c946d08e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 588,
          "responseSize": 681
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fc65e6e-6814-4743-92aa-2f15b3ad30fa",
        "cursor": {
          "ref": "045a1559-d7b1-4edd-8c54-6eb60b96d80e",
          "length": 253,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "64099a4f-51d9-4125-adea-31d07706c88c"
        },
        "item": {
          "id": "8fc65e6e-6814-4743-92aa-2f15b3ad30fa",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "38b244e5-35b1-4796-b182-34d261850f7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 803,
          "responseSize": 662
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a97005a0-910b-4d0e-8225-afc930492a32",
        "cursor": {
          "ref": "95bd1ba5-1c50-4cb2-a793-c2b9d59e5f2e",
          "length": 253,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "c60c7db1-84ed-4cd6-8342-868ba9421e90"
        },
        "item": {
          "id": "a97005a0-910b-4d0e-8225-afc930492a32",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "2a442b14-c9fd-4223-8e7e-226da457c1ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 910,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45dbb071-dd89-48dc-90db-260573ef4a8f",
        "cursor": {
          "ref": "210f88cd-fba2-4f90-9596-f9bc51a32e27",
          "length": 253,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "ffaa878f-1f16-4f14-95ed-aec9acea6d0f"
        },
        "item": {
          "id": "45dbb071-dd89-48dc-90db-260573ef4a8f",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "e33cf624-38e1-4d81-a205-aefde5b834d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1214,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c9c4ee9-0385-4c9d-8cf0-3dffb9fcb813",
        "cursor": {
          "ref": "57ec3595-5cc4-46e0-9551-820a695a2abf",
          "length": 253,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "7c0f53c8-5d5e-4273-9fd7-3e07a6551b1c"
        },
        "item": {
          "id": "8c9c4ee9-0385-4c9d-8cf0-3dffb9fcb813",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "cbb4cd64-26a3-4238-9452-124dfae489e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1623,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54af504e-aee4-498a-9e4f-1d6d860c7434",
        "cursor": {
          "ref": "d819d1c3-df8b-4b44-b0c5-86a79a55144d",
          "length": 253,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "e864ca67-042e-47e5-8999-2bc27b8598c3"
        },
        "item": {
          "id": "54af504e-aee4-498a-9e4f-1d6d860c7434",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "7a14eb66-b426-4387-9c20-32ceb6fc3c23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1627,
          "responseSize": 712
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63db27c9-f31b-4632-9083-b9627ab9a1ee",
        "cursor": {
          "ref": "5f3778a6-5f79-4f94-a3e3-5d08fdd63f17",
          "length": 253,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "cf36c9f8-81e1-4f1c-b90b-3e586edd20d4"
        },
        "item": {
          "id": "63db27c9-f31b-4632-9083-b9627ab9a1ee",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "db406d60-d554-4c90-b319-b3769db19e54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 994,
          "responseSize": 682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d75c008-7a55-4dd2-9c23-32f22b678ece",
        "cursor": {
          "ref": "75e2078d-bc5a-4aaa-98ee-1d6b5cae7476",
          "length": 253,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "73935492-9a4f-4549-afd0-32ea31015155"
        },
        "item": {
          "id": "5d75c008-7a55-4dd2-9c23-32f22b678ece",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "5dbb2c61-094d-43a4-9d34-27b2d745c035",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 900,
          "responseSize": 1153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b04702d-836e-4d00-b6c6-a13bf8a0bc5e",
        "cursor": {
          "ref": "29346276-79ae-49ca-b5d7-2b7a67b84829",
          "length": 253,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "be18b9ef-ba00-4872-b25d-8c38197f0b96"
        },
        "item": {
          "id": "6b04702d-836e-4d00-b6c6-a13bf8a0bc5e",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "42081e9d-df5d-44e6-ab20-74684b001e80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 610,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6bc0fbc-61e9-4629-8177-a469866dc65e",
        "cursor": {
          "ref": "0bc730c7-f391-478b-8b3f-a87d789f6b99",
          "length": 253,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "b4d224ec-4f7c-45ed-92b5-9b0d62ab8bae"
        },
        "item": {
          "id": "f6bc0fbc-61e9-4629-8177-a469866dc65e",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "dd7b3d50-e532-4fee-9d0e-a0c6c5b569db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 959
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ec6a1a4-4010-41ff-bbd6-c53a0e409c34",
        "cursor": {
          "ref": "55f87421-fa28-4fba-91fb-a32a88ca1a5e",
          "length": 253,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "983b0a6f-933f-41a3-93ca-9bcb389d759f"
        },
        "item": {
          "id": "2ec6a1a4-4010-41ff-bbd6-c53a0e409c34",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "37046593-ae4d-4795-af4e-fbe32484bcb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 622,
          "responseSize": 961
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b7e9f27-eca8-4b61-9ba9-e62b0de79788",
        "cursor": {
          "ref": "b1d929d4-732a-46c9-a9c4-22edd6dc017f",
          "length": 253,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "5523a024-f77d-4bed-a343-d9f4123b5185"
        },
        "item": {
          "id": "2b7e9f27-eca8-4b61-9ba9-e62b0de79788",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "6bc516d0-75cc-4da9-872d-6e2cdec259ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 619,
          "responseSize": 974
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cd1ac9b-8c49-41ef-9a4b-f6a2de189f00",
        "cursor": {
          "ref": "9d820fbe-0497-4664-b732-d798215ff0db",
          "length": 253,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "0e2922d2-4ae0-4684-b0e1-39c43d151e1e"
        },
        "item": {
          "id": "9cd1ac9b-8c49-41ef-9a4b-f6a2de189f00",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "67ea7b7a-20ad-474f-a51a-f7ec1dfa937a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 598,
          "responseSize": 1468
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ca0bbb6-d8a2-4077-8f32-26e44d973d64",
        "cursor": {
          "ref": "2cd36a21-03ea-4be1-82b0-70461d10f031",
          "length": 253,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "3f0c432c-2ac8-4110-8a33-dab5f7c3ce93"
        },
        "item": {
          "id": "3ca0bbb6-d8a2-4077-8f32-26e44d973d64",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "67cf3fe8-5450-4d1d-8621-7f38dff81438",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 625,
          "responseSize": 1454
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d62b08a2-204d-4fee-8f85-f3de9082c440",
        "cursor": {
          "ref": "a6ff8bc9-4b80-4773-b68a-9599dd0939a4",
          "length": 253,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "e72f2e38-985c-4467-984c-f05340090bcf"
        },
        "item": {
          "id": "d62b08a2-204d-4fee-8f85-f3de9082c440",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "e7a4ddcc-35a5-4954-af9f-c9a60a2a3340",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 701,
          "responseSize": 1451
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "838b304a-3ebb-4152-92a6-5825e34b9546",
        "cursor": {
          "ref": "dcccf631-59c2-4eae-b6f1-4c1d0f22dc56",
          "length": 253,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "053548d3-3ad4-4cf8-8d05-cb08646ff2e0"
        },
        "item": {
          "id": "838b304a-3ebb-4152-92a6-5825e34b9546",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "13118305-6102-43a8-95dc-081f84dfa398",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 618,
          "responseSize": 1453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "759e14b1-9018-40fc-86b2-43325ed08738",
        "cursor": {
          "ref": "29564f4f-8a89-4774-9032-37899c5ac187",
          "length": 253,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "ad87e44b-5386-41b7-aef6-fe00abedddca"
        },
        "item": {
          "id": "759e14b1-9018-40fc-86b2-43325ed08738",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "4cd4df09-bda9-4bf5-9aaa-dbfed5e5c7e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 1451
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba3b528b-e1ae-4441-a1ba-44fd66de275e",
        "cursor": {
          "ref": "629e2dc2-581a-4b15-80d3-61372124e7fb",
          "length": 253,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "6f01ebf6-5a28-4629-902c-257726d838aa"
        },
        "item": {
          "id": "ba3b528b-e1ae-4441-a1ba-44fd66de275e",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "b46f28ec-846d-4a60-9fc8-cc91c7434e44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 624,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2681aaf6-96d3-400c-8a2a-1c907011aa68",
        "cursor": {
          "ref": "cda31f35-ca76-4a35-ad28-87513ca7ac18",
          "length": 253,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "e374a733-2ae1-4451-8a0c-a68c30d946bb"
        },
        "item": {
          "id": "2681aaf6-96d3-400c-8a2a-1c907011aa68",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "8681026d-82c9-4732-849c-73bb5365d469",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 936,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73aaae1e-c0f6-4d4b-890f-026d249c3f4b",
        "cursor": {
          "ref": "370d6652-eab6-42ba-9507-3919801d6995",
          "length": 253,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "04f5ab34-c104-4c97-b9c0-fa9a7eb7db81"
        },
        "item": {
          "id": "73aaae1e-c0f6-4d4b-890f-026d249c3f4b",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "96e518a2-018c-4c04-9106-33b369a02736",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1138,
          "responseSize": 613
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40de6bdd-6018-4bf0-91b5-8d416cdfd02f",
        "cursor": {
          "ref": "87b1b1c5-da7b-4664-ba0e-c16e479b6ac9",
          "length": 253,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "59a0b516-02bb-46e0-8c51-71ee7942a05a"
        },
        "item": {
          "id": "40de6bdd-6018-4bf0-91b5-8d416cdfd02f",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "b3ffd472-8141-43a1-8ead-a3763da9d714",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1708,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e80b3b0-13d6-4f76-acc6-1aa9ee267a67",
        "cursor": {
          "ref": "50fad62a-f48a-4678-9426-6f9b9c2648aa",
          "length": 253,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "6f3da3a0-7056-48c8-b080-e1227698c233"
        },
        "item": {
          "id": "9e80b3b0-13d6-4f76-acc6-1aa9ee267a67",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "dc6c23ae-7177-4644-a101-70e35bf57600",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1569,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa4c851b-6ac2-4121-9da5-483b204e81c9",
        "cursor": {
          "ref": "c499b752-2648-4444-9f64-2c804b154d74",
          "length": 253,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "824b8df9-c24a-4e1b-ae5b-0ff0737626b5"
        },
        "item": {
          "id": "aa4c851b-6ac2-4121-9da5-483b204e81c9",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "da6bf709-83d7-4baf-aa74-e0b6e540b3e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 964,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40cf9807-b77f-49bc-b52f-55905a2f8979",
        "cursor": {
          "ref": "6d5e86ef-960c-4fe0-9981-de6a85b6b605",
          "length": 253,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "c25259c6-202b-4eaa-8412-58810f2dc2ca"
        },
        "item": {
          "id": "40cf9807-b77f-49bc-b52f-55905a2f8979",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "fdbd0c77-9f5e-4a2d-ba03-3b08fe575413",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1015,
          "responseSize": 647
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1113c401-43af-4bfe-835d-2bdd9308a9cd",
        "cursor": {
          "ref": "d432be83-dc45-40b8-9b29-f9af5a027b61",
          "length": 253,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "7d7da9f7-b72c-401b-86d6-38c281c7d28a"
        },
        "item": {
          "id": "1113c401-43af-4bfe-835d-2bdd9308a9cd",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "2aad7b86-5017-4908-879a-a34604e299a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 765,
          "responseSize": 889
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cfee5a0-c83d-444f-ae80-038c9352ae8a",
        "cursor": {
          "ref": "91231cc1-704d-4b6d-acdd-10eb01cd5737",
          "length": 253,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "cbd4bd65-19d0-4788-9ef0-56c12f2a581a"
        },
        "item": {
          "id": "9cfee5a0-c83d-444f-ae80-038c9352ae8a",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "87e6de94-93b3-4293-9501-9a5200be8d5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 870
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99131079-fee2-4aa4-b9ec-5d3dd96899ea",
        "cursor": {
          "ref": "17ac28f5-13fd-4c1b-a60b-7271b5e1ef47",
          "length": 253,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "e336e72e-149b-4d4f-a041-6619451de843"
        },
        "item": {
          "id": "99131079-fee2-4aa4-b9ec-5d3dd96899ea",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "16f3abc5-e29f-45ea-9845-2c29d926dda6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 635,
          "responseSize": 867
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae1d6ad0-468f-4fb5-86a5-6f05ed0e67df",
        "cursor": {
          "ref": "fbdb1a47-f55d-4b3b-837f-5190e5fc1cd2",
          "length": 253,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "4e9d407a-4e53-4f21-9929-0506177aee1e"
        },
        "item": {
          "id": "ae1d6ad0-468f-4fb5-86a5-6f05ed0e67df",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "602be7eb-ebd9-4aec-9b88-7fce94a587a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 619,
          "responseSize": 869
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f82b204d-5bbf-4578-af6a-3a9c1723a525",
        "cursor": {
          "ref": "f5d7646e-1b8f-4d0b-9f0b-f45ef534e78b",
          "length": 253,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "fbeec131-2474-4063-8f7a-8d880b133d70"
        },
        "item": {
          "id": "f82b204d-5bbf-4578-af6a-3a9c1723a525",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "59c84c9f-9587-4d3e-b08d-66cd7e63c2a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 656,
          "responseSize": 867
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "676c54ee-9efe-4e1f-89c4-5e7924929cec",
        "cursor": {
          "ref": "9b23bb3a-239c-4af4-98e0-f580b20abf26",
          "length": 253,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "e508f6f1-088f-4269-b56d-889f9d39542e"
        },
        "item": {
          "id": "676c54ee-9efe-4e1f-89c4-5e7924929cec",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "22521631-835b-43f0-bec4-99d97a394c03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 819,
          "responseSize": 738
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d953065-3b70-4295-ae6b-702d827509b2",
        "cursor": {
          "ref": "0133d375-2d19-4b69-8d10-2b1bc8e790f5",
          "length": 253,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "9ba4b46f-c7d7-4f4d-aa0a-b1ee8b526a50"
        },
        "item": {
          "id": "0d953065-3b70-4295-ae6b-702d827509b2",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "56bafc71-33d0-437e-835d-204843b57c36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 872,
          "responseSize": 706
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec417c6f-2275-43b5-b1d6-bdece7618e72",
        "cursor": {
          "ref": "5f618de9-e61d-4f6d-9f4f-9b8b60e99506",
          "length": 253,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "8928f8a3-5ea4-46b8-8441-86007d8a01df"
        },
        "item": {
          "id": "ec417c6f-2275-43b5-b1d6-bdece7618e72",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "8fb372b3-7154-4b34-bbb1-27e3d2041b54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59119cd5-a00d-49b1-8728-b1e142fe9e54",
        "cursor": {
          "ref": "2064d016-8a09-40d9-a266-20ba69b55f88",
          "length": 253,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "50b72281-2518-4066-89bf-e6c96b0138c0"
        },
        "item": {
          "id": "59119cd5-a00d-49b1-8728-b1e142fe9e54",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "f58be394-9ba4-4b7f-acff-72d6fc5a9830",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 649,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92e29dd9-5144-4944-849b-7f658e3fd6ee",
        "cursor": {
          "ref": "cd4c6a31-e199-4702-955e-d326965afbfe",
          "length": 253,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "44733def-dcb6-453f-a2c5-585bce50b5c5"
        },
        "item": {
          "id": "92e29dd9-5144-4944-849b-7f658e3fd6ee",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "52fb4dc0-ee76-4205-b1a7-e56b19e5a668",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 610,
          "responseSize": 686
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9888012b-c72b-4de0-93a6-9c890be670a7",
        "cursor": {
          "ref": "114bdfea-d1fc-40cd-93d9-966671cdaf31",
          "length": 253,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "6bb4ad34-744a-4a73-948c-c09e6f873be0"
        },
        "item": {
          "id": "9888012b-c72b-4de0-93a6-9c890be670a7",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "6736f02b-6fae-4f2c-a64e-e245f97e4c05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b88c1d8-0e7d-477f-8687-75cb6a4c399f",
        "cursor": {
          "ref": "c33b4610-a50a-429b-9114-0b09d6f21851",
          "length": 253,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "2d6ff3d9-f10f-433a-9f4d-3681f1cac4e3"
        },
        "item": {
          "id": "9b88c1d8-0e7d-477f-8687-75cb6a4c399f",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "6cb10562-a87d-4d54-b2c6-b9d094188272",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 675,
          "responseSize": 737
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5df46b58-8db8-42ce-aad3-1fc7961759d0",
        "cursor": {
          "ref": "dcc9339a-2866-4157-ad77-ccfd6083794f",
          "length": 253,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "7e9e8522-ccf9-4c8e-8644-08a3273477e2"
        },
        "item": {
          "id": "5df46b58-8db8-42ce-aad3-1fc7961759d0",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "c521a936-9fd7-47ea-8925-b53ddb90e641",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 636,
          "responseSize": 732
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "007a340f-e66a-4837-9a79-da12a0cd3ce6",
        "cursor": {
          "ref": "446955ef-56e9-434e-bb68-1aaccdb647c9",
          "length": 253,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "4d8a123c-d133-43c3-9723-d292d5ae5c0f"
        },
        "item": {
          "id": "007a340f-e66a-4837-9a79-da12a0cd3ce6",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "2ecfeecd-dee6-4bc9-a770-5def033f226c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 601,
          "responseSize": 709
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a452b922-e9e3-4002-89e0-555df8e79268",
        "cursor": {
          "ref": "0c1460d9-1d21-4873-97e9-af0eb2817ad8",
          "length": 253,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "899ea552-d7bb-46c6-9132-d02e5911adf3"
        },
        "item": {
          "id": "a452b922-e9e3-4002-89e0-555df8e79268",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "29f47268-ac5c-42fe-925c-f42d5e272ea6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 620,
          "responseSize": 706
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6c037c7-3580-4329-9d02-115ec176ec7e",
        "cursor": {
          "ref": "833a4351-9978-4278-95b3-b13d2e3a0c4f",
          "length": 253,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "acf40c85-e942-4def-ae59-ab4c448870ac"
        },
        "item": {
          "id": "e6c037c7-3580-4329-9d02-115ec176ec7e",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "86b51018-b460-44d2-a012-1fd697dc13a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 610,
          "responseSize": 708
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0a59311-0ccc-4b46-abe3-8e9fe8c866a8",
        "cursor": {
          "ref": "7d30fc25-09b2-4c9c-a24f-6a16dda6eb03",
          "length": 253,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "e3490ec4-e4ff-449b-9084-011b9bd2372f"
        },
        "item": {
          "id": "c0a59311-0ccc-4b46-abe3-8e9fe8c866a8",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "d6489a8c-8801-48c9-b0cf-8d0c2f81a474",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 620,
          "responseSize": 730
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33490400-03da-4031-9436-20617fc41940",
        "cursor": {
          "ref": "8cf49a91-8b40-46a5-9924-e567bed0e3ec",
          "length": 253,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "f12b3c68-b4dc-4731-ba98-f8ea348f3b52"
        },
        "item": {
          "id": "33490400-03da-4031-9436-20617fc41940",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "d9bd7d13-358e-447d-9033-d87c51dbea2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 743
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2ad7436-a62e-4910-ba6d-3f3dbe22a4cd",
        "cursor": {
          "ref": "b479b863-53ca-4a72-9169-1763d0f7923a",
          "length": 253,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "65dbbf43-8aea-4ace-b15b-9caf6806185a"
        },
        "item": {
          "id": "e2ad7436-a62e-4910-ba6d-3f3dbe22a4cd",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "c4f77147-099a-40f6-a538-62d3cedc8c48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 600,
          "responseSize": 1006
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c685badd-8535-4573-9d62-164492cc82e2",
        "cursor": {
          "ref": "3c7798cc-d9f5-44bb-8a1c-2720b292b04f",
          "length": 253,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "181f95fc-9a6b-4899-a516-84f98acad8de"
        },
        "item": {
          "id": "c685badd-8535-4573-9d62-164492cc82e2",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "775af3ae-6e60-4031-bee4-b88d4faed51b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 600,
          "responseSize": 983
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1e0df99-17a2-4c87-a0d4-a9ae6ef28d2f",
        "cursor": {
          "ref": "e3263dec-910f-410b-bb0f-3b35293e345a",
          "length": 253,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "0930243c-97ca-4c02-9260-24b3b17e59c2"
        },
        "item": {
          "id": "a1e0df99-17a2-4c87-a0d4-a9ae6ef28d2f",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "cfbb0c15-94d0-488b-b98b-53532cd72aba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 630,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa737322-21fb-4358-93f6-1bcd4102cccc",
        "cursor": {
          "ref": "0563b402-8ef9-4572-814e-c61dd21496c0",
          "length": 253,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "792b8c2a-866f-42c3-a90e-7d392329a4ec"
        },
        "item": {
          "id": "fa737322-21fb-4358-93f6-1bcd4102cccc",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "1aa741dc-1a46-4890-b17f-cb8a940bb917",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 982
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39e4039c-a2ce-48a0-ad3a-2fb8ca26ed52",
        "cursor": {
          "ref": "87f475b8-07f1-45a9-b2c6-b9ba6678604e",
          "length": 253,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "a2fa3609-2b28-4592-8085-cb61a7cdda1a"
        },
        "item": {
          "id": "39e4039c-a2ce-48a0-ad3a-2fb8ca26ed52",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "5f2c6f98-734e-4d74-a392-fdb8cd53e545",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d388a18-e298-463c-8c9d-8f5e5ad628cc",
        "cursor": {
          "ref": "f35362e0-7bee-4008-88c1-568353d928ce",
          "length": 253,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "01d49aa0-cd27-4001-a255-3517741c2b23"
        },
        "item": {
          "id": "4d388a18-e298-463c-8c9d-8f5e5ad628cc",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "0a12eda4-0778-4487-be91-90cd9f328aad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 806
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56e40392-d07a-4582-ae99-b19d75c0c234",
        "cursor": {
          "ref": "46a27b76-8ea1-48ba-889b-0e4fc6186781",
          "length": 253,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "a868ebe4-e096-4fad-9ad9-73a79c9df100"
        },
        "item": {
          "id": "56e40392-d07a-4582-ae99-b19d75c0c234",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "d8518158-a064-4e74-935b-4d6c03ee8bc9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd7b68e2-9f0b-4953-b68b-eed2e24e8629",
        "cursor": {
          "ref": "6393f0c9-e688-438d-8ffb-a2ad4fc71ab8",
          "length": 253,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "e8d7aaba-0747-44fb-af86-aef5247121df"
        },
        "item": {
          "id": "fd7b68e2-9f0b-4953-b68b-eed2e24e8629",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "778045ad-3c92-43ab-8a60-9d23bef363d6",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 579,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "115bcdee-85bc-46a3-bc0b-765eba68ab51",
        "cursor": {
          "ref": "de317033-df4d-48b2-8467-8046f34f7d23",
          "length": 253,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "f591f926-f8cb-4b3d-9677-3dfb8c25331c"
        },
        "item": {
          "id": "115bcdee-85bc-46a3-bc0b-765eba68ab51",
          "name": "credentials_issue"
        },
        "response": {
          "id": "3a3394d6-4055-437e-9132-8e136aa26d60",
          "status": "Created",
          "code": 201,
          "responseTime": 4211,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "cda4bd3d-8f06-4d3a-b275-13679e519643",
        "cursor": {
          "ref": "457b96a7-959a-4fc8-8936-1ada70aad25e",
          "length": 253,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "f3b7dbfa-82f4-48ce-bc9b-9bc2639619fc"
        },
        "item": {
          "id": "cda4bd3d-8f06-4d3a-b275-13679e519643",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "3842883c-237f-4add-b51f-5cdc4b15eae8",
          "status": "Created",
          "code": 201,
          "responseTime": 3910,
          "responseSize": 756
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0bc1fea-c64f-49cf-acb5-f7d078c201b1",
        "cursor": {
          "ref": "bc004e0f-8bbb-4115-8355-782cd7b2ef71",
          "length": 253,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "84e4ceca-51ea-4d80-a554-a391fc1f662a"
        },
        "item": {
          "id": "b0bc1fea-c64f-49cf-acb5-f7d078c201b1",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "0783cf71-2c25-4a63-9095-2988c6be5eaa",
          "status": "Created",
          "code": 201,
          "responseTime": 4009,
          "responseSize": 771
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dff16cb-bff8-44ef-90b3-1188d0dfa686",
        "cursor": {
          "ref": "c40c423a-4ce4-48e6-84e9-ef107b4fa83a",
          "length": 253,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "e46c6a3b-bc5e-47c1-a2db-a37ad7918564"
        },
        "item": {
          "id": "6dff16cb-bff8-44ef-90b3-1188d0dfa686",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "d0b3a305-c896-4102-b3f3-072b09bf9bc6",
          "status": "Created",
          "code": 201,
          "responseTime": 4081,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "c839df82-7642-44d6-a69a-812d41ae312b",
        "cursor": {
          "ref": "e87a75a2-21ba-4f43-8599-ab6985da3819",
          "length": 253,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "52e876ee-2bda-4b5d-a78d-118e2569e034"
        },
        "item": {
          "id": "c839df82-7642-44d6-a69a-812d41ae312b",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "a438a957-f6ec-41ce-8ce4-5c37bb091e88",
          "status": "Created",
          "code": 201,
          "responseTime": 5021,
          "responseSize": 1088
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b822b40-85ff-460b-a729-cd951e6084e8",
        "cursor": {
          "ref": "5e4a0098-7d82-48bd-982a-aab750938df1",
          "length": 253,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "632747ab-a1f1-4172-a838-619273e1c2d5"
        },
        "item": {
          "id": "0b822b40-85ff-460b-a729-cd951e6084e8",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "26a2908c-6c0e-4e4c-95a1-a5dc4eb70ec4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 636,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b822b40-85ff-460b-a729-cd951e6084e8",
        "cursor": {
          "ref": "5e4a0098-7d82-48bd-982a-aab750938df1",
          "length": 253,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "632747ab-a1f1-4172-a838-619273e1c2d5"
        },
        "item": {
          "id": "0b822b40-85ff-460b-a729-cd951e6084e8",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "26a2908c-6c0e-4e4c-95a1-a5dc4eb70ec4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 636,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c3edc36-a0d6-4e10-8437-1c536b2dd8d4",
        "cursor": {
          "ref": "5416c3b4-358b-4630-bcdf-be5aa352c8df",
          "length": 253,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "7c59640c-ae32-48e2-accd-0c2a56cb3215"
        },
        "item": {
          "id": "0c3edc36-a0d6-4e10-8437-1c536b2dd8d4",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "9e003c69-a48c-4c85-a238-69e72ef934c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 611,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a005f92f-bc1e-485d-9e49-23a79425243e",
        "cursor": {
          "ref": "5f8261c3-a4ce-4282-9a9c-3deb0e4c65af",
          "length": 253,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "7c13e6cb-47fb-4331-ba0b-0e9c6cfe17a3"
        },
        "item": {
          "id": "a005f92f-bc1e-485d-9e49-23a79425243e",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "7b60a52c-2675-48d7-a810-03ecf441cf14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 600,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3728acd3-1c95-4f53-a976-2387541c34e7",
        "cursor": {
          "ref": "0566fdaa-8645-4398-9518-7f28978af189",
          "length": 253,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "bf68a65d-d36e-46a1-bb72-756c3205c565"
        },
        "item": {
          "id": "3728acd3-1c95-4f53-a976-2387541c34e7",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "c5542a84-ab2f-4ae6-9093-27445a14106b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 622,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98538769-6d13-4a1a-b545-5f32d1240e05",
        "cursor": {
          "ref": "df4fe00c-fa7a-45c8-9046-a28767c6a226",
          "length": 253,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "ef0e6f4a-521a-4a7b-9e20-0cf4009c97f1"
        },
        "item": {
          "id": "98538769-6d13-4a1a-b545-5f32d1240e05",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "56361f9f-9d81-4524-9ef2-e871ab48cbfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 617,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8b33083-0ed6-4396-a0e7-f25df8b6d588",
        "cursor": {
          "ref": "e9feb6ab-e7bb-4667-865c-f2b2d8de21f9",
          "length": 253,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "814c67f4-0b9c-42a5-9344-77a55074508c"
        },
        "item": {
          "id": "a8b33083-0ed6-4396-a0e7-f25df8b6d588",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "daada947-81e4-4b0f-8a49-8113628a056c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 611,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eac0a086-160d-475c-9f69-d8972eaa9538",
        "cursor": {
          "ref": "94edb1a2-4d6b-494b-bdb3-76e42021d17f",
          "length": 253,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "fcc4375d-d91a-43a0-8a21-bd395577fc4a"
        },
        "item": {
          "id": "eac0a086-160d-475c-9f69-d8972eaa9538",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "5d10cdda-3956-4d42-863a-d815f4079206",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 639,
          "responseSize": 431
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9eb31c60-afb1-4781-96b7-d4f1b3630286",
        "cursor": {
          "ref": "f39b5de9-b87b-4db8-8cce-7ea565483a79",
          "length": 253,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "df257d6e-f67c-47f2-ba3a-970694945b25"
        },
        "item": {
          "id": "9eb31c60-afb1-4781-96b7-d4f1b3630286",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "f7c904d5-9924-44a2-8bf6-598b864e430b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 634,
          "responseSize": 482
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19cee389-eb30-4088-aa37-68881b0db4e1",
        "cursor": {
          "ref": "0eba2db4-f8b4-4c4a-a2bb-56986f422213",
          "length": 253,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "39a985d7-0e59-47fe-a333-a67f0528b5ba"
        },
        "item": {
          "id": "19cee389-eb30-4088-aa37-68881b0db4e1",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "565d44b6-859d-4e20-8991-34226cc46326",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2efcf510-c229-4647-98bf-b935e5a6c708",
        "cursor": {
          "ref": "e38676fb-adf3-43a0-972a-f2b4c10f881d",
          "length": 253,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "2b2de70a-d501-4d63-a5af-f9e0091da622"
        },
        "item": {
          "id": "2efcf510-c229-4647-98bf-b935e5a6c708",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "cb09d812-56d6-4a1e-b4e1-1f3623a0e37b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 621,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5354e9fc-5a5c-469a-aa47-2395cf19cba0",
        "cursor": {
          "ref": "b1a4c7de-5a2d-4856-9c9b-0b47d360165a",
          "length": 253,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "3dab2ac3-7349-4f1b-b5a8-4f5717cd9854"
        },
        "item": {
          "id": "5354e9fc-5a5c-469a-aa47-2395cf19cba0",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "1ab4b5be-ff08-4e27-80a0-a2a6ade6ecde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 751,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "669ce590-d728-4488-8694-88aab40c28a5",
        "cursor": {
          "ref": "7fa60f53-9753-4577-b709-78912bf8cd4d",
          "length": 253,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "2cc48d5d-4361-4651-8831-f0a4882e4f0e"
        },
        "item": {
          "id": "669ce590-d728-4488-8694-88aab40c28a5",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "581499f9-9e5b-46d7-a9cf-2ead12718a77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 647,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc6faae3-f72a-4556-a610-8b8ec09b3d92",
        "cursor": {
          "ref": "cd6a1b66-7b2b-445d-94d9-6f28ef56d0f0",
          "length": 253,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "e2ccb279-93c7-41f6-aecc-295ea43f9f10"
        },
        "item": {
          "id": "fc6faae3-f72a-4556-a610-8b8ec09b3d92",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "9b4d71e2-6453-4fbb-87e1-a7fef373730f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 631,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e792f382-8ff3-479f-ad37-ad02320b0538",
        "cursor": {
          "ref": "d8ab5241-eef9-4d86-9b42-4d5f57c7d740",
          "length": 253,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "61d131fe-c128-4b21-beba-fdb9073765d0"
        },
        "item": {
          "id": "e792f382-8ff3-479f-ad37-ad02320b0538",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "5dd72954-bc9f-41f6-abd1-73b73be7b1f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 634,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b770074c-6820-4dc3-a3c1-fe05b33aa304",
        "cursor": {
          "ref": "ff880288-2ccd-47be-a41f-50cf815128f8",
          "length": 253,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "c466c91b-7453-4296-af95-98fd7c485f45"
        },
        "item": {
          "id": "b770074c-6820-4dc3-a3c1-fe05b33aa304",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "c3628281-edb9-4215-adb1-c6e64933d9c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cf65566-da77-43a2-a11a-c159b615ecd5",
        "cursor": {
          "ref": "61e1435f-61f1-4161-b907-50cc0ec3c01e",
          "length": 253,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "c9b3ac26-fd7c-4620-b1ba-f7490f588050"
        },
        "item": {
          "id": "3cf65566-da77-43a2-a11a-c159b615ecd5",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "a9e5fd1b-a8fd-4fde-8c35-ba7b6205285f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 680,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bd327e7-2baf-4b31-b855-3ac0a3efbeef",
        "cursor": {
          "ref": "1d07dc3a-601d-4245-a58d-e5f7123bb12a",
          "length": 253,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "a2a3881a-0640-44f2-85fb-01dc2a922b96"
        },
        "item": {
          "id": "2bd327e7-2baf-4b31-b855-3ac0a3efbeef",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "fe8ad769-903e-4485-8efe-83fbedf13651",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1087,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81c25559-3b0d-4919-a566-b573ea22a9b4",
        "cursor": {
          "ref": "25e5614e-bbf9-46d4-8255-7a4f5c7909f2",
          "length": 253,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "42e913ca-d285-4166-a987-0cc334438026"
        },
        "item": {
          "id": "81c25559-3b0d-4919-a566-b573ea22a9b4",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "34bb7e24-bf86-4561-8ff4-b662ba4464a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1223,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1186d988-da47-4b4c-bbcf-ec62da86f9f5",
        "cursor": {
          "ref": "7cf82667-0a6a-4a3c-834a-d6b6d630c6ea",
          "length": 253,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "9ebf3b22-0133-41d3-89c4-6e58c1b6ebff"
        },
        "item": {
          "id": "1186d988-da47-4b4c-bbcf-ec62da86f9f5",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "225a0f91-96b1-4ee4-a9e8-b0f067f0d8f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1172,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6410ff85-f9ed-4228-a735-72530fdfe031",
        "cursor": {
          "ref": "6f38caf6-78af-40d6-8b2a-84180e0f7687",
          "length": 253,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "3aea8519-3891-4052-aff9-6dd33e9e57b0"
        },
        "item": {
          "id": "6410ff85-f9ed-4228-a735-72530fdfe031",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "3a3c209d-f3e0-4081-86a2-d65f36f6d7e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1031,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbc9beea-5a98-4ed7-8758-f4e73f3d748a",
        "cursor": {
          "ref": "82bc5e0c-ff13-4a6f-b79b-82499d6f1afa",
          "length": 253,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "c2203346-1f37-401e-9b0c-1ef52d1f73dc"
        },
        "item": {
          "id": "dbc9beea-5a98-4ed7-8758-f4e73f3d748a",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "1b46bc5f-7e9b-4a2c-942c-90df30868388",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 932,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c4fe7d2-e3ee-4245-b83a-8320918e29d6",
        "cursor": {
          "ref": "a2511197-ff7c-444d-8b78-cc75eef74d41",
          "length": 253,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "94d8f996-dcb7-4b1d-a546-3d49fde3d8b4"
        },
        "item": {
          "id": "1c4fe7d2-e3ee-4245-b83a-8320918e29d6",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "7d640e0c-9faf-4488-b14e-ddb2b98580ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 770,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93d6a615-a502-4b75-8617-3acf1e9eaad1",
        "cursor": {
          "ref": "a6703559-1303-499c-a1d6-09c0fbb05367",
          "length": 253,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "23cceffc-4e38-4153-aeb9-c901494b2f20"
        },
        "item": {
          "id": "93d6a615-a502-4b75-8617-3acf1e9eaad1",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "90f81f38-c3f6-4e2f-bcba-cd21f2e9f095",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 929,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75457b94-af67-4494-a4bd-683101aba7b1",
        "cursor": {
          "ref": "d2f7114c-352f-4792-bd37-6e7ab6447695",
          "length": 253,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "53522afc-d5fb-47a0-a372-8adc4c35bd2b"
        },
        "item": {
          "id": "75457b94-af67-4494-a4bd-683101aba7b1",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "d86cc2cf-ee83-4e23-a92d-e3dd9f4caa58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1156,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2a49541-b94a-432b-9a04-27cce20826c2",
        "cursor": {
          "ref": "b9a02c44-006f-495b-8180-5c89b0f0376a",
          "length": 253,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "bdeae9d7-ecf0-4599-9eb9-9ad1b0b44192"
        },
        "item": {
          "id": "a2a49541-b94a-432b-9a04-27cce20826c2",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "840312c7-3da4-4a95-b97e-dbd83fe96799",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1050,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22457f94-adbd-4d84-8672-508cc9f0f711",
        "cursor": {
          "ref": "36c7ac32-007b-4634-a9bd-53ae187a1d43",
          "length": 253,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "c6b1a2ef-10c7-4b9e-af86-0b240acddcf5"
        },
        "item": {
          "id": "22457f94-adbd-4d84-8672-508cc9f0f711",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "b29b22a3-cd53-4c43-966d-01336ea17c44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9398e398-73d6-49b4-b358-2bbffc8b51d1",
        "cursor": {
          "ref": "e7d0d906-d9a8-4a3f-bf54-3889cbf68b30",
          "length": 253,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "f411ae15-914c-43d5-99fd-642a8550d2d2"
        },
        "item": {
          "id": "9398e398-73d6-49b4-b358-2bbffc8b51d1",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "08a084a9-b5a6-4b8b-9d88-f41420e33afb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 724,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ea1b990-9547-4905-976f-7a0f1e02650d",
        "cursor": {
          "ref": "61b32a2a-38b2-4c53-85ee-1997773d96f3",
          "length": 253,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "091967f9-dcd5-43dd-99b9-1020471ea025"
        },
        "item": {
          "id": "9ea1b990-9547-4905-976f-7a0f1e02650d",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "3816940e-e6a2-4456-8b96-e93d5a13503c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 637,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1f1c0b0-1218-4843-9cba-cffdf02bcc44",
        "cursor": {
          "ref": "9a95fe6a-f5a1-43a6-b02d-09d32747b791",
          "length": 253,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "2f01f860-bf69-4649-81a6-7e3541db1546"
        },
        "item": {
          "id": "f1f1c0b0-1218-4843-9cba-cffdf02bcc44",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "19769ed7-d35d-44f4-b8b2-3f36511056e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 630,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb6917d2-72e9-4e95-8613-44383fcf20ec",
        "cursor": {
          "ref": "260d412d-146a-4982-b526-f7ef701b732a",
          "length": 253,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "ffae3c62-fdbe-48d5-b4c8-5c1d03438e0b"
        },
        "item": {
          "id": "cb6917d2-72e9-4e95-8613-44383fcf20ec",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "0a5463f8-4050-4fb6-9dba-0e60ce146b28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 618,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50ca4335-fbf8-4593-9784-3ed30d9f95fc",
        "cursor": {
          "ref": "3748007a-3472-4f2c-853d-75688ba262b8",
          "length": 253,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "d2000050-191a-4170-8b60-9460e55c133a"
        },
        "item": {
          "id": "50ca4335-fbf8-4593-9784-3ed30d9f95fc",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "ed00da81-6d71-4f72-b32a-ff15467776ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 630,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af6d4988-e470-4da6-99d2-e92b177c9c3d",
        "cursor": {
          "ref": "49a03f4b-3090-4d84-8dcd-38572882330c",
          "length": 253,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "916a1c0d-cdff-43a5-8e39-c23b215a41d9"
        },
        "item": {
          "id": "af6d4988-e470-4da6-99d2-e92b177c9c3d",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "e86be725-b348-4bb5-b372-88c7c5ec8df1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 632,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20441dea-dd9a-4d9f-b564-f416ec39b1c9",
        "cursor": {
          "ref": "7833046b-30fe-4320-9472-cd69d7a75ee0",
          "length": 253,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "bdc4a159-307b-4120-a91b-aaf1c0886907"
        },
        "item": {
          "id": "20441dea-dd9a-4d9f-b564-f416ec39b1c9",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "d5d96644-a0eb-4c2a-aaba-1f6346421b75",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 67,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d82580d6-9cd2-46dc-a737-f90166f1c9ca",
        "cursor": {
          "ref": "3bf33413-0663-449a-9692-bbecc970afbd",
          "length": 253,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "e237f738-ffa3-458b-8f66-79a24944c4dd"
        },
        "item": {
          "id": "d82580d6-9cd2-46dc-a737-f90166f1c9ca",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "4f59cf90-8151-46cc-967e-34c53d64f132",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 613,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f3ee766-369f-479f-8192-2e76c9d11148",
        "cursor": {
          "ref": "1d13464a-d23e-4fec-b4a8-fd2124bec6c3",
          "length": 253,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "4ccb8a5c-9b6f-44d3-821f-5afb8f97c1bb"
        },
        "item": {
          "id": "0f3ee766-369f-479f-8192-2e76c9d11148",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "69e4cd49-9cf5-4d6a-b182-a8a7d269b3c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 399,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f3ee766-369f-479f-8192-2e76c9d11148",
        "cursor": {
          "ref": "1d13464a-d23e-4fec-b4a8-fd2124bec6c3",
          "length": 253,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "4ccb8a5c-9b6f-44d3-821f-5afb8f97c1bb"
        },
        "item": {
          "id": "0f3ee766-369f-479f-8192-2e76c9d11148",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "69e4cd49-9cf5-4d6a-b182-a8a7d269b3c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 399,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b833109-585d-42d7-8993-cea8f5e2364a",
        "cursor": {
          "ref": "4361541d-1260-4b8c-a1f4-c65093bb2049",
          "length": 253,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "79ead9d3-0fbb-48f2-ae87-27efa700aa11"
        },
        "item": {
          "id": "7b833109-585d-42d7-8993-cea8f5e2364a",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "242e9ba1-96d4-475f-95d0-384949d4e2b0",
          "status": "OK",
          "code": 200,
          "responseTime": 395,
          "responseSize": 20
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:146)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:146)"
            }
          }
        ]
      },
      {
        "id": "4e2cf6bd-5521-4652-b357-43cf6c5b4a22",
        "cursor": {
          "ref": "8dc992e1-2799-4b13-a7cb-00577e8ab0ff",
          "length": 253,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "522ef4b6-c44f-4c10-b41e-7a5bfadbbb09"
        },
        "item": {
          "id": "4e2cf6bd-5521-4652-b357-43cf6c5b4a22",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "65e8c24b-3f50-4eb6-8793-853e54c54862",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 413,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "754e0a32-d397-473d-9d27-ccf6d52c2b20",
        "cursor": {
          "ref": "a14119fe-6472-4d56-8b4a-a0b8cb484b83",
          "length": 253,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "e3a263f4-c4ed-4369-ae43-0d3aac92eb92"
        },
        "item": {
          "id": "754e0a32-d397-473d-9d27-ccf6d52c2b20",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "88a82b6f-d09a-4f6f-b317-30b544530d14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 378,
          "responseSize": 644
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36956b46-be69-4dcd-89a5-ba17265449a9",
        "cursor": {
          "ref": "49429c19-fa4d-40c2-b1b2-184e7a56d97f",
          "length": 253,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "e49a9896-825d-4fb6-8367-f62794d052a3"
        },
        "item": {
          "id": "36956b46-be69-4dcd-89a5-ba17265449a9",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "113ad8cb-5d94-40fb-bff7-eb665e376b4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 431,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e32abb3-63c3-44e6-93a8-a61cd9c16508",
        "cursor": {
          "ref": "00730547-3d8c-4a5c-83bd-a9d3192bc15b",
          "length": 253,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "06983713-c101-4e06-aa42-de18c65a3367"
        },
        "item": {
          "id": "3e32abb3-63c3-44e6-93a8-a61cd9c16508",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "2b7ee912-0a15-4a23-99b9-fd599ec1df9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 387,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2d9bfc3-7ce2-4039-b564-fb4c1b23aa44",
        "cursor": {
          "ref": "0c9defb2-b516-4bc0-bb44-e77d88ecbc42",
          "length": 253,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "93b3debf-3f8b-448f-adfe-07a88bed18c1"
        },
        "item": {
          "id": "d2d9bfc3-7ce2-4039-b564-fb4c1b23aa44",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "9868f0d5-1dd5-4021-8976-9f6a976555fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 419,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6025b435-ec12-4356-9425-a4ece75827b2",
        "cursor": {
          "ref": "c8417401-e4a7-4936-a734-2a764f06b749",
          "length": 253,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "7012278d-abbc-4362-b8a1-f87bc77c54c2"
        },
        "item": {
          "id": "6025b435-ec12-4356-9425-a4ece75827b2",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "ef3cb881-6ba6-4a57-b324-5f30237a7240",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 453,
          "responseSize": 2010
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2af4c86f-f4b6-4176-968a-1548f19835a3",
        "cursor": {
          "ref": "c8a67acb-1328-4aa6-87e7-853ccab2d458",
          "length": 253,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "4da1f54b-d4cd-446d-b187-4575d38c93ea"
        },
        "item": {
          "id": "2af4c86f-f4b6-4176-968a-1548f19835a3",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "b0d21ab7-0e69-49c6-b04f-8a086cd4d69e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 395,
          "responseSize": 2009
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cc3344a-b8e1-437c-82e6-61114324287c",
        "cursor": {
          "ref": "4ccd3c38-81f0-4794-a194-71a32b818924",
          "length": 253,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "cbc3d677-1c7f-4e5f-afec-3ef2e4754277"
        },
        "item": {
          "id": "1cc3344a-b8e1-437c-82e6-61114324287c",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "61d8d67f-ef2a-4e41-bb76-1fa9d7417bc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 377,
          "responseSize": 2010
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3737fb32-7db1-4560-ad05-1d62a3cdccf8",
        "cursor": {
          "ref": "988ff307-f6c6-4e02-b8fd-6a8bc6ffbf19",
          "length": 253,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "2e948e82-7c58-42e0-8fe5-069fb0497a07"
        },
        "item": {
          "id": "3737fb32-7db1-4560-ad05-1d62a3cdccf8",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "9c62c806-455c-4cb4-a929-236d10f3f3b0",
          "status": "OK",
          "code": 200,
          "responseTime": 434,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:155)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:155)"
            }
          }
        ]
      },
      {
        "id": "64eefbb8-0266-42c0-98cc-d26860a97283",
        "cursor": {
          "ref": "b5f922f2-7ca2-429c-9ff3-edbcbb944440",
          "length": 253,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "0ba88a0c-b65f-40ad-b89c-0fbde4df8150"
        },
        "item": {
          "id": "64eefbb8-0266-42c0-98cc-d26860a97283",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "2ecc2f78-11f6-4dce-8b85-d297ddb456eb",
          "status": "OK",
          "code": 200,
          "responseTime": 405,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:156)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:156)"
            }
          }
        ]
      },
      {
        "id": "e7508a98-d132-4d0f-a339-127e4e9d5b5f",
        "cursor": {
          "ref": "c84f7f52-e56c-498e-b31e-35de3736343d",
          "length": 253,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "6f9b6beb-2581-4c68-ae28-c09fb87f57ce"
        },
        "item": {
          "id": "e7508a98-d132-4d0f-a339-127e4e9d5b5f",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "295f98b5-d619-41db-86a0-f4dceb861174",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 395,
          "responseSize": 2466
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c7aa7b4-5c5f-4dab-b3ba-00e6fe867425",
        "cursor": {
          "ref": "69cef13c-7702-4bdb-9f79-1d14be599f56",
          "length": 253,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "66340b3a-d819-4498-b385-8a878da6e4ac"
        },
        "item": {
          "id": "0c7aa7b4-5c5f-4dab-b3ba-00e6fe867425",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "ff6f2208-1985-40a7-996a-cc8a526b1f04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 397,
          "responseSize": 2456
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5610a46-91f0-4bba-b9a7-39b09eefc4ad",
        "cursor": {
          "ref": "c8c784b2-3bc2-44a5-8f6f-157c028a5f5b",
          "length": 253,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "fbf8b0a2-a519-414f-b40f-33c96cbe99b0"
        },
        "item": {
          "id": "b5610a46-91f0-4bba-b9a7-39b09eefc4ad",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "4a5886e7-8f21-4d9e-a585-e443cef091c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 378,
          "responseSize": 2455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe6901c8-a6d8-40c4-a5be-cc52a95840c6",
        "cursor": {
          "ref": "a1bc047d-496a-465f-b039-56e46658981d",
          "length": 253,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "0f151992-03e9-4f0c-a937-20e8ddb97c85"
        },
        "item": {
          "id": "fe6901c8-a6d8-40c4-a5be-cc52a95840c6",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "ecf14b6a-2758-42b7-bc97-1ce914e1d958",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 413,
          "responseSize": 2456
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab7ce58f-a92f-4c7a-95d5-47451d6db03f",
        "cursor": {
          "ref": "72c751d9-5b8f-4d60-8af7-b1a1da456827",
          "length": 253,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "31600713-dcb3-4e2e-aad9-c9db8c592ca3"
        },
        "item": {
          "id": "ab7ce58f-a92f-4c7a-95d5-47451d6db03f",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "d8ff10b7-21a7-42e1-9587-7ea91baa1ad8",
          "status": "OK",
          "code": 200,
          "responseTime": 475,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:161)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:161)"
            }
          }
        ]
      },
      {
        "id": "95598294-b969-4c26-bda9-5b7dbb8340bf",
        "cursor": {
          "ref": "433c932f-2895-41cc-a4eb-f404bf562a88",
          "length": 253,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "61977908-d83f-4ade-8ad8-1e45ce01dbed"
        },
        "item": {
          "id": "95598294-b969-4c26-bda9-5b7dbb8340bf",
          "name": "credentials_verify:vc:id:missing"
        },
        "response": {
          "id": "b871c98c-cf0f-4e38-8015-9bf4bfe369af",
          "status": "OK",
          "code": 200,
          "responseTime": 1811,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:162)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:162)"
            }
          }
        ]
      },
      {
        "id": "86c8fb27-4f6e-499d-93bc-5545e794ac07",
        "cursor": {
          "ref": "28a5bea2-9ba8-46a0-a8d0-df3c5aa5beb5",
          "length": 253,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "cf5e15c7-a7d7-49fa-957f-02d4e9570bab"
        },
        "item": {
          "id": "86c8fb27-4f6e-499d-93bc-5545e794ac07",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "28c424e8-a58a-4950-9761-69284554d42c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 383,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b22df81-4905-4dcd-816f-f23ffe8b0a64",
        "cursor": {
          "ref": "cc46d842-583b-4d8c-bc1b-71b9fb7886ad",
          "length": 253,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "80d37a3f-16db-4bf0-b4ec-5fbaca3aefcc"
        },
        "item": {
          "id": "9b22df81-4905-4dcd-816f-f23ffe8b0a64",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "d1a87d18-4ea3-4d00-a36b-3b9610469c24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 401,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f19e0fe-98ae-47c7-9718-22c58ea30828",
        "cursor": {
          "ref": "e4c09e7d-c456-4f55-9f27-9fd5e0c86fcb",
          "length": 253,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "cb58eb52-beeb-4ff1-8acf-9b5c8d6dc4b9"
        },
        "item": {
          "id": "7f19e0fe-98ae-47c7-9718-22c58ea30828",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "eab2143a-b673-4112-bb39-a4435fbe9949",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 407,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9f95da0-bc09-4020-b73c-9c578a3494cc",
        "cursor": {
          "ref": "5e085252-f0e4-4310-93f7-0564d33f5cb5",
          "length": 253,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "a1931bfd-1abb-496f-95b7-8b39c52dba7a"
        },
        "item": {
          "id": "a9f95da0-bc09-4020-b73c-9c578a3494cc",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "a17699f5-a9bf-41d4-b610-0de712dc069f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 405,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf273551-0cd2-49f4-83a1-28386c75e0b1",
        "cursor": {
          "ref": "30ac484d-6ebf-40a9-b661-c011b6586c25",
          "length": 253,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "fec991a5-f8af-40b4-b7bb-94606adac7dd"
        },
        "item": {
          "id": "bf273551-0cd2-49f4-83a1-28386c75e0b1",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "39af7642-a5d1-48a9-9af2-a83944ce664b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 406,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e00a873-e5a1-4a41-9b2a-dbdaead7c1f6",
        "cursor": {
          "ref": "6346a589-1025-496a-91e9-7219e0fb33ba",
          "length": 253,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "6df07238-2f92-4870-9497-7f3d273700c7"
        },
        "item": {
          "id": "2e00a873-e5a1-4a41-9b2a-dbdaead7c1f6",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "dc199c65-5e8b-410c-9135-583df7db644e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 413,
          "responseSize": 1360
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bac5e595-76d9-45cb-b196-d5f4ec2f3541",
        "cursor": {
          "ref": "5260b277-80d5-45ca-8594-6c20a79b5b41",
          "length": 253,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "cae2d54b-0e9d-4d87-b617-d54993d356ab"
        },
        "item": {
          "id": "bac5e595-76d9-45cb-b196-d5f4ec2f3541",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "c39a6ece-f056-4ca1-a1e3-68355ea21957",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 389,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c271168-95ce-4c67-a089-9d09f5ab7969",
        "cursor": {
          "ref": "2c9389f4-6283-4db4-b46a-949ea44fd466",
          "length": 253,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "1624aa1d-d720-4e80-976a-7ae4428c05f1"
        },
        "item": {
          "id": "7c271168-95ce-4c67-a089-9d09f5ab7969",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "f0d90a3c-48a4-44e3-9ec7-69045a89abe6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 406,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d5f4aa4-9bea-4a19-97d0-15ae200f1a8b",
        "cursor": {
          "ref": "104d4528-f786-40ca-b663-8186dbbdd01c",
          "length": 253,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "a9964c8a-3c92-4c93-998c-fe41bb15566f"
        },
        "item": {
          "id": "1d5f4aa4-9bea-4a19-97d0-15ae200f1a8b",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "eb1b6417-0e46-43da-a796-6ca8f49fbd2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 382,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "003ba48d-427a-4d87-8d87-34c79977842e",
        "cursor": {
          "ref": "c9b05bb8-238d-4f17-b2c0-f82e1c102e30",
          "length": 253,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "69707072-8432-4524-8a60-5b43ec67ffd4"
        },
        "item": {
          "id": "003ba48d-427a-4d87-8d87-34c79977842e",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "daedea66-ab48-47c7-9fef-123bef7b3904",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 379,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be93d4c8-6502-4966-8ad3-28e1e02f9ecc",
        "cursor": {
          "ref": "b7c77398-4187-4e00-a96a-21ea4a597712",
          "length": 253,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "bca61e73-9303-44fd-b1f8-e9fae7b2ff58"
        },
        "item": {
          "id": "be93d4c8-6502-4966-8ad3-28e1e02f9ecc",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "8947f490-6ca1-4732-8711-13062693c697",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 402,
          "responseSize": 1372
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea000cea-2009-4499-bcc0-dc5854a595b1",
        "cursor": {
          "ref": "9400d84f-5fc2-4e6e-9419-2fc81881fe06",
          "length": 253,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "6bf82b4c-ec1f-4d6b-b78c-50daa6eff409"
        },
        "item": {
          "id": "ea000cea-2009-4499-bcc0-dc5854a595b1",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "2ee7bee2-024e-46f6-88d9-62888b1ab12e",
          "status": "OK",
          "code": 200,
          "responseTime": 383,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:174)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:174)"
            }
          }
        ]
      },
      {
        "id": "d5cee4bf-8959-444e-8ea9-7782dcc41457",
        "cursor": {
          "ref": "57b82894-1774-4859-b100-53ee7fcf1274",
          "length": 253,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "c490cc6c-4203-43ac-88b1-d2be7e6dd2ce"
        },
        "item": {
          "id": "d5cee4bf-8959-444e-8ea9-7782dcc41457",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "f75bba42-f165-459f-ba06-14f9ae27275c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 378,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd12350e-fd31-4129-afda-0cfd3eef5014",
        "cursor": {
          "ref": "ae57ca7b-83d5-4df6-86c3-9ea860c0f20e",
          "length": 253,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "ab5b5864-ec83-42ab-b7b8-73da5303bafb"
        },
        "item": {
          "id": "dd12350e-fd31-4129-afda-0cfd3eef5014",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "d04013d8-eb83-4865-9422-a1c74d02e7ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 370,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e218af19-1453-4e55-93bc-449cdd355d52",
        "cursor": {
          "ref": "13984696-e275-4893-95bc-ba50676eb702",
          "length": 253,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "a2f11ecf-871d-4299-a4d2-3e2656bb9c10"
        },
        "item": {
          "id": "e218af19-1453-4e55-93bc-449cdd355d52",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "061e2547-165b-40c4-8cb6-f119b22f1eee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 397,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d876159-0e47-4705-b008-594ee817c06e",
        "cursor": {
          "ref": "200f905d-2ad3-4787-948a-c470cacbd6cd",
          "length": 253,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "3ca125c3-7897-44f3-900f-011668715919"
        },
        "item": {
          "id": "6d876159-0e47-4705-b008-594ee817c06e",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "1d0350b8-d083-47c6-a24d-cedbc43bea13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 390,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58415c96-ace1-4d29-8392-23f4658cca41",
        "cursor": {
          "ref": "f00fc437-eadb-46fb-9bab-7fc8deb1af05",
          "length": 253,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "f6f91323-9942-4951-93d8-143c3c2a1ca8"
        },
        "item": {
          "id": "58415c96-ace1-4d29-8392-23f4658cca41",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "b6fdbf40-8470-48d2-a582-8b1e80860f1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 390,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cbe82a8-73a8-4b70-99f6-39de2c5fe78f",
        "cursor": {
          "ref": "46097fa6-7a1f-4164-9014-f1453eb9b555",
          "length": 253,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "358af3b5-5e70-477a-8ba1-0544c8e0cc70"
        },
        "item": {
          "id": "5cbe82a8-73a8-4b70-99f6-39de2c5fe78f",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "d7f7876e-82f6-4d1a-9e01-5e53baaed942",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 398,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68d742fd-336d-4329-bf7c-c3a6da414729",
        "cursor": {
          "ref": "4178be49-3c26-42d3-acc6-f4e2f780b0e5",
          "length": 253,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "c448b016-1ab7-432f-bed7-1f38d935145e"
        },
        "item": {
          "id": "68d742fd-336d-4329-bf7c-c3a6da414729",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "0398ccda-e167-44c5-9786-199d43e0e21b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 396,
          "responseSize": 1801
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24e3ef4d-4b80-4da8-9d95-aea7461877b7",
        "cursor": {
          "ref": "746e2627-2e94-4f8f-a436-b00259699497",
          "length": 253,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "d6cb61c8-86a2-4f8b-8035-2ea753afd52c"
        },
        "item": {
          "id": "24e3ef4d-4b80-4da8-9d95-aea7461877b7",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "d03c79b3-ea14-4c4c-a07c-0ff22688c629",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 388,
          "responseSize": 1787
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d49ca67f-6345-4e71-9055-9ced7d42acc7",
        "cursor": {
          "ref": "ffad4977-23f1-409f-b4b9-e22013401ad6",
          "length": 253,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "004036e1-c794-4693-a2cf-cf063c6693f7"
        },
        "item": {
          "id": "d49ca67f-6345-4e71-9055-9ced7d42acc7",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "45571dde-f457-4ef8-ab63-cb96c4070f63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 384,
          "responseSize": 1785
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a97bf409-6c98-47bd-a3bd-1f8fe593ab55",
        "cursor": {
          "ref": "fbaa6ce9-e0b3-4668-af43-7fce075efb6a",
          "length": 253,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "d6f5217a-8d64-4e2f-9c84-6116e7182328"
        },
        "item": {
          "id": "a97bf409-6c98-47bd-a3bd-1f8fe593ab55",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "efa42c41-f189-4b48-998e-8f6e682c39e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 405,
          "responseSize": 1786
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d802450c-5934-4f02-bf27-eb0bd44842db",
        "cursor": {
          "ref": "03f1faa4-2d47-45a9-8cfa-6813215e9df2",
          "length": 253,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "9df07bca-5d60-47f4-841f-a7caab9a72f3"
        },
        "item": {
          "id": "d802450c-5934-4f02-bf27-eb0bd44842db",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "76a639f5-0b1b-43b8-8d18-f8610fcdfc3b",
          "status": "OK",
          "code": 200,
          "responseTime": 417,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:185)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:185)"
            }
          }
        ]
      },
      {
        "id": "fb5e6e6a-e564-4b01-a814-28291df45f12",
        "cursor": {
          "ref": "fc462eef-eb26-46a4-ace1-0df0db611595",
          "length": 253,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "56ca9bcd-80dd-4490-bf3b-ee7ec8e9cd1f"
        },
        "item": {
          "id": "fb5e6e6a-e564-4b01-a814-28291df45f12",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "b36c368c-a626-4b25-b6d5-1a81233dd5f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 385,
          "responseSize": 2160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac5fa96f-5650-4398-9e73-ff417096b7d9",
        "cursor": {
          "ref": "e5f497e0-c78b-4774-be01-bbfac62e2f30",
          "length": 253,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "da05cd22-dfb4-4394-88cc-694ab125d468"
        },
        "item": {
          "id": "ac5fa96f-5650-4398-9e73-ff417096b7d9",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "141351da-004a-4569-924c-7ebbfcc7953b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 390,
          "responseSize": 2146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "112c6557-c046-4523-b24e-40a1c26fefe8",
        "cursor": {
          "ref": "1b696492-86b0-4af6-a39a-09a888802626",
          "length": 253,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "84423cf7-6970-4014-abca-a86d0b1c329d"
        },
        "item": {
          "id": "112c6557-c046-4523-b24e-40a1c26fefe8",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "0297d729-1f7f-4f75-a542-3934ed76d3b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 378,
          "responseSize": 2144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16b1c09f-c05f-4627-a17d-d40aea4f0d2b",
        "cursor": {
          "ref": "8dcbe4ae-7ece-4ea8-8e8b-9ae373257051",
          "length": 253,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "81865620-e0eb-4d18-9de0-94867c3ef0c5"
        },
        "item": {
          "id": "16b1c09f-c05f-4627-a17d-d40aea4f0d2b",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "f5572aa5-bc61-4103-978d-f73d20b8905f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 396,
          "responseSize": 2145
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6654a000-5c5d-47b1-bd73-8c8b03f17981",
        "cursor": {
          "ref": "4faae579-f3fc-4ac1-9aa8-cd2ea3028720",
          "length": 253,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "134445df-24da-46c8-8575-fe78043b8fe5"
        },
        "item": {
          "id": "6654a000-5c5d-47b1-bd73-8c8b03f17981",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "73970ab1-c316-4b5a-adde-354e6dfb9be3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 392,
          "responseSize": 2166
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4171268c-4980-4b79-864f-6b35e9f5a56a",
        "cursor": {
          "ref": "5586ce69-624f-4cbf-b00d-3f4e7aeeef2b",
          "length": 253,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "3080af3c-416b-47b4-843e-cdbd6a996c63"
        },
        "item": {
          "id": "4171268c-4980-4b79-864f-6b35e9f5a56a",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "beab8bfc-e3e6-47a2-bded-bb17c9de3472",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 395,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78404af0-fce8-44af-b1f3-244edf810ede",
        "cursor": {
          "ref": "4403f946-e8a5-4d29-8f15-9989e3356d17",
          "length": 253,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "04658ec0-fd08-4ff4-a15f-5fd03fd87b72"
        },
        "item": {
          "id": "78404af0-fce8-44af-b1f3-244edf810ede",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "9e19e36f-9071-4f44-b72e-77155590bc12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 386,
          "responseSize": 1394
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "512401ce-2487-4df7-880e-ed0428676c58",
        "cursor": {
          "ref": "da0a6588-678c-475d-b21c-db6472220d50",
          "length": 253,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "a164548a-7447-4f9e-a87b-9b4005982df1"
        },
        "item": {
          "id": "512401ce-2487-4df7-880e-ed0428676c58",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "c398c92c-2951-4553-8732-2bbeed51ec4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 389,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00047c4b-2e42-478b-9396-83e771862e91",
        "cursor": {
          "ref": "87492e4b-6c81-4693-8088-990a844bd990",
          "length": 253,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "26ced0c7-f662-4e27-bfb6-bc69c5109b48"
        },
        "item": {
          "id": "00047c4b-2e42-478b-9396-83e771862e91",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "b2b6d1a3-5c18-496d-894d-9c5f917d701a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 384,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "638bc8cc-58cd-4ebe-afd5-40caf86b9990",
        "cursor": {
          "ref": "e9284b07-621d-47ed-9ff3-a034e776cd96",
          "length": 253,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "957d5a92-81b3-41b8-9f56-8f19fdfdc3aa"
        },
        "item": {
          "id": "638bc8cc-58cd-4ebe-afd5-40caf86b9990",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "77d4ded0-a0a7-4aeb-aa03-30b77d6a9d44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 387,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f9c2608-9127-41ec-8e6b-790c97a8454e",
        "cursor": {
          "ref": "03e5c312-30b1-4a7c-96eb-82f3abc157e3",
          "length": 253,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "598a3720-f02a-4484-bb8a-b0b61215c03e"
        },
        "item": {
          "id": "7f9c2608-9127-41ec-8e6b-790c97a8454e",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "1f21788a-3ee3-4509-a2a8-283a5c3be78f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 388,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d359ed88-7e4f-45d4-83b3-38b9080ec45b",
        "cursor": {
          "ref": "0a91ae13-4afc-41d7-a126-17f96aef1ae2",
          "length": 253,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "09597084-087d-4cd2-8969-31c7aa54d8b0"
        },
        "item": {
          "id": "d359ed88-7e4f-45d4-83b3-38b9080ec45b",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "22f39b6c-baa4-4081-af78-b7726ab6f5c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 363,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d264a05-e61c-4903-99c1-4eae7827e6de",
        "cursor": {
          "ref": "9cfbd898-8f93-47cd-9f44-d3c480977fea",
          "length": 253,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "1261f26c-016d-4da6-9653-8ea60ba27b1c"
        },
        "item": {
          "id": "2d264a05-e61c-4903-99c1-4eae7827e6de",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "baa4aa61-374e-4ec0-9283-d83ae57b4b1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 400,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c9dcc8f-a3c5-4758-9b2b-0c5ea03c4f7d",
        "cursor": {
          "ref": "6d844b2d-907e-4532-a37e-b870ed052437",
          "length": 253,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "5562ce8e-6e81-42a7-8b35-0f5228a42ff6"
        },
        "item": {
          "id": "0c9dcc8f-a3c5-4758-9b2b-0c5ea03c4f7d",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "2757fa5a-471b-4690-a35d-5c8ff19157e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 386,
          "responseSize": 1874
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06237d58-734e-4b38-8f06-9916ca265e2f",
        "cursor": {
          "ref": "0a59da37-4a43-46b9-bff3-a618dabe7413",
          "length": 253,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "7d9060fb-e918-4e04-a644-56319151509d"
        },
        "item": {
          "id": "06237d58-734e-4b38-8f06-9916ca265e2f",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "755b554c-434d-41ec-985c-94c241cb236e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 395,
          "responseSize": 1673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52c2968c-e16c-44c6-9d65-0ee1785bd101",
        "cursor": {
          "ref": "4bb3d151-1dba-4235-914a-d0511fe75a91",
          "length": 253,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "b8663608-dea2-4430-bb5a-6662c157c49f"
        },
        "item": {
          "id": "52c2968c-e16c-44c6-9d65-0ee1785bd101",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "ad42c984-1dbe-4e74-9114-b131425da8f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 407,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c137cb4a-c03c-4a75-b203-2a1c41f96b05",
        "cursor": {
          "ref": "a3a03b12-24a5-41b4-9dda-9ed8bbbc259c",
          "length": 253,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "68bad50a-bc2a-4e43-91ab-2abead3dc7f5"
        },
        "item": {
          "id": "c137cb4a-c03c-4a75-b203-2a1c41f96b05",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "44424f92-6853-4a42-a2e5-367a28c3a2cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 383,
          "responseSize": 1672
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59600a51-5ce5-4b54-81bf-0176bde6163e",
        "cursor": {
          "ref": "0621f492-27c1-4b4c-867e-4f8c81a318c9",
          "length": 253,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "b4c41c99-d5ad-48a0-bc80-11bc9822ddcd"
        },
        "item": {
          "id": "59600a51-5ce5-4b54-81bf-0176bde6163e",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "87f3f1d1-5afb-495c-befd-092ac86d16b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 399,
          "responseSize": 1685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54442568-b0e6-4b8e-b797-d20ed7381c31",
        "cursor": {
          "ref": "89770f9d-8f13-45ef-bd01-2b1d523f95e2",
          "length": 253,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "08b46705-d193-45d9-ae17-9458c9c55fe9"
        },
        "item": {
          "id": "54442568-b0e6-4b8e-b797-d20ed7381c31",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "9a420293-2473-41de-83f4-271bcd6df381",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 385,
          "responseSize": 2209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8e9214f-fa6c-4e1c-bc50-757f2a353efd",
        "cursor": {
          "ref": "83545673-6a6c-4d89-877b-fc8db8b60065",
          "length": 253,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "e0201677-b6dd-4cb0-8a36-a6eb3a1f90e7"
        },
        "item": {
          "id": "d8e9214f-fa6c-4e1c-bc50-757f2a353efd",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "fc6aacdb-a21a-4169-9d5c-11a740783592",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 406,
          "responseSize": 2195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e974012-a49d-41f0-88cc-f4060b84065c",
        "cursor": {
          "ref": "75c8f999-13d1-4696-9d2f-b954d13cdb68",
          "length": 253,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "7ef7f1c6-924a-4d03-b8c0-4c91be9d6704"
        },
        "item": {
          "id": "0e974012-a49d-41f0-88cc-f4060b84065c",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "f2adb1a0-f9a4-4dcf-a24e-eb3f3eb156ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 406,
          "responseSize": 2193
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7828d72d-7a99-4fc4-8582-05b27a9e0e51",
        "cursor": {
          "ref": "c814eda7-3c73-4af7-922b-6bdb5dbfa290",
          "length": 253,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "eeed2c71-be59-4a09-a0d8-3eb6da2449fb"
        },
        "item": {
          "id": "7828d72d-7a99-4fc4-8582-05b27a9e0e51",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "9d5e7e19-29e4-43fe-b4f9-a0804f3bc405",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 397,
          "responseSize": 2194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3a42bf0-4b4e-45e0-85ce-b01ebc2438e6",
        "cursor": {
          "ref": "d121747e-a259-4c34-aee3-67307e90725d",
          "length": 253,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "67c54098-1559-4b61-9ce2-47d7d5ba2e16"
        },
        "item": {
          "id": "d3a42bf0-4b4e-45e0-85ce-b01ebc2438e6",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "d28c66d5-33f2-462f-9854-7f03cc95b5b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 391,
          "responseSize": 2215
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50cdf60f-8d9a-45e4-b983-d2d62cd5620d",
        "cursor": {
          "ref": "be857f39-db6b-41bc-b81b-d88d87269e5a",
          "length": 253,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "3fb38057-8bc8-4a65-b792-f263fe0bc0b9"
        },
        "item": {
          "id": "50cdf60f-8d9a-45e4-b983-d2d62cd5620d",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "524eaf62-6b0a-44a0-9f79-923a0c6410b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 425,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cf1d819-8a58-4c9c-b301-2468059ed2f3",
        "cursor": {
          "ref": "12989367-f566-40d3-a9c1-381d3a2166ec",
          "length": 253,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "a9149e62-f063-47e4-85d3-49c158dd6753"
        },
        "item": {
          "id": "4cf1d819-8a58-4c9c-b301-2468059ed2f3",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "6c8f6ab5-be4e-4640-8bc0-f851172a4d5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 384,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd24122a-4585-4622-888c-c859bf75bf60",
        "cursor": {
          "ref": "b6709d11-9215-4310-8ea0-5a0db802a379",
          "length": 253,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "6ecdc2b1-56ae-4089-9cc6-9390c8465a21"
        },
        "item": {
          "id": "cd24122a-4585-4622-888c-c859bf75bf60",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "3042936e-2fea-4225-ba61-977761335cd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 386,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "442ea734-b5c7-41cd-8c33-f056a5fdf67e",
        "cursor": {
          "ref": "32c070b7-12a1-452b-9bf2-88d849fbb50f",
          "length": 253,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "137154fc-f2eb-4d2a-93e8-ced5f3641a31"
        },
        "item": {
          "id": "442ea734-b5c7-41cd-8c33-f056a5fdf67e",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "8f4d0ae1-0640-4b4f-b3cd-3df40f4a0505",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 383,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4c2b817-b514-4b0f-b067-28e6cb8025ff",
        "cursor": {
          "ref": "02179b83-3580-48ac-9b05-5cf06403c10a",
          "length": 253,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "33e02471-e5d7-44e5-84f5-1c70bf50bcf5"
        },
        "item": {
          "id": "c4c2b817-b514-4b0f-b067-28e6cb8025ff",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "415640a6-ff6b-41df-b5d3-5981bdabca86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 413,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4e6ad42-9eb3-4c99-8ff9-5d5090f2d7fd",
        "cursor": {
          "ref": "ef0a3a59-e789-47f4-bf87-9e827b10d1b7",
          "length": 253,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "4db0ffe2-468d-4460-b4f9-5acfad660c76"
        },
        "item": {
          "id": "e4e6ad42-9eb3-4c99-8ff9-5d5090f2d7fd",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "cda55683-657f-45c3-98cf-eb97d728b31d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 388,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "695f82b4-f7e5-4158-88e8-7bb04a92555a",
        "cursor": {
          "ref": "4f1ce65c-6d51-401e-a037-16b7ed256f77",
          "length": 253,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "9d681be6-dc9b-4ed1-a730-698b21687689"
        },
        "item": {
          "id": "695f82b4-f7e5-4158-88e8-7bb04a92555a",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "ab65bc91-d931-418a-9b68-c59a5f0d7e54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 392,
          "responseSize": 1307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db3610b2-7634-4995-afe3-97714a7ca317",
        "cursor": {
          "ref": "e60711dc-f9f4-4134-983a-5a4693d7afaa",
          "length": 253,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "8720623c-9042-4f1d-b9e3-8ace1baced8b"
        },
        "item": {
          "id": "db3610b2-7634-4995-afe3-97714a7ca317",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "ceaa4306-df06-4a99-837a-d6270a945819",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 406,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c70f9bc-2f75-4d94-83bb-ee5c55fcbf5c",
        "cursor": {
          "ref": "c9a09e94-8188-4c2a-a2db-ac1481f3081d",
          "length": 253,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "e54daf43-4c4c-4f34-8f8c-69c623695318"
        },
        "item": {
          "id": "6c70f9bc-2f75-4d94-83bb-ee5c55fcbf5c",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "ed19e653-4a65-414f-8960-421f50aa1f31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 411,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e41514d-a38f-4fef-a411-b0296f762f4c",
        "cursor": {
          "ref": "654dfefe-143d-4e02-8428-d0a76ac0551a",
          "length": 253,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "446fcee2-3b7a-4b32-b406-15bd78c483ec"
        },
        "item": {
          "id": "4e41514d-a38f-4fef-a411-b0296f762f4c",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "31dfb5e4-5d25-4555-a252-fd1e78e27995",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 421,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "727bec41-1819-445f-84df-887b97522b2e",
        "cursor": {
          "ref": "a89e213b-92d0-4256-8458-967b4b2e3f47",
          "length": 253,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "44e80521-9d04-48c2-af0e-660bb8bc2216"
        },
        "item": {
          "id": "727bec41-1819-445f-84df-887b97522b2e",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "1f1bc636-4681-4e3a-af36-a75658d8dbf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 386,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1f80f29-0dba-4190-bf6e-5e5158d79c1e",
        "cursor": {
          "ref": "73876767-3126-44af-8b01-22bfc8e1eb97",
          "length": 253,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "6bd70703-132d-4a43-bacf-5e4fe7285ab1"
        },
        "item": {
          "id": "e1f80f29-0dba-4190-bf6e-5e5158d79c1e",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "353de8d0-04ef-4560-b577-01ca3b00b366",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 381,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e52af9a-20d7-4504-99eb-a08684270fca",
        "cursor": {
          "ref": "3bb69ab4-354d-4fd3-93a3-393323c3759f",
          "length": 253,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "e4ee261f-e638-4162-81e8-00b26522a66e"
        },
        "item": {
          "id": "2e52af9a-20d7-4504-99eb-a08684270fca",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "6c887089-0848-4651-bd72-4c9ce1990fd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 382,
          "responseSize": 1344
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69b062e7-8cbd-4cf9-8a4b-b4bb71e039ca",
        "cursor": {
          "ref": "e8fb7e2d-69b5-4aaa-91a1-ee450b616461",
          "length": 253,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "bffeb33d-72db-4566-9031-cb147b5f044c"
        },
        "item": {
          "id": "69b062e7-8cbd-4cf9-8a4b-b4bb71e039ca",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "6553b941-3e7c-4465-b904-02eae895045b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 384,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "664fbd4c-74b8-41b2-b636-9f53404a0a6a",
        "cursor": {
          "ref": "7dbecd09-0726-4257-bf9b-db08070ba44e",
          "length": 253,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "3bd0f323-1d2b-4f68-96d2-ee869035d8c5"
        },
        "item": {
          "id": "664fbd4c-74b8-41b2-b636-9f53404a0a6a",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "9f3d1052-2bff-418a-8900-03fae64fb347",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 390,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1876d82f-e971-4c3f-aabb-ac44b72558ea",
        "cursor": {
          "ref": "84437366-1c39-41de-9aa9-da48dc07845f",
          "length": 253,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "c6a2fe80-321e-4008-94cf-754825f95c2b"
        },
        "item": {
          "id": "1876d82f-e971-4c3f-aabb-ac44b72558ea",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "a16437c7-e85b-4aa2-96df-4293aa8701b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 412,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dd2ca8b-f4cf-4af6-9643-f96f7d91e895",
        "cursor": {
          "ref": "6c51bad9-8e44-41ff-8402-10cad89ff196",
          "length": 253,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "b32209d0-4c2d-4599-bce2-e62a7af6c938"
        },
        "item": {
          "id": "6dd2ca8b-f4cf-4af6-9643-f96f7d91e895",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "84eb998e-cbe2-44b6-99e2-2b53c973eecb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 386,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb1db120-ddf7-4ccc-a13e-29bb613abeaa",
        "cursor": {
          "ref": "2b57ce34-d904-42dd-8544-cd48e0eb87c6",
          "length": 253,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "fc3258f4-1928-4d5c-9aec-5726b4b508a8"
        },
        "item": {
          "id": "eb1db120-ddf7-4ccc-a13e-29bb613abeaa",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "4adba9aa-2dce-4b59-9e48-be368e264192",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 392,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7321aabd-48e8-450a-81f6-fedba22a4bfa",
        "cursor": {
          "ref": "5b916471-8b94-49e4-9ac1-35a755c7a2fd",
          "length": 253,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "0bb7c6fc-a0a5-425e-9772-019e8bdf6e8c"
        },
        "item": {
          "id": "7321aabd-48e8-450a-81f6-fedba22a4bfa",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "246fe785-7657-474d-a5e4-d7eb328758d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 376,
          "responseSize": 1298
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06ef0b27-0fa4-4f68-b1f1-ee7ecf2c94b5",
        "cursor": {
          "ref": "d63e24a7-f1e7-4d28-9254-483a7af1537b",
          "length": 253,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "7ec6e2ba-c3a1-42f1-af99-0edc4cd1f33d"
        },
        "item": {
          "id": "06ef0b27-0fa4-4f68-b1f1-ee7ecf2c94b5",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "0192250b-0071-4f1b-b8f0-be4268c76810",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 387,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d02fc8ab-4d43-4aee-b8c2-e9a512465703",
        "cursor": {
          "ref": "52d47be1-456e-4a1a-931a-0eae0c3f9ed5",
          "length": 253,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "2dd5af35-b765-458f-b657-793662dab845"
        },
        "item": {
          "id": "d02fc8ab-4d43-4aee-b8c2-e9a512465703",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "0728ec55-e148-4ea6-8bca-7bb077da7d87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 413,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57aa1b45-9efe-4cac-b832-530ca7bac9a1",
        "cursor": {
          "ref": "42d2d32b-c1df-472e-b6ac-7677ae744f29",
          "length": 253,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "b2979c2a-ac5e-48d5-87bb-1f6afe56c642"
        },
        "item": {
          "id": "57aa1b45-9efe-4cac-b832-530ca7bac9a1",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "767667ae-8a71-425d-9783-7d1e546662b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 431,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb081258-fafa-4c45-9751-ba6494626b2f",
        "cursor": {
          "ref": "d8593515-551d-4d2c-bf29-475eb8f67c6a",
          "length": 253,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "e5cdafa9-7cc9-4095-8a8c-eb690dde44cd"
        },
        "item": {
          "id": "cb081258-fafa-4c45-9751-ba6494626b2f",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "9491ee31-13a5-479e-8133-28d19c3bb566",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 423,
          "responseSize": 1304
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd669410-154b-457b-a69b-4616a24cf330",
        "cursor": {
          "ref": "b40541a7-d31f-4ee5-b4a1-c0828a6bbf01",
          "length": 253,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "462a6668-3d7c-43bd-b2b3-eed76b83d7f6"
        },
        "item": {
          "id": "bd669410-154b-457b-a69b-4616a24cf330",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "52d48ec3-322f-4824-86f2-676c1fd92d63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 393,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c088355-bbae-4b0d-b2ab-374edb0153bd",
        "cursor": {
          "ref": "39f725a5-4b09-4078-9632-e35e2de944a0",
          "length": 253,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "3af3a66a-8024-43f3-848b-deeb3e5daf23"
        },
        "item": {
          "id": "2c088355-bbae-4b0d-b2ab-374edb0153bd",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "42f6d6cc-f872-4774-830b-b3958113a86d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 396,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f9ca52f-5a77-4895-8154-5289daf7f5d7",
        "cursor": {
          "ref": "770e86fd-e5ac-45ca-9bde-b67e12b032b9",
          "length": 253,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "b224f87e-06b5-440a-843c-9b0e34576bdf"
        },
        "item": {
          "id": "6f9ca52f-5a77-4895-8154-5289daf7f5d7",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "de66775d-3145-4964-8a84-48bff8db54c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 389,
          "responseSize": 1194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7027d1ce-6e90-42c7-8b76-4bf44695ffef",
        "cursor": {
          "ref": "a7310d4e-ebe9-48b2-8d5e-9ab8e7582648",
          "length": 253,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "9812b7ce-fa1f-43bf-ab1e-21fafc35dcea"
        },
        "item": {
          "id": "7027d1ce-6e90-42c7-8b76-4bf44695ffef",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "0207ba16-24d5-4a04-b5ef-c831bac0372d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 394,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59556095-fc88-4ab4-bfd7-590f606ee53a",
        "cursor": {
          "ref": "9f0eda71-e518-48af-8eec-a4bc1becafc6",
          "length": 253,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "ceeb4e75-5f8f-4fa7-99e2-7a1c613764e9"
        },
        "item": {
          "id": "59556095-fc88-4ab4-bfd7-590f606ee53a",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "6bba5369-e20a-4b15-a6a4-58d6314b48fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 405,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "424be13e-4847-41fc-890c-8f1c84f313b9",
        "cursor": {
          "ref": "bc95e1d2-fee3-4517-9e9c-1873d90eb6f5",
          "length": 253,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "b18956fc-e046-49b3-a726-acbe511e999c"
        },
        "item": {
          "id": "424be13e-4847-41fc-890c-8f1c84f313b9",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "73017f63-19bb-4407-98c7-8f54ef82e25b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 413,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bd4af95-f69c-4c9b-a107-52071f1d3c48",
        "cursor": {
          "ref": "6ed61d8a-b68d-4215-a860-61974705ea82",
          "length": 253,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "47f5b409-e672-465c-a647-ccd3cb0bfd0b"
        },
        "item": {
          "id": "0bd4af95-f69c-4c9b-a107-52071f1d3c48",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "efeec72d-4094-4a41-96c1-8598c6495b1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 404,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f9543e9-96d6-4b5c-8eb0-f99b8067b112",
        "cursor": {
          "ref": "24f43390-550b-4753-8e3a-541932c84acb",
          "length": 253,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "a781c888-854f-4dd3-ae4b-b8aafd3923bf"
        },
        "item": {
          "id": "9f9543e9-96d6-4b5c-8eb0-f99b8067b112",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "83d26ed8-af22-424d-995a-e596be6cea03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 395,
          "responseSize": 1323
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2d3fd13-b1bb-4b7f-8ca7-c4c104f3dda9",
        "cursor": {
          "ref": "b138bab3-6e5d-4aed-80f1-73628fc602cd",
          "length": 253,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "b1edcd88-2828-4872-90fc-6a3b7dc3681f"
        },
        "item": {
          "id": "b2d3fd13-b1bb-4b7f-8ca7-c4c104f3dda9",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "2332f012-3a33-4ee8-9710-987aaf1f6115",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 396,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae6d9a4c-54ec-4dae-a199-c062558eaf85",
        "cursor": {
          "ref": "6a37674f-f09b-404d-ab6c-f25b6e3f1df2",
          "length": 253,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "dc36ff01-6fca-4540-8206-55a6314a0bee"
        },
        "item": {
          "id": "ae6d9a4c-54ec-4dae-a199-c062558eaf85",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "700a283d-7182-482c-908a-74bf9eb2a079",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 425,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e874313f-7b22-4521-8320-d76ee9933aa4",
        "cursor": {
          "ref": "f98c69f7-4288-4b32-ada7-52d004050336",
          "length": 253,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "54e01e9a-95b1-4425-9e35-1c573a7da6e9"
        },
        "item": {
          "id": "e874313f-7b22-4521-8320-d76ee9933aa4",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "5e6783d2-f4f6-4f5a-88e8-044184aad5ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 771,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2abc9b0d-bd05-4360-ba97-c7b31492876f",
        "cursor": {
          "ref": "14c38e33-daa6-4d7e-881b-1ff81b4ae07f",
          "length": 253,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "4717f8d7-1095-48c3-b2b0-7b5a784648e5"
        },
        "item": {
          "id": "2abc9b0d-bd05-4360-ba97-c7b31492876f",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "60ace70f-b227-483c-8b83-6666b1b54054",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 72,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7140ce7c-3f29-4297-bcfc-ad604fd05bdf",
        "cursor": {
          "ref": "c1232e9f-93aa-4cf2-9746-afdd796ed402",
          "length": 253,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "bd5484a6-5711-482a-91b7-9a0b772389db"
        },
        "item": {
          "id": "7140ce7c-3f29-4297-bcfc-ad604fd05bdf",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "9de63070-7c9c-4602-82f6-5ea46fdd2f18",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 570,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0df5a689-a844-42f8-9f6b-b4af583b1f28",
        "cursor": {
          "ref": "333dffb3-8921-4c00-9c5b-d8f2ca809dbd",
          "length": 253,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "5163df12-bbf1-4713-b573-1e9305880ca9"
        },
        "item": {
          "id": "0df5a689-a844-42f8-9f6b-b4af583b1f28",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "dfe9e735-19c0-4b45-a213-d79d2ff046fe",
          "status": "OK",
          "code": 200,
          "responseTime": 836,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "28ed8da9-02c2-4688-86bc-ee685a9336d0",
        "cursor": {
          "ref": "0f415234-47fa-4cbb-8009-351735302cd0",
          "length": 253,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "03cd1f16-9071-4d01-b8d0-4da6425c36e5"
        },
        "item": {
          "id": "28ed8da9-02c2-4688-86bc-ee685a9336d0",
          "name": "credentials_verify"
        },
        "response": {
          "id": "19b50706-0614-47a0-afbd-70420f48b2e1",
          "status": "OK",
          "code": 200,
          "responseTime": 2575,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "74afe0aa-f3b2-4edf-a775-d50b88c0b4ac",
        "cursor": {
          "ref": "60c5d844-5100-46d5-9232-859dbaa214cd",
          "length": 253,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "9bcadcc4-0503-408b-b11b-cfee91320b25"
        },
        "item": {
          "id": "74afe0aa-f3b2-4edf-a775-d50b88c0b4ac",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "d145161d-94fa-4ec3-9793-32b6d450481a",
          "status": "OK",
          "code": 200,
          "responseTime": 1602,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "41c2f525-baa9-43f4-baed-72da29953279",
        "cursor": {
          "ref": "d2210995-ae9f-4f85-8f47-42bed135d6c6",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "0c546312-573a-47c2-bb37-436f0e8a5e01"
        },
        "item": {
          "id": "41c2f525-baa9-43f4-baed-72da29953279",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "d85be568-bbaf-4e61-aaf3-a3500d2fd632",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41c2f525-baa9-43f4-baed-72da29953279",
        "cursor": {
          "ref": "d2210995-ae9f-4f85-8f47-42bed135d6c6",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "0c546312-573a-47c2-bb37-436f0e8a5e01"
        },
        "item": {
          "id": "41c2f525-baa9-43f4-baed-72da29953279",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "d85be568-bbaf-4e61-aaf3-a3500d2fd632",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41c2f525-baa9-43f4-baed-72da29953279",
        "cursor": {
          "ref": "d2210995-ae9f-4f85-8f47-42bed135d6c6",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "0c546312-573a-47c2-bb37-436f0e8a5e01"
        },
        "item": {
          "id": "41c2f525-baa9-43f4-baed-72da29953279",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "d85be568-bbaf-4e61-aaf3-a3500d2fd632",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42d2e83b-958d-4d6c-b8af-92c46b75e56f",
        "cursor": {
          "ref": "ed8d3d39-de87-4bfd-922b-12b9262471d0",
          "length": 253,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "678415a1-1263-4ce2-8eee-6eb3ec8cbc97"
        },
        "item": {
          "id": "42d2e83b-958d-4d6c-b8af-92c46b75e56f",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "d1df63df-5760-4e40-b12f-290d5ee5d369",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 708,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1091ec19-cdb0-4068-8255-f2822b010876",
        "cursor": {
          "ref": "98440e69-67fb-4698-8f05-6ff0cdf7fe3e",
          "length": 253,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "87779740-1d21-4dc3-8f2f-72e95abd9f2b"
        },
        "item": {
          "id": "1091ec19-cdb0-4068-8255-f2822b010876",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "0899ffcd-cd79-4315-affb-0579ea76a55d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 84,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1091ec19-cdb0-4068-8255-f2822b010876",
        "cursor": {
          "ref": "98440e69-67fb-4698-8f05-6ff0cdf7fe3e",
          "length": 253,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "87779740-1d21-4dc3-8f2f-72e95abd9f2b"
        },
        "item": {
          "id": "1091ec19-cdb0-4068-8255-f2822b010876",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "0899ffcd-cd79-4315-affb-0579ea76a55d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 84,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec38b08e-ee70-4629-b517-bc9a0e514e1a",
        "cursor": {
          "ref": "57525c5c-ed45-4430-803b-86442b856f02",
          "length": 253,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "8f775e55-89a8-4e50-a890-e10421682872"
        },
        "item": {
          "id": "ec38b08e-ee70-4629-b517-bc9a0e514e1a",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "0beb19c4-1dcb-4a2d-b60a-98d11c646ca1",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 605,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b983f20a-c65a-4ecd-ae56-3e4dd666f47c",
        "cursor": {
          "ref": "415876a1-a780-4a64-81d2-8ffc614d760a",
          "length": 253,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "c7fff266-5d8e-41ba-95b5-bb05186e7700"
        },
        "item": {
          "id": "b983f20a-c65a-4ecd-ae56-3e4dd666f47c",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "fe8d0aa5-8a0b-4338-b0e4-2b17d15d4c19",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b983f20a-c65a-4ecd-ae56-3e4dd666f47c",
        "cursor": {
          "ref": "415876a1-a780-4a64-81d2-8ffc614d760a",
          "length": 253,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "c7fff266-5d8e-41ba-95b5-bb05186e7700"
        },
        "item": {
          "id": "b983f20a-c65a-4ecd-ae56-3e4dd666f47c",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "fe8d0aa5-8a0b-4338-b0e4-2b17d15d4c19",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0550aafd-aa7c-4a22-8c23-b2e168e124a9",
        "cursor": {
          "ref": "2383523f-5a02-4c5e-8afb-e775132d5dbe",
          "length": 253,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "45e4d5fc-7073-4021-bbd4-73f192623de0"
        },
        "item": {
          "id": "0550aafd-aa7c-4a22-8c23-b2e168e124a9",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "68c72ffc-8d71-4962-89a3-c984f59c1168",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 631,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}