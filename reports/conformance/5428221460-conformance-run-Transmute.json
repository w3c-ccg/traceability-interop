{
  "collection": {
    "info": {
      "_postman_id": "4bd78d4a-8f35-432a-a4e9-9e5a47c7c93c",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "d5cfce97-e352-49a5-870d-e5b710296111",
        "name": "Clear Cache",
        "item": [
          {
            "id": "db7da4af-7766-42d5-9dd6-a6c5c0f17d18",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1005e513-d4c0-4d51-bcb2-a770a13c2ebb",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "749c0a65-88a3-4192-b125-852e7c2345d0"
                }
              }
            ]
          },
          {
            "id": "4283447f-e5f4-4959-86fc-ea95b1bfe51c",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7ef33422-ca0d-4cc8-80e3-56e31431cf31",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "8083f342-bb64-4288-8937-ce18a7fb2098"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "2610de2f-3f2e-4ef1-a0bf-dd1fba850001",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "9dec64af-e1d4-48bf-8e60-8893ba20bc30",
            "name": "Positive Testing",
            "item": [
              {
                "id": "eeb5b18b-cdde-4edc-b4d1-00dccf63bf45",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1b31efeb-f826-4691-ab6c-0bac91a56c84",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "54baf2fd-de09-46af-84b9-4585c2ab0ed3"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "590a29f9-34c1-4ea7-bb5a-a61aa2033c5b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0a5797d7-f318-40f2-9ba8-b71da3de423c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8084706f-aad0-49fc-8425-9a164a48c8e2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4f22f4a8-ff76-4a23-90c8-b9dad7957e7e"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "53b9a1c7-eb9b-4bfd-b9f7-542a9c39db42",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "f99df30f-908a-42c1-8da9-afb714ac22e1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e4aaab53-51e6-4104-af74-54b395daee6f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8b1f0aa2-ce81-4b91-8e28-739d7ba15a48"
            }
          }
        ]
      },
      {
        "id": "7372ae53-3e61-4315-a8fc-cfc9cbd03290",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "d733dee2-4cd2-4dab-8246-757ec98f0ed8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5e5820f0-8841-4038-8fd4-16cbd6142da2",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "83f84f4e-c109-4f60-88d9-3e024e87a124",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f1bcc1a-bdbb-41c4-bbf4-a71aa4d715d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ab30d861-8bc5-4998-a676-d4d230478451"
                        }
                      }
                    ]
                  },
                  {
                    "id": "515748ed-cf77-4112-97a5-9975cf1eaafb",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "395bc0ec-9d57-4488-8e55-d05fbe2c13c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f88dfed8-a741-440b-87cd-292f65a0d5c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f4c26d5-db30-43a0-995d-0229aef04534",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a02e7bc6-2a49-4532-8660-85a95dad4827",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e664ff3c-6f3e-49a1-952e-b7170462ca81"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8a5f0a21-1c1a-493b-af0b-2a7348ab34c9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "23c2dce6-0989-4e3f-9db5-6d7fe44ea772",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18eb48d1-d0d6-4457-8348-d6c7cd8fb56a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b45b5a40-8470-4d81-a11c-ee6e1540a5e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da9c2f52-5dbf-4d8c-b6d0-715b08ebb85b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c7d1044-530d-4c4f-91a0-f1462d649d22"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "80c58106-e393-461f-aade-04fb3d9fbb93",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d0275cdd-24db-435d-9ebd-8c933a3257d7",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "76d7713c-fe6c-44df-8704-8627156fab23",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "dcf7deea-c865-4386-ab01-e6ed9e74f351"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8c4ea2dc-e79c-4c9e-824b-b7fff1a53666",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "4f878be5-4326-48bb-867c-e7101f2ea50d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "92257712-c60e-4ce2-be40-ea0cbc1d0197",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "45dc4f84-56a2-4d6e-8131-2dc1599ccc72"
            }
          }
        ]
      },
      {
        "id": "6174219f-8523-4085-adfe-dfbf320dd555",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "1134e62f-c10f-4e73-b26c-561fceb90188",
            "name": "Negative Testing",
            "item": [
              {
                "id": "32d06eb8-81ef-4d73-8222-053546fa6a71",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "d96d6497-35b3-4dfa-ba37-53a6679ff4a8",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dde9ca2-23bd-425b-b5db-216a04b87559",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f4f66f4-21a5-4df8-b7e8-0738a4dfaec2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd1866b4-9c95-4811-bd9a-0bead6f86e54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "62e1102c-f004-4f1b-ad88-e29822bd7bb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79539b15-eabe-4ca3-b69b-5c4969c65f8e",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "048d22b7-f8ca-4779-b2b9-775255f86e49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "397d3319-f793-44f2-b568-5a2d0ea51a08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dce00d0-d5cf-4df3-b4de-574964bbf68e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "360c3eae-3e14-4a06-a0f5-c196df97e3b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c415715-d601-403e-8ba5-040f9e9db0ae",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4ef428d-1e51-4391-9188-690a35b8e9c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b11957ab-82b4-4e89-9d09-cd96bb70aeff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f6a911b-58aa-4356-b641-989e90c22e2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e82a8e10-dc81-4c27-8fc3-7a4a48339c91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b59cda34-e891-4b0d-aa87-62b1c0b6babc",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99e15383-6ebd-4e9a-8d38-a47660b2381d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fc49b17-5228-4d17-9975-a181810de9ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9154035-05a8-451c-ad0f-618a7314f2ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f7c5f093-ee23-4f87-894a-61f52f800b6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "502e6bb2-34d4-458c-8a6f-f8b75b2ea981",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1a68374-fe18-4025-a6a6-4077c6f99ec9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fef1900a-423d-4d3d-93c9-bf0b2ee88a83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c4b1fd3-8c7e-4d69-b43d-5ef51c0931c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2e59dfce-95e8-4d6b-8eff-39cf8db981e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52579503-3a29-4913-9bd2-8523dead3bb6",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "726f1454-23c8-44d8-9d28-db6670f6a4f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6217857a-772c-43cc-b684-b0345c54fa32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c1a017a-dfc5-49e7-842f-a73531272ef1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b49e5359-5407-4772-b749-148e93dacccd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "189c62bc-79dc-43ce-b132-39c537b9e98d",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2a9dcc0-b2c7-48ec-9aa3-fdf7b8b4e2ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3c46316-2855-4632-8a26-3bb34e47ad82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d908bf95-4e26-42c4-a581-4635d15f0891",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "328801e2-578f-44c9-b8b8-4a0e42639f83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "426c63ee-96bc-4d48-8aea-8224cc9bcf5c",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0331e95-3664-45ab-bccc-21037692fb71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6866e080-8c89-444f-8b23-e6c45a19c4a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13231e39-17d6-4837-b932-01695f56f43c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c77e6e21-bbb4-4a94-b4e6-3f7c069811c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6d8476a-79a4-40ca-a365-53df8c44a4ab",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1023093c-404a-4880-a1db-e6557435ad46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c15a3c43-7de8-4816-a108-133cc1283dc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ff69931-f6ff-418c-b281-75418b8360a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "488fe0aa-ef85-4a4d-a924-8c2bae4da971"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d09dcac4-4e5b-4f8b-b086-19ffca2be162",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b578cc1-37ea-4114-b6ab-8524ea6afe4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70c0d016-faa6-4273-b9b8-7ab53bffb356"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee1ead28-7f98-4549-86e7-2afd39623027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8edb7c29-9372-4a4e-9222-0f42773811f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ff5adbb-da98-473d-9f4c-327dc101c0ba",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d58400e-c34e-47e1-a95b-2df94c213cd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd5fd784-967a-4463-ad8d-4039aff34e06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8121f6f-1490-44f8-a1c0-e2e448a88dce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fba5a7db-f2fe-4dff-bd00-eb663bc15e34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9ce7efb-3e59-4500-8db1-de2d4e1c1341",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aad3eda-270f-4aaf-be3a-7c0e3cf15876",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce2f485b-74d6-404e-9943-3b1263460bbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f627e8e-82c0-4619-b2f3-ad2255bce998",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f55d3c40-af2b-434b-bf23-470b8d6e607c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c94ab57b-c4f6-415f-8eb1-1368f0b39f42",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47548054-2612-402e-b3f4-f7a21174ba3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e72e1d7-cc03-47c5-9c6f-22b3a44a140e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53d858d2-728b-4815-9216-07a2c47efdf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a73738ae-f9d2-4e67-980e-5b61c84a7783"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0ab81ff-78b0-4c73-b39e-b65fefa6e7b6",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3c9fab4-c6d0-4828-9cb0-1c0ed0082a35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa836933-4ce9-45a8-8a3b-983e9e7240e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79c7febd-4d3c-4f8c-8836-cc61306df4aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7699348a-5df2-4584-bc47-3cff3fa20590"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34b24eb3-fa96-42da-8e4c-4aa4cd6464c4",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24d6c615-5d84-4ba4-a475-08a65dc787f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa4ccd30-ecba-4376-8307-48da9cdcf4af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b5545ae-1249-4673-bc88-f599ac6f496f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "317c0c4d-98e0-4f26-8bff-43aa5100a23c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db5c9c96-3769-4101-aeaa-8d1dc2706926",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1740ef52-0730-41a2-971d-3812cd33b2b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d146334a-73e6-4005-be10-5029dc5156c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "866e7d42-2844-47d6-aec5-a22f5c4fbfb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "df9b8931-13c7-4c95-bea6-7a4832dcf01c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2199f796-2324-485f-9d90-471ffb05b85e",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fb22074-89c0-437a-91ac-f6c7e66695ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28b67dda-b43c-4a15-b4f7-942a88997c37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e194d18-e56a-472a-9283-685112dba278",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "73004823-7411-4b68-917b-a3ca5bde8e49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12789803-711d-4440-8017-079cb11d8360",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e66f8dfa-7c42-4996-b769-34ad4540924b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f5ee6d7-61c1-4585-b95c-ae1fddb2c209"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a43f0589-7439-47a0-b42d-3bae993a66a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "860f91b5-ecd7-4b1a-b1e5-c6ac6431261b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b906421-4bf6-4ee6-b2e8-3f96fee790e2",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a8b9bef-c1ac-4f2a-8ff5-f9a52e322ae3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a486aeca-9ac1-4e80-ad7b-40c4b677db54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3695b655-50ce-4146-925d-51aba2e3fda5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4fd1579e-b5e6-47c8-9652-62594d404bc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7269f75-3590-4cc2-84c1-e6a1d895c32f",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b95054e3-d26a-420b-86ed-cd2d2eb77bf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31cb7f03-8367-4bf0-9705-1a914c6520c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff67455f-c056-47f3-bb87-5b7c138ed286",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f36cec0-2f02-405a-9dbc-732c4d5f0777"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e4ae2be-f7a4-4016-a3fd-3c11a0081bcf",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "344b079f-e19c-4c3f-a4ff-7c75db2e3854",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e8b5b4c-a39b-4e08-8a39-3a37fa34f14f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e686d8a1-5569-44b5-b746-e16814b9d4d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ef22a0f-f149-4287-9e79-2fd1b9146314"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f8e2f83-a17d-4f65-8c13-4193d5cd4c52",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "692b334f-d0b8-45f7-9a7f-b5c6c56cea4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a2c48d1-bf5c-4ba2-aa60-de6b3362f5f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e659758-ec7d-40fe-90fd-a8feea375719",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fd072071-73eb-4f77-9654-59c788208423"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0c6adbb-3e5c-401b-ba1b-490e2bef67d1",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8ec30ef-bfee-4a12-b73b-a3920cc3f827",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f09c23e7-f939-4404-926b-b459692d2127"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe1fc7ec-a50b-4f41-b101-cf159ffd26dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "955d9a4a-13d9-49ab-8b7f-bbd36ea99447"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65c53875-2f6c-4a14-ae7d-e42dc7b83e80",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94b86f5c-31c6-4893-92de-d06d61d7287a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c4561e4-d236-4970-bb9e-7e604a53edcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ac8a990-c26d-4f4c-97b0-fa951fe0ee13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "8453524e-4044-4963-86ba-7860755c9042"
                        }
                      }
                    ]
                  },
                  {
                    "id": "414b1d69-1bad-4598-a353-8017f2f71be5",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ebf4605-8d1e-4813-97c6-b5da7921b4b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79b9ba91-7710-414e-a187-b1dfad75b8ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d90d6bc-79c4-4d5f-85d8-2cc132eaac87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "667f0765-f40a-4bb9-bbc4-0dd89fa8856c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ced0a000-b88c-48c2-bdcf-ab92270deff3",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b32653a-2bdc-4022-a556-ea75d526deed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e61e98c-22da-4116-b985-2112f5bd6cd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca8288d0-5537-4c9b-a255-e50fd3d13d7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd9201a2-ca42-427f-8510-3a7fd4326352"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54b9b0b1-b32b-46b2-8899-a4fea089228f",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e08dce5-5238-4ade-b4fe-4cc956d9e766",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "875014f4-4337-480d-a85d-208fa9a03c55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0faf11da-29cd-42a4-b8d7-cbbb7674f4d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "eaa21314-dcf0-4568-ada7-a395271ff3b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "373da56a-3c94-4d02-bd2c-612114fef72b",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc265d3e-39ee-472c-ada9-1880e5724c33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb43e4d7-2be1-4804-8f10-3365b9ce1479"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54b48e35-0576-4bbf-a6b7-0e96a9c3fda0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "53bcd54d-fa0e-43a6-9186-e9ce2a537877"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fe4a23d-a52f-4d99-a993-5a5612234d7e",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a82f585a-935f-414b-a687-e467321481b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7bf8f78-54d3-447c-80f9-93cef6f260a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59654b78-d41d-4c14-a8f0-396edc48ecdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "37016a6d-af62-4eab-afc6-28b827ff4b06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0334316b-89d2-4d8a-b01a-7196bfd03356",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f42e5c51-9e5a-4a58-ad6a-8d1ca003137c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e020de92-d78a-47d6-843c-68eea43b678f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47a3a141-7b13-44d5-8a4f-310a75085499",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "b8a21d20-ae76-4be5-8caa-f8cd0002c0a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "458da20f-1ae1-4858-81c2-6c37c07a0062",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0759c8ae-9163-4d55-9e55-4567ed21c8e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf92258a-dc1f-4394-8db8-91f4f0288e77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "373f4d78-29d4-493c-bca4-d55e44947389",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ec128eb-88ce-4b1a-b8a9-00a982a62cf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6520058-a1fc-48c7-a9ff-2de2d3f3711c",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ece7e5d8-9a6c-43fe-9e82-e489333a405f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a3da5f4-e967-4e21-82a2-838d1fac1d26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77a4a7fe-9842-40b0-a312-8199e2f33035",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e9d45af-9def-4978-bd36-0d6ee5a8ad96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "751a9403-8c0a-4f37-96f6-61b68f6ed7d8",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f429d125-c448-4014-9547-2a8795a39a44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0035b407-c215-487a-b4e4-85d710ec2cd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db827f9d-b96f-4031-ac40-180ae0dc348c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8c8a35b5-e61f-4f7f-8ced-efd84d445587"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7d98d68-0fec-4617-8136-4b80ea635183",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd5d2763-d98b-45d8-ace4-c1582cb07c2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc76d36b-f19e-46e8-be94-615e65288153"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4714d76e-7f06-42b7-b1d9-e57cb71874f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b92530df-bbf9-4149-b2a3-c9094e0e5c0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1b62dd1-93c2-49de-bced-ffa01bce8051",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de39f096-f957-4ff9-9baa-340fca7e73af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7a373d9-3105-4f38-863f-36fbde543ba7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6216161d-af04-4514-9a95-fbeca8bfe75c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "a9750174-a660-4bf2-a58f-71bfec13f44b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b192af33-ac07-410a-8c3a-8d6a7c04e7b8",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd55bc6b-9f68-467b-af30-652865487414",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a921982e-b977-4ffb-acd7-99aadc398ddd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bf921fa-a234-46bb-9d89-0c5f6d8c5c5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3bb4e169-0bf8-49c0-a9b9-ea8c66a6ca27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4f94088-e041-4eef-9be8-a47d99b922d5",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02f6b548-fd31-41e6-b8c0-e6944de5bd5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e14b6abc-f57a-4455-8969-c64369e8ed35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bed901c-6484-43c6-a680-8c2a0c3fd803",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "484caa69-6e58-429f-a026-0212f2938bc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5efdf23b-8bca-4ca2-b3c5-2541bfb92daf",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a88338e-0a23-45c6-a3e6-8582ed36820c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "449680c6-5b5b-4a1c-98bc-9a8833a0f646"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79432a62-b237-4087-9c16-620e6ccc205f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3c0d0190-8125-4ccb-a71d-5954cf6749d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4e7241e-9b2c-4c19-8e3e-f46e17adff24",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef17b1db-081d-41c7-9a22-7b18c53d9767",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e95e37f-c6ca-4bc3-9979-0b962d62523e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3634d0ea-2b1a-454f-98ae-89cfcd4fbc95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "490dba8a-e199-4a46-bf5c-925f4af888ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "952d422a-7708-4b54-8427-6facb2d8619a",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e8bfbf4-f7c1-4d02-8d7d-4e7371314731",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5f73d02-a894-41a0-ad3b-be488bc3bae2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a83a3e86-dfd6-4e76-987c-90b171929aa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "00178b02-1b76-4b8e-b3bc-7adbeae06bfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae6b5fb2-7aea-43ec-ae3a-ed8a042950b7",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49721236-463e-45ac-b009-7da8e2fbd792",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76f2d269-a85e-4070-804d-5ead0588031e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cb285e3-4da3-4c31-be59-0a7f67b9c5c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e8223f55-fb6a-4326-945d-274575a9180e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43aea2c7-580c-47fc-aee1-4f0007da3007",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f579d23-4218-475b-8665-c55ee1fc2104",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9a26b76-6f95-44de-9fad-e4a7c8b8f02d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d660bd25-c052-43b2-87d7-ec6d97a182d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "bb078a09-4891-45b9-a23a-e00ff373ac5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac7c50f9-9fcb-416a-a049-cf78835f427c",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8ae4597-5dbf-4692-b094-e0ab023e8293",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6309bdc9-67c3-4fb3-944b-c29cc6cdc3b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b42d51e-7e0a-4218-a3ec-b9568c87446e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "cbc13301-4384-4862-99d0-5c0347bb363d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7894e7f0-4b4a-4f2e-b180-96ea52d341a3",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3c9e0e2-6217-4bfd-b3e5-5f5522128105",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae32379e-6941-43ac-b5a3-238d6d034c67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dacc305-e5d3-45a4-99ec-43f6867246a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "c01e2df2-1adf-4a27-9ef2-921426d41433"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c6e4321-f533-4015-a2cb-ddcb40e9b005",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c11fdeda-5ca6-4594-a02b-91c8f4c08a32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fcbe481-ba72-4966-b556-13e7fa77f946"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94805425-7564-4b82-b5bd-8e79a6ad4c49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd21c772-2dbd-480c-9b0f-a25f01fd0859"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f400b15a-7abc-4a6f-bd7f-0768da03d6e0",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fcccaf3-0a46-41eb-bc90-1b8a14b9102b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "564a0298-09e0-4e5c-8862-9c286c017a1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52f567a5-0ee9-4f97-b9f2-d4ae402e11c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2863845c-0a75-4124-901d-83ee0208e13e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32bff697-1dd9-4b8d-a65d-039866b983c8",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc7839fd-002b-4637-9408-4ecfdd9b38e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a96a0b81-9c7d-47fe-b331-4a315f086a8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70f57f35-c7f9-417b-a8ad-9977aa697b0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "24975d46-538f-4510-99a6-1b1de2d11bae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9b7fe10-8ad3-47bc-a787-2d42816d1b26",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2544ccf2-a252-47c3-a93c-262cf0a7b92c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0eb02dde-d7e2-4089-9a93-0c7a7f90ceb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddcb0241-5963-40d8-a631-cd6acec106f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5b389a1-b5ea-426a-8adc-e1409fa75bbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b356576f-a167-47e9-8e06-228475279598",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a019b695-c0c7-46a7-94a9-849c0f6184ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "610e5ea2-42bc-4522-805d-65537e7aafa8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "745a3026-32a7-428b-b4bf-b2d38bfbf9bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2b94930b-882e-4dcd-a8f2-ee6260f52dac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dbd0f57-09d6-4bb1-ad45-6f73cc1ffd41",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "deac1d1a-c7de-47bf-9dee-7d75cf38939b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bff8bfd6-ef7e-4706-971d-6236d2481ec3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc24a6f0-54bc-49f0-bf66-0eba9b63d404",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "af59a548-1ea5-4c77-beda-8ac96c87a275"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c74a65b-8487-4a45-9b03-4b6aefb162fb",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18f1e6f5-a8c6-4368-91b2-7e257025d017",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30ccf0b3-091f-49d0-b830-1334448717ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "139015f0-2db4-48af-83be-15b1e05830b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "75537479-866c-4885-87f0-b191a8658a43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b70c65bd-e688-4d52-8c69-fe71f6bcd09e",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c12738ef-3ece-416d-ac0f-3ed04b415de0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed6509e5-8de1-4867-a5aa-5fb0c7976555"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0237bc2-14d1-4214-812a-d9e4c55086af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6719dd1-4bab-4070-908e-617c9247af2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25005908-ac78-4762-8c56-000b6dd99c9a",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7ae7e23-62dc-4888-b228-24a28b6e2929",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a8f93e1-0f17-4813-a41c-264f58c76d06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25f78a21-6912-4a1c-9859-e50845b735e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "34f03a1a-3a33-4040-89bb-b42902a9c510"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3777bb79-f47a-4c3a-8e47-4af4ece187b6",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24cf6846-274f-466b-9ffb-4a5ab4dfce64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1697fa7a-56a2-41b6-9394-2566f391c2ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4831ef19-f804-46dd-be22-5b1109fd39c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e6c94c1-9d22-41a4-8bdf-02984a1c244a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85c72685-7f16-44c0-8d4b-4380b9a61e99",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b60a8d2-c6a6-4b44-bb49-8131f2f2a557",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62726d34-a044-432e-9312-295f4002f4f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a2e99ce-d237-4506-a4a0-5b4a407c44ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9c52bbeb-bee6-4fcd-8a02-15265ef87815"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83e6d7cc-c64e-42ea-8570-552751844f06",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "330e0a70-1f2b-41ac-82be-9822148059d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "583a8502-8495-4739-b320-6cf36d46139c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3c61e9b-05bb-4659-a290-d282ec526824",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "e3b59fa0-f3a6-481b-9738-16a9a1b08fdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6f5e9fe-26d6-4cfb-89d5-46ce5ba7669c",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5fbddb6-c2f6-435e-bb69-2757e34ec4ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22855d4d-7d84-40ac-af14-c39cdeb44d1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09f043ff-9b1b-43d7-9890-40bab1e58085",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "1c9ede00-c1ce-4c37-8392-f87a469c6954"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c755efb7-6a93-4c3c-ada5-70b3e9fc0637",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44918267-d711-4b02-81aa-77181c46556b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5856e6c-68e9-4c0c-869d-a6df67220f64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76ae359d-085d-4d84-ad9f-b0ba2789ff8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "99ccfa30-7312-49db-9d6e-3b6ad907586a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72f71d0a-48f3-410f-8cc3-105c1aee1cda",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98b4ad6e-e214-462e-953c-31e7d50367c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4ae79f7-e843-4dbb-b5de-952d4268a1e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2a8a42a-fb80-4f35-81b2-48b2911451dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "3395e734-c037-4ee3-9c4c-8620fe14e037"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89db5913-231b-4a6c-afdf-0177fa2ae5a7",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d2f1553-dc67-4fcd-a2cc-6876d640983a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15c9b4bd-27f7-49c2-aabb-0bbd985543e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba87af44-06d1-4a34-a58d-5c697f3e4551",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f06dcc51-12c6-4c39-8098-79e502edb44e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4d38b25-42f5-411e-93f4-1494cd4f72fd",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ba58452-c347-4209-82b9-d0635d19b496",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82a75cc1-7dbe-4e36-8043-01b35742fe1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89ede9e5-214c-47d7-a220-1f8d025b44a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "f28f8a5f-0cc0-4e7f-aad1-d35e9e7a79e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "598808dc-c214-447c-808f-58a8ba59b80f",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3b927ee-c4b0-4960-a833-dcb88a9f17bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "978ea2ff-b350-440e-8c5d-c9a3b242ed79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db2dcb39-bcd5-4fff-b85a-f6eded66951d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc778deb-862b-4c63-83da-a3786a33a23a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a82636c1-1be5-4ae6-88c2-be59a13b4975",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66858953-cdb1-4543-8f6e-dba915a1345b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "638bc02b-102f-42ac-bbb9-8ea0c68125ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "350bd444-224d-4ef4-bb2a-0ee38600d7c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b87923c-5d55-45fd-8b6f-ffc856e34958"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eae24d34-4849-4043-b9d0-dd17f2dd6256",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88fd2056-3153-4d6e-8442-c562adb2134c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e15d8a4f-0ead-4511-bce3-da1f1434b7a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc5759b1-2e2d-4872-a824-663010660923",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "26b3c777-d336-4e33-b8be-a0c76b9f30cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2921f7a-9309-4306-87f8-0d6440fb5ec6",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b89f6a19-9ae6-4f98-bf36-53887f3fd96a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ac393fc-f284-46f9-bc7d-152d5f0f24cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2abc13f8-629c-453a-b789-bf4c4e6e00ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7290b43f-1473-4a18-b644-52e972bd7380"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8bc9d5a-2970-4d92-9103-ed446f6a0805",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60430fdb-3080-4a9c-9317-36ab1b389b96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63d1040f-276b-4fe9-b839-b69554bd808d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a79e42cd-59d7-44fb-8bd3-55890ece76e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7590b9b2-c844-461d-a2a0-ca4220b292e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2e2169d-7537-49c2-a5a0-ffcabe060c00",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc161906-34af-453d-aa19-328471b11771",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb82573e-0d4b-4439-9eed-5c6c8afd519c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0446fdd7-0abe-4cb3-a8aa-d192952be239",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "80c02bd7-9940-448c-9e21-1b4003ed1935"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c49fb881-ba95-4bc3-ad6b-bfcf617d40b0",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e27a07ea-fd52-4f00-b2f5-be5f1ccba66b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cdd894c-dcdd-4d52-b304-aaeb0436e659"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91357227-e20a-49dc-b31a-cce8d23c48ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "c2dbaf98-444f-4e9e-8673-89124b18255c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0df0c64d-7a97-4f23-b0d7-f11ed3525c6a",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "639032bb-0787-42f5-91d9-445409e328e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54360bac-5c53-4396-9133-12c8a4540274"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "545e946c-79e9-44c0-a997-cede955b3b36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e0374e07-8ca3-4589-b9ff-f4483d163402"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5758434-b1a6-4fff-abb9-9e16f56aefb7",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8063cdf5-0d7d-4a52-ae6e-b518bf142c1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5e3301c-8c06-4756-8622-cbe04293595f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c9f842e-5ad2-45ce-a9a8-a3e590b51975",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e6efa4bc-5b0a-45f6-9925-9da8d1755ed6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bc2523f-412b-4177-9cf7-c7be21439256",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "815556fb-3232-4802-b1ba-2b819c7c8c9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cb412be-5126-43e7-85eb-41ac4afa6669"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d12f0ce0-f370-4aca-9242-eca283a52d52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f81b731-8214-455b-9f90-11b8890fd083"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a00274e1-e610-4a47-9616-43a599f22f4a",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fccd0fdc-d53c-43b0-ac58-5f580fcdab6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "188f69ad-bb39-41d4-9f74-0582e024e09b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb33ed5f-4924-4419-a3e1-bb56e82483ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd4b61cd-bb7a-4d00-a312-88163d8bd083"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76c21ea2-af8f-439e-bb1d-e996a31e9b94",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2acd31c3-ec86-42f1-98fc-754a8931b210",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73072d0f-a4c1-46bc-92ac-a18da178a63a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75df4b28-0f44-4789-8701-f9ca318c9db6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "dfc31b85-cfbc-48f6-bf7e-970a3a0b8be4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "072f9cb8-d4ce-4535-9df7-494425e2bb3c",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1488b59a-4045-430c-be7f-94db9bb98a2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d05592ec-4a26-436c-bd13-3be06c6a9181"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17632063-1fa6-4b00-8e52-580b890f00d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "23fa28d7-7837-4c05-9682-92a9d8ddd357"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a1743d1-fec1-4bfc-9419-a90d8cefd83e",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "135ef948-0993-4863-9ab5-4c8c98a0d921",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "878bf4fa-1bae-48bd-a544-e9241e1b2606"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6352b482-30ff-4de9-95cb-70f968bdbe8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b48f2ab-bb5d-4cc0-92f4-5aaf08ddd4b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d882e2ed-4d0c-42cb-a315-bde019a47d19",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b34bfe0-8e2b-46b3-addf-8f282f5fe332",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fbeee4d-4495-4733-beea-4bb5ee842321"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2adea167-1c8d-4b33-84f4-483d637e5351",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "02c052b1-e9d8-4d1d-bc44-7c7725631b58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93d2ba9f-cfcb-441d-9763-c0850ea8ddbb",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "def68533-b284-4398-954b-89ca8af7d3be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfb38fca-e512-44b3-b9a7-45b156c99baf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2feb80f1-68e6-4219-b201-dfcd9deecf94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "446b07c8-b879-41ca-bea7-2ee701781ac8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a12e3d2a-bf57-4ec8-bd09-71eec9c7860b",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00b6dbaf-7ed4-4e5b-9dc5-f7c4cc358650",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a31d210-dbaf-4f63-8b5c-df3042c3f67d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27b6468c-47f8-4a3b-8508-e7c433079414",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "25bdbb9f-bde3-4ec0-a13c-786f7fe5c9b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3bd3163-f50c-43a6-bf89-d371ee292b6d",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "601c1d21-bb31-4c20-a636-77e5638e0ba0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "406a202a-9a54-4c57-ba2c-e45170c5a21f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35d4ebe5-85ce-42c6-9d70-3d5816c5c8b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9a5446c9-bb27-44b7-a78d-e4361a7dc215"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b7a8ef3-2b01-40fc-9aab-62f28e1e6ec0",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "107bf7ed-59dc-4b19-8f42-e8f9af049ed9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1e7d880-4c6a-43df-8e26-589807b792a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed45a83a-cf77-45cc-aee0-09c70cf955dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9ba35835-fdba-4f5a-9625-ef0f5cadae91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fdd9528-7b0b-4fbc-b084-829c0b52bbe5",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f26fe65-c6b9-4452-aeb8-fa6ee486a011",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f880794-5b6c-43ea-8585-453e5263a24b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2b7cff3-d39b-463a-92ac-d61fce5e3747",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d6aa773-c6d8-4e70-a4c0-d497ea3cce99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b49d9d13-fe76-4733-8ed9-bbc6a6a38685",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdf1b43d-8a6f-4407-90dc-cd158bed0461",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfb0cab4-6d2c-4237-b3eb-e8c03f52d1cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "818cb951-a93f-44a8-b9c4-c4abdcf631bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "64f51a0d-e3dd-4207-971a-16d67087a292"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f45fc7dd-67bd-4e92-abe6-cf6e4d6cbf29",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81c26ada-d044-4349-9ad5-df2336655d5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95e7cd7e-0ed5-47b8-a251-34e0ab109e72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5882d497-75cc-458e-9a6f-4199c9cd77f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9c5be2f-df1a-4dd2-b914-bd25a34a08f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87ec8fd9-e17f-4530-bdf5-4faf66e5e6d4",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9afdbbf-4b2c-43be-9158-eea413fac454",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aad52440-c71c-43d0-ac90-2c1d6120b340"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48dad2db-9c35-4672-aa68-ad01f5783070",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa6001d7-e977-4fc8-bde6-0151e7b89710"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4023e353-44c0-48e6-891e-a589b7c52b44",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bcc42d5-89ae-4cca-979a-a7a488464085",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8bb2fb7-43c2-4425-a7aa-b6cb8410ffed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46e2bcf8-b34b-4db7-9802-c557f9bba13b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d3539814-8dcc-4aa8-a83c-8382906353a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0018d28d-2bfd-47f9-a6c0-1d07610c4d20",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05d17b4a-1b1b-4cef-84af-e1d98f2671f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67eca8b5-9811-4e2d-ab75-44ee876f631e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78ae2387-610e-4b34-ba93-15ecfafe16e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "eca9e512-51d5-4baa-b0cf-35267272306e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b9f7199-5d85-4f60-baba-89ea7131bd56",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27a4ab0e-df2c-41de-8cca-44c62fe38700",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7cd9f1b-aae5-46d2-8009-31eeaaa6522f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c96404c8-ea2c-4dca-b870-6ee5987c0c2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "11ee22e0-830b-4440-8fce-cae86b7d5640"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e9e50b3-6dcb-4bbd-a143-e20e015766da",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8ad24ab-4544-4319-b7c7-5228bf3ac024",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89e95bbe-76bc-46cd-8024-d7717efbe8f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfbc6ff7-b49c-4d4e-a426-6352ddfa9a9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d7279640-91c8-4ad4-9667-5e4be72835d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b72a0461-27f7-4053-ac9b-c0229773aecf",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "701660b1-843f-4f21-8e7a-581c065a5b69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8f2a0a4-6e10-44a7-85f1-5d2f5270cfb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "793d85a7-b5dc-40f5-9dcc-0ff5634f6020",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d7ca92bd-00e2-41c8-9662-5c2647d1ae8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72666532-3c2c-4309-9fe7-73dc292464fe",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a992364-917c-48d0-b21d-7b7a1e500c50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56eba0e3-b0be-4041-8413-4b8001bde91d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40ca2d06-f191-424c-9ddc-cd7d435c9ec4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e543f34e-6ea1-4fb7-a8f3-17efd32244cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c01c168-5a38-4839-85b4-8f149f64e32b",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6873eb87-078f-4dc2-b692-c86db0e20d52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3d6c502-df90-4bed-9da2-372be13eb65b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "762f8dc1-cb7e-4652-8646-43f10aa0037e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b78afd77-eba3-44df-9ef1-a724a511365d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cd985e9-13f3-4555-b7e9-995e318803d7",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a5028f4-2ad1-4b0c-84ac-c806564c789c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "6239bbab-455f-4924-994c-adf7109fcd86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c84f594-fad4-4de7-884d-b8ac8b71f702",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "34bc2ebe-1e57-480d-ab39-48f3b835e25b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "31804e1f-cb8c-49fd-b50d-d51612ecd846",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2f8dbdab-0dc6-402f-9768-a5524bb5a5b7",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01edc56a-d6ee-4c28-a080-f13a3ee7a2f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3ab9a7dc-8487-4a69-8c4b-52f7af2b8047"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0540146b-9463-4077-9d24-5b0303305c9e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "802e6f00-4a04-42b8-b541-690eeb7893aa"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f77a0cb4-a062-4d7e-a9e1-22dcae804686",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0507be5f-4b1c-4f2b-8dfd-ccb16adf8e1a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e34f3f28-d6ef-4243-b332-50cb4c7aa1ce",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0b77063d-50ac-4b50-a14f-ae1babfdc1e4"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "73af8969-86c5-47c2-969d-8c0d44861ce6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "68869422-278a-4322-8e3a-d26716d17a29"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "6aea3976-78cf-43f4-8250-5ab1d9fe6a3e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "552d7946-1663-4681-b57b-a543192246f5"
                }
              }
            ]
          },
          {
            "id": "3e0c7633-6629-4d18-863e-98338cf6e333",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a3e4b7ab-98bb-4c74-8ae8-25914516804d",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "028ae2c9-7ce7-46ed-b497-765a6c422ed9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "912e78c0-724e-4f71-85b9-eabe3587f534"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "459890b9-ecba-471d-adcd-37cab4e1a4b5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c53b7de5-4c07-4540-bcb2-3e97e238c2f9"
                    }
                  }
                ]
              },
              {
                "id": "3f368305-54a4-4f5b-b4c3-cfa9d0243906",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7b8f53c2-5bfa-4c59-9b15-2523a6131e02",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5e85cbaf-907f-48c2-821a-17579777fb30"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "30770dc1-5c26-4abd-b226-a52b3de997bf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "bb2e8662-0917-4cf2-b335-834fea0101d4"
                    }
                  }
                ]
              },
              {
                "id": "b2ca1b29-b453-4af0-9399-a3713591c007",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a8239639-911f-45b9-8d61-6b6c3ca23629",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ff9afd6e-8fda-4bc4-ae8b-e636f1c128b1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dc3fc68a-116a-41da-b105-e0914529e4ea",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8b5f6a38-97fc-4d27-ade7-8b82b7f81bcc"
                    }
                  }
                ]
              },
              {
                "id": "67115c3a-cd54-428c-b7a9-12d85a31c0d0",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0f6b1942-c791-4048-b488-8e6416af73f3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ae262ac5-230c-4c32-ac4d-fd040cc488ed"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c4b152af-3c06-4ea9-99f2-77db5bd6e6e1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "429bde81-283a-46f4-bdc3-285b54bcfb9a"
                    }
                  }
                ]
              },
              {
                "id": "e5a281dc-e202-47ef-aecf-245743fd4c59",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e768a106-8f51-4e92-bcdf-f74422201eea",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c8b15c1a-ead7-4caf-a9a0-ba9432ca129a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "866b8ba9-46a2-4968-b4ad-99bfb457e5ba",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "693ae376-a224-4cd3-a0aa-c53d0abb957d"
                    }
                  }
                ]
              },
              {
                "id": "3b039612-98f5-4a28-9a57-811cb3cefdbf",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4b6d3111-ceeb-4db2-9992-afac7fc13203",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "49a9335c-b17e-48d1-9fa1-2fa269a82602"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e9128914-80aa-483d-8814-98964f470f0e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1f8769d2-1fa3-4095-9bff-dbb9a8e8f09b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "73b01f8c-532f-416e-a68d-b80525d8bc06",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b022eb44-1916-417a-8ed1-cb5790a07b32"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "5ddf22ac-cafd-4991-80e5-c67d27185767",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "28ff143f-f54f-44e2-b546-51641ff106ec"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a0b70334-3b4f-4fd0-8827-635fc22c3680",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "159667a9-628a-4333-972c-4e159054fb65"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "aa414b88-cd87-4a20-865d-3335334baa68",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4b9ef6e3-d71d-4276-9178-06f811826a62"
            }
          }
        ]
      },
      {
        "id": "33c0afb7-3df2-4483-8ba4-62586457ae5a",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "7461110d-29aa-4201-a8af-8913b325cc4b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ec76c709-4342-469e-b4c4-8393146651d8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9edb48b9-11e7-4cf2-92b6-bb86be6485bf",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "945b7a03-9033-411e-b7ff-f7d1e2b97847",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ac1bb0d-d98a-4285-b731-dbc65b06faa2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caa50528-0825-48e3-bc55-91a8de1dc4e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "5218e292-fd1d-49a1-85d9-ada7fd0251b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b910a12-e418-404a-8536-8aba6be1a13d",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75b91b2d-8e7d-4219-bb7a-9a2be2f4d378",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbab01b4-8734-42a8-84ad-b032a52f3c3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4ebfe0d-348a-4675-9abc-4e224493626e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ebdb0d5f-93a9-4cb8-8c03-99130f880ee4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "670fc583-557c-4ca8-b473-95f568c3046c",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd670014-5ebb-415a-a323-e682552262bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d47d2eaa-cfd1-4a6d-aba8-96618043c82e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eee5b7ae-083a-476e-bfb5-24c1bce59e5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "52654048-568b-45a8-a5c5-cfff54353220"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5d03aa1-c5ef-4eec-b476-e45fabdb0eb6",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66f18084-8d30-4f49-8095-677d62fb8c02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e319afad-bda8-4b19-8aaf-ff8430197bad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fc611a1-0590-45b9-b38a-4f759d72ff81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a6dbcdf5-0041-41b8-979f-d6120f6dd73b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8beee54f-f5bd-4c84-aa12-bb83c78689c5",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08d7b24c-e8c4-4da1-94cb-ca166b359746",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7096a0bc-5fe5-418c-a167-dcaf0ce62239"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dabd2ce-121d-4c5a-ab63-a9be4c1d4a25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "97c72bbc-7552-47bf-abb5-ea659457f0b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "138ec9c9-b345-4f8a-b44e-61c1317c8a7b",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bb9acda-60e9-4780-8a8e-a7a85ddc4336",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30b1da1c-901e-4786-81da-7f33f3c60bc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3705d794-f1b4-4916-8dd5-b69296f859d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fd26e35e-be65-434c-8f74-42391e5fafa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "025b814c-5f62-4ba1-8b36-0c749c355776",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a65c00e-0b30-4bac-8a01-ed59d12b6799",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebcd3707-82a0-4c52-9f96-6667b9e907d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8249c969-7208-4302-bdef-637ce25c0f2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "4caa1d5b-2c86-4b18-85b2-589c02d08e86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49252ffe-0ed9-45d3-9ad0-8a1348d38fb8",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "441de75e-7b26-45e2-8fc3-9f18268641e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9122be0-02bc-4df0-a5b3-81443cd367dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "804f4f81-9d37-4b87-a503-46bcdccbafdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "00fa6203-548a-46b5-8391-7d854edbd76f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10e13cbb-9602-444d-8fb1-2ddbd8486b9a",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28ab78d1-a5fe-46ea-a873-8b2b1cd930ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "395c554c-5384-42f5-836e-6627e63b411d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d2be8f4-8a77-4079-97e4-811ca8ec4ea8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "666d7088-a9de-4fe7-8281-dc7d6444d727"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2210555-007b-4259-b440-54b311f77085",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6513499e-d1b5-406e-8719-2ae5b17ab14e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a147736f-ca59-4faa-bb0e-ab7a38474394"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c2608b6-86d4-42a9-93e7-6ace4680a9e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f8675df-f026-4981-92a7-2c6ab9acf94d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30df9fe2-4a1f-4b4a-8ecd-5c80f147d937",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71fb21ce-782c-41ff-8b8b-5c19952777c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b5a5033-3c3b-4275-ba1d-b71ecadaeb9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c06ce523-03d3-40cc-b68f-515bb5a15c6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "989bdef5-5dfc-40cd-81b5-35520a80216b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09d1c635-9360-42f3-96c6-342e01276224",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aff468ea-b470-4b3f-aaff-0be1b8278a74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "764fb53c-24dc-4486-aef8-e2be5a343b1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e17a5b29-3f9d-4bea-8c89-8a8ec7ad89b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5caa0980-06e1-48e5-930b-478e9473b5a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce76f41c-1d51-4c71-8c63-0fdceb3842db",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9796298a-99cd-465b-a4f3-13a8cd0d404c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d3c91b4-c3fa-4292-832a-12de02029781"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42e63431-01e5-420f-b017-4e0aae20093c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0254ad77-9a75-46f5-9133-629ed256330b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99074397-07f9-4cd0-94ce-dbbc2e18d9f1",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "134f0d54-3f92-488a-adb2-262d54935c71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddd4ac4c-91bd-4747-a3f5-c1f4005e62c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1ce31f4-02b3-4eea-a4f6-1154d914eef7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "19be766f-53ba-42fe-8704-dfd01d86e6c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b50abf46-ea54-44cd-ad7a-96427a957d6a",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a68ac03b-8ac3-4429-9faf-c66f77595144",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a6a8403-5cac-413d-b63d-0bfc4602ebee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ae6ca51-998c-4149-acf1-8aecfb056ee3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1cbdaa3-10db-492b-bcd3-966d87f61473"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cb0669f-d2e0-4842-bd91-25102bed1af3",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c570f5ac-0131-4316-8e2c-ec84dc431992",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c407c03-8c38-4744-a911-64876d5a84b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0170e8c-ee9f-4872-9a6c-aead8313edb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "478c7b3a-9b55-4a31-96ff-4dc5c9e63fb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0adbc92-6c52-4a0b-883e-9f414156e9d8",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1543c20e-c59d-4da2-bdf8-788f8e46f8ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1b41c9f-99ca-4d1a-9de0-53f5f98c3761"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45611ca4-7724-49e8-b628-2d23ddca946c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "c693a892-b8aa-4683-b260-b1170b7c4f84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "481cc418-3d84-49b3-be15-b512a8010690",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3aa13f78-7d9f-4b07-b697-a8c576d3f82b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f344aac7-c866-43c5-a199-5577e807a8f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ff3fe90-cc66-4f77-b403-5d0afe01a69e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e24024b-01ab-4b2c-83c2-d368815070da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99ffe909-0f11-49e2-9050-7489bb825acb",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef534027-21ff-4d10-85d9-d96b16d0047a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bd498e8-7553-462f-ac04-cba19823d49c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4482612-4874-46eb-9818-bb54dd1e4b6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4eec118d-49a9-4189-93d8-088ce8b83ac4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22984e4d-ce98-4741-a8d8-990d9e68eb9f",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "255375d9-2035-4ac2-b0b1-6e5d082bd29f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8fa3662-1435-4996-b7ae-f427581e2905"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f6354f0-3310-4f8b-9461-ab4688673e5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "009a9fb6-1b31-48a8-9bdc-329d49524849"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3870d198-0d64-453d-b87a-5636e5485e77",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e38f6aa-0cb8-468d-895d-ed6bd6ccce23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fbcdd1d-7d59-4530-975e-f7b15858baed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a4c1741-478f-4994-ac43-4706d6b652fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "945d6cd1-074c-418a-b60d-0627cc7fb500"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e22392e-2190-4463-9ba0-b15e59bed6ca",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b535af65-fb15-4a0b-9ac1-233b098e0f40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a638f02-0418-49b4-abec-9e524eefa9e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9241d222-52a2-468b-93ba-6db42b35424b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3994c13-f99f-4041-97d6-47439ce01510"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba3ca769-0987-4e4a-835c-dde56c3b00cf",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0b9348c-1ad4-40ab-b1a1-44be53e72d52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "787829cf-c1f8-433c-bcf1-874cf725694e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98951904-ae31-421b-b494-23b6adfcc801",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "94d0eefc-5e5a-4356-a370-4589dd8263de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71c49a95-1ca2-4e1f-a6a2-fb003d5d343c",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05f95f70-d8d0-43d0-80a0-c357a07f3e0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d5ee42a-563f-4152-b1ef-1ea9e568ccf0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a27b047-0e08-450d-a10b-576cd80e01f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c4ccc8b-0b27-4a16-8102-2b074ef7e0b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bba29867-d58f-4fda-9497-b913f3add036",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b438b48-21d3-4b22-a7bf-5e6ad3afe319",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edf63d6b-7d0b-4827-b6cf-0da871109282"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76073cd9-69e9-44ab-b01e-adfb8dd68a53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb6ae689-9738-410a-9e3f-5ada42b2dd9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd443c7f-64a3-4124-a0da-2aaa7fea594d",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6696ac61-ff8f-4880-ab58-ebbf9e78433e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c7c9f67-29b2-4989-a6f2-4506ed6efe9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abbe6d48-2f62-463c-b0dd-ace4dee5920d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e3773079-4256-4160-8094-dcdb6d563636"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd6d381f-1279-4dce-abc1-287c858c3ec3",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c617825-37a3-4b96-92fe-87fccdbb29b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83e7e09d-a602-4bd4-a6f9-f5cb24b7e2f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ab90acb-42df-415f-b0a5-f2b2ffba989b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f640c673-976b-4db9-ab4f-a43feb0f9667"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0da9615-1be6-473a-8a16-9a456b738cfd",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbc8dfbc-8ce4-4cf0-ba42-1a1f17c174e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2ab0d65-48b8-4bf9-bbcf-8284d762f812"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "559f7f3f-1b3d-40d0-86f2-9c2ed0424960",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9fcd14e6-bff6-4b6f-af54-1c9045e962e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a56fa8ad-2263-47f1-8ca1-2e81240aa6eb",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "126b5e38-d918-40b6-87db-ad447cbab203",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1db8d398-d3e2-4fee-aaa9-98e596f6c037"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7d7802a-d4ac-4ae9-bb4c-5cda55c0f0ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d23b1809-f585-42be-beb8-d7a2fc354779"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe1a8e67-1c1e-4466-81d0-33d64df81ae7",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f80e9ee-8db8-4fff-bcca-d0b27a67fb3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96f8af3b-73b8-4659-8a6c-66f9d915a38c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4c2a8c6-b15b-4c4f-a3f8-cb90a0f9ad26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b441109-4421-4a98-98ba-22a0c65b1de9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3d27d6a-a1e4-4f85-81cc-f209b509a9ee",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73784989-16fd-4801-bff7-a6ad7f6c5f6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2661099c-a963-4b64-96e3-adb84715ec19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f8dfad1-c5ff-44bb-a227-088107ceedc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e517afa8-a2c6-4611-8680-803e17481a70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3669044-b3cd-4f39-8b0e-ab21a74ae4b6",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63e7bab2-6d9d-4f01-83c3-077f6a85635e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c9bfaa1-69ec-4cf4-8cd6-880b0f466d4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bf49e0e-f8b0-4622-85bc-6cbfcd763312",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a006b3c-3328-43c4-8d8e-df9d8d9de1f8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4d0591eb-7c6d-4cfc-b237-57868fb81119",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "924c2e5a-2328-44d6-a762-6c4199873c97",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cab8e8b-a1cd-44e1-8115-c6c19fb16935",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "aefbc890-31db-4341-aaf2-3ca14bd5d026"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3813054a-e7d1-42bf-b2b6-18b2b43b7c8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "32309251-c87d-49f8-8213-898471fd8639"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b9c766e3-db57-4a2c-a13c-5d646e031243",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "14460a82-d076-49df-9781-7da8fcc794d6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "36207cf5-7021-4699-94ca-0e7a449b9a7e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1c8068aa-64c2-4883-997f-9e5ea088aa7e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "87f17fb9-0d52-4a16-a432-fefc434a28f8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c11185a4-cecf-4bed-a5ff-84c2f4916df3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3edd11bb-d21d-45b1-98c4-a437621edcf6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3cde9f82-5eae-4bfe-9fee-516f66eea377"
            }
          }
        ]
      },
      {
        "id": "c1db9311-2d9b-4d68-93b7-562e1d78eca5",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "de10e143-173e-403b-8b18-f3d3ba091b4d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "39ccb143-bb5a-415d-a768-cf845c96bf32",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e9950242-2682-488e-9dd7-a5df6e756124",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "989d78ae-0cd7-468e-b279-9435401ef908",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a124fab-128b-46d5-9d2e-01e8c620055b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b9edbbe-273f-4401-987d-32903ccee87d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "67efc7b6-2b98-4cd8-b3b0-c619d0b6c74e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "864bb166-280d-4760-ab41-df9c021d585d",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "659195f9-5cf6-4ee5-b93a-f44ace382adb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b648f13-5451-4bcb-9a9e-cad1696e971e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23a018cd-06e3-4f95-bbd4-3811e30bc6d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "75fbe939-614d-46c9-b019-8bc1ed57674d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "537a5a29-3389-48ee-9029-581ad747f73e",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf1239c1-a42a-4bba-acb0-ba0a3852cd9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fba9844d-6178-48f9-bfc4-4582a9c8ab0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e931c490-febd-4057-a933-c7bd8ce62406",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f7c2138-01a5-40fd-b8e0-4e76e0bece9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec66f985-95a2-46c2-9d0a-515f444d299e",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c2ce2df-7c49-45d8-9620-001c88cca584",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c81eeff6-7ebb-46d0-8e01-95a7987c8b1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2640ec9-5ac9-487d-8316-fc85ed71fd5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "029876cc-6460-4299-9717-b53a2a2c937c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8f7fdd0-dfca-4292-8c4c-620c8478fb8a",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "654da3cc-2c31-42a4-be9d-0f6d33c01680",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f328b74f-4f83-4db8-b400-9b2c5c1e02e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "032a50e3-0c74-471a-8d9a-5f45e7e32e3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e906b75b-ad19-4923-8ab7-3be001dc7bce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af4b2197-0932-48cb-aeb2-15cdf7edb4f8",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d20f5616-11fc-4abd-b808-911bbd417757",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "541621f6-190f-4c5d-8494-29cf273de4c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "866f3273-117b-4109-9e57-eddecdbe315a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "918d4c82-7354-4139-9d09-5d1469e7cfd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c0c8306-a0c6-4a70-b74b-1533ba68c9e3",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "412d5033-1522-42de-a2fd-25e2ff72798f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd485a08-3c06-43fc-8326-1e6b7d1e67de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f12c99e-6ff3-4a79-b09b-76a6c2aaeed4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba28aeb2-5dc1-4640-9245-1f8dc3c09630"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9de450b-4a52-4b62-8320-c1f3d291219a",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f37c705-bc1c-483e-88ac-843e168e1b97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0abd5b0f-4e26-4f84-9e53-cf038c52bacd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6c0af33-035b-465e-8107-cd58cae97c62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "42d50091-8ff2-4f7d-ba27-55e1ef4a7f5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcc49e4b-af30-4f69-affb-d23bedff2243",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07c2fd17-cb92-46ce-a7f3-41af0e102d3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d660a0c-fe80-4676-ba57-e073bb99fbf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc0d405b-3920-4f8a-86da-7fb1a697e932",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "824c139e-70ae-42c6-8ddb-a67006adedf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d56fdb77-0c10-4758-95d3-d04a2011a9fa",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c1242e8-0325-4ba7-8d19-4dc3414f0911",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c8e0af9-7fde-4089-a7ba-eeb164c692bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aa7a808-cbfa-472d-bf39-c68ff578881f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d02fe79f-06bb-446c-b656-d2a54baaaffe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f537b831-cb2a-476c-8031-b27b0f99c0e0",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c011c63-5b7e-4b64-a59d-755f189e32b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fd414b8-fb5e-4763-bf72-82e995c60127"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaff9753-7cd6-483a-82b5-d55834c35565",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "f258399e-323c-4f5b-aede-428a94860743"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c3f60d5-ac96-4259-9b3b-fb3bc5e3c4aa",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e79880c2-6873-44f5-b645-7ba59605c466",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64ee0d9c-adfe-4d0d-bb97-30e508a4f283"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edbb4b0c-9cb1-466b-ad57-3956abf86d84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1e3f3a89-4b6b-4232-b941-bd62773c2f5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c42db0c-18de-4e9d-8bdc-1707c8316f20",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a9118d9-3a06-4ece-b06c-cca16f479264",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "002c4008-0b3a-4787-827d-d5775d10e3e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95b5643d-edc5-4c85-bdcc-6336f42380b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4463e18-cf2b-4e03-bd38-856fb66b227f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9ca45bb-9010-4373-ba9b-5bc861a7bb5a",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e19fdf2-a24d-4d1a-8fd5-1a3f53909514",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5c5f409-2159-48cc-83a4-a5c0e204559c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3155d98f-932b-4c4d-8435-d353643c8086",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1a906e1-678f-48a0-ba6b-a2b68f37526b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8ad3483-0e27-4010-a65d-35243147e996",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08013d02-2249-486c-9f5e-d1d239439e93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5346dd5-0df1-4268-b19f-96d49eb50e60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "244c04cf-5026-4682-84fa-d087f20b2594",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "0fef2efa-eb6f-4e38-9ecf-924223c5c602"
                        }
                      }
                    ]
                  },
                  {
                    "id": "946c7c99-1445-484a-88db-df5f9c5687d2",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19af438a-0867-4451-aa64-6982b853b7fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e05d5310-0a3d-46f3-b41d-9aa4b8094995"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b787fc2-3b2e-4e56-822c-6eaf75ae0b92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7509403-246d-48ea-ac60-ae5d8e17e8f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf78dbe5-fa66-4a82-88e6-de99e0d41d13",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0524a1eb-9b15-4d90-b144-b7fab0b11de3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3813ee4a-fbb2-4d09-b9f3-ddde1dc1288b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c088efd5-c8a8-4860-8252-81364643a87e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f05f936-55a0-43a4-bdfe-cab819955633"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df8de651-da15-45de-9b80-f93944ef6508",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "727f881b-9e3e-4fbb-a290-e8ce8db5898e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7beaf3dc-6715-48e0-a380-2cc79d69f660"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bd799c6-ee54-4cd5-9640-032e4716d909",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f52c3afb-bf75-4808-b9b7-1eb4a7e5a433"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f836ae58-af77-470e-9a8f-4be9723a7894",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d39b55f2-3f90-4ff9-9832-2aacc8c4b245",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bcc9993-0e21-4d68-a3d0-6e5f8407a2e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b69b493-54e1-40dd-a03d-213e4165bf10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c197da6-7f4c-4729-b4a9-6e65ce54c7cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "617be210-4552-4f73-8e7f-968ec8efb8fe",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0314bd4-4e0f-4905-b21c-1f30542214d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d94d4668-5ecc-4510-9634-285db1cfd184"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac859fec-8641-48cc-8cfe-b65a598569a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fce7e16d-28e6-48c4-803d-d39619a1af02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cda5eb9-2ba9-46ee-b9a7-1ba172d9ce60",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0e07f22-d100-4ccd-b324-51a37b06ee41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df1a8dc3-7217-407e-8d73-f2368c46e881"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eb69a87-218b-450d-afb2-fdf0d9ad4011",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b53ed0a-cdef-459f-874e-75bafb977b2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a23b00d7-0f93-4784-9a6f-ec7708f8d9e8",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23c5acde-dfb6-4060-99e0-d979faf2b776",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e234a80-c9e1-4d8d-a75b-c55535070642"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c07eea8f-d516-4103-bf66-12e88c8a4ed8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5dd6776c-925b-4868-bff4-e48d62def841"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eb51903-b29f-4d8e-81d0-200ea3cbc548",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "245ac95f-a8f4-4346-b84f-b86ccc78e277",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "006eb4e3-9761-409c-8732-ce67f60d90a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74487587-3c81-4566-82fc-4619d3ffaa3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bdfa545d-a471-4185-8d36-cb180524acd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f12a9112-4052-4564-851f-9cce0917a960",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "032ce194-317d-48cb-b35c-064aaa24cfeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9c6c3d6-450f-4491-9b6e-c869c00e4404"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a79d5525-bd24-4997-8617-8e5c80f775e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb1e9c96-f3bd-4ceb-a562-2e96b2d8ff0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42070468-2b20-45f9-8be3-b8dce582a97b",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb50bda1-82a8-4963-8eaf-61f20ee3bccc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33e459ef-62b4-4436-b4fd-7e51c072338b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f2dfce9-bf1f-4d7b-9065-9aac005ec4b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d670ae87-9593-4e99-89d5-200ddc21a51f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a69770d-301b-461e-b309-0096df12123b",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cce313e0-8126-4f2e-8d8f-0f05bada639a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4cbf659-54b7-4034-bbec-61ac0e5ee053"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b524ce5d-c2e1-4bb9-bd5a-08d91d701bd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "72c0f8c0-2c7a-4870-83dd-81662a17d752"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2bde29a-4d54-48a6-a871-c41451ed840a",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f123932-24a5-40cd-949e-bef9bfe0ce05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "865873b6-8d37-4855-9252-03e7f12492f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9dfa5a2-5e18-48d6-bea8-97067e11cd2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a6aa0b1-c235-4f62-a758-476043664a21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f14806d-9288-4b4c-8365-f25ce56007c4",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26f15380-33a9-41dc-a2de-492cd0a2774e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63de0712-cc8f-4925-9dcd-7685c5dd77fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0aaff39-97c7-46d0-995a-073b46a33c0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c911944d-f36c-41fb-8c3d-12b49ae765f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ace9d05d-13d0-496d-bcfb-698641845648",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64aecf7e-0a15-4aee-b536-bd1781267c1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d40fc9c-a7f5-4201-84e7-f3538f43d88c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6a43e8a-25ce-4c7b-9f7f-3effd7f35058",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4180f9a9-d6e6-4908-bc80-4867e5bef5cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fd4ece4-9de8-458f-897e-152da588b5b0",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b350285-a3a5-45b1-abbf-40daee6326a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f797c9a2-74a1-4bb4-aa8b-d7a3f14e26a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99ef7cf1-e5e8-4951-b918-353da3237b8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "508602d2-bef6-40e3-baf5-5ea043bf86bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4907d1c9-48f9-41d8-ae10-5e506af44ff4",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "822e58b2-d679-4b1e-a31a-54e9f491a47a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff9b95ff-e101-4bed-a841-4a222c658c9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a6d6821-c587-4815-ad97-bb89b2e94700",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "58acbbda-8280-425b-8c36-f2db7066b08d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d7f73d1-e04d-4e9f-8bb1-4fe80a4315a6",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9062c7a5-3bb5-48d6-9a67-96920ab61293",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e530eba-c54f-4fc4-802f-e2846420ca47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cef6ad9f-7da2-4342-808f-ccd85db19673",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9a9fa73-3d49-4cf9-8e02-9b09d9ee4ae5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bdbbb07-d008-4151-ac2c-147f79a125a3",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9438e173-cd73-44ea-874b-09e7a56cfce6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2156b35-5bf5-43b3-8534-96b99ed5e565"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7dac7c3-8c60-4c2c-8880-364da5c5c38a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a73c073-08a6-46cc-ab5a-fad14d64d82c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f063eb89-4b7c-4492-9d7e-dc8c665a239c",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55859726-d72c-4dac-8ac9-a9c8447442bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "079a9154-6193-440b-841f-947473391ac3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "889d4e19-dcf5-4210-bd1c-a4deca526012",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4dac5f48-155d-41da-87dd-c4db95b2273c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7cb7e25-272d-4764-abd6-7fe74b26129c",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfe7cba1-3090-4a01-8a73-374ed4be12a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd9218a2-87da-4320-a5fe-90435c4d0a68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d9e2020-f691-4104-aac3-de5c08cb2dd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0cac1967-87dc-431d-a0af-a97fac6b1608"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01351868-2378-4608-9fb5-2104116aece9",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69b5d688-2a34-4c82-a5f7-017b1e5ab9eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f809ef0b-d1b9-462b-bcc8-0f260dec9597"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75960a95-606f-4765-8a31-2a890c7b9eaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f56e5b2-cfc7-4e1d-8e9e-83785d53108f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "729fd0f4-e919-429f-ad3a-e72fee7143a9",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82380f2d-ac58-44bd-88f8-7dc42ac61c69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0c634e0-0465-450f-99c0-13419ceab2ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02c6faa8-4089-4774-b991-61610a0a98f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "872f4334-b5d1-4893-9a8d-44a7baffbbd4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6911c177-3f64-4f29-9e7b-56fde6f7f0df",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "274906c6-ce4a-42ab-b112-ef64d37bf092",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e6d38c6-cb5a-403b-8055-5b4a1fa30779",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "902beee0-ece4-4ddc-8601-469a8f613acf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c47fa79-0b94-4b26-a2c9-aa60613a9d57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "580a61b6-a568-4d07-8470-10966abeac23"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ff9bb1f6-86b3-42b1-a3dc-3abd719aba85",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d36f34ae-8497-48c9-a1cf-5769852b3933"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f5246be5-d046-449c-ae26-e7e39bb67f35",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "add23cf3-0d71-4fe9-88af-84f334c1dc26"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "28cba38d-c53b-48f0-9996-199bbf2ddc0c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c28ddda2-fca1-43bf-b5fd-4a379ab5dd9b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f74df1b0-ca09-4dee-8419-c566ac9742d3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "da88d219-295a-427c-b5c5-a3072647bbb4"
            }
          }
        ]
      },
      {
        "id": "654804ff-cca1-486f-9ef4-e01017eccaa0",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "dc1913c6-fb49-4c8b-8f9b-625a62fc8bd7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6679e478-a14c-42f2-98f0-9841c466063d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a625729d-7623-4549-9b26-ccbeedb5dad6",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4963d9a-446e-4a32-b406-62ce7007fde6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3217672f-89f6-4ac3-ba96-bb7e3f283eb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef8dfa08-5524-4a4a-8db6-902e8d28835a",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b56fec67-3827-439b-a3a3-eaa62b28dbf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccc1ed25-6418-491e-9f13-269eb1d24b78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9992f80-9640-4698-a5bc-b87d1d698da1",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84d686e6-d8d0-4fb8-940c-0ba13e438b42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fa59c2e-a7e9-4752-9014-9e5218a5ba79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e664a11c-9a6d-40c8-badf-b4fbaa820823",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be00d2d5-36ae-4b42-a0c2-1e80dff981d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbbf064c-95f6-4bfa-982f-4cc1cdb5c5f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46a2fc57-f58f-4896-95f6-d834a392042b",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18488806-1d25-4b33-8cab-aa64d8151613",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc839bf3-c8bc-4fdf-a385-d0799f867307"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4b13b9a-dd77-4fae-a284-8be71db09a5e",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff86e4d1-ba08-4009-8c32-0ad7ff044fca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4f615fa-6167-45af-b609-75fb21f9f450"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ec7ca08-fa4c-4fed-ba73-d924d7e785d0",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46a62830-c7c4-43e2-9b59-7378ac4fc13f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "814a6490-37e1-4c17-9978-d9d2a84aba9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00f4bd23-3a79-4ecc-b0c0-2dbaa9d9bbff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11a2e8af-d19f-48db-bdf8-0801e0627f6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4803f0a6-7f1f-4e0d-8c7e-71c9a61c16be",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf4bb8c6-473b-4f4f-909a-489675c7cbb4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29577544-c5a6-4570-9700-3bcbd9d7f84e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "725a5d17-f76a-449f-8abc-669a2e337696",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac9ecf2e-5a72-45d4-b383-10d5cadada3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52948378-3cd0-45ec-8f54-17a0d6bc32bc",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf4b2918-86f8-47ee-a817-39e6fc9af4a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4935cd94-a7bc-4478-9e1f-ad113e66fa91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e1bcd81-c57a-4b61-83f7-de054f1d3089",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc09ff56-ff39-4ce7-8c44-fde759b2fa34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5991032c-4fd4-4f9b-a23f-d4af792a244d",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5baedffe-4609-4917-ad11-aa3a741f0136",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8af4404b-ddba-4ae4-8a03-ba79ce93bcc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46a2953d-57da-49f4-a027-82045540957d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0291d19b-10b2-4007-a25e-236f87b65c66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e34fc3a-ff33-4baf-95cf-88eb56206cb0",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e256ca95-5b24-4bf8-ab02-2fe16831fda7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ff14438-85ee-4bc9-a358-f132d5ea2711"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2dcde36-b64d-4895-a331-271b7c6eeca0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b09f440-3df4-4445-a626-95b223d24546"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b18bf3f4-5e84-4422-bcef-d95029ceb04a",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74dcea90-4724-482a-9561-f0b9743b6d0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8b041fe-0181-4e62-8135-2fe7fa91e0e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9b3d529-a503-4072-8e39-c86715aee86f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ced1ef8-b9a0-46d1-993a-1d20ba8c12ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddf73c35-c973-47e3-a2c8-63c18ee6e8cf",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bc3be3b-0c4c-48f0-96ff-fe352fedef71",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "345b1c98-1fc3-49bb-a02b-0b88574f8f66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d68d1392-13ef-4588-ae5d-5c8f61942172",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fdd4546-c8d5-4e87-88ad-d8a0a40355f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2385549d-a721-44a6-90e2-42666c32573e",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25dbb8c5-4bcb-4043-be89-ce96e92b58b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c852a47f-68e0-4fb8-a56f-d1298467c04c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0bc5e78-ca5a-4c39-b047-9c8bb2cbb1e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2a1f700-099b-41b3-a4cf-6e8b20662104"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee9f3876-4f11-4168-b632-06385f568773",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9532dec-ccfd-4ee8-8a33-7cdeddf2684a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "545024c3-de04-4e22-bd89-d013b43951d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96fefc81-b0e4-497f-9f1b-4c0809aaad80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fd751a6-3924-43e9-a446-a62580ecc7cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fa939ca-b635-40f0-9a5d-14570bfd67ba",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "139e0797-0d8e-4cc7-b9ed-53b80570a1a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "655f5e65-5da3-46ec-8246-dafcd2a3129b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "985bad49-a745-4565-8578-ca7d4134c980",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66501d18-a96d-413e-8387-162c822ac3e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f86046b7-e156-431d-8ea7-53e0a792e61d",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "479fc23b-1469-401a-acf8-61996d32acd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "749ec75f-64af-4b40-a988-53519ea1bae4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2576a1ef-104d-4411-aad3-51b892dfa340",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80d979cf-79f8-41ac-b928-b0c0c8fbc5e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1df7df7e-e4e4-4fb8-945d-86942fc25929",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73dc4805-80dc-41c6-8722-675710c2ab5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da0caf26-4ae3-4e96-8762-72a47b6766ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58d40e04-8c61-40fc-bc9c-b645e7ef8abd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92ccbf00-fbbe-4360-a5f6-7c28a7dead32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c5a5240-d9a6-4357-a159-a840b0fc1292",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3d72b0e-1f07-48de-a917-b1b0d2635439",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fa409b7-87c2-4f32-a82f-b68aea332418"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbf21c5d-c589-42c4-ad41-addc327cc476",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ba94121-b5d1-44f4-8c54-820804d37e6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "447e46fa-5e62-4014-a75d-73efb379b008",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0e4261c-e41f-4eb8-b6d2-e539dc1dddd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "482f2488-81fe-48e0-960c-12ac21af1275"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "466200c8-40ac-4d0f-a200-744d5b4d4f46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fd2102f-4aa2-4244-b8a7-e35d4cb9bd81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2a93157-1a2c-410a-9fa4-a2cb08e6a513",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ea7fa27-bcf8-41cf-a662-4715511b5f05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65e9a6b4-5d37-47cb-82b8-44b25f6db612"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd9bf248-7722-42cb-9349-37e21587d983",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7510d24a-4280-4adf-9703-3c5b8a68d57a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6df747f9-43dc-4d2e-825d-42cbdb7fd4d5",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f47980c8-53d1-41a3-9f66-5446d8a6a6a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cd5e7d1-ca99-4364-9c4e-288bcc5b663b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68e57017-b912-4bd1-b7c6-90cd5cab395f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16e13010-a720-4973-b43f-ba981942c148"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a409623-8b9e-44a9-869c-2c6d95de1eee",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af2b31fb-a987-47f9-af81-6ca8074cd72d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60543c36-4f9f-4c2f-81ea-80473983ec54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c937b2c-017a-4e0b-a793-86bbda705baf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "061faa5a-5b39-4967-a545-971964ad43b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29f181a9-7402-40df-aefd-e2bda9ad966e",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f2ce9e1-e137-4a56-95d8-3429f9bc491b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d6dcdb8-cc8c-42c0-a243-2694e7600132"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49fe14e2-399c-42a8-9d82-1c594cf09061",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85a29868-5eb8-494d-98e5-8d4c988069c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "454051c0-7553-43da-86d2-9ad90d319bf5",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d71d816-de6e-495e-8789-de6598427e7f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca85568e-adca-4f97-82dc-1324abec51a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d4c98a5-efe0-4f40-a08c-a2e70aa94a1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "003804f1-bcd0-4511-8404-9cd92904f86d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1815b6a-ff7e-4217-b692-680a144e988b",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14c7d800-9720-4deb-b497-72b9bb5bfb2a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9deb409-a299-4d7c-9568-07ef4823e536"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c092347a-fc0f-4a36-95e3-9c4b42fa568b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50894ead-243e-429f-9103-c3701b9f33ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f805199-6a37-4b25-8f8c-a3f10dc90276",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50755c8f-7419-4df1-bff6-7bad80ce1743",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7890fd63-2c3a-4522-bc6d-176a7c1aea1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c79911f-a7ab-459b-8957-596e68a4eb12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e007a7a4-af40-48ba-b64d-4cc24d4d7a1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32f0d88f-11d0-4679-a4c0-0f58a09ea3f1",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "934d4cdc-8b37-4ad6-933c-8d63b5783495",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74053ae4-f2fe-44f4-884c-2080749a138b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54a75107-d3a2-4867-9a7c-ecc6b487c24f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d7c3468-8e8e-4956-9851-095aa200b2e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60375a56-7f1f-4339-b514-b3d813aa7908",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a5df8f4-e1f4-4918-ae1d-dc0a125a461d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3b759de-8bbe-443b-9108-ccca97f57e7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52209308-b346-46b5-a68f-0163b57cc034",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "073cef01-7c5e-424f-a2cf-3045d79a8be8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71ad1ca7-51cc-4baa-895d-b3a0ee1a0ad1",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04576e6b-c99f-40ed-8485-eb3fea598019",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91a2e1dd-53c0-4e2f-985e-9d586752a534"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bdd0f3f-b154-431e-8da0-5a7a6499de3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6993bbeb-4bd0-4631-a855-c64a5e6e3530"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68923640-a6ab-4935-a26c-d5d988510722",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27829acd-a639-429b-86aa-17084e78d8c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0cc2fc9-3a7b-4e31-ba60-04ccb342c6c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc83bd8b-dfc4-4e81-a07b-88afed66b206",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47527b56-f45e-4463-bcca-eb498b24ef6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10f9231a-7281-496a-9c4b-2fa26fbc2f71",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "276e67bc-ccbc-42a1-a8b4-4bd599234a20",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "140f6e98-ab08-440b-a0d0-2b07099ef3a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "229992c5-2d1d-45b9-9500-3892d17851d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2acabea8-d342-48a0-8fda-2219bb51ab3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "352dee0d-0cfb-43f0-aea1-c5781c2637af",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff86622c-52c0-4a30-b1d9-20cc9aaa733c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "667e1382-ca3b-4aac-b2ce-631711d1e8c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f99fb96e-7589-410f-8743-f6e4687faa9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2f5bcdc-be85-4e0f-a9ad-fc2e2245ffe5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "803af4cc-159d-4072-8d2b-c61e9b8c5403",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cd07035-5ec8-4ec2-9c3c-985a3239f0fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f03aa05-2971-466e-8e69-4006794b5ba8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdf836d3-55dd-4e72-9902-d7721d966096",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f4bae3a-342d-49ca-a64a-c600c062aa4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "569c0cb9-a558-4ae7-a5b9-68b1faecb2e5",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a576df81-4ee4-4f95-8e3f-634bca83d735",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5cf42bd-b9f6-420e-9903-2666bbd92c6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7a4d48a-dd73-48b6-a83c-d9022251b98c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e531f6f-0a9d-4966-94ef-61b109071d5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f030f4c-3fd5-4c44-a87b-20caf4ff65b7",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bf49958-890b-45a1-a3b6-02ac511b2097",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ee911f2-1f8a-400c-9e51-6d83c80ad6d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c30ac669-51c3-4bec-8346-9928e600baa9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6733655d-0b61-460a-8da6-852168eecf17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08e6014c-01f7-411f-8c80-b4def8776913",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ba6980f-4f43-4c4b-a1b5-28a9b2f6f57c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfd3c55f-cb17-411b-a869-c2253491467c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cc7f653-cb13-46a3-a4f5-5ba8829bd27a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc7599fc-b46c-4bf2-bb11-91800c4a3491"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8bd97fb-aebd-4033-963b-26149c01788c",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abff115d-2c14-44d2-b16c-dfa86ec2c822",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1eb662c-817d-4313-b575-bd565fb5f905"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a3b5f04-ecdf-4eab-9eab-23970df1c09c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d998dad2-7969-4882-80c2-4c8918675c3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db7a68a7-c148-4269-83fb-264e32c75f26",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bf26c23-d902-4cb8-a170-97c09454dc9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "979c0791-b7a7-4ac6-8077-a83caadfc6d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5b34808-8abb-4055-922e-7c416ba45cb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee565fe8-9cc1-4f5d-82e9-b9ece8064944"
                        }
                      }
                    ]
                  },
                  {
                    "id": "128b7fcb-201a-4987-a958-bb4e123442d0",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a12a2900-8f52-4406-86dc-eeb65d290289",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a6ffeca-765f-4462-a2d9-c59aefc842d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "388b2f10-22cc-4a12-987a-53fba0a09b4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "752dd948-a192-4f57-b2e6-faab522b0c78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e371014e-04e6-445f-bc62-714d4127d9fa",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e80c0da1-5853-4e87-a9a3-951169b0bbde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41a1a6e0-d424-45f4-b06f-f98b317ddcd8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79643b9c-5e02-4d0d-98ea-de89754a55b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7eaa581-986e-4f12-b6ca-474632aabf18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2fba3a1-fb2f-4c67-8321-7f4bfb2bb793",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73918821-18c9-42a2-bd59-d129b5bfa589",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f6ac4fe-c40f-4dc8-9b9e-7626aa2316b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4161402e-0db7-4cea-a7ea-a970b5ed83dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4aec6b3f-f0e9-492f-9ed0-d6c478e18bcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebe93ad5-0059-4ef0-9d29-b3da5adb6b20",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97722255-ea3f-4647-a70b-3ea9aaf2a246",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc0cb866-09ea-48d5-a0d7-dda97e1ebf04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d2dc5ec-e973-450f-a77d-2a99f1376614",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4596a4a7-57e6-4191-a208-5449b68bd272"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a93ecc05-20b9-49af-93ce-7c0868c39948",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a179c33d-da13-4c69-8ff3-7da575240e0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8faafa8-d969-4c0e-9332-64c96e2df3f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f0f30a2-7189-4b74-a81d-95f3392e2ae0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "915bd709-9d28-471e-b5cc-314e12379767"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bdce897-8ffd-48bc-a76c-5be775795476",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b698f33-39cc-47c7-b33c-e5e97c8cb35a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6073d9ad-7a70-4cf4-b4c4-95e916919dcd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "120cdb7b-4200-40d8-b094-b803690dd7b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb443391-3a51-4c2c-82e8-9cb5fd783745"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c96b08bd-e6e6-4e5d-ac05-b1ab58cef41a",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3876a0ec-9463-4536-8c5a-8007c0052e56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b107331-c0c9-4706-943e-c77bf1af5f38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e31637ef-59b6-4422-8d6d-a772c3fdff31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "143808b3-aaa9-4acf-bc74-36706bb17f34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fafbe5b-2f07-4474-b3fc-5a16bf99ca0c",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b2b24f2-19e9-4340-b659-19d6207ffb81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea50add0-ce63-4472-abad-ba71023cdf39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "508c0385-ade7-4154-a59c-6f9e7e4ba564",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8da080eb-e2e3-4134-b7b1-848e833ef431"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1448a4ad-9e77-4a1f-b4a7-2d9b2c89fcea",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff192b40-97cd-44b1-abca-66ab7b96726e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e27f510-397d-4e71-9b57-3557d38a61d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "934a5eae-0cdc-43d1-afd3-cd84c7615a4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aadc6882-d870-4161-83e4-094cb45c8994"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de788312-6f36-4fb8-91da-c4af11f0948c",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64c21ac4-ae7d-48ef-ab89-943aa363b2f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aafc4168-d474-4749-b65e-5231a21c6606"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d170e8a1-e0d8-495f-8eab-20f974329ff8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10956bd0-3b16-47d6-a8ed-0851a100ec13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4cdd828-04c0-4c22-a3c6-c279e182a26a",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64235fcc-7108-49b3-8ae4-acea4a36f12f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "822be6bc-f613-4336-9115-4128e48e0f19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30a573a1-1200-4cfc-ba7c-cbc4b5cb0ea1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77caf994-00f6-4c8b-b35a-663e8585281b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a23005bc-7e3b-48dd-b7ea-87fe2a3b6c64",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f01a3bb-8815-4e44-a576-aca9d84893b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc1d78c5-f1bf-42fc-a34a-2674e659d255"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba63e41c-301f-4add-9992-0672fe9287bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77772e1d-460b-4dd9-9213-0002977043df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49b24ac3-424f-453a-987f-12387c883eab",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb8eded1-5ceb-4b6a-aa2b-b200a37db1a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ec84323-9231-4ebe-b4d1-b576dcdd8108"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4148a742-5ab1-465e-9162-90af743b43f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8a37f60-569c-484d-9f59-7d8a4430b0a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a283d7b-d048-4727-b0b1-aa17b2a85ddf",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9e00bea-32ef-4748-820d-f93691d949de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f104eff-beef-43cf-b063-60c88f417c06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eda8c6b-90ed-4754-970d-3ec19d2890a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42534bf3-00b9-429e-a2db-8dce69d90ef1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c2a0b70-b553-47e4-95a3-dde4eb8d57bd",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c445724-ee70-4bc9-bd63-bcc5fb1a1005",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cc3e942-d086-41f8-8d70-c3e2a48287ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43fc3d71-bd24-4411-9fde-d37fe8d49cfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "687c3aed-c1ba-4b58-991f-dec3089d60d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c775bb9-000f-4182-8b3d-926b152b916c",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f8c127c-56e5-4fbf-a646-e405c05ea288",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e395e5a2-c6c0-4151-90ed-5c953a75f863"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e63c7683-c7b3-44eb-8e54-232fe9e4f789",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "611d6ede-7068-460d-ae6b-49e875bc1023"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adf3f9de-ad9b-4b90-b015-ad30f39359ce",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bd777a2-4e66-4e38-87bb-aece0237b1cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3934065f-1ea9-4d76-a019-2549ca2fbb64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72e719ef-e9f0-4aa4-8f6b-0ecf66dc655c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0db70dca-1ce9-472e-8b5b-491184b7c300"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f05f718e-22d3-4b67-be59-bfae230044d2",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4242eeb-55bc-423a-84b6-2ff3825ecfd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e119f4f3-e366-4ca5-a851-f8ddb259a2b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7a4b172-6c24-47c3-a105-1669a00ea0d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d7bbbdd-570c-426b-8d4e-eb0be3862c0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cda2df6f-9616-4c2c-aaba-4721b0b8470f",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b9c06fe-a5b8-4fe3-b7a7-3391224aa551",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9554f080-d80a-4f4b-ab60-8c38e92fb58c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94a04e90-c9dc-4387-8f79-d590f7d4e17f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d0b27de-67f4-4806-bd4b-e9ccb48bae74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f0e4472-81f7-4485-aba4-af787b40c760",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b6ebbc1-bfe6-4f6f-aa91-7ce60ed854e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "834b2098-2f51-497d-8c9c-201a893bc924"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8a08156-e733-4d78-8403-1b9e9ca4683e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "539bdf6e-824a-4102-b780-31be1515b6b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0d08d43-4b73-4e8d-bc9f-f412a5b20061",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ad65818-d110-4d6d-afbc-d42598989163",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c442eab7-29fc-40ba-a975-885a9e6f6235"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e61e1b8c-fd38-4c11-8689-d13460b837f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe2e7b3b-a686-437a-8ea2-cbda62810e51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad0de2a0-4691-4d3d-a4fa-055eae42d8ec",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28975e7b-a89b-4fa5-b5cf-30c7e1edf82a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c13542d8-6c84-44e3-b8a0-d6559916d9cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c76bdd47-2425-40c2-bc8e-1be9428ff174",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d4ef1cb-8d15-43d6-8f67-76febd364a58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3767443-e80f-42fd-8734-405f66b03593",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be2a19b1-7a0f-4807-bf3e-e77294df4c5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec5a808a-722b-4c8e-80a3-7c72239b3e8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a865a0e-5b04-4015-9725-fbf5e735e51a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62ddb4db-e708-4f2e-b7b6-cbdd51e777bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9eb3c69-bb5d-4da5-80e7-6b8560fb58f0",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27869a33-29cc-4bd9-9ada-0e4691a6fcdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98aa42f3-281f-4eee-a614-592dec275a68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7593dbe0-a88c-4402-a15d-1dbf8a6221cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "369e94f0-c514-4972-a563-6e2389ed057d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e05d640b-57bf-4676-a607-5928fe802706",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33e4ccb4-202a-4528-b414-44bce922d289",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0fb2a3c7-3c75-421b-bb72-98b461d927df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "873eefff-f1ae-47b0-ac8d-1f4f68708ea0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfd9b428-e908-4c56-b188-7140fefa8afe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82f34a3c-15ab-4a84-b761-03a32310c312",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34253ccc-e3b8-4919-b579-3a801c9e9563",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d67f6330-00cb-443e-b11f-b03261a8d0cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d49cdff9-d944-4bb7-a6ad-6814cb0f41ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b91def4f-e09e-4a77-9ffb-68715ee4b9b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cccc04c1-247d-4288-818f-820028b7c3ac",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "480d12b5-cd32-4456-ac69-2021d323b87a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac0452c2-5212-4392-92f5-3748c0b4be49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05dfb7bb-651c-4d61-8fcf-e9675635948c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed668ac9-7557-4692-bdc5-dd247cb854e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1148849-74f7-4bef-86ef-938c96872f60",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7db49015-2983-40e2-95cb-0dc0f3db7e6c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4048aa5e-42da-4f3e-8389-3afb0e13c3a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f5e7b56-b6f5-4df1-99a4-726fd40b06a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d907a47-78c7-4c03-9bcd-2bac6dcb490b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dd79e0c-23d7-4cf8-aa97-b3e8738a3b69",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0895d710-dab7-4394-aa9d-4a9853fc60ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24b286df-5180-4256-b26b-03b7c85a68f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ba6cb35-184b-4004-8a52-34baf4a588ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "baeda1b0-8f5e-472b-ab68-a621104a580d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9624a02e-502c-450e-b948-caa43e7ea7cc",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6661f915-8257-4f0c-a0b4-20cc53c98e23",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c587f8e-d747-443c-89ad-be687ef3a4a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74f378d0-a830-4379-bcf9-d3a693a79c00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b302893b-f52f-4a60-9962-bbf18dcaf6a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a86a3f70-985b-49a5-a853-bfc364a66ff9",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56cd5f68-1ef4-475f-a109-9cba5821dddd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70b3c75e-1247-4829-8c87-bbf799517bda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4ee5e40-5b5a-4922-b03c-39220147b0d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44192b80-9c2f-41c4-96af-068fad24de1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e263bf20-811d-4dab-a586-bed8ab17cc58",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dff91c39-3621-4cad-ab56-c9723fc1a5e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c51317c7-df7a-4592-bd47-bdb527a4a2a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c01cb1a-f325-46d4-b4f4-2703865f1cdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "902e4794-a16b-4412-81be-f8d4ee53874f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "239e7df7-552f-422f-8bf6-576568cbdebe",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f299932-412d-4340-a639-dca93872ebfe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "833bc64a-b772-43c9-b95a-15d30af8bdfe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00261141-c717-4a79-bdcc-d1522f4d3aea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "751a99b3-0b93-4993-828f-85a4e920adeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caa45ac6-997f-4f42-815a-9b744d145945",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1588510a-3a66-4ea9-8bc3-0970d826ae8f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "62fb9493-7cbb-4452-989d-a3c6d6d512e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8589ab11-c0ba-4f6b-90a6-66e00a4e1804",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab308d55-b6f1-4fe2-8d46-233993c4f172"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42ce1f28-0b1c-4fa2-a2c5-4e98fb57647b",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd0eb05a-1243-4c87-9795-0554caca9204",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76596085-6a58-4307-8104-d8ac6183eea5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ade61632-a352-45e9-b8a4-b7ead64921c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a949de3-c8e1-4614-86bc-6033643f7271"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e80369b8-07b9-4d7f-9f5b-e16c94c6bedc",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5db61b2d-66e3-4817-8d5f-6f1e9babffb6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a1fe478-b515-4db6-a37e-890c826e5b72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75223d45-f20b-4f5f-b432-37d4c9a27acb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "331f8d95-7749-4582-bb14-2a77d5817deb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "158a519a-aea1-4320-bf7c-b2027a08e95b",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6db344df-eaa5-4654-b794-dbea80da1ea3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0048fa1-01c0-4ce1-b9a8-83ff8184d1e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6b356fa-b5dd-4820-83a8-2db8429273e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d8f32ed-006b-42a4-b2f3-7197ab47e519"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f546c59-631b-4578-b83e-967e888e0a3f",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0497f666-5b9b-49ae-9db7-d56cd5df60d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ebf33db0-b620-4cd7-9f11-d4fb4ebda4a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54727cdb-e78b-4e0f-8d5d-4e93707ad4c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b462e1bd-a9de-4660-bd1b-2eae4d3235ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9df34d6-f130-4197-ae6e-6d7fd69fe42b",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "202aa06f-4341-4712-adc8-aa59cf20e60c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80aaf918-f01f-480f-991b-83c2439c3e9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43e7440c-1abe-4eee-a74f-9abc6f10bd83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a543e8c8-a92d-4073-a669-7347ba2b4bcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "927e5900-ab03-4cb6-8bd6-63d4405a29b1",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fee583f0-a804-426e-90e0-16b3ed3e3f26",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94ed0e9c-3466-4525-a2e6-42ae058c9e25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b80b96c4-a8db-4521-b423-93832d65dbd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b60da7a-edbc-4223-8885-538df2e8bdf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a366753-f06a-4721-8bc3-c91af9ac355b",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b992b713-ff4f-48d6-b925-951fff88f0ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eff383b2-a9cf-4fc8-b85f-d9173fb18acb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c935cd3-67dc-46df-aa89-e208f467db3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "178478fa-c6a5-456e-867b-e6da73d07d78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1933b1ab-d974-4967-90eb-882962a088e6",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37daddef-7e71-4e37-b7e9-a456b097230a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e4d08a3-1700-4a69-98c8-710c1e02724a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "247f8c80-5f6e-4eb6-b34b-7896bbd42102",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2100874b-9df6-4f19-a7e9-1ec92611f51d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "335ff9ad-9c90-4573-96f3-64ca1fe657b5",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8252013-4a64-4d89-8b71-043d8ceafe32",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea9b5ffd-5188-4f4a-925f-508590c0fb7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a91573f-c911-4678-ab98-2d07318139c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e95af413-3e5a-45c5-9a39-32a099b2c3eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8494538-779a-47c7-b906-bd16acfe2139",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6572cb1f-f612-4ca1-a53c-719b5b9a59d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c438722b-e870-4f94-b481-8cbc937e0f48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7cff304-b006-4dce-a52e-e1f7bc275cfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfde7e1a-de39-4308-8078-2fb6a07c1898"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f4f3a1b-5444-4599-b524-3c338ca7bac4",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de41c8ef-c54d-4c1d-8715-91638a649253",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f49a70c3-10ef-45b2-a514-6cd2bb1d542b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21bb3efa-3594-4adf-8f53-5508d07f45c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e34410fc-205b-45be-a4e8-6eeabc3c983c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "513c7f0b-273d-4bc7-9657-4fae5a6a4d4c",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4995da81-3dc6-4230-85de-bd4475759af1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8698be07-b7d0-4575-9d79-be55afe47b2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3d6abc5-aff1-4a10-a39e-16d4901818f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52d8b6a6-377f-4196-836b-e05eb3c212bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1df6f1ff-6761-4c9d-b2eb-6dea85ad83dc",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7086c29-4e03-476b-802c-65a820ba6c8a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de648714-5c33-468a-8d6e-9b44792c244c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3ac53bf-dda4-441a-9305-86d137a572e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e73f229-ff2a-4b27-9f52-2aa48e642983"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f38d17f2-b4e9-4c65-a986-8c3f1f1d82ad",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc2f8d29-5579-4100-905f-f10081dece84",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3accb352-7f5e-4e0b-8084-a36c53fb2516"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a14f8791-7672-4ede-a5e0-116da8babd48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "267db9c6-3d92-487f-8ab4-b34018ed1218"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f29f9a4b-4198-4e17-9169-b4e38a920349",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d74989e5-0de7-488c-8d5e-0c7219187126",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04518b0a-dcd3-4ea7-897c-4838deb6b938"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dfd2e1b-117c-44bb-a8c1-322353fe27fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04a6e5a7-0a98-4835-b379-c1fe2d9063e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b2cf9af-1257-492c-a95e-432f6a0b90f6",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c6b87ff-3bf8-4e82-94a3-5071bd4ec737",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "587cca59-5555-41e8-889a-ae79a284cb9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dc4f5d3-bb3c-41dc-b47e-10e916aa9752",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f72c62e7-2253-4792-99b1-1855be03c0ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9aba7a28-e419-4280-99ce-f2381274f8fe",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "970f69e5-16ce-446c-9575-4673fe772bf3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46586a66-622b-4b92-9af2-98222736e428"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33e5fb4d-6621-4f00-ab72-87082f270aac",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a33ddf9-152d-4752-8b8c-a736c60cd675"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46877e23-2029-45e4-8df0-5bfcdf038b25",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ada4577a-ab72-4797-97a3-f2172557734a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e81bd722-5c13-40f8-9e42-e20be1561c07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9566c179-a61c-4655-bac9-cd54f264df60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8cb0718-8549-4e7e-869e-dcd5079983da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2f44fd4-a668-48c9-81ec-52ebf5e9c951",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e344571d-a415-4512-a7ed-56ba3c8e5244",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9254c06f-decd-4f44-95f4-4896162c0592"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a11c2de7-b7e1-4093-9d81-33610a0f1c8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96302c1d-9b4b-4eb7-b463-a9f0af027f4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e2df7a7-33a9-476b-8ac3-f43513175ab8",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8750d85-8b99-48fe-a4bc-7c2ae2081fd0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0c56efe-6836-45c2-a406-579541c1455b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1052f87-472c-433f-a6de-9a12b0e71b1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1c420a1-639c-4223-9cc2-0aebbb49be6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2563e060-e9ae-4603-98d7-efbd60765852",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9554a77-2a62-43f8-bd45-fcd3b48f7898",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d061efd2-0bae-4cc5-9a31-67341f3d2988"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a2021a7-e4c5-45b5-977c-15fdf7042fdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab3e520c-98c7-47b5-9772-4e38abc75264"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3167f308-91ab-4888-a6ef-eaa6b0e9af2e",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eee036a9-8061-416d-98bc-9da906e3dc96",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63bfbf18-a34b-4e27-9d2d-017e43e899d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c60a8a0-64b3-4941-9987-4ba2de351e7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "faa839f9-60e0-4fe2-8036-6d2d402cc8ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b86b218b-9fbb-4de6-bb61-4f586655004a",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68baea57-7f03-4393-9cdb-5fea02c568c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c2db499-d67b-43f0-89e6-e604c5747036"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a18da0f-fb5c-4c90-b64c-4cbe71db8d72",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e6800e4-d9a4-4052-95be-266cc248171e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fd79934-523f-42ed-b1e8-2a0d068e4ef1",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "736b2438-05d5-4a0a-9b69-f21c1054d544",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0ffb58d-e12f-44d4-badd-dd40039d5faf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f78de26-ef45-4653-b4b2-f9e31ab52a9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7852024-83f9-4e31-a9ea-3df86e6f665d"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "da9a8c87-d383-46d8-919d-7da0edc2c536",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0ab72084-edd5-4b76-bb1f-090623689734"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "05f9ceee-b45c-49a1-8984-ed293838cb2c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e9633e9a-5e62-4ccd-bde6-03d58e21a743"
                    }
                  }
                ]
              },
              {
                "id": "c5c75084-2c5a-443d-a87a-acf36ee35e14",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b5e933e4-d104-443e-b3ab-d40bb10114c8",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d6a2f8c-0cf4-4676-b410-415d73173905",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "6b58e5ff-618b-4b29-8f0b-39ec492f0a14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5f87cc0-d639-45eb-a7e7-b208d9e05cfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a39dac6c-ebee-47f4-a113-2e7390ce0424"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b99ba269-ccc2-45c6-ae1b-a5d3d7f1edce",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "935815e8-829f-4912-aeb5-dc3a8f81aaf9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4ea92688-ead9-4a48-b544-2643b3745b14",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "639a5105-7515-4c5a-85d1-e85d55c13038"
                    }
                  }
                ]
              },
              {
                "id": "f61423b7-bb32-4a5f-8b38-7c6ee8b92d13",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "a1159527-5274-4465-919b-e566a1a15b83",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "402e6923-21a9-4def-8754-1867edc363c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "e2eb3c1c-b46b-4973-b177-aa6cfd8319c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05755503-3d0d-49cf-9cc5-aa4bf7efb321",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a66f72a3-f4cd-45d5-85dc-01116336d4f5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "34a934d6-c044-4fb4-8d18-6701a33d63f1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9fe7f093-1a19-4af8-b6fe-e9c0b13793c0",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cd3bbadb-3e47-47fe-8dfb-2c573f0364a0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "fa2b03c8-21db-4e94-8c58-7e3233475aea"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5ccd11f2-c7c0-4b89-8129-d0193eadd021",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c084f8cf-9350-4f6c-a621-8e5312ed2f94"
                    }
                  }
                ]
              },
              {
                "id": "d704587f-6c76-447e-a9fc-3383447ed4ac",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8ecca04b-fe3e-4225-bc15-66b1e12c24e5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "23dce763-7caf-4a9a-a689-486c0c86a249"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bb8a2986-649b-42d3-9a3d-87f3c0cb2e41",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c81a604b-eb03-484c-acbf-373436fe7010"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1f33e95a-3d7e-4372-91ef-f930bc98661a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "e041c0fe-7dff-4ce8-ad83-92eafa17f298"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f5c07944-61e3-4ba5-9702-460dfc11b418",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "def5e025-a887-417d-b073-0baadc79e968"
            }
          }
        ]
      },
      {
        "id": "2cc0fd6e-43b3-455c-ae9c-c6596f9e4d22",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "a9f11a0b-e7a5-4eb1-8de8-aff497bd5550",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6b1c5a8f-6d9f-4d19-94f5-803347c2f098",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "da9b9252-75cb-4918-aa3e-50360b9f8b23",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40224d1d-0601-4ab9-976c-2f4da9082fae",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "a0443ca7-dd81-46c9-9a86-6122b762d39c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28c53cd0-1353-41ec-b8ed-94a5a3bdf987",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b8ec4cb0-c300-4fce-bbde-36e320681192"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "42b7ffc5-418c-4991-b33f-bab95bba702a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "008ac2b9-5873-4be0-9a6c-66657de3ba1c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a6ce4703-b2b6-400e-99dd-cc7278d90ab7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "94423931-7e4a-4b11-8297-a2d013aa1b00"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "44b54c26-8ef7-4292-b30b-b8de295f6e05",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "a04294a2-eee4-482c-92e3-411e3e7314e9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8d6164ee-2b20-4dae-b90f-ceb7652636d7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "adb3e1da-8aab-4d00-ab43-d52f5f3b5742"
            }
          }
        ]
      },
      {
        "id": "581a0edf-fba7-44ac-9085-4a9d2474f2e6",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "a0650ba6-b8f8-4341-8dfd-01cd408258c7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c4c326ca-5b3e-4dc9-b136-cc11bc4bd379",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8a07926e-002e-40ba-b5ff-5c9f879fecb6",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af3d583c-eebe-4d4c-9606-762a35b688ec",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "354d9d5d-ab56-4cc8-8a85-f4b834123231"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe10ec05-0de1-4c58-b0f3-c7d6f7d72ba9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "86776e66-eaa2-4555-86b9-5fe5a24ec148"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "59d4084e-4bf4-4306-ac36-c6f28d49ffe0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fcae1c4f-376c-4448-b413-ee0737bb4854"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ae0aa83e-a389-4973-8070-0ab948642427",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1d3925e6-0263-47b0-aa3f-c625da8d4fca"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "71c574bd-c146-451c-bd72-ab8e50a2123d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a22c33eb-ae0e-43ed-8a3f-72932926f0a4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c1e2208b-4d46-4789-8efc-6766e127bf85",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cd9e0dde-e654-42ca-a340-47bf54d7d051"
            }
          }
        ]
      },
      {
        "id": "a71001f9-36de-4e50-ab9e-fe86cd54a6c9",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "5ca13b72-82a5-461f-86b9-4655371f4860",
            "name": "Negative Testing",
            "item": [
              {
                "id": "44ceeea9-383e-48c8-9f5a-39cce2b96db0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a2054f14-230a-480d-aa8e-3e766c5ab5ca",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c237a19-0983-45e5-8162-f2dff6b7b501",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dd7c3a9a-0e63-4066-8eab-5cdaa19c9830"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d162cdf-0db6-40ee-a09f-8262ce3159ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8bc0f97b-d0f8-4a2f-965d-68d348031d55"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ff695b04-06ce-4d09-a2dd-9b5fdea03bb7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6f2060fa-f0fe-4463-af72-d5ebafe17fa0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a0762793-f3e9-418f-a5c8-240f7d22398a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3a5364d3-8fe0-45d7-8966-8e5d380ebb2d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1a309dd9-bc7b-404f-ac03-47316fa8e08a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "cc3af96b-f044-45c4-990e-b8abc583b9a9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "03c8c6a0-48b2-4fbf-bcf0-a74794798529",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "46860beb-e7d9-405c-85ff-c0d4894078fc"
            }
          }
        ]
      },
      {
        "id": "001f4870-0940-4de7-a102-06d7f08ed4cd",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b19ac798-3371-44e4-a1ee-2a62870a873d",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3ceb0044-f877-44eb-935d-8d3f284141de",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "ec943959-b454-420c-be48-51fb2457420d",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "27bc5cf2-3d83-48d5-9afe-51327e259e47",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "23b9469e-f4c0-4872-b7e2-8b1eac1456cb",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 571,
        "pending": 0,
        "failed": 2
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 861.1795774647883,
      "responseMin": 13,
      "responseMax": 8094,
      "responseSd": 889.7832380471549,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1688172740852,
      "completed": 1688172997760
    },
    "executions": [
      {
        "id": "db7da4af-7766-42d5-9dd6-a6c5c0f17d18",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "49735038-15b9-45a1-91a1-4427dd8d6089",
          "httpRequestId": "a67f5944-ed3d-4336-9c8f-51bc228ea376"
        },
        "item": {
          "id": "db7da4af-7766-42d5-9dd6-a6c5c0f17d18",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "0df7ab3a-abbb-49c4-8910-f42d033ea459",
          "status": "OK",
          "code": 200,
          "responseTime": 99,
          "responseSize": 0
        }
      },
      {
        "id": "4283447f-e5f4-4959-86fc-ea95b1bfe51c",
        "cursor": {
          "ref": "0437ec01-da54-48d0-924a-c953b1b0eb7b",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "e2b7e322-5832-4093-b8f5-533728a7361b"
        },
        "item": {
          "id": "4283447f-e5f4-4959-86fc-ea95b1bfe51c",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "9cb2f668-04d4-488e-9d98-749883cdea64",
          "status": "OK",
          "code": 200,
          "responseTime": 13,
          "responseSize": 0
        }
      },
      {
        "id": "eeb5b18b-cdde-4edc-b4d1-00dccf63bf45",
        "cursor": {
          "ref": "965480b5-ff65-4ddb-a002-8c2a8451ca5b",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "c5d8ba4e-9960-4020-9f1c-b1c5c4a0857f"
        },
        "item": {
          "id": "eeb5b18b-cdde-4edc-b4d1-00dccf63bf45",
          "name": "did_json"
        },
        "response": {
          "id": "5785b98d-7a6c-4338-a5fc-120238f8be6a",
          "status": "OK",
          "code": 200,
          "responseTime": 1723,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83f84f4e-c109-4f60-88d9-3e024e87a124",
        "cursor": {
          "ref": "f5d7b4db-2b86-4d0b-9cff-41122033e3d2",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "2cef99e7-ef31-4465-b542-11612a6df719"
        },
        "item": {
          "id": "83f84f4e-c109-4f60-88d9-3e024e87a124",
          "name": "did:invalid"
        },
        "response": {
          "id": "64071d65-4c71-4900-85b4-10cd54da7c36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1552,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83f84f4e-c109-4f60-88d9-3e024e87a124",
        "cursor": {
          "ref": "f5d7b4db-2b86-4d0b-9cff-41122033e3d2",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "2cef99e7-ef31-4465-b542-11612a6df719"
        },
        "item": {
          "id": "83f84f4e-c109-4f60-88d9-3e024e87a124",
          "name": "did:invalid"
        },
        "response": {
          "id": "64071d65-4c71-4900-85b4-10cd54da7c36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1552,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "515748ed-cf77-4112-97a5-9975cf1eaafb",
        "cursor": {
          "ref": "0544d544-e133-4faf-bc8a-5f5a248cb74f",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "907075ed-8894-4107-88b8-76e46bef3dec"
        },
        "item": {
          "id": "515748ed-cf77-4112-97a5-9975cf1eaafb",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "7965c6d0-7068-4e63-86af-b23e3208d734",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1002,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f4c26d5-db30-43a0-995d-0229aef04534",
        "cursor": {
          "ref": "b1b99df4-c7a0-444a-b000-c4c61e499663",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "2670d7e6-fd7e-4c3f-899b-ae0469e894df"
        },
        "item": {
          "id": "8f4c26d5-db30-43a0-995d-0229aef04534",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "468afbbe-421d-4726-b087-667f64246170",
          "status": "Not Found",
          "code": 404,
          "responseTime": 827,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23c2dce6-0989-4e3f-9db5-6d7fe44ea772",
        "cursor": {
          "ref": "86a3e270-eb85-4b41-bfab-daa8f541bbf5",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "ab52979f-dc69-4216-9eee-039661c8c660"
        },
        "item": {
          "id": "23c2dce6-0989-4e3f-9db5-6d7fe44ea772",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "5933858e-89f3-4ae0-b095-bcb4b3237200",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 46,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0275cdd-24db-435d-9ebd-8c933a3257d7",
        "cursor": {
          "ref": "7fd5c680-fc6a-4b2d-88fb-7c7a58581927",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "6ee7efef-64d4-4997-80b2-99d304be8516"
        },
        "item": {
          "id": "d0275cdd-24db-435d-9ebd-8c933a3257d7",
          "name": "identifiers"
        },
        "response": {
          "id": "8b2ee68e-e88f-4e5a-9ca3-72670954b3b0",
          "status": "OK",
          "code": 200,
          "responseTime": 1660,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d96d6497-35b3-4dfa-ba37-53a6679ff4a8",
        "cursor": {
          "ref": "423dedb9-88dd-43db-844e-67a7a9bf2750",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "a7c33d67-ce67-4268-930b-915f88ae5ba2"
        },
        "item": {
          "id": "d96d6497-35b3-4dfa-ba37-53a6679ff4a8",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "2a3fbbff-67e5-40a9-85c6-dec3dba5db8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 821,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79539b15-eabe-4ca3-b69b-5c4969c65f8e",
        "cursor": {
          "ref": "894c5ad9-2a75-444f-a095-92b7dda39c0c",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "5f6a107c-fd13-4387-801c-4337bc19a59e"
        },
        "item": {
          "id": "79539b15-eabe-4ca3-b69b-5c4969c65f8e",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "35265a25-cdf6-4b1c-b8f8-3dce48a2953d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 821,
          "responseSize": 500
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c415715-d601-403e-8ba5-040f9e9db0ae",
        "cursor": {
          "ref": "f56990dd-5fc6-4fd1-96ae-bb5b5fca8599",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "df5d852d-7211-4094-8566-36061af58730"
        },
        "item": {
          "id": "9c415715-d601-403e-8ba5-040f9e9db0ae",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "c885439f-bc30-4a91-87da-8d9c85adec90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 858,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b59cda34-e891-4b0d-aa87-62b1c0b6babc",
        "cursor": {
          "ref": "e3a36297-ec09-4424-b543-0fcd6f3de424",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "153a08c6-283b-4fed-9120-bc7316a5c33f"
        },
        "item": {
          "id": "b59cda34-e891-4b0d-aa87-62b1c0b6babc",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "b859a012-72bb-48d8-b9e3-c22b4c2e53aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 833,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "502e6bb2-34d4-458c-8a6f-f8b75b2ea981",
        "cursor": {
          "ref": "b0e10a71-940a-4c63-b65b-29ee67ea440e",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "a3d56430-8481-4c45-9e4d-f1fdd41693c0"
        },
        "item": {
          "id": "502e6bb2-34d4-458c-8a6f-f8b75b2ea981",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "713a6564-fe71-4de7-9756-cea661703e8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 795,
          "responseSize": 507
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52579503-3a29-4913-9bd2-8523dead3bb6",
        "cursor": {
          "ref": "28e9ee2c-fba1-4e3c-a9f0-0ea89862d7be",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "dfa9c33d-f8d1-447b-9a14-4ee4b5a1d422"
        },
        "item": {
          "id": "52579503-3a29-4913-9bd2-8523dead3bb6",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "90605213-9422-4bac-812e-a9f7a66701eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 809,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "189c62bc-79dc-43ce-b132-39c537b9e98d",
        "cursor": {
          "ref": "ce4b8d16-7488-4615-aa84-9b5abd25c9a2",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "95ce4c85-743f-4a7a-b4c8-bfc65c643da5"
        },
        "item": {
          "id": "189c62bc-79dc-43ce-b132-39c537b9e98d",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "95fed78a-886c-484e-83f6-e49e0b2acac8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 801,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "426c63ee-96bc-4d48-8aea-8224cc9bcf5c",
        "cursor": {
          "ref": "af7b5e06-c954-424f-ab60-e4a9e7288fff",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "892bb593-274a-4cae-afcd-8ba8c0015313"
        },
        "item": {
          "id": "426c63ee-96bc-4d48-8aea-8224cc9bcf5c",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "e390c46f-0d40-414d-9645-6d12a0371f97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 813,
          "responseSize": 592
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6d8476a-79a4-40ca-a365-53df8c44a4ab",
        "cursor": {
          "ref": "66e30d21-510d-4260-98cc-21fb95797bab",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "8efc3a8a-bcb6-43f2-bccb-19df956ef8d9"
        },
        "item": {
          "id": "b6d8476a-79a4-40ca-a365-53df8c44a4ab",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "3dd2d13d-c5a5-43aa-8523-b379613f6587",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 792,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d09dcac4-4e5b-4f8b-b086-19ffca2be162",
        "cursor": {
          "ref": "886d9c31-eade-4d41-a1e1-22f5d02cbf5e",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "33047e9e-f7f4-4801-aa07-b7cfffbba88e"
        },
        "item": {
          "id": "d09dcac4-4e5b-4f8b-b086-19ffca2be162",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "e3d9eeec-6ada-418f-b36b-205c6a381644",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 819,
          "responseSize": 558
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ff5adbb-da98-473d-9f4c-327dc101c0ba",
        "cursor": {
          "ref": "425f76d3-ade7-41ba-a02c-41f1709d57eb",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "214d3228-64e8-417a-aeb3-8024dd8e8457"
        },
        "item": {
          "id": "6ff5adbb-da98-473d-9f4c-327dc101c0ba",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "172d81b6-8d05-4540-aa3d-b173ee129a7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 764,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9ce7efb-3e59-4500-8db1-de2d4e1c1341",
        "cursor": {
          "ref": "5e10d195-f5df-4168-8508-c10dfd4a489a",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "800b66a6-4007-4ad0-8e06-ca68707cb25c"
        },
        "item": {
          "id": "b9ce7efb-3e59-4500-8db1-de2d4e1c1341",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "3b811ed2-8a54-45bd-b65f-efeb8dac1af5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 808,
          "responseSize": 601
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c94ab57b-c4f6-415f-8eb1-1368f0b39f42",
        "cursor": {
          "ref": "d25ff7d2-6cb8-4544-9284-4afbb948b592",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "0e5928e1-3910-49a5-b28b-5aa5cfb15567"
        },
        "item": {
          "id": "c94ab57b-c4f6-415f-8eb1-1368f0b39f42",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "1b91e362-a110-4537-90c6-98d2aed54e6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 813,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0ab81ff-78b0-4c73-b39e-b65fefa6e7b6",
        "cursor": {
          "ref": "4d2d808a-392d-4e2c-9081-ec1c13aed31c",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "79a176a6-7e4d-4213-91fd-731b9ee804eb"
        },
        "item": {
          "id": "a0ab81ff-78b0-4c73-b39e-b65fefa6e7b6",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "2c657261-789f-4add-8bad-55ef936ebd3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 757,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34b24eb3-fa96-42da-8e4c-4aa4cd6464c4",
        "cursor": {
          "ref": "f0dfb91f-a2cb-47e8-9a2f-ee22ff8f11c6",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "b0527e8f-800c-4fb9-8f36-7ee1cb768721"
        },
        "item": {
          "id": "34b24eb3-fa96-42da-8e4c-4aa4cd6464c4",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "43780485-5f67-477d-b460-b7c3b3bd3c32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 775,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db5c9c96-3769-4101-aeaa-8d1dc2706926",
        "cursor": {
          "ref": "01121d29-49e1-466a-b7f1-8a1d7527d1d9",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "13465201-3a02-40c0-829e-ae45a1a762bd"
        },
        "item": {
          "id": "db5c9c96-3769-4101-aeaa-8d1dc2706926",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "e54b2992-ed41-4146-ba25-0c214ec76e22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 779,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2199f796-2324-485f-9d90-471ffb05b85e",
        "cursor": {
          "ref": "5db10b96-7baa-4289-aa42-ddc054417238",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "e99e830d-3ee1-475f-a4a2-68d8c805c65d"
        },
        "item": {
          "id": "2199f796-2324-485f-9d90-471ffb05b85e",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "14ec4d40-a7f3-4a96-9aeb-852d94feabe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 796,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12789803-711d-4440-8017-079cb11d8360",
        "cursor": {
          "ref": "9773366a-30ec-42a8-a32f-0ba50b115ed6",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "89f0c0eb-358e-4bb9-b92c-d9fd3e614d29"
        },
        "item": {
          "id": "12789803-711d-4440-8017-079cb11d8360",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "0c6df70b-2a2c-4d97-96fd-863a6bebd506",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 835,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b906421-4bf6-4ee6-b2e8-3f96fee790e2",
        "cursor": {
          "ref": "988ae457-d9e8-4196-9c2b-0e583afb0096",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "c5edd93f-468c-4b54-8eb7-4714e4c29aa6"
        },
        "item": {
          "id": "6b906421-4bf6-4ee6-b2e8-3f96fee790e2",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "8eb1d082-514b-48b1-aa5b-b81c90b9d2c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 868,
          "responseSize": 544
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7269f75-3590-4cc2-84c1-e6a1d895c32f",
        "cursor": {
          "ref": "ba240197-8bc7-4a76-8527-beb06c3a5be9",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "aad312c3-95e9-4a86-9998-ba3894a2eae2"
        },
        "item": {
          "id": "f7269f75-3590-4cc2-84c1-e6a1d895c32f",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "461997e7-c15a-46b7-88d0-4b5513d54eed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 827,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e4ae2be-f7a4-4016-a3fd-3c11a0081bcf",
        "cursor": {
          "ref": "a0770b53-3b77-41de-917b-9a6a8751ba6a",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "a36760a8-fbe7-4b9e-874d-391c35d5fc9d"
        },
        "item": {
          "id": "5e4ae2be-f7a4-4016-a3fd-3c11a0081bcf",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "1889ca8f-00f9-42fb-98df-3d4c76ee5f59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 788,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f8e2f83-a17d-4f65-8c13-4193d5cd4c52",
        "cursor": {
          "ref": "2a18c7ef-e4a0-428e-9605-bf57b0907d45",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "af4fd673-fbc1-4179-a78a-9ddc9d67fcca"
        },
        "item": {
          "id": "8f8e2f83-a17d-4f65-8c13-4193d5cd4c52",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "79cde00e-80f2-48ce-9ead-c010404da109",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 827,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0c6adbb-3e5c-401b-ba1b-490e2bef67d1",
        "cursor": {
          "ref": "d15434e2-eef3-4712-a698-7982e1ec5ecb",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "d7d82189-f031-457d-a85e-ae08a13a8b4d"
        },
        "item": {
          "id": "e0c6adbb-3e5c-401b-ba1b-490e2bef67d1",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "b9f1209b-f01c-43ed-8357-eea0c70684ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 802,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65c53875-2f6c-4a14-ae7d-e42dc7b83e80",
        "cursor": {
          "ref": "6ef7f047-752c-47c8-8962-ba38577e8f3b",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "c9cb90a8-0d4d-42ed-8032-bf8646b8bee9"
        },
        "item": {
          "id": "65c53875-2f6c-4a14-ae7d-e42dc7b83e80",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "d19ee768-e4bc-49f2-9f60-6f5c8ae5c5cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 815,
          "responseSize": 563
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "414b1d69-1bad-4598-a353-8017f2f71be5",
        "cursor": {
          "ref": "8aad4ff6-d229-48e6-9a3f-0e73c24b2e81",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "ed47268e-f179-4687-bc74-742adf140e51"
        },
        "item": {
          "id": "414b1d69-1bad-4598-a353-8017f2f71be5",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "9ad72778-2a6c-4afd-876d-2c2dbc7d5981",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 807,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ced0a000-b88c-48c2-bdcf-ab92270deff3",
        "cursor": {
          "ref": "9536695b-1031-414b-bd4c-c9b04fd68828",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "d2060402-9534-49e6-8c80-d3468bef1f8e"
        },
        "item": {
          "id": "ced0a000-b88c-48c2-bdcf-ab92270deff3",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "272be2e8-9066-441c-ace9-295573bf4a68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 820,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54b9b0b1-b32b-46b2-8899-a4fea089228f",
        "cursor": {
          "ref": "eaaaaf79-516f-4278-807e-2723b04c5b16",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "b9b37e1b-efdb-4ab7-a378-b8ae252df22c"
        },
        "item": {
          "id": "54b9b0b1-b32b-46b2-8899-a4fea089228f",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "b1e035e0-5b42-4d76-8d5c-f4b8b58da354",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 785,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "373da56a-3c94-4d02-bd2c-612114fef72b",
        "cursor": {
          "ref": "5c5ce1c2-fa50-44b5-bf4e-a15e41bae9fc",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "f06bab3a-e16b-4b37-9040-87b03a6e557d"
        },
        "item": {
          "id": "373da56a-3c94-4d02-bd2c-612114fef72b",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "7c7685e9-d615-4b3c-a30a-71b8de859358",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 823,
          "responseSize": 578
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fe4a23d-a52f-4d99-a993-5a5612234d7e",
        "cursor": {
          "ref": "1229d7b4-023c-4b9a-be1a-9813cfe7f3a8",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "61ac7f56-d033-4cc0-a6bc-3f00c84b0144"
        },
        "item": {
          "id": "1fe4a23d-a52f-4d99-a993-5a5612234d7e",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "415d7f69-c74b-4230-9067-6200c1a374b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 835,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0334316b-89d2-4d8a-b01a-7196bfd03356",
        "cursor": {
          "ref": "e782d1ac-f59e-4433-80fa-a1cf27cd87b3",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "002d0bf0-e717-4da8-9a3e-5dfa7844cb1a"
        },
        "item": {
          "id": "0334316b-89d2-4d8a-b01a-7196bfd03356",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "bb672332-e2ed-4691-b7f7-b2594d996dbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 781,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "458da20f-1ae1-4858-81c2-6c37c07a0062",
        "cursor": {
          "ref": "55b58abb-2186-4847-8c6c-53fd0599cb36",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "52e15295-1eed-42a0-a3dd-eb9ba038b50f"
        },
        "item": {
          "id": "458da20f-1ae1-4858-81c2-6c37c07a0062",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "bfd64fa2-3617-4f6a-ba7a-58fade8c1b5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 823,
          "responseSize": 1001
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6520058-a1fc-48c7-a9ff-2de2d3f3711c",
        "cursor": {
          "ref": "d7e02413-46b5-4ce3-92eb-5c32ef3cc7a2",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "72a557e2-cc52-4187-ae39-8f31d4fa5266"
        },
        "item": {
          "id": "e6520058-a1fc-48c7-a9ff-2de2d3f3711c",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "ca316a88-ecd2-479b-8fc9-db61eca3b3db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 834,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "751a9403-8c0a-4f37-96f6-61b68f6ed7d8",
        "cursor": {
          "ref": "1411aa59-2c68-4e19-b6d5-6ba04d40f455",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "53a6103b-56fa-4d3f-b1fc-42be2b0696c3"
        },
        "item": {
          "id": "751a9403-8c0a-4f37-96f6-61b68f6ed7d8",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "5c5b2232-e7a9-446a-83b9-380d7d440aff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 831,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7d98d68-0fec-4617-8136-4b80ea635183",
        "cursor": {
          "ref": "56d66156-e220-476c-ac6b-f005573afe87",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "4a14042a-8336-4839-9d7a-6ac0aaef28a1"
        },
        "item": {
          "id": "a7d98d68-0fec-4617-8136-4b80ea635183",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "2823152f-26bd-47d3-aa14-2b3048953aa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 811,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1b62dd1-93c2-49de-bced-ffa01bce8051",
        "cursor": {
          "ref": "c260cce4-1d6f-4cd3-8986-365ab8c1cf7d",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "194ee595-0e0c-4601-a57b-bbb5df5103ed"
        },
        "item": {
          "id": "e1b62dd1-93c2-49de-bced-ffa01bce8051",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "0fe6e55e-a22f-4acc-8d71-cf972f49cfb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 806,
          "responseSize": 1332
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b192af33-ac07-410a-8c3a-8d6a7c04e7b8",
        "cursor": {
          "ref": "21f3ca8c-60e5-4ef8-8210-97147902e527",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "317e48d7-79de-4f5d-aa25-6290d8ed80c2"
        },
        "item": {
          "id": "b192af33-ac07-410a-8c3a-8d6a7c04e7b8",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "8b5fcca1-1d96-45cd-9463-6d6239f5f542",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 1014,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4f94088-e041-4eef-9be8-a47d99b922d5",
        "cursor": {
          "ref": "6322e4fe-66dc-4d8b-b9ce-87430c54dcc6",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "c7f87487-758a-4d5b-aad7-a562d87e43ab"
        },
        "item": {
          "id": "d4f94088-e041-4eef-9be8-a47d99b922d5",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "9df5e23a-6511-42da-a301-071f2fcafac9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 859,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5efdf23b-8bca-4ca2-b3c5-2541bfb92daf",
        "cursor": {
          "ref": "10d3382e-de63-40fe-b0dc-21489da6c1b1",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "2a9efe27-debb-453d-9370-b5785a618794"
        },
        "item": {
          "id": "5efdf23b-8bca-4ca2-b3c5-2541bfb92daf",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "2252904f-e680-4136-a47f-72447751e261",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 841,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4e7241e-9b2c-4c19-8e3e-f46e17adff24",
        "cursor": {
          "ref": "f18740b4-9cbc-48d4-b4c4-cbad8389f5d7",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "25006b6d-eef7-4110-93b3-4e1791b7d98d"
        },
        "item": {
          "id": "e4e7241e-9b2c-4c19-8e3e-f46e17adff24",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "761e1dae-dce6-4921-8903-027c002a7aac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 928,
          "responseSize": 1269
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "952d422a-7708-4b54-8427-6facb2d8619a",
        "cursor": {
          "ref": "5049977a-3bfb-4a32-877e-dfd994c9c649",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "cb571d18-877d-45fa-850f-5c6b32b7a5e2"
        },
        "item": {
          "id": "952d422a-7708-4b54-8427-6facb2d8619a",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "55d9f943-8f1f-4c3e-9aa7-47e4be4d627a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 898,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae6b5fb2-7aea-43ec-ae3a-ed8a042950b7",
        "cursor": {
          "ref": "5fbadff9-5e58-4a8a-84d1-1e057b2f77c5",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "47410f45-485d-4020-a787-ba414a40df54"
        },
        "item": {
          "id": "ae6b5fb2-7aea-43ec-ae3a-ed8a042950b7",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "5850891e-b3c8-42f0-b680-8724637dcfca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 807,
          "responseSize": 1268
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43aea2c7-580c-47fc-aee1-4f0007da3007",
        "cursor": {
          "ref": "7a4c657b-fe25-4c6f-b940-1f92d0025982",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "3c78c895-c99e-454a-92b0-93d77683335c"
        },
        "item": {
          "id": "43aea2c7-580c-47fc-aee1-4f0007da3007",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "56c96e6b-256c-4119-950c-42055353bae4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 846,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac7c50f9-9fcb-416a-a049-cf78835f427c",
        "cursor": {
          "ref": "aa243f07-1b91-400f-8e23-b5a550934a1f",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "c593dc28-40cf-46cd-ad37-6001f1c21528"
        },
        "item": {
          "id": "ac7c50f9-9fcb-416a-a049-cf78835f427c",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "14f3e5d1-e180-4676-99a8-b50a39b43b2e",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 1039,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7894e7f0-4b4a-4f2e-b180-96ea52d341a3",
        "cursor": {
          "ref": "54268e70-5a17-4fb1-add1-cd8ebef6d969",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "3bd831ea-1c38-49a8-9447-c4d264d1ad23"
        },
        "item": {
          "id": "7894e7f0-4b4a-4f2e-b180-96ea52d341a3",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "7da491e5-5445-49ce-a995-5b2dfec45672",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 836,
          "responseSize": 559
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c6e4321-f533-4015-a2cb-ddcb40e9b005",
        "cursor": {
          "ref": "6e91448e-daa0-4d5b-979b-9d4c33931254",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "f22f0bdd-e6fc-44ad-bac5-1f5001e35102"
        },
        "item": {
          "id": "1c6e4321-f533-4015-a2cb-ddcb40e9b005",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "a82632b4-53e0-4661-b61f-48f281fa2449",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 822,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f400b15a-7abc-4a6f-bd7f-0768da03d6e0",
        "cursor": {
          "ref": "f70bea1a-b658-44b2-a145-b5bf96c04bac",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "377b3b28-070c-4bc9-a4b2-0e1a694b17ab"
        },
        "item": {
          "id": "f400b15a-7abc-4a6f-bd7f-0768da03d6e0",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "eda22acd-3437-4170-968a-2e117da959dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 820,
          "responseSize": 564
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32bff697-1dd9-4b8d-a65d-039866b983c8",
        "cursor": {
          "ref": "9b632f29-0ee7-470e-a7b6-8609b10e06fb",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "34f0e00e-0c17-4882-98ee-02b466b24352"
        },
        "item": {
          "id": "32bff697-1dd9-4b8d-a65d-039866b983c8",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "499ceaae-9f50-4bb8-9530-bce31c13caaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 831,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9b7fe10-8ad3-47bc-a787-2d42816d1b26",
        "cursor": {
          "ref": "c9402e87-0a11-4a70-b1c5-36d9562cd7a7",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "1ded1506-fd75-4e42-aea0-e36db8154986"
        },
        "item": {
          "id": "a9b7fe10-8ad3-47bc-a787-2d42816d1b26",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "d989b9e1-dabc-4d6c-91d2-1ce5b3d5ee2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 847,
          "responseSize": 563
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b356576f-a167-47e9-8e06-228475279598",
        "cursor": {
          "ref": "7bb9f2be-55de-4217-b35e-e0219d923b60",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "99eee0d9-e11c-42db-8cb1-7559b9d1d179"
        },
        "item": {
          "id": "b356576f-a167-47e9-8e06-228475279598",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "b58ed819-1004-41da-9d61-66b8237b1788",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 815,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dbd0f57-09d6-4bb1-ad45-6f73cc1ffd41",
        "cursor": {
          "ref": "4764f3b0-216d-4336-bbe6-76e0a87365d6",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "c6382645-5b47-4dbc-a581-2172a50fcd75"
        },
        "item": {
          "id": "9dbd0f57-09d6-4bb1-ad45-6f73cc1ffd41",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "0dcb5f73-77f9-4412-9d67-fa74ce0a59f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 830,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c74a65b-8487-4a45-9b03-4b6aefb162fb",
        "cursor": {
          "ref": "d91a7770-8a02-42d3-8373-49959d9c3216",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "339b945c-b0bb-448d-8a12-7184d802074f"
        },
        "item": {
          "id": "1c74a65b-8487-4a45-9b03-4b6aefb162fb",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "a1911781-5485-4da9-9730-6d476d8d7841",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 813,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b70c65bd-e688-4d52-8c69-fe71f6bcd09e",
        "cursor": {
          "ref": "9d0eb31d-f314-4dda-934f-b150f2e2448b",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "9c1e8720-9fab-40de-9e58-ac609db376e3"
        },
        "item": {
          "id": "b70c65bd-e688-4d52-8c69-fe71f6bcd09e",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "e861dadd-2f4f-4566-b000-8426a9e52fe6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 808,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25005908-ac78-4762-8c56-000b6dd99c9a",
        "cursor": {
          "ref": "e72ba809-6df0-412c-b568-1a793ec85bf6",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "e7565429-604f-463d-a8cc-0947680a8cc2"
        },
        "item": {
          "id": "25005908-ac78-4762-8c56-000b6dd99c9a",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "c6b91e10-66ee-49ae-bdd4-81fb806ddd94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 871,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3777bb79-f47a-4c3a-8e47-4af4ece187b6",
        "cursor": {
          "ref": "bc48f3c1-3e42-4e72-9f57-65536b148cb7",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "ef34e184-0d82-45e0-ab5e-ef4999834aa1"
        },
        "item": {
          "id": "3777bb79-f47a-4c3a-8e47-4af4ece187b6",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "3afa151a-c754-4064-91dd-e9042ed53b73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 833,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85c72685-7f16-44c0-8d4b-4380b9a61e99",
        "cursor": {
          "ref": "47f887be-77dc-4b0b-98ce-8ecc91a51b03",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "7e555a34-11a5-4a45-9ec4-f535cf0a0f69"
        },
        "item": {
          "id": "85c72685-7f16-44c0-8d4b-4380b9a61e99",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "c889f5c9-e5e7-4031-9386-b70ff3a6b0dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 847,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83e6d7cc-c64e-42ea-8570-552751844f06",
        "cursor": {
          "ref": "d97190d8-088a-4df0-b1d9-bb05b32a1954",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "55e906d5-53d3-4c88-80d7-23ba044929d8"
        },
        "item": {
          "id": "83e6d7cc-c64e-42ea-8570-552751844f06",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "8eeb4493-bcea-4262-8472-085c6c1375ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 826,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6f5e9fe-26d6-4cfb-89d5-46ce5ba7669c",
        "cursor": {
          "ref": "630fe56c-1d20-4776-b8ed-9e8a5bb6faa0",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "3da1b64f-b5cf-429d-840c-dc9d39a117ac"
        },
        "item": {
          "id": "d6f5e9fe-26d6-4cfb-89d5-46ce5ba7669c",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "b1474601-d011-4dbc-9a85-34f8784cc050",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 805,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c755efb7-6a93-4c3c-ada5-70b3e9fc0637",
        "cursor": {
          "ref": "d6341e38-fc69-4b10-a93f-dfa4adadb083",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "67b8e121-4565-40d8-9876-4b79f0506f16"
        },
        "item": {
          "id": "c755efb7-6a93-4c3c-ada5-70b3e9fc0637",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "67945e92-38be-4dc5-ab2d-3f1eeb3f5cd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 866,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72f71d0a-48f3-410f-8cc3-105c1aee1cda",
        "cursor": {
          "ref": "a6095164-1238-4ec5-8d24-880e565286b1",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "5c214dc3-40c0-4648-a4b4-f4ccac01108f"
        },
        "item": {
          "id": "72f71d0a-48f3-410f-8cc3-105c1aee1cda",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "1c216f60-d204-483a-954f-0a78736d3060",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 825,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89db5913-231b-4a6c-afdf-0177fa2ae5a7",
        "cursor": {
          "ref": "7f2b2749-2583-4464-b237-c21013d62952",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "b32a8c7e-6e75-4403-99b0-111701281f83"
        },
        "item": {
          "id": "89db5913-231b-4a6c-afdf-0177fa2ae5a7",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "2addee23-b8ef-4949-88c7-b49f21d7b675",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 824,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4d38b25-42f5-411e-93f4-1494cd4f72fd",
        "cursor": {
          "ref": "0c4fd060-be56-4ca4-8a25-80a255bea78c",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "c881f630-9a32-4a7c-88e1-415c49630bd3"
        },
        "item": {
          "id": "f4d38b25-42f5-411e-93f4-1494cd4f72fd",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "2de4cc81-d98f-498a-9ea1-6ca308fd4bfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 822,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "598808dc-c214-447c-808f-58a8ba59b80f",
        "cursor": {
          "ref": "a1af382d-3d3e-4b1d-97ec-933a0f5bef7b",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "2810691b-0113-4458-8f6b-d415e0cbb32d"
        },
        "item": {
          "id": "598808dc-c214-447c-808f-58a8ba59b80f",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "b8d42108-9cbe-489f-a848-41d5804db383",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 857,
          "responseSize": 534
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a82636c1-1be5-4ae6-88c2-be59a13b4975",
        "cursor": {
          "ref": "4a97e305-4a37-4a2c-952f-be89e5e87206",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "2bb1ecac-ab02-4f9e-ac02-c8c791fb4b1b"
        },
        "item": {
          "id": "a82636c1-1be5-4ae6-88c2-be59a13b4975",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "36d64000-5b2a-499c-9e53-528bbce5f867",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 805,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eae24d34-4849-4043-b9d0-dd17f2dd6256",
        "cursor": {
          "ref": "1eeb9c91-c69b-43f6-abe0-59d5c1898579",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "f0884d92-8960-4381-bd09-3c34722dbb34"
        },
        "item": {
          "id": "eae24d34-4849-4043-b9d0-dd17f2dd6256",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "a280318f-ae93-48c7-bb71-2269a9760009",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 861,
          "responseSize": 515
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2921f7a-9309-4306-87f8-0d6440fb5ec6",
        "cursor": {
          "ref": "ce790525-6fc7-4d29-ae61-50da4a74880d",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "5faf8bac-ca0d-4091-bdd7-a1fb648159f2"
        },
        "item": {
          "id": "b2921f7a-9309-4306-87f8-0d6440fb5ec6",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "0cdda017-e7f0-461e-bc21-73af684e58c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 821,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8bc9d5a-2970-4d92-9103-ed446f6a0805",
        "cursor": {
          "ref": "f741a3ba-dae7-41fc-8b57-e18a496eeddd",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "82885caf-bf4b-4d8e-a234-e639bae21f4f"
        },
        "item": {
          "id": "f8bc9d5a-2970-4d92-9103-ed446f6a0805",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "14e1f969-76dd-4881-b791-4e3b4f80fda8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 823,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2e2169d-7537-49c2-a5a0-ffcabe060c00",
        "cursor": {
          "ref": "9568e7a4-29ac-46a8-884a-a85b7895aadc",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "210096ca-0994-4340-9fe1-42569ace3e37"
        },
        "item": {
          "id": "a2e2169d-7537-49c2-a5a0-ffcabe060c00",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "78007fa1-e3de-43e4-b1ec-46904dda0348",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 823,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c49fb881-ba95-4bc3-ad6b-bfcf617d40b0",
        "cursor": {
          "ref": "9ead1c59-d579-4467-984a-f3c4df0f2f40",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "f84ca0da-4774-4e40-a26b-5d8674eea7f4"
        },
        "item": {
          "id": "c49fb881-ba95-4bc3-ad6b-bfcf617d40b0",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "9e2aa43a-6395-43cb-997d-d45a5eebb0cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 817,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0df0c64d-7a97-4f23-b0d7-f11ed3525c6a",
        "cursor": {
          "ref": "6e038ed1-a446-4e08-a9d2-7d2fd2b39e9d",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "a55cfdb0-0170-44f8-93e0-f2c63b8afc0d"
        },
        "item": {
          "id": "0df0c64d-7a97-4f23-b0d7-f11ed3525c6a",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "b5079225-fb7c-4426-a863-3b07e3afe4e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 837,
          "responseSize": 791
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5758434-b1a6-4fff-abb9-9e16f56aefb7",
        "cursor": {
          "ref": "b89ceadb-f432-4dd3-85be-347fae661100",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "f2dad167-0fe7-4d0c-b481-84993ef46a9d"
        },
        "item": {
          "id": "e5758434-b1a6-4fff-abb9-9e16f56aefb7",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "d00c17f4-c1c8-4200-9748-b032f529f761",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 855,
          "responseSize": 772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bc2523f-412b-4177-9cf7-c7be21439256",
        "cursor": {
          "ref": "c698ea84-eec5-411b-80d8-d61d83f488b9",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "c79ebb75-d87d-4a5f-8ca5-40433a7fa5ce"
        },
        "item": {
          "id": "6bc2523f-412b-4177-9cf7-c7be21439256",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "b55e2eea-1f45-42dd-a3db-677c985bb255",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 851,
          "responseSize": 769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a00274e1-e610-4a47-9616-43a599f22f4a",
        "cursor": {
          "ref": "a490b0e6-cfbf-49b4-bdb2-2c287a137bf1",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "1a6f1aef-339d-43f0-85f8-12d7d9b7dcdf"
        },
        "item": {
          "id": "a00274e1-e610-4a47-9616-43a599f22f4a",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "a6bf131a-8826-4d23-8544-4ddb0ae5b755",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 800,
          "responseSize": 771
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76c21ea2-af8f-439e-bb1d-e996a31e9b94",
        "cursor": {
          "ref": "4de14ac4-aa61-48c0-bf4c-7f56de84ac42",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "ec3459f1-da23-457f-bd71-66e40b987125"
        },
        "item": {
          "id": "76c21ea2-af8f-439e-bb1d-e996a31e9b94",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "d89f527d-fcb1-4510-85f8-3d5da5d72868",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 824,
          "responseSize": 769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "072f9cb8-d4ce-4535-9df7-494425e2bb3c",
        "cursor": {
          "ref": "f30cd6eb-be96-4780-b8ae-95e22152073f",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "ac33572c-7c7e-4e26-a54a-6a9f4051eb6b"
        },
        "item": {
          "id": "072f9cb8-d4ce-4535-9df7-494425e2bb3c",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "b03ecc5e-8d57-4875-a949-34dd2ceef15d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 822,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a1743d1-fec1-4bfc-9419-a90d8cefd83e",
        "cursor": {
          "ref": "647f3720-796c-4d18-af73-e08aa0671d2a",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "5849bce0-157d-4bde-8331-7af2ef96abea"
        },
        "item": {
          "id": "3a1743d1-fec1-4bfc-9419-a90d8cefd83e",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "bb15ecf6-4132-44d7-b65d-00258c50dcde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 834,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d882e2ed-4d0c-42cb-a315-bde019a47d19",
        "cursor": {
          "ref": "7eb0e35e-b338-40e6-a7c6-ba15254d89d6",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "472205a4-84b3-4a4e-868a-57517783d57b"
        },
        "item": {
          "id": "d882e2ed-4d0c-42cb-a315-bde019a47d19",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "de176e4f-4608-4ca9-a9ad-a4a93b870329",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 838,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93d2ba9f-cfcb-441d-9763-c0850ea8ddbb",
        "cursor": {
          "ref": "72056289-a0b8-41b3-8550-ac4066d5b9b0",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "aa7bc3d1-cf09-4435-b4ac-1a713dde40b8"
        },
        "item": {
          "id": "93d2ba9f-cfcb-441d-9763-c0850ea8ddbb",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "864508be-f87e-4547-88ad-48104e106895",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 827,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a12e3d2a-bf57-4ec8-bd09-71eec9c7860b",
        "cursor": {
          "ref": "db8c4375-9310-44bf-a8cc-632a6a903282",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "121e10c1-a843-477f-abdd-89854c7992ba"
        },
        "item": {
          "id": "a12e3d2a-bf57-4ec8-bd09-71eec9c7860b",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "86b529fa-210c-40a7-8a02-dec5ca94ee3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 847,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3bd3163-f50c-43a6-bf89-d371ee292b6d",
        "cursor": {
          "ref": "9e94a44c-56a1-4c17-9e2b-5bc238c5a311",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "23598214-59f5-4190-b7a5-1097fbee80f3"
        },
        "item": {
          "id": "c3bd3163-f50c-43a6-bf89-d371ee292b6d",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "c0741275-5609-47ab-8e56-4844af73b9f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 837,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b7a8ef3-2b01-40fc-9aab-62f28e1e6ec0",
        "cursor": {
          "ref": "b3c7077e-04c7-43e5-9f19-18e610dccc68",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "135d60a6-5162-4c4c-9536-5b5cf168bb50"
        },
        "item": {
          "id": "4b7a8ef3-2b01-40fc-9aab-62f28e1e6ec0",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "ed10bae7-7c83-419e-8c54-b3e7e7e7434a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 869,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fdd9528-7b0b-4fbc-b084-829c0b52bbe5",
        "cursor": {
          "ref": "8cc5c26d-a67d-4cb1-848b-cfbdbc772a7c",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "cc52e68b-a783-447f-b3c1-d600fc6e55b5"
        },
        "item": {
          "id": "7fdd9528-7b0b-4fbc-b084-829c0b52bbe5",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "359d533c-5598-4e3a-b95b-87c4f9fc4cfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 860,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b49d9d13-fe76-4733-8ed9-bbc6a6a38685",
        "cursor": {
          "ref": "923f9670-dbe3-4809-9d5e-c0f9e25a9729",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "29a839eb-3736-4a81-963d-6c81bb224db5"
        },
        "item": {
          "id": "b49d9d13-fe76-4733-8ed9-bbc6a6a38685",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "c627c556-eebc-4b50-93a3-4fc3cb487c84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 844,
          "responseSize": 611
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f45fc7dd-67bd-4e92-abe6-cf6e4d6cbf29",
        "cursor": {
          "ref": "9c2f5ac3-18e7-4a51-9342-d3df1eb1c6e4",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "6b2930ba-6313-4c68-9e2c-455c61c3d1e7"
        },
        "item": {
          "id": "f45fc7dd-67bd-4e92-abe6-cf6e4d6cbf29",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "a8a8162a-13f4-46f8-9acc-00d0f4d37df5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 846,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87ec8fd9-e17f-4530-bdf5-4faf66e5e6d4",
        "cursor": {
          "ref": "299cf084-b42b-4953-8c33-7aa6db81c90f",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "68db0615-d29e-45be-bd0d-29f4c900f4f4"
        },
        "item": {
          "id": "87ec8fd9-e17f-4530-bdf5-4faf66e5e6d4",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "1bc66f4f-8bd1-488b-963f-4807937354af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 842,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4023e353-44c0-48e6-891e-a589b7c52b44",
        "cursor": {
          "ref": "547e56b9-73e3-4f21-abab-d04009abf90f",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "cd05f9e2-e9b3-4755-b277-59a643fe9047"
        },
        "item": {
          "id": "4023e353-44c0-48e6-891e-a589b7c52b44",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "6fa3a8ef-e79b-4ada-9ade-58ffc6666bd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 851,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0018d28d-2bfd-47f9-a6c0-1d07610c4d20",
        "cursor": {
          "ref": "58469c5c-c4af-4597-9c6c-ba9eab4205e1",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "c2cda41e-470e-4c19-9e86-5719959321dc"
        },
        "item": {
          "id": "0018d28d-2bfd-47f9-a6c0-1d07610c4d20",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "661f30d2-9b99-473a-b299-d3263fd5f054",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 827,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b9f7199-5d85-4f60-baba-89ea7131bd56",
        "cursor": {
          "ref": "e89db296-607c-46fb-9159-0b4eabd73a9c",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "4d998049-562c-45bc-8693-a5f470e97c29"
        },
        "item": {
          "id": "4b9f7199-5d85-4f60-baba-89ea7131bd56",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "536c2048-2fc6-451f-a604-1a48c0497cea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 843,
          "responseSize": 903
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e9e50b3-6dcb-4bbd-a143-e20e015766da",
        "cursor": {
          "ref": "fba4a0c5-cdef-4666-87d7-8d0f5aec3655",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "d9b1214f-e1bf-49cc-b3a3-c10f97a9cc14"
        },
        "item": {
          "id": "2e9e50b3-6dcb-4bbd-a143-e20e015766da",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "ecdb6273-4c9b-460b-ba75-321556884d90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 856,
          "responseSize": 885
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b72a0461-27f7-4053-ac9b-c0229773aecf",
        "cursor": {
          "ref": "47034da3-c8b1-4c2c-9617-6a271ef98c37",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "e018ed9b-4bd5-450f-a991-c7a625692b5e"
        },
        "item": {
          "id": "b72a0461-27f7-4053-ac9b-c0229773aecf",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "a3563ca1-bf29-44c2-92e2-ded08264b57d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 828,
          "responseSize": 882
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72666532-3c2c-4309-9fe7-73dc292464fe",
        "cursor": {
          "ref": "3e0b8111-7540-4e4e-bbbd-d593181ac1bc",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "70e0405e-aa11-49a0-a0e4-5ab14ca95b34"
        },
        "item": {
          "id": "72666532-3c2c-4309-9fe7-73dc292464fe",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "1a059a26-6c5a-4b83-bd98-05470a3f991b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 824,
          "responseSize": 884
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c01c168-5a38-4839-85b4-8f149f64e32b",
        "cursor": {
          "ref": "2fc4ff4e-f657-4311-998f-1c3adf8573ba",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "5db64954-0144-490e-858f-968f7c927d59"
        },
        "item": {
          "id": "6c01c168-5a38-4839-85b4-8f149f64e32b",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "bd6f2b5a-9828-4c3b-8ac5-0580ce643836",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 831,
          "responseSize": 882
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cd985e9-13f3-4555-b7e9-995e318803d7",
        "cursor": {
          "ref": "f58020a2-a914-4201-9f14-351d17e0bae2",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "3e8a5fe6-d3ca-4af2-b371-7235fc087688"
        },
        "item": {
          "id": "0cd985e9-13f3-4555-b7e9-995e318803d7",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "f98c57b3-a392-4e9e-909a-5deaa0eb73f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 835,
          "responseSize": 708
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f8dbdab-0dc6-402f-9768-a5524bb5a5b7",
        "cursor": {
          "ref": "b0d1af93-de12-4cce-a733-c7fdf6d6fdc9",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "9d298d72-a4b2-4d83-83dc-936e246d9ebd"
        },
        "item": {
          "id": "2f8dbdab-0dc6-402f-9768-a5524bb5a5b7",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "0b8a6f61-42cc-4d97-9c82-5f9074dba47e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 44,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3e4b7ab-98bb-4c74-8ae8-25914516804d",
        "cursor": {
          "ref": "904ec231-7b9b-4abf-92af-4c13b1ab4375",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "cdc5ef4f-5bfa-4a7f-8751-eee53cc1f516"
        },
        "item": {
          "id": "a3e4b7ab-98bb-4c74-8ae8-25914516804d",
          "name": "credentials_issue"
        },
        "response": {
          "id": "a16f297d-8997-4938-b876-52f8a65c3074",
          "status": "Created",
          "code": 201,
          "responseTime": 8094,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f368305-54a4-4f5b-b4c3-cfa9d0243906",
        "cursor": {
          "ref": "8ac4edaf-8eca-4643-afd0-7aba7177f2fe",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "2020704c-2953-49b7-aef2-5fd88bbec6ac"
        },
        "item": {
          "id": "3f368305-54a4-4f5b-b4c3-cfa9d0243906",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "16b8dc7d-290d-44d6-a1a6-f91eebf573dd",
          "status": "Created",
          "code": 201,
          "responseTime": 7839,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2ca1b29-b453-4af0-9399-a3713591c007",
        "cursor": {
          "ref": "43bffad4-1e47-42fe-85c5-f8e624cd3ac8",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "25532357-e890-45ba-93bf-2d683987ae21"
        },
        "item": {
          "id": "b2ca1b29-b453-4af0-9399-a3713591c007",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "b9148a1f-e7fb-449f-a311-2f19cb9a28c3",
          "status": "Created",
          "code": 201,
          "responseTime": 7099,
          "responseSize": 703
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "67115c3a-cd54-428c-b7a9-12d85a31c0d0",
        "cursor": {
          "ref": "6070c136-2bb4-4100-9f2e-3660490b4988",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "2aae40d3-19d7-44d8-9e14-6e7dfbb20691"
        },
        "item": {
          "id": "67115c3a-cd54-428c-b7a9-12d85a31c0d0",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "2faaaee0-eecd-4099-9f3b-c8c29d47dc9d",
          "status": "Created",
          "code": 201,
          "responseTime": 6436,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5a281dc-e202-47ef-aecf-245743fd4c59",
        "cursor": {
          "ref": "1180f3eb-5941-46e0-b23f-b6e776ba3f30",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "b460e387-b8ab-4db8-8e74-c546da4d63af"
        },
        "item": {
          "id": "e5a281dc-e202-47ef-aecf-245743fd4c59",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "5c60599c-93e8-40a6-9761-7a5db21237a6",
          "status": "Created",
          "code": 201,
          "responseTime": 7004,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b039612-98f5-4a28-9a57-811cb3cefdbf",
        "cursor": {
          "ref": "513628f3-ccad-42ca-aa87-2162e2eb6e52",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "c563fe82-4bb6-46a4-84d5-023b73239632"
        },
        "item": {
          "id": "3b039612-98f5-4a28-9a57-811cb3cefdbf",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "b1c93c1b-c15e-4459-a36b-a26c372dac28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 800,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "9edb48b9-11e7-4cf2-92b6-bb86be6485bf",
        "cursor": {
          "ref": "4d455a29-5fae-4f39-9063-2092006a6d8e",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "a5e050fd-e66f-4e47-9e7b-df0162350716"
        },
        "item": {
          "id": "9edb48b9-11e7-4cf2-92b6-bb86be6485bf",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "80baf996-b030-4791-8b3b-a6691c6a301d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 832,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b910a12-e418-404a-8536-8aba6be1a13d",
        "cursor": {
          "ref": "9f92b6dc-0fa0-41d2-a9c4-dc5ed2648096",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "2eb49e57-70d4-48c4-9b19-44d9f774b969"
        },
        "item": {
          "id": "9b910a12-e418-404a-8536-8aba6be1a13d",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "8ed5529d-c50f-440f-b06a-f52311d11b60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 793,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "670fc583-557c-4ca8-b473-95f568c3046c",
        "cursor": {
          "ref": "c3a96c4e-058a-4126-8b8a-4dea367f7c4f",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "b5288999-1c34-42f9-ad74-feafe5bd0c0d"
        },
        "item": {
          "id": "670fc583-557c-4ca8-b473-95f568c3046c",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "093e6357-f9b7-43cd-9e8e-fbe4c7deb1a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 840,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5d03aa1-c5ef-4eec-b476-e45fabdb0eb6",
        "cursor": {
          "ref": "590f5a3d-9681-4239-bb87-1466d053ec46",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "ee44d637-5135-4d65-b4d3-2be994cbeba8"
        },
        "item": {
          "id": "a5d03aa1-c5ef-4eec-b476-e45fabdb0eb6",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "dfa3a111-eccd-417e-8365-7594c5f50fcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 797,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8beee54f-f5bd-4c84-aa12-bb83c78689c5",
        "cursor": {
          "ref": "8ae9da3f-f679-4923-9d3d-309c91d51394",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "b0c67efe-d9ba-4134-a863-f62f7ffbf750"
        },
        "item": {
          "id": "8beee54f-f5bd-4c84-aa12-bb83c78689c5",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "e86e6771-9af4-4f47-bea2-bd1156e9b86e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 821,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "138ec9c9-b345-4f8a-b44e-61c1317c8a7b",
        "cursor": {
          "ref": "69d44f71-9b33-48c5-9b38-95d6e08128c7",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "7324b03b-d62e-43bf-8b80-22f1e2886f4d"
        },
        "item": {
          "id": "138ec9c9-b345-4f8a-b44e-61c1317c8a7b",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "9fc6c7b5-c965-46e6-9539-d60fcb57488b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 782,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "025b814c-5f62-4ba1-8b36-0c749c355776",
        "cursor": {
          "ref": "b78b5a5a-980f-4155-b167-5c030dd172c8",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "627ac2c2-0f57-4d50-9a0a-675b66ba9786"
        },
        "item": {
          "id": "025b814c-5f62-4ba1-8b36-0c749c355776",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "b3107c3e-723b-4ca2-bdbd-ed79822a5a8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 781,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49252ffe-0ed9-45d3-9ad0-8a1348d38fb8",
        "cursor": {
          "ref": "7650270f-ff45-4786-baf7-82aa2d330560",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "fe28d6e2-6bce-4626-8bb9-c28be8c79692"
        },
        "item": {
          "id": "49252ffe-0ed9-45d3-9ad0-8a1348d38fb8",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "25dd113a-2148-4889-846b-5b01beb90809",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 794,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10e13cbb-9602-444d-8fb1-2ddbd8486b9a",
        "cursor": {
          "ref": "f529261d-1847-465d-a292-891087da1fa2",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "be223934-8866-482d-8b12-e1bca5a97e25"
        },
        "item": {
          "id": "10e13cbb-9602-444d-8fb1-2ddbd8486b9a",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "74788eb1-c31c-4556-ae51-b367e812cff3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 815,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2210555-007b-4259-b440-54b311f77085",
        "cursor": {
          "ref": "3828abb4-ed56-4a93-8032-eac102fafe72",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "fd447296-b6fd-49e1-ac7b-b0c089e0a029"
        },
        "item": {
          "id": "a2210555-007b-4259-b440-54b311f77085",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "5a295042-589a-4b06-aa5b-3801f54b2a94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 836,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30df9fe2-4a1f-4b4a-8ecd-5c80f147d937",
        "cursor": {
          "ref": "be9ee0b7-5bb1-46ba-8239-44678411637b",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "441e1e4a-e06f-4b77-93d3-6de895820a9d"
        },
        "item": {
          "id": "30df9fe2-4a1f-4b4a-8ecd-5c80f147d937",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "895a13b5-2fd4-4f64-996d-845835bcb1eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 791,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09d1c635-9360-42f3-96c6-342e01276224",
        "cursor": {
          "ref": "a117a943-9f1a-4177-ad81-de736ad6eac1",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "6184e5e4-680c-46ff-b5ed-0d2ef4173733"
        },
        "item": {
          "id": "09d1c635-9360-42f3-96c6-342e01276224",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "295f6991-3dd3-4814-b52c-f93fd0627831",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 817,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce76f41c-1d51-4c71-8c63-0fdceb3842db",
        "cursor": {
          "ref": "0c2d1f07-2744-4bcd-8a89-8d8508e0f3b3",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "3763f70d-6664-4e4f-b7db-5c1f82425018"
        },
        "item": {
          "id": "ce76f41c-1d51-4c71-8c63-0fdceb3842db",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "6cd8c277-c030-4708-907c-00a565e9af59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 816,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99074397-07f9-4cd0-94ce-dbbc2e18d9f1",
        "cursor": {
          "ref": "25464cae-7bd7-4334-8be1-aacf3b605e00",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "5c14f4ef-7601-4c6f-b923-b320115beff5"
        },
        "item": {
          "id": "99074397-07f9-4cd0-94ce-dbbc2e18d9f1",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "62ee65a7-ee2d-4f11-acf0-e50bfc6260c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 783,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b50abf46-ea54-44cd-ad7a-96427a957d6a",
        "cursor": {
          "ref": "6b1cbe8f-5b36-4659-9aa7-67a9b678b314",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "e1a09c5d-a6cc-4cee-b539-28a3b0737452"
        },
        "item": {
          "id": "b50abf46-ea54-44cd-ad7a-96427a957d6a",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "41cf6aa9-54e3-4218-85a3-3041b8fd267b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 815,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cb0669f-d2e0-4842-bd91-25102bed1af3",
        "cursor": {
          "ref": "269f43f5-9145-4106-8301-00425286b076",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "75c26585-90a9-4da4-b08a-fa844ac688b6"
        },
        "item": {
          "id": "7cb0669f-d2e0-4842-bd91-25102bed1af3",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "c3cc5d36-594e-4622-873f-2b47d5bdbf39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 839,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0adbc92-6c52-4a0b-883e-9f414156e9d8",
        "cursor": {
          "ref": "71100bf3-83a0-41f4-adad-9c82abd1ac9c",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "468c92c3-27e8-46e7-b6f7-f0ad63ab2cac"
        },
        "item": {
          "id": "a0adbc92-6c52-4a0b-883e-9f414156e9d8",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "68e19f33-ff41-4223-a0fb-a1981c2fa28f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 793,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "481cc418-3d84-49b3-be15-b512a8010690",
        "cursor": {
          "ref": "0763384c-09bd-426a-b3be-38fdf3a413b1",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "4eb5860e-58d3-41e2-b7c6-816f6fc6178c"
        },
        "item": {
          "id": "481cc418-3d84-49b3-be15-b512a8010690",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "52297e76-b6c3-45d8-ad3d-ef056846edf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 818,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99ffe909-0f11-49e2-9050-7489bb825acb",
        "cursor": {
          "ref": "d0fbb18e-de05-4557-b27a-bf37c3750512",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "0f379ae5-85f5-45c4-8c68-c401e8714550"
        },
        "item": {
          "id": "99ffe909-0f11-49e2-9050-7489bb825acb",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "d33cfaa7-aee9-4703-8f4d-a0538a69aa75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 840,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22984e4d-ce98-4741-a8d8-990d9e68eb9f",
        "cursor": {
          "ref": "9c99dbc1-6e73-47fc-ae82-2cf245dfa1d2",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "1074c5cb-66b7-4260-ad95-cefc2a33ede1"
        },
        "item": {
          "id": "22984e4d-ce98-4741-a8d8-990d9e68eb9f",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "a2b3128f-c521-424a-90d6-b3f2cc970476",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 826,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3870d198-0d64-453d-b87a-5636e5485e77",
        "cursor": {
          "ref": "62e199b4-fa2e-4b51-8e47-d01134dd92c5",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "00d19933-eecd-4e7a-8aee-b74816d2d664"
        },
        "item": {
          "id": "3870d198-0d64-453d-b87a-5636e5485e77",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "82429f9f-f86b-4bb0-8e9a-551dd2ce67db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 831,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e22392e-2190-4463-9ba0-b15e59bed6ca",
        "cursor": {
          "ref": "b21798d7-8ad4-4fc1-b094-b1d2b798fe0b",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "d12fe9b8-fad4-47f7-8da0-64e5f5a285c6"
        },
        "item": {
          "id": "0e22392e-2190-4463-9ba0-b15e59bed6ca",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "9461243b-adaf-47bb-b73c-55aeffca8da6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 867,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba3ca769-0987-4e4a-835c-dde56c3b00cf",
        "cursor": {
          "ref": "b5bb0820-1bd2-45a5-b8aa-630496626143",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "88d6d3f1-13f7-47bc-a936-d4e11d9ae3bc"
        },
        "item": {
          "id": "ba3ca769-0987-4e4a-835c-dde56c3b00cf",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "adc32147-903a-460d-a875-4686ca87c1ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 821,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71c49a95-1ca2-4e1f-a6a2-fb003d5d343c",
        "cursor": {
          "ref": "51c81b86-cf25-4a1e-a300-cb8368c79dfa",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "db63b6ea-4c64-4e44-baa8-5603cc353a1e"
        },
        "item": {
          "id": "71c49a95-1ca2-4e1f-a6a2-fb003d5d343c",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "267c7b17-8baf-4f4f-a9fd-3f7210efa513",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 831,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bba29867-d58f-4fda-9497-b913f3add036",
        "cursor": {
          "ref": "cf97c646-1c59-4391-9a92-74700087f86f",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "649da057-3a25-4a95-b0eb-ce5236b1bc1b"
        },
        "item": {
          "id": "bba29867-d58f-4fda-9497-b913f3add036",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "381ce159-22e9-4f74-af67-4e5383e7a028",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 792,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd443c7f-64a3-4124-a0da-2aaa7fea594d",
        "cursor": {
          "ref": "c615b8a5-ea49-48d3-94bb-40d8fdb4bba4",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "03fa45d5-d7c4-4eda-afc6-a2e16d14115e"
        },
        "item": {
          "id": "dd443c7f-64a3-4124-a0da-2aaa7fea594d",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "4bb56ab6-0e1c-40d8-8d4e-196aa03cb6b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 830,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd6d381f-1279-4dce-abc1-287c858c3ec3",
        "cursor": {
          "ref": "914ce306-9c4a-4a76-be6a-cb3bec5ff984",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "4b9ce01d-2b37-4120-94ab-832f20b68a97"
        },
        "item": {
          "id": "dd6d381f-1279-4dce-abc1-287c858c3ec3",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "70349412-e57d-442b-9505-52799265765c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 842,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0da9615-1be6-473a-8a16-9a456b738cfd",
        "cursor": {
          "ref": "3073ee70-fa20-44b4-89a9-ec08bcefa32d",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "81cb414a-3f00-40f2-a93c-d6ab8dec22dd"
        },
        "item": {
          "id": "a0da9615-1be6-473a-8a16-9a456b738cfd",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "0889d035-0254-4f4f-aeca-169a571dbd9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 835,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a56fa8ad-2263-47f1-8ca1-2e81240aa6eb",
        "cursor": {
          "ref": "b5f683b1-2a51-4c55-bae2-e340bef59a1e",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "edb5fa52-d5e0-49ad-84b2-20ffaf936971"
        },
        "item": {
          "id": "a56fa8ad-2263-47f1-8ca1-2e81240aa6eb",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "fff749cb-2939-41ab-882c-0918e38525b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 843,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe1a8e67-1c1e-4466-81d0-33d64df81ae7",
        "cursor": {
          "ref": "dd4a7678-3b91-4c7e-b6be-919c68b74625",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "84ff9280-ecc4-4e6a-b500-06a8d399ec04"
        },
        "item": {
          "id": "fe1a8e67-1c1e-4466-81d0-33d64df81ae7",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "96ce00a4-6361-472c-9227-5445a29db380",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 843,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3d27d6a-a1e4-4f85-81cc-f209b509a9ee",
        "cursor": {
          "ref": "51f85bf3-a229-4cd0-9aec-f3307e880eaa",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "2858a3b4-ee63-42f1-a864-42224f14b8f0"
        },
        "item": {
          "id": "e3d27d6a-a1e4-4f85-81cc-f209b509a9ee",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "ddb0cfce-ce1f-4f5c-9f4a-fa8626d2b648",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 817,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3669044-b3cd-4f39-8b0e-ab21a74ae4b6",
        "cursor": {
          "ref": "2bd79232-eb3c-4532-acb2-2d66c5728428",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "940a0a45-d621-4321-9d72-afd29cf2b8d6"
        },
        "item": {
          "id": "c3669044-b3cd-4f39-8b0e-ab21a74ae4b6",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "77c48b0b-e1ca-433f-bb61-7c29a938bba1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 816,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "924c2e5a-2328-44d6-a762-6c4199873c97",
        "cursor": {
          "ref": "ea779e9f-5531-4085-a466-00b849ebc485",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "cd69bfd1-4017-4c07-83ab-f9491473886b"
        },
        "item": {
          "id": "924c2e5a-2328-44d6-a762-6c4199873c97",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "a8a9ea1d-ec71-4af6-a155-d834f0d90469",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 46,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9950242-2682-488e-9dd7-a5df6e756124",
        "cursor": {
          "ref": "0964031d-bdcf-43d4-9ae0-79c9a01d5eec",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "46931e46-cd4d-4671-b0ff-ee07eeedef43"
        },
        "item": {
          "id": "e9950242-2682-488e-9dd7-a5df6e756124",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "d43b822e-19ff-4cc7-9ed5-f0905e15c922",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 843,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "864bb166-280d-4760-ab41-df9c021d585d",
        "cursor": {
          "ref": "d5ae5b74-3ec0-43f3-9d14-cf80f1916cba",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "01246f06-3954-450e-bfee-2f2274d9cc00"
        },
        "item": {
          "id": "864bb166-280d-4760-ab41-df9c021d585d",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "77a46da2-824f-4c92-b922-9a16bd62e5b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 839,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "537a5a29-3389-48ee-9029-581ad747f73e",
        "cursor": {
          "ref": "fbe07f80-3e38-4144-b447-e4eb45391229",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "30012964-8b6a-47df-867a-34374638dac5"
        },
        "item": {
          "id": "537a5a29-3389-48ee-9029-581ad747f73e",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "7dec42dc-625c-49c5-8a6e-a58f24505a7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 843,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec66f985-95a2-46c2-9d0a-515f444d299e",
        "cursor": {
          "ref": "a6083ce0-3b5e-43f7-982b-e788350223de",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "379d0966-3045-45f4-a59d-7757bd9f96f5"
        },
        "item": {
          "id": "ec66f985-95a2-46c2-9d0a-515f444d299e",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "77572bdc-773d-47e0-91bb-3e4fc2f1eac3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 834,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8f7fdd0-dfca-4292-8c4c-620c8478fb8a",
        "cursor": {
          "ref": "58d8fa0b-3b07-4469-89b1-7b574f6535f3",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "8d952c2c-b77a-4aa7-843b-9728a97bfd58"
        },
        "item": {
          "id": "a8f7fdd0-dfca-4292-8c4c-620c8478fb8a",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "7357a66c-a6af-47a7-b17d-9f40ab75d705",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 840,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af4b2197-0932-48cb-aeb2-15cdf7edb4f8",
        "cursor": {
          "ref": "d762989c-a1d5-46d3-b98f-da46552524b4",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "3a85c2f8-e9ec-4a8d-995e-ecbc8bb067bf"
        },
        "item": {
          "id": "af4b2197-0932-48cb-aeb2-15cdf7edb4f8",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "4369b7fa-11aa-40f2-b13c-c554af51264c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 891,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c0c8306-a0c6-4a70-b74b-1533ba68c9e3",
        "cursor": {
          "ref": "5b23be12-74fd-4c8e-a7a4-647096c5005c",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "92a84a03-da42-4a54-a379-d957797b9e77"
        },
        "item": {
          "id": "1c0c8306-a0c6-4a70-b74b-1533ba68c9e3",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "2c21ed8f-e1c2-49db-9f54-dd14cdcda4f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 851,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9de450b-4a52-4b62-8320-c1f3d291219a",
        "cursor": {
          "ref": "0e07df42-dbbc-4cd2-ac0a-916dc2a630ae",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "8045692f-9b31-4549-960c-620259c8c539"
        },
        "item": {
          "id": "a9de450b-4a52-4b62-8320-c1f3d291219a",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "1857a9d2-4dce-48fe-aa99-60de601328ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 874,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcc49e4b-af30-4f69-affb-d23bedff2243",
        "cursor": {
          "ref": "61282484-539f-4142-bcf4-aea12a86dcbc",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "502f088a-769c-4cf3-bbfc-e7305cede848"
        },
        "item": {
          "id": "fcc49e4b-af30-4f69-affb-d23bedff2243",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "6aab9b89-3e77-45f7-abf8-e22dbcf78e88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 872,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d56fdb77-0c10-4758-95d3-d04a2011a9fa",
        "cursor": {
          "ref": "f1547359-f720-4975-8a07-768af8773101",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "716a2594-cd0f-449b-818f-f966da7f22c2"
        },
        "item": {
          "id": "d56fdb77-0c10-4758-95d3-d04a2011a9fa",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "a2d72173-7aac-49ef-a713-d75989ee5f7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 835,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f537b831-cb2a-476c-8031-b27b0f99c0e0",
        "cursor": {
          "ref": "76b8efec-d85a-4525-9c0d-82b2bbe93932",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "3fc26992-00bb-4cc9-beda-17f2666254e2"
        },
        "item": {
          "id": "f537b831-cb2a-476c-8031-b27b0f99c0e0",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "787c8baa-cc6f-475f-89bd-6c2e9be1b08f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 836,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c3f60d5-ac96-4259-9b3b-fb3bc5e3c4aa",
        "cursor": {
          "ref": "ee3e7847-5a10-401e-a665-94cc1580e89e",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "643d3e05-3acf-49ca-8853-59c306d0a872"
        },
        "item": {
          "id": "4c3f60d5-ac96-4259-9b3b-fb3bc5e3c4aa",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "25176419-997d-4391-8792-51347f608795",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 849,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c42db0c-18de-4e9d-8bdc-1707c8316f20",
        "cursor": {
          "ref": "0036846e-3a52-4755-aef4-0830e8efca9d",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "e4058105-6b63-4678-8ece-7b8f55d7a293"
        },
        "item": {
          "id": "9c42db0c-18de-4e9d-8bdc-1707c8316f20",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "0671f721-62dd-40dd-a563-18f25cec005f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 840,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9ca45bb-9010-4373-ba9b-5bc861a7bb5a",
        "cursor": {
          "ref": "603752ca-f277-4f76-9b95-3af1f82ca9d8",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "debfbb92-4e68-4c14-9b50-8fad52670136"
        },
        "item": {
          "id": "b9ca45bb-9010-4373-ba9b-5bc861a7bb5a",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "a867ef49-b2e7-4e7c-a2da-d7f399b6a738",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 839,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8ad3483-0e27-4010-a65d-35243147e996",
        "cursor": {
          "ref": "d659820d-b61f-485e-b819-ba39d21bb04c",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "fa1c2473-f2f7-4156-93ca-23d7fe034beb"
        },
        "item": {
          "id": "b8ad3483-0e27-4010-a65d-35243147e996",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "289bca76-ea50-4ded-a595-4fc5e2beb836",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 813,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "946c7c99-1445-484a-88db-df5f9c5687d2",
        "cursor": {
          "ref": "637435ca-cca3-4228-b46e-f0761adb8da1",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "aa060f64-167d-441c-a226-9b09a228da79"
        },
        "item": {
          "id": "946c7c99-1445-484a-88db-df5f9c5687d2",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "72cc08e7-8111-45ad-b066-8ea6eba4553e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 854,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf78dbe5-fa66-4a82-88e6-de99e0d41d13",
        "cursor": {
          "ref": "9ba9f8aa-6344-4096-9d62-f9f461c5caab",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "01085c3f-7513-464f-ad16-6120f5dac775"
        },
        "item": {
          "id": "bf78dbe5-fa66-4a82-88e6-de99e0d41d13",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "06efacbd-7a03-40e3-98d0-8ec1ac09d6ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 848,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df8de651-da15-45de-9b80-f93944ef6508",
        "cursor": {
          "ref": "7cee555d-5e48-42c9-a965-6b9faaaddd43",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "91d3edbe-8a0b-4614-a13f-830a79e7abec"
        },
        "item": {
          "id": "df8de651-da15-45de-9b80-f93944ef6508",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "63014b7c-5872-474c-ad64-44362a8adb14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 879,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f836ae58-af77-470e-9a8f-4be9723a7894",
        "cursor": {
          "ref": "f72cf35d-f20d-431c-ab8e-3661c1912648",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "fe7da6aa-a8f6-4868-a0f5-10e1d23c4368"
        },
        "item": {
          "id": "f836ae58-af77-470e-9a8f-4be9723a7894",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "c80f6fca-9375-446c-8943-c2632712487a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 840,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "617be210-4552-4f73-8e7f-968ec8efb8fe",
        "cursor": {
          "ref": "5b8d6125-e8cf-4b72-8d5c-e75dea7db500",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "4845fa5e-55c6-40ec-9122-f7cdd50f4ffd"
        },
        "item": {
          "id": "617be210-4552-4f73-8e7f-968ec8efb8fe",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "31ade8bb-c684-47d1-9e17-6b5ec696e1a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 859,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cda5eb9-2ba9-46ee-b9a7-1ba172d9ce60",
        "cursor": {
          "ref": "250ef386-af3c-4fc1-b46e-e4ae929d48e0",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "c80e179f-6ffa-4b89-92d5-1d4899707ff8"
        },
        "item": {
          "id": "2cda5eb9-2ba9-46ee-b9a7-1ba172d9ce60",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "dea5d0a6-3577-4755-a830-d77b40a8c76c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 867,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a23b00d7-0f93-4784-9a6f-ec7708f8d9e8",
        "cursor": {
          "ref": "c253116f-4235-48af-afd1-0540ba30de0f",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "52df82c5-5b92-4c27-bd22-5954c460f784"
        },
        "item": {
          "id": "a23b00d7-0f93-4784-9a6f-ec7708f8d9e8",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "7a3cbfc0-883b-4a54-81f7-306fed37dae2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 848,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eb51903-b29f-4d8e-81d0-200ea3cbc548",
        "cursor": {
          "ref": "9b3bbbd7-1df8-4583-8aa3-40f5f9f308b4",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "b93e96cd-e095-4f9f-a3e3-75717edd8f05"
        },
        "item": {
          "id": "2eb51903-b29f-4d8e-81d0-200ea3cbc548",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "b0c28044-185d-41b5-b87e-80d13689b368",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 875,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f12a9112-4052-4564-851f-9cce0917a960",
        "cursor": {
          "ref": "fc579385-c210-4d80-801f-fab7019f9172",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "42c7ce95-b648-4fdb-b85a-7a045582b5e8"
        },
        "item": {
          "id": "f12a9112-4052-4564-851f-9cce0917a960",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "a138598e-5a69-4a9d-90e2-d4c87daa9b88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 872,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42070468-2b20-45f9-8be3-b8dce582a97b",
        "cursor": {
          "ref": "da47f3c5-47fa-45c9-ab6b-cb59f9086581",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "df524209-bd08-489e-9981-c1e94591758e"
        },
        "item": {
          "id": "42070468-2b20-45f9-8be3-b8dce582a97b",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "9426f7d3-79ae-455b-8865-776524e64bdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 838,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a69770d-301b-461e-b309-0096df12123b",
        "cursor": {
          "ref": "54cc2401-b2a1-43b2-9004-f2c0634224ad",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "b4ad23aa-fb0d-4e9f-ae7a-e6f48e689042"
        },
        "item": {
          "id": "7a69770d-301b-461e-b309-0096df12123b",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "1d511a8d-59ae-4498-86bf-5a21fd0affce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 852,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2bde29a-4d54-48a6-a871-c41451ed840a",
        "cursor": {
          "ref": "089a8b84-6a17-412f-a6af-88253b372d40",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "f8500c16-591f-46f7-8685-ad858475b323"
        },
        "item": {
          "id": "f2bde29a-4d54-48a6-a871-c41451ed840a",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "cb873aea-241a-4611-87c5-61d923b5ec96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 869,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f14806d-9288-4b4c-8365-f25ce56007c4",
        "cursor": {
          "ref": "99e9c329-d7f9-4194-8818-90c7b296cf79",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "44738199-0c25-4464-9ec6-d190394307cd"
        },
        "item": {
          "id": "5f14806d-9288-4b4c-8365-f25ce56007c4",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "940d8b96-7fa3-4859-8a03-c9f4a51c0301",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 831,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ace9d05d-13d0-496d-bcfb-698641845648",
        "cursor": {
          "ref": "2e154ee2-8ad1-47de-b8ad-540ea4f46161",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "38ff1ea1-2891-4ae4-99d1-448063edef67"
        },
        "item": {
          "id": "ace9d05d-13d0-496d-bcfb-698641845648",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "982085da-51e3-479b-b4cd-7549b9e75161",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 831,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fd4ece4-9de8-458f-897e-152da588b5b0",
        "cursor": {
          "ref": "dd74deeb-6271-4f61-a6ec-25fbf40d40ad",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "5e49b29e-b856-46ad-8f61-527a27d12e0d"
        },
        "item": {
          "id": "3fd4ece4-9de8-458f-897e-152da588b5b0",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "3b212e68-6eda-4326-8c3d-d661e66a20b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 838,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4907d1c9-48f9-41d8-ae10-5e506af44ff4",
        "cursor": {
          "ref": "ce6139fe-ef70-4de0-b5af-dad5e29a7f81",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "d33a51e3-6277-43a5-9032-2f3e64c9d07f"
        },
        "item": {
          "id": "4907d1c9-48f9-41d8-ae10-5e506af44ff4",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "be0d194c-19d2-4b9c-9374-09c7cd9f10fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 847,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d7f73d1-e04d-4e9f-8bb1-4fe80a4315a6",
        "cursor": {
          "ref": "d291bf52-63db-49f9-8669-fd18c4d5faab",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "f6ff6139-d430-4c22-84e3-654b9cd97b80"
        },
        "item": {
          "id": "8d7f73d1-e04d-4e9f-8bb1-4fe80a4315a6",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "d29e6a43-8fed-4390-aa27-1e93349e5e82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 810,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bdbbb07-d008-4151-ac2c-147f79a125a3",
        "cursor": {
          "ref": "faf8a1e1-c49a-457e-a15d-c85efacaa9f9",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "e707b33a-bc43-4f8d-ad7e-122f7c16c8f3"
        },
        "item": {
          "id": "6bdbbb07-d008-4151-ac2c-147f79a125a3",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "c36fcc07-e195-4036-8d22-defcfe30741e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 858,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f063eb89-4b7c-4492-9d7e-dc8c665a239c",
        "cursor": {
          "ref": "4eaf14f4-4886-463d-9984-00309a86c25c",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "1778c99b-2f07-4a7d-88d6-76ecc58c4e6d"
        },
        "item": {
          "id": "f063eb89-4b7c-4492-9d7e-dc8c665a239c",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "e1921d9d-01da-4d53-bcb6-85599de218b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 822,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7cb7e25-272d-4764-abd6-7fe74b26129c",
        "cursor": {
          "ref": "4db0585e-e377-43b5-bb8e-424effae0c14",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "4451153e-4729-43e8-80cd-622e40f4241c"
        },
        "item": {
          "id": "d7cb7e25-272d-4764-abd6-7fe74b26129c",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "fb4da7e2-bf54-4bbd-b158-3c20f92c53ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 834,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01351868-2378-4608-9fb5-2104116aece9",
        "cursor": {
          "ref": "354955af-7e4c-4e5d-8deb-bde46ae8dc71",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "5610ad87-9487-460e-b927-08528622884d"
        },
        "item": {
          "id": "01351868-2378-4608-9fb5-2104116aece9",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "7c874cdf-6a9c-48e9-9010-697e2adbbde2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 842,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "729fd0f4-e919-429f-ad3a-e72fee7143a9",
        "cursor": {
          "ref": "99d6c3c7-ce56-4e20-bf67-7bd55d78908b",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "1a440d4a-1ba0-4d9f-b0c6-3a9fee5d27e3"
        },
        "item": {
          "id": "729fd0f4-e919-429f-ad3a-e72fee7143a9",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "773ecea9-1f69-49d0-b82e-40195069d1f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 839,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "274906c6-ce4a-42ab-b112-ef64d37bf092",
        "cursor": {
          "ref": "8eb04673-3487-43be-b273-f9a1f73c166f",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "d05bf3d7-88ca-496b-a236-fde0084a097a"
        },
        "item": {
          "id": "274906c6-ce4a-42ab-b112-ef64d37bf092",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "16b6cb2a-119a-4398-9c5e-eb62a26c7eac",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 45,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a625729d-7623-4549-9b26-ccbeedb5dad6",
        "cursor": {
          "ref": "be42b8ea-151d-488f-a7fc-900dbc1015c1",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "70a30188-de2c-4653-a51e-9070a28200da"
        },
        "item": {
          "id": "a625729d-7623-4549-9b26-ccbeedb5dad6",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "271f7bf0-5af0-4465-be2f-82c624a38057",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 636,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef8dfa08-5524-4a4a-8db6-902e8d28835a",
        "cursor": {
          "ref": "c6c1d6b7-ca2e-4504-8ace-a578dc45ce99",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "7758755c-8527-4a09-bce1-ff337703ff3f"
        },
        "item": {
          "id": "ef8dfa08-5524-4a4a-8db6-902e8d28835a",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "cd1446e8-0b71-4254-837a-5effb61c1126",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 622,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9992f80-9640-4698-a5bc-b87d1d698da1",
        "cursor": {
          "ref": "b18f8725-73d3-42ca-bd6e-afb21707a9c2",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "d616fd5d-eba7-4b53-88b4-a1c806355596"
        },
        "item": {
          "id": "c9992f80-9640-4698-a5bc-b87d1d698da1",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "c14223f6-fd9f-4d4c-ba8c-6d6f926745dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 639,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e664a11c-9a6d-40c8-badf-b4fbaa820823",
        "cursor": {
          "ref": "eef1c93b-2aac-4a81-8d20-15d38f4f1c18",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "24a91574-0b28-45df-9f26-5514942f3481"
        },
        "item": {
          "id": "e664a11c-9a6d-40c8-badf-b4fbaa820823",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "ed1a544e-e672-44e6-b2ce-507dbf89039f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 635,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46a2fc57-f58f-4896-95f6-d834a392042b",
        "cursor": {
          "ref": "7c049501-cd64-4ec2-a721-2b8c84f149f5",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "cb7f2112-8e74-452a-8609-39ce5c3aa1b9"
        },
        "item": {
          "id": "46a2fc57-f58f-4896-95f6-d834a392042b",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "61a705b2-6644-4869-88b3-78a0ed2d3571",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 697,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4b13b9a-dd77-4fae-a284-8be71db09a5e",
        "cursor": {
          "ref": "c552bedf-4893-4afc-8089-7448387df8f6",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "bfeb26b7-4d53-45e8-9a93-dd60bfefcd75"
        },
        "item": {
          "id": "f4b13b9a-dd77-4fae-a284-8be71db09a5e",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "21502878-d1dd-4f00-98c2-d95bfb3d6f7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 648,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ec7ca08-fa4c-4fed-ba73-d924d7e785d0",
        "cursor": {
          "ref": "65530134-ee95-4585-9e0d-6191a611340e",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "ce102e08-9160-41e4-b09b-d821f9335568"
        },
        "item": {
          "id": "3ec7ca08-fa4c-4fed-ba73-d924d7e785d0",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "e1138dfb-6a03-4078-8149-ee5eedc5bf33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 633,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4803f0a6-7f1f-4e0d-8c7e-71c9a61c16be",
        "cursor": {
          "ref": "c0564bb6-08bb-4f85-ab21-53a1930ddf35",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "6f8b53cb-5957-4a1e-8ac2-f57b5753d14f"
        },
        "item": {
          "id": "4803f0a6-7f1f-4e0d-8c7e-71c9a61c16be",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "18d3001d-0c77-4e02-9400-267cdc8f4b38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 628,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52948378-3cd0-45ec-8f54-17a0d6bc32bc",
        "cursor": {
          "ref": "3a4254bb-68c6-46b6-bb9b-405fd0716e18",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "7b4fb05a-174f-4be9-821e-a485a5872098"
        },
        "item": {
          "id": "52948378-3cd0-45ec-8f54-17a0d6bc32bc",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "77e8a480-7c2d-42dd-8729-5472b5812204",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5991032c-4fd4-4f9b-a23f-d4af792a244d",
        "cursor": {
          "ref": "b7355823-a1c5-42d4-8a68-fea948bae295",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "4fd54199-47fd-4c79-8cc2-7f90fa724c96"
        },
        "item": {
          "id": "5991032c-4fd4-4f9b-a23f-d4af792a244d",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "0b0b747c-5f11-4641-b4db-99de540aba20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 613,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e34fc3a-ff33-4baf-95cf-88eb56206cb0",
        "cursor": {
          "ref": "3c1eba97-37ad-4197-992f-722c0385f990",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "ca741aaa-1ef9-4a66-96a1-5115d7775a00"
        },
        "item": {
          "id": "8e34fc3a-ff33-4baf-95cf-88eb56206cb0",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "f20bbf47-b852-4cb5-99d1-58c08b20f053",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 645,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b18bf3f4-5e84-4422-bcef-d95029ceb04a",
        "cursor": {
          "ref": "fdef131f-5509-4194-aeb6-3e1058665fcc",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "6cb6979f-bbb6-4326-952c-92fb09481525"
        },
        "item": {
          "id": "b18bf3f4-5e84-4422-bcef-d95029ceb04a",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "222f0811-222c-4a6c-b8a9-b7b7af0f1809",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddf73c35-c973-47e3-a2c8-63c18ee6e8cf",
        "cursor": {
          "ref": "41138948-b4fa-4c3b-bc0c-8c93b527d42a",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "189ffc08-58c2-46b5-a95e-8f93e6be1769"
        },
        "item": {
          "id": "ddf73c35-c973-47e3-a2c8-63c18ee6e8cf",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "3499b4d5-433e-4416-a32c-4546e5ac3137",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 600,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2385549d-a721-44a6-90e2-42666c32573e",
        "cursor": {
          "ref": "a94a551f-7478-45df-84f8-59900a3eb78d",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "e7e1ccc0-7b0d-4e32-a534-0f26f250ac74"
        },
        "item": {
          "id": "2385549d-a721-44a6-90e2-42666c32573e",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "3521889f-abaf-4c8a-83ac-0c62315e3ae5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee9f3876-4f11-4168-b632-06385f568773",
        "cursor": {
          "ref": "86f4232e-ba32-448e-8fb7-554b69d6accf",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "5f24acec-0df8-4a56-ba75-b354b876f4b5"
        },
        "item": {
          "id": "ee9f3876-4f11-4168-b632-06385f568773",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "d20fe909-27ad-4b81-8261-143f76e993c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 646,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fa939ca-b635-40f0-9a5d-14570bfd67ba",
        "cursor": {
          "ref": "77a895fc-4874-4a61-929c-7e389d5031aa",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "baf688b7-8625-4235-ad29-22b722e4317e"
        },
        "item": {
          "id": "5fa939ca-b635-40f0-9a5d-14570bfd67ba",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "b971614b-1115-4c54-b517-51d0339f7dd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 642,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f86046b7-e156-431d-8ea7-53e0a792e61d",
        "cursor": {
          "ref": "40149953-5622-4130-95bc-00bded800bc9",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "b921df8d-b0b6-4915-ad90-72310f7dd4d9"
        },
        "item": {
          "id": "f86046b7-e156-431d-8ea7-53e0a792e61d",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "9676d933-6c20-491c-b175-3f5962ef998d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 632,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1df7df7e-e4e4-4fb8-945d-86942fc25929",
        "cursor": {
          "ref": "92e91f21-9487-4d17-a34c-46ba69e1e3e8",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "25ad13fc-4d49-4ee8-b056-8b5edf942d2d"
        },
        "item": {
          "id": "1df7df7e-e4e4-4fb8-945d-86942fc25929",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "4a9889d9-6c4d-464c-afc5-6d5927eb61df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 608,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c5a5240-d9a6-4357-a159-a840b0fc1292",
        "cursor": {
          "ref": "b41d3104-fa4a-4c37-a3d2-8b0d2d61459f",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "f31f401d-6f18-4447-afac-d2bbf38329ca"
        },
        "item": {
          "id": "1c5a5240-d9a6-4357-a159-a840b0fc1292",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "aeb97ebd-6473-4e39-84f7-6aa9943cb710",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 615,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "447e46fa-5e62-4014-a75d-73efb379b008",
        "cursor": {
          "ref": "d378d4a0-dde7-4475-8db3-c751e702bb6c",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "232ef591-df1d-43a5-b66f-90d8e6ea891e"
        },
        "item": {
          "id": "447e46fa-5e62-4014-a75d-73efb379b008",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "0e8a93d8-a727-4f82-b4e4-150c99b8d764",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 622,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2a93157-1a2c-410a-9fa4-a2cb08e6a513",
        "cursor": {
          "ref": "f432b328-fd31-42de-b164-6bece08a847b",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "56862d70-740c-4b2c-9abb-9900913520e2"
        },
        "item": {
          "id": "c2a93157-1a2c-410a-9fa4-a2cb08e6a513",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "6ac75442-4baa-44d3-8b27-1177992a6449",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 620,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6df747f9-43dc-4d2e-825d-42cbdb7fd4d5",
        "cursor": {
          "ref": "4d50979d-a326-4ad3-bb30-345d8448a23d",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "31c9a748-062b-4618-af3e-bd95087c77f1"
        },
        "item": {
          "id": "6df747f9-43dc-4d2e-825d-42cbdb7fd4d5",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "309ed44c-e64d-4eed-ada6-6250b7aeb43f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a409623-8b9e-44a9-869c-2c6d95de1eee",
        "cursor": {
          "ref": "e01c84fd-5412-4491-9df2-a3deff79cb5e",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "da2e0018-6d24-4ef7-8c2d-eded40966fba"
        },
        "item": {
          "id": "1a409623-8b9e-44a9-869c-2c6d95de1eee",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "8dedf5e0-dd6a-4da0-a599-b5ba2fc2103e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 624,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29f181a9-7402-40df-aefd-e2bda9ad966e",
        "cursor": {
          "ref": "6c5a77d2-0659-4fd9-b5ef-3b0ce2c7e1f0",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "8afae40a-853b-4ece-8282-ab92eb697181"
        },
        "item": {
          "id": "29f181a9-7402-40df-aefd-e2bda9ad966e",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "2d233eff-47cd-4bc5-ba42-70fc3001d41e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 630,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "454051c0-7553-43da-86d2-9ad90d319bf5",
        "cursor": {
          "ref": "c26dd5b4-4e55-4a5b-89ef-c0fead142588",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "22d6b75a-c13c-45f6-84ef-4675ddedd5de"
        },
        "item": {
          "id": "454051c0-7553-43da-86d2-9ad90d319bf5",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "b8910b73-9898-4936-8f06-fdcfd04b623b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 614,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1815b6a-ff7e-4217-b692-680a144e988b",
        "cursor": {
          "ref": "a707ab0d-1b5e-48a2-b193-fd4841f05899",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "f0b2fc49-9006-4f71-bbd3-0044444702b5"
        },
        "item": {
          "id": "e1815b6a-ff7e-4217-b692-680a144e988b",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "9f777ed0-6ff7-4e40-9ab0-2da3a3c3311c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 635,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f805199-6a37-4b25-8f8c-a3f10dc90276",
        "cursor": {
          "ref": "2c0e9cd8-c02f-40d0-a3ec-7a73be27f6e9",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "c75a71c2-6c75-4a73-88ea-ec3cd6fa5ec5"
        },
        "item": {
          "id": "5f805199-6a37-4b25-8f8c-a3f10dc90276",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "01c01138-2c79-43e9-be77-df4ec16cf02f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 615,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32f0d88f-11d0-4679-a4c0-0f58a09ea3f1",
        "cursor": {
          "ref": "655bd0f7-7063-4a0f-8172-f6479727a013",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "f634b98f-648f-45e9-9da0-192a8eb900b3"
        },
        "item": {
          "id": "32f0d88f-11d0-4679-a4c0-0f58a09ea3f1",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "fcc17872-df67-47e9-b205-587b6d3b449e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 631,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60375a56-7f1f-4339-b514-b3d813aa7908",
        "cursor": {
          "ref": "8bccbe08-6a32-42a7-bc30-dffd224068af",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "48dbdda1-df36-444b-ac20-b25c9d20c021"
        },
        "item": {
          "id": "60375a56-7f1f-4339-b514-b3d813aa7908",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "7d828edd-8a6d-433d-8b68-95635dcc138e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 621,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71ad1ca7-51cc-4baa-895d-b3a0ee1a0ad1",
        "cursor": {
          "ref": "9a544284-9d06-4cc3-b14c-ffd6fc93a7ba",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "3769a24c-f228-4ed7-85a1-a94ca78c2d59"
        },
        "item": {
          "id": "71ad1ca7-51cc-4baa-895d-b3a0ee1a0ad1",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "204e3436-e90a-41d6-812a-fa6ca1a5a338",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 625,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68923640-a6ab-4935-a26c-d5d988510722",
        "cursor": {
          "ref": "02dda04d-420e-4978-978d-c9ed7ac1324f",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "0acef199-0a4b-4d28-b169-74850354b1e2"
        },
        "item": {
          "id": "68923640-a6ab-4935-a26c-d5d988510722",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "97b9aaa0-f9ad-426a-a3e5-d845673361fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10f9231a-7281-496a-9c4b-2fa26fbc2f71",
        "cursor": {
          "ref": "f5bbd34a-5178-4728-83b7-ef0d583277ec",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "ca650f22-386d-4449-b95b-0737b32d35e8"
        },
        "item": {
          "id": "10f9231a-7281-496a-9c4b-2fa26fbc2f71",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "c35b1952-4b3f-45cf-9473-115575aad6f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 613,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "352dee0d-0cfb-43f0-aea1-c5781c2637af",
        "cursor": {
          "ref": "9d138c8b-3db5-43b5-9e93-e19e0dd354d8",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "e9103c4a-eee2-4f06-8c8b-58095f2dede7"
        },
        "item": {
          "id": "352dee0d-0cfb-43f0-aea1-c5781c2637af",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "32035254-a768-49e9-8778-3375444cdc0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 641,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "803af4cc-159d-4072-8d2b-c61e9b8c5403",
        "cursor": {
          "ref": "2fca9c9c-1879-4f18-a764-202ad8b558d5",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "56b78798-ba7a-4bcd-87b7-b61777312fcc"
        },
        "item": {
          "id": "803af4cc-159d-4072-8d2b-c61e9b8c5403",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "6471bb3f-59ca-45a5-9617-a76a06d34830",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 635,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "569c0cb9-a558-4ae7-a5b9-68b1faecb2e5",
        "cursor": {
          "ref": "539408f2-79ed-4d7d-939d-5fd194281670",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "83f27bc0-0ef9-4c4d-af88-002e09a76daa"
        },
        "item": {
          "id": "569c0cb9-a558-4ae7-a5b9-68b1faecb2e5",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "9218abc8-224d-46d9-9bdc-19de919f2bfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 636,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f030f4c-3fd5-4c44-a87b-20caf4ff65b7",
        "cursor": {
          "ref": "120720cb-54a8-491a-8bd0-a535a7601881",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "ceb09297-005d-4d2f-aac5-2fe0ecd9a81c"
        },
        "item": {
          "id": "1f030f4c-3fd5-4c44-a87b-20caf4ff65b7",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "dc709f4f-6f94-4dae-a0f5-5bb750bbc7e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08e6014c-01f7-411f-8c80-b4def8776913",
        "cursor": {
          "ref": "9b3fe7ea-6021-4a02-b39f-73b6222285b2",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "37641e19-77f5-4545-87ab-be1d9d868015"
        },
        "item": {
          "id": "08e6014c-01f7-411f-8c80-b4def8776913",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "b4968193-f0d6-4f9b-b2e8-7f7dec331949",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 597,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8bd97fb-aebd-4033-963b-26149c01788c",
        "cursor": {
          "ref": "c2ecfa9f-2e95-450e-bd30-6ca49127dab9",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "d311da02-5c03-4e73-bee7-d83d508bc45a"
        },
        "item": {
          "id": "e8bd97fb-aebd-4033-963b-26149c01788c",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "8d64f5fc-fac7-40e8-b7d9-7046b10dee7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 606,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db7a68a7-c148-4269-83fb-264e32c75f26",
        "cursor": {
          "ref": "94869894-1aaf-458b-859f-bbd217ba2bd4",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "df191651-5071-4882-9f1a-659b6074c027"
        },
        "item": {
          "id": "db7a68a7-c148-4269-83fb-264e32c75f26",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "a7ce6010-2ba1-418f-a22a-ad3394c1bfa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 621,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "128b7fcb-201a-4987-a958-bb4e123442d0",
        "cursor": {
          "ref": "f5122ec6-b860-4291-9eef-9d86eee241fd",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "bb0f5687-cb3a-4a61-b1f9-757510273496"
        },
        "item": {
          "id": "128b7fcb-201a-4987-a958-bb4e123442d0",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "851285db-5bcd-42d0-a93b-82ce24a471b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 609,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e371014e-04e6-445f-bc62-714d4127d9fa",
        "cursor": {
          "ref": "7ddc8d3e-944f-42a6-8ad3-10bb6e7bd968",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "076b3798-5a8a-4c01-9c3f-d1d77a418329"
        },
        "item": {
          "id": "e371014e-04e6-445f-bc62-714d4127d9fa",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "8e7a5471-6ebe-4635-874a-2fc8ebca5906",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 636,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2fba3a1-fb2f-4c67-8321-7f4bfb2bb793",
        "cursor": {
          "ref": "d5e53406-b5b5-460e-b564-e750edfbb59f",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "5451a04f-1335-4d57-996f-1f3bfaf93733"
        },
        "item": {
          "id": "e2fba3a1-fb2f-4c67-8321-7f4bfb2bb793",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "13b2a5d4-2d6e-4f40-83d4-252b0b072d7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 620,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebe93ad5-0059-4ef0-9d29-b3da5adb6b20",
        "cursor": {
          "ref": "cd53e62b-b745-4035-b937-5f21879a628f",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "f169dd75-b802-4107-8b31-4e8f0757d6a6"
        },
        "item": {
          "id": "ebe93ad5-0059-4ef0-9d29-b3da5adb6b20",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "1e27308d-78c8-464d-a6f0-4b86648be025",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 620,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a93ecc05-20b9-49af-93ce-7c0868c39948",
        "cursor": {
          "ref": "b9b8f0c0-a8e8-45e9-a59b-2a31f86759ba",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "e717d4f0-2d06-4907-a7f7-65596fda046c"
        },
        "item": {
          "id": "a93ecc05-20b9-49af-93ce-7c0868c39948",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "e88e75fb-ffb9-4587-a653-af42e2b3394d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 628,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bdce897-8ffd-48bc-a76c-5be775795476",
        "cursor": {
          "ref": "b1a6273f-819f-475a-aaaa-d0ae442af701",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "1784bc79-a421-4d4c-8a1a-956c46a02670"
        },
        "item": {
          "id": "4bdce897-8ffd-48bc-a76c-5be775795476",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "15619c05-05db-431c-a729-f1c5b2d2f477",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 626,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c96b08bd-e6e6-4e5d-ac05-b1ab58cef41a",
        "cursor": {
          "ref": "33c944d6-614c-4048-96e3-15f73f6a5ea7",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "a1f9b44f-781b-4bd1-a65b-096cbe2a3ac7"
        },
        "item": {
          "id": "c96b08bd-e6e6-4e5d-ac05-b1ab58cef41a",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "31d5318c-a50e-467a-bea2-395574c8baad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 630,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fafbe5b-2f07-4474-b3fc-5a16bf99ca0c",
        "cursor": {
          "ref": "4df29952-4494-48bc-b3ec-c036673ad9c5",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "ce95b757-e2d6-4867-b517-f8d03bf5baeb"
        },
        "item": {
          "id": "5fafbe5b-2f07-4474-b3fc-5a16bf99ca0c",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "7a244ca2-d45a-41b4-b236-a9f2bf2b5b97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 637,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1448a4ad-9e77-4a1f-b4a7-2d9b2c89fcea",
        "cursor": {
          "ref": "1e71b966-d51b-496d-9f82-2f508f67259d",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "0bc452fe-6448-476c-8709-19e059812598"
        },
        "item": {
          "id": "1448a4ad-9e77-4a1f-b4a7-2d9b2c89fcea",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "6164f14a-633a-4a6b-afd7-69e35435746d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 645,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de788312-6f36-4fb8-91da-c4af11f0948c",
        "cursor": {
          "ref": "4299860a-1b81-42d6-af47-3d02be6cd3ed",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "8fdd1320-5ad0-41fa-9577-ea7f564e365b"
        },
        "item": {
          "id": "de788312-6f36-4fb8-91da-c4af11f0948c",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "d0f4aca7-9314-4cc4-bcf3-df4ff0c16ac0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 641,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4cdd828-04c0-4c22-a3c6-c279e182a26a",
        "cursor": {
          "ref": "8d380e16-584d-49dc-9104-d8c436ae8daf",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "472b0638-7a9b-46ad-b5a5-c4bea3257e5c"
        },
        "item": {
          "id": "e4cdd828-04c0-4c22-a3c6-c279e182a26a",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "8343b772-96c8-42eb-9397-a3286ee97b18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 636,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a23005bc-7e3b-48dd-b7ea-87fe2a3b6c64",
        "cursor": {
          "ref": "1cb2e524-39f7-4d33-9de9-724e5a708457",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "11feefbe-a69b-4c39-97a7-e839bb4f3285"
        },
        "item": {
          "id": "a23005bc-7e3b-48dd-b7ea-87fe2a3b6c64",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "9cde59dc-801b-4ecb-baf8-cb75da487650",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 618,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49b24ac3-424f-453a-987f-12387c883eab",
        "cursor": {
          "ref": "edfc3fac-f29c-42bc-95e5-7846872da849",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "8efb107d-b41a-4cdc-9c2a-91cf0899b7fa"
        },
        "item": {
          "id": "49b24ac3-424f-453a-987f-12387c883eab",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "fbfddb6d-54c2-427b-adda-7d4768ba4980",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 608,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a283d7b-d048-4727-b0b1-aa17b2a85ddf",
        "cursor": {
          "ref": "8e8e239c-2595-408d-b485-1bd611b57470",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "560d8140-e119-46f2-8586-ac0929d11bea"
        },
        "item": {
          "id": "6a283d7b-d048-4727-b0b1-aa17b2a85ddf",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "2b679183-af16-4607-b473-34c5a405634a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 629,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c2a0b70-b553-47e4-95a3-dde4eb8d57bd",
        "cursor": {
          "ref": "42cac1bc-728f-4f5d-8cb6-f56516a76748",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "7f23b777-3c64-4c82-94cf-28a3a56b372b"
        },
        "item": {
          "id": "9c2a0b70-b553-47e4-95a3-dde4eb8d57bd",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "99a1550a-2e1d-465e-b6c1-d27de5894ded",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 614,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c775bb9-000f-4182-8b3d-926b152b916c",
        "cursor": {
          "ref": "f793d06c-345f-40af-8f65-e4debd12ea58",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "31a9183f-3f35-4a08-8caa-5ef67b1c8a6c"
        },
        "item": {
          "id": "7c775bb9-000f-4182-8b3d-926b152b916c",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "6b4bad3f-29ec-45d1-9025-d544fe425bc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 614,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adf3f9de-ad9b-4b90-b015-ad30f39359ce",
        "cursor": {
          "ref": "854c8ded-9455-47ca-976d-44c44f1022bc",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "70db4b10-0960-4db2-b30d-7593a0b3cfa9"
        },
        "item": {
          "id": "adf3f9de-ad9b-4b90-b015-ad30f39359ce",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "6ef52b83-c584-42b9-9f2f-cc057aab1bff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 629,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f05f718e-22d3-4b67-be59-bfae230044d2",
        "cursor": {
          "ref": "75362b1c-416a-4678-a9e1-70f5e7806548",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "ff031e88-51c3-45f8-a4e7-7a5ef10953ed"
        },
        "item": {
          "id": "f05f718e-22d3-4b67-be59-bfae230044d2",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "07861ff4-8b3c-49e4-b069-268f7ce2f548",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 631,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cda2df6f-9616-4c2c-aaba-4721b0b8470f",
        "cursor": {
          "ref": "3883beac-c8a9-4f24-99cf-91e839a625c9",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "3e54a336-a7d7-4418-b208-91bf9782e6c9"
        },
        "item": {
          "id": "cda2df6f-9616-4c2c-aaba-4721b0b8470f",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "68168d00-a42d-48cf-a164-7a99bb0f2144",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 624,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f0e4472-81f7-4485-aba4-af787b40c760",
        "cursor": {
          "ref": "b3737ad5-eb1b-4401-90e9-0490994e1eb2",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "5e5cae50-f6d0-40fd-9c63-35b9be4da53d"
        },
        "item": {
          "id": "5f0e4472-81f7-4485-aba4-af787b40c760",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "dde91464-9831-4ff4-8c6f-9cb65886f180",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 617,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0d08d43-4b73-4e8d-bc9f-f412a5b20061",
        "cursor": {
          "ref": "5e3200c0-d5d0-4034-bd49-825945275436",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "b94b3c9f-4529-4208-ba33-84fa44efb090"
        },
        "item": {
          "id": "a0d08d43-4b73-4e8d-bc9f-f412a5b20061",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "a9b3bffb-3e55-45c1-9792-06711b817cd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad0de2a0-4691-4d3d-a4fa-055eae42d8ec",
        "cursor": {
          "ref": "8536c789-7e35-4e92-a567-1a1903cc4b97",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "4db92679-de23-44b8-ae91-0f95b4208d5c"
        },
        "item": {
          "id": "ad0de2a0-4691-4d3d-a4fa-055eae42d8ec",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "adccc8c5-cdae-4dd1-8cb6-098ccbd78f0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 621,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3767443-e80f-42fd-8734-405f66b03593",
        "cursor": {
          "ref": "14394683-510c-4e05-bd0f-81dfa1dacaf8",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "195068d6-c770-4ce1-8061-1c82a037120c"
        },
        "item": {
          "id": "c3767443-e80f-42fd-8734-405f66b03593",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "da4cf7f0-8d53-4b7d-893f-2f8a0488f1df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 619,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9eb3c69-bb5d-4da5-80e7-6b8560fb58f0",
        "cursor": {
          "ref": "cb6032bf-e8c7-4783-af02-9d3fea99b791",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "34af7d64-3c3d-4f7f-92f6-997082a0af2d"
        },
        "item": {
          "id": "b9eb3c69-bb5d-4da5-80e7-6b8560fb58f0",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "7e1c1db9-a7a3-4778-b94c-904bfe324c37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 606,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e05d640b-57bf-4676-a607-5928fe802706",
        "cursor": {
          "ref": "378e424a-2179-4e62-a394-f1c43010187a",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "c92bb08f-99cc-4503-95b7-e32363451f63"
        },
        "item": {
          "id": "e05d640b-57bf-4676-a607-5928fe802706",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "4bcb98ae-6471-4b5e-b803-1f456a5356aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 630,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82f34a3c-15ab-4a84-b761-03a32310c312",
        "cursor": {
          "ref": "61b234db-fec2-4e1f-8a16-33726d7738c8",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "a9d52e12-68ba-4025-9e9f-a5d824453edd"
        },
        "item": {
          "id": "82f34a3c-15ab-4a84-b761-03a32310c312",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "e2111256-51ac-413b-af82-3e5e2a0ce38e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 619,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cccc04c1-247d-4288-818f-820028b7c3ac",
        "cursor": {
          "ref": "6aef812f-3def-4395-a68b-ca89a90a714c",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "70051980-aa3e-4669-b49f-04a1e34fef9e"
        },
        "item": {
          "id": "cccc04c1-247d-4288-818f-820028b7c3ac",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "e76a905d-af22-4371-86ca-c8b3e74ab283",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 617,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1148849-74f7-4bef-86ef-938c96872f60",
        "cursor": {
          "ref": "4917260c-558a-4dd6-921e-63ec47a4c2b4",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "7b00d8c2-eb99-4d15-b10f-2bfa0be1555d"
        },
        "item": {
          "id": "c1148849-74f7-4bef-86ef-938c96872f60",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "53d6468d-343f-408e-9eca-4651951038df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 627,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dd79e0c-23d7-4cf8-aa97-b3e8738a3b69",
        "cursor": {
          "ref": "e3502f4f-dc8f-45e3-a25f-6d13f86c764b",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "9618ec16-3f23-4d95-95c5-8559f1759a42"
        },
        "item": {
          "id": "3dd79e0c-23d7-4cf8-aa97-b3e8738a3b69",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "d18506af-caaf-45ad-90d7-db46e885783e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9624a02e-502c-450e-b948-caa43e7ea7cc",
        "cursor": {
          "ref": "7733a2f9-d7e3-4d0e-a42c-7d721e978bf3",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "25a44874-134c-439e-a652-5aed28fd0c64"
        },
        "item": {
          "id": "9624a02e-502c-450e-b948-caa43e7ea7cc",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "e0072c3d-ea14-4e9c-a8fa-8b62c1c45e63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a86a3f70-985b-49a5-a853-bfc364a66ff9",
        "cursor": {
          "ref": "a4dfbfa0-c930-4eb6-aecc-1ba2bd66273d",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "08e18b4d-22af-44e4-8d08-718dbb28d327"
        },
        "item": {
          "id": "a86a3f70-985b-49a5-a853-bfc364a66ff9",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "3c930ff2-0cb4-4f7a-bccd-422c259ef8db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 617,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e263bf20-811d-4dab-a586-bed8ab17cc58",
        "cursor": {
          "ref": "0230bf47-bf5b-4ff1-9fad-31d3850632a5",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "39573ccc-fe74-436c-bbd4-ad813cf7ead8"
        },
        "item": {
          "id": "e263bf20-811d-4dab-a586-bed8ab17cc58",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "e81c3bdd-ab31-48ae-ab8e-87a6484ef7e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 637,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "239e7df7-552f-422f-8bf6-576568cbdebe",
        "cursor": {
          "ref": "944aa282-568b-43db-9ee3-f77c8aadbcb2",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "35c7dcff-1b41-45c9-a3d2-574ff8eea4be"
        },
        "item": {
          "id": "239e7df7-552f-422f-8bf6-576568cbdebe",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "7fc5dbde-59be-43d2-81af-6c6fb47cb8ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 633,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caa45ac6-997f-4f42-815a-9b744d145945",
        "cursor": {
          "ref": "f5a1ace1-cf18-49f5-864b-abb0a3e274b8",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "ca3b14ab-4fba-42b2-a479-9040431d3e43"
        },
        "item": {
          "id": "caa45ac6-997f-4f42-815a-9b744d145945",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "d9c22716-5789-4e7e-8002-1b01593d6da2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 630,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42ce1f28-0b1c-4fa2-a2c5-4e98fb57647b",
        "cursor": {
          "ref": "fb7ab2fe-74f6-429e-9c06-e9fc2b490ce6",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "e98dddcd-4acf-4de3-a81f-0b9db1b39829"
        },
        "item": {
          "id": "42ce1f28-0b1c-4fa2-a2c5-4e98fb57647b",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "fda25575-3017-459d-bc85-b4f00833466e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 608,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e80369b8-07b9-4d7f-9f5b-e16c94c6bedc",
        "cursor": {
          "ref": "6b1d5491-8ed6-4465-ae54-a2caa379b27c",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "2803ddea-de99-4eec-97d1-eb833a615a9d"
        },
        "item": {
          "id": "e80369b8-07b9-4d7f-9f5b-e16c94c6bedc",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "2cdc34fc-1594-4ff4-9b57-60c7eddb9bb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 591,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "158a519a-aea1-4320-bf7c-b2027a08e95b",
        "cursor": {
          "ref": "dd84e5f5-0660-4e80-bff2-d577871af946",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "5e0f3c74-f82d-4aa7-9483-eba8c37dfd25"
        },
        "item": {
          "id": "158a519a-aea1-4320-bf7c-b2027a08e95b",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "e3881316-0e2c-4d51-9107-69b60781ddc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f546c59-631b-4578-b83e-967e888e0a3f",
        "cursor": {
          "ref": "96f6b64d-d28b-4a37-90d2-141850c86ee2",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "4c45d853-f1a8-4cc9-aea3-b07c3361d1e3"
        },
        "item": {
          "id": "2f546c59-631b-4578-b83e-967e888e0a3f",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "a88da18a-c8aa-4eb6-ba22-12738897dc5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 610,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9df34d6-f130-4197-ae6e-6d7fd69fe42b",
        "cursor": {
          "ref": "10d308dc-a763-4fbf-9c0c-a89fe2645138",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "a00480e5-8866-468c-a743-a3b4cdc257a1"
        },
        "item": {
          "id": "f9df34d6-f130-4197-ae6e-6d7fd69fe42b",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "0f582e0b-1da0-4db6-b791-1eeaa5364874",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 626,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "927e5900-ab03-4cb6-8bd6-63d4405a29b1",
        "cursor": {
          "ref": "98848ba2-8fda-4dc0-b85f-e40b0550fe2b",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "9a8b262c-6972-45fb-9257-ed1274b8891e"
        },
        "item": {
          "id": "927e5900-ab03-4cb6-8bd6-63d4405a29b1",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "a5ee6ff2-0992-480f-9df2-58ff9b4595fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 633,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a366753-f06a-4721-8bc3-c91af9ac355b",
        "cursor": {
          "ref": "cccc1a15-b1d5-4a53-a34c-34ff53c134e3",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "08f5855d-e461-4bbe-a267-75c1c002702b"
        },
        "item": {
          "id": "9a366753-f06a-4721-8bc3-c91af9ac355b",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "bed90d02-346e-486e-8c54-0eb0187c473f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1933b1ab-d974-4967-90eb-882962a088e6",
        "cursor": {
          "ref": "8d7f69bf-e56d-49f8-9a4d-fb70b991e937",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "07024641-91ab-4671-860a-e9fed654b557"
        },
        "item": {
          "id": "1933b1ab-d974-4967-90eb-882962a088e6",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "a2d7c281-db5c-4e62-adb6-2d4cd5c1ad5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "335ff9ad-9c90-4573-96f3-64ca1fe657b5",
        "cursor": {
          "ref": "e67ba6b2-dfb6-42ef-adf8-f7b1048dd64f",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "fa39579d-d262-42d5-bfd6-07031fc0e749"
        },
        "item": {
          "id": "335ff9ad-9c90-4573-96f3-64ca1fe657b5",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "0ec7f577-f28d-44e7-b4f2-46dabdb14814",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 626,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8494538-779a-47c7-b906-bd16acfe2139",
        "cursor": {
          "ref": "98b7643a-4e88-482d-9556-a65a71310008",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "130b21bf-7a9d-44c6-a944-4c58450205db"
        },
        "item": {
          "id": "b8494538-779a-47c7-b906-bd16acfe2139",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "74bc65cf-399e-4292-852d-5e3c3f8ab63d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 620,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f4f3a1b-5444-4599-b524-3c338ca7bac4",
        "cursor": {
          "ref": "b1f63a1d-bf3d-4116-83fa-6a40cb26f62d",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "226ebb21-1a6a-4219-a5f8-9d89166a17e9"
        },
        "item": {
          "id": "5f4f3a1b-5444-4599-b524-3c338ca7bac4",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "9f8d3da2-986c-4059-8a67-074b81786eab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 626,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "513c7f0b-273d-4bc7-9657-4fae5a6a4d4c",
        "cursor": {
          "ref": "a895df02-1780-4600-823c-7a9ddf919585",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "5bfd12b1-2b21-4c99-9a77-cb6ceb15cef6"
        },
        "item": {
          "id": "513c7f0b-273d-4bc7-9657-4fae5a6a4d4c",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "b4e63a49-ee1b-4128-9c94-414bdd107485",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 614,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1df6f1ff-6761-4c9d-b2eb-6dea85ad83dc",
        "cursor": {
          "ref": "994ef70d-ed44-4a9f-9901-5663165d4129",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "e6e51482-2158-4dd6-9183-25f25c337651"
        },
        "item": {
          "id": "1df6f1ff-6761-4c9d-b2eb-6dea85ad83dc",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "e68b0235-b298-4faa-b256-4fdcffa5f70e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f38d17f2-b4e9-4c65-a986-8c3f1f1d82ad",
        "cursor": {
          "ref": "55153769-e721-48a5-a638-12ace2335231",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "20fd73ff-5303-4fa9-9e40-a5be455c3649"
        },
        "item": {
          "id": "f38d17f2-b4e9-4c65-a986-8c3f1f1d82ad",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "a47eb009-e10d-460b-a527-98ba2eb4af5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 609,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f29f9a4b-4198-4e17-9169-b4e38a920349",
        "cursor": {
          "ref": "8cf67007-77f7-48c2-bf92-fcfed3a45a2d",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "a745da24-ceeb-471b-a006-9f692496d1f9"
        },
        "item": {
          "id": "f29f9a4b-4198-4e17-9169-b4e38a920349",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "55017604-1623-4f35-ba4e-a88db5637607",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 633,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b2cf9af-1257-492c-a95e-432f6a0b90f6",
        "cursor": {
          "ref": "20f9718d-9f9d-4857-8f6e-a7497661aba6",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "6e6110bc-be29-49d6-b232-ae1bcbffd6ed"
        },
        "item": {
          "id": "4b2cf9af-1257-492c-a95e-432f6a0b90f6",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "c351bc71-c1ab-4970-98fc-de8286caa118",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 635,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aba7a28-e419-4280-99ce-f2381274f8fe",
        "cursor": {
          "ref": "2ffd212f-d5bc-48ff-8956-c9303ca08cb1",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "22aea36d-ca47-4dd1-b5b1-10b3e632bf66"
        },
        "item": {
          "id": "9aba7a28-e419-4280-99ce-f2381274f8fe",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "6c09525c-9982-48f5-97a7-4ac039ed7777",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 606,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46877e23-2029-45e4-8df0-5bfcdf038b25",
        "cursor": {
          "ref": "6148f95d-fc5a-4c3d-b9d2-1fa91b3eaa74",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "6bf0df49-744f-43b9-8f70-392780861f93"
        },
        "item": {
          "id": "46877e23-2029-45e4-8df0-5bfcdf038b25",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "51c594de-5dfd-49c0-80ea-4060eb4be512",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 614,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2f44fd4-a668-48c9-81ec-52ebf5e9c951",
        "cursor": {
          "ref": "8af178af-7986-4234-84d6-b13b1e96be23",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "54ced36a-df1a-4ae1-b23a-68bcbf288408"
        },
        "item": {
          "id": "c2f44fd4-a668-48c9-81ec-52ebf5e9c951",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "d801b3f3-874e-4abb-a4bc-08644f549403",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 651,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e2df7a7-33a9-476b-8ac3-f43513175ab8",
        "cursor": {
          "ref": "dbe04299-62c8-450a-9272-05f2976f90ff",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "cbe26444-a107-4e77-b6ae-fd2460e63a7e"
        },
        "item": {
          "id": "4e2df7a7-33a9-476b-8ac3-f43513175ab8",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "0790b75d-b133-4467-adb0-6a2a18b513ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 636,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2563e060-e9ae-4603-98d7-efbd60765852",
        "cursor": {
          "ref": "19ef1819-0bef-4284-907e-dd2d7dc85fee",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "edaf8164-e1b4-4916-9950-08f5c04efc04"
        },
        "item": {
          "id": "2563e060-e9ae-4603-98d7-efbd60765852",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "1a21231f-2908-49cc-bfa4-6ad206bf6e9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 629,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3167f308-91ab-4888-a6ef-eaa6b0e9af2e",
        "cursor": {
          "ref": "a24c5899-1ba7-421d-a6fe-2ec75a7ca1f0",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "55a4f4eb-4b72-43c1-a885-b7c474dbd8cf"
        },
        "item": {
          "id": "3167f308-91ab-4888-a6ef-eaa6b0e9af2e",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "149b71e6-b632-4af2-a795-24b03f69594b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b86b218b-9fbb-4de6-bb61-4f586655004a",
        "cursor": {
          "ref": "087edc5f-2e2c-4360-97b7-3db3bed285a5",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "cf42d919-3c12-49f6-b258-eddf7d4024a8"
        },
        "item": {
          "id": "b86b218b-9fbb-4de6-bb61-4f586655004a",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "1036c8a4-b03d-4f1e-8cf7-c59aeec26c05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fd79934-523f-42ed-b1e8-2a0d068e4ef1",
        "cursor": {
          "ref": "8d84eb4d-a486-4256-a130-7523d42844f1",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "1e6982f7-307f-48d3-a2ba-c978cecaee65"
        },
        "item": {
          "id": "0fd79934-523f-42ed-b1e8-2a0d068e4ef1",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "5b330bd2-2df9-461b-9936-291608b9e308",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 615,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5e933e4-d104-443e-b3ab-d40bb10114c8",
        "cursor": {
          "ref": "f735af3a-088a-4765-ab18-db57d082ed77",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "ca3eb3f3-6bb4-442b-a590-ab408991b7b1"
        },
        "item": {
          "id": "b5e933e4-d104-443e-b3ab-d40bb10114c8",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "122af38d-2bfc-410a-80d6-5e33dfb65157",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1159527-5274-4465-919b-e566a1a15b83",
        "cursor": {
          "ref": "a69afda9-0079-4061-8a2f-8bdd7a95575a",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "e0bfec75-661d-4198-9c0a-ffcfa8010263"
        },
        "item": {
          "id": "a1159527-5274-4465-919b-e566a1a15b83",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "78f33eff-3004-4b3e-941c-72bc82dbd516",
          "status": "OK",
          "code": 200,
          "responseTime": 718,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fe7f093-1a19-4af8-b6fe-e9c0b13793c0",
        "cursor": {
          "ref": "33218e30-133e-4e99-ac8d-eb6ab2528a83",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "6bd95e61-c106-4003-96ee-94362291f83a"
        },
        "item": {
          "id": "9fe7f093-1a19-4af8-b6fe-e9c0b13793c0",
          "name": "credentials_verify"
        },
        "response": {
          "id": "a9574b05-e076-4e59-887e-8ab4b75d32f4",
          "status": "OK",
          "code": 200,
          "responseTime": 1878,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "d704587f-6c76-447e-a9fc-3383447ed4ac",
        "cursor": {
          "ref": "09cb1ae1-e080-4b38-b201-b69b4d7351ae",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "ab0e175b-f78e-44a0-8876-d6a603453f92"
        },
        "item": {
          "id": "d704587f-6c76-447e-a9fc-3383447ed4ac",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "64bf7e60-041f-4e85-bd43-4c7affcb6a4d",
          "status": "OK",
          "code": 200,
          "responseTime": 1610,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "da9b9252-75cb-4918-aa3e-50360b9f8b23",
        "cursor": {
          "ref": "f5b9e291-13ea-4daa-9556-2d303d300074",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "3b09993a-45d1-44b0-893f-425623532a7f"
        },
        "item": {
          "id": "da9b9252-75cb-4918-aa3e-50360b9f8b23",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "261b34f2-6c89-4e0b-8cef-2030dee0482e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 45,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da9b9252-75cb-4918-aa3e-50360b9f8b23",
        "cursor": {
          "ref": "f5b9e291-13ea-4daa-9556-2d303d300074",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "3b09993a-45d1-44b0-893f-425623532a7f"
        },
        "item": {
          "id": "da9b9252-75cb-4918-aa3e-50360b9f8b23",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "261b34f2-6c89-4e0b-8cef-2030dee0482e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 45,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a07926e-002e-40ba-b5ff-5c9f879fecb6",
        "cursor": {
          "ref": "30d6c02e-d18c-4ab2-92e0-ff6d076b2a07",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "8570ac6e-fda5-4cfe-9873-5c0ef050fed5"
        },
        "item": {
          "id": "8a07926e-002e-40ba-b5ff-5c9f879fecb6",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "5e972a85-473f-441c-bc51-4dafe975c7c1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2054f14-230a-480d-aa8e-3e766c5ab5ca",
        "cursor": {
          "ref": "2adeb0b2-7054-4bb9-ab4a-a8f268aaa6dc",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "080978bf-7429-48db-94e7-45827fed00e2"
        },
        "item": {
          "id": "a2054f14-230a-480d-aa8e-3e766c5ab5ca",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "adf8738c-93bd-4551-8b62-a9cda1d2ce76",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 46,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}