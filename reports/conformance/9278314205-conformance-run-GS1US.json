{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "aeddf00a-7395-4015-8bfd-65910a42b1bb",
        "name": "Clear Cache",
        "item": [
          {
            "id": "96de2b7c-d27d-4b93-b481-0acb1059ed7b",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f7fd994e-cc3c-42aa-b627-f7cfcca0d8b0",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "091190de-a1f2-4b45-814e-4478838e9da8"
                }
              }
            ]
          },
          {
            "id": "4ed31b42-81f1-4781-b8c3-5e9ad4123bf8",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "057c195f-6c3b-4edb-9eb4-d6f29c7b3623",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "e20ee284-a957-485d-9a96-f582dd01b96a"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "ff82fe81-df14-498b-8ebb-3472d766c803",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "6a5e5c83-8a04-4b6e-ae31-27f953f25c1b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "93634669-2df5-428a-8016-2b4b7da81857",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e42f4758-45f2-42d9-b88d-08c75ec89fc6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "54c74877-139a-4903-8f8b-a1142c56e6fb"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "88e913c3-34e6-42a1-b56f-0c2ae1487ef9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "12d81227-50b3-4dfa-ace1-cf2ab0527080"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b539c544-399b-437e-a30b-6ac82e083c84",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b00fe114-6917-4a01-b098-e20e241e9535"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e90d5d44-b3d4-42fe-927f-88a2841bd6c0",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "a60ca60a-957e-4402-ba85-04e050d18acc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7cfc1bc0-8841-4f93-ad41-b30ba98e83d0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ca753ca3-2cb3-42c4-a0ed-fc0f16fd314e"
            }
          }
        ]
      },
      {
        "id": "f9ff948b-a700-4b7a-acc1-938221de8fe7",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "0e2f88cb-01e4-42d6-b2bb-ea27bbdb26ba",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ebe68679-aeb2-4753-b3f9-064cb9bac2ad",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "acb925eb-b1bb-4973-8b4e-06d859051a39",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96577916-ad07-48d6-a2fd-2ef29b84d36b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c959c8d5-7f5f-4fab-b7b4-e8298a2f4225"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a738847-d98e-40a6-b71b-062b9432a851",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "120277f2-0eda-4c3e-bd80-aa4c8e3b62d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b4d21e2d-fa45-4289-a110-f843fe4a5ecc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "524e0b76-43ab-417f-aab9-f167acfca529",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59d06136-f25e-4e73-b402-2224ab396912",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f9e77a83-0105-44b5-bc40-bfddc493e36b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e4eb12bb-2a09-4460-a1ea-559c830f2a77",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4922fc65-0d05-4f4c-a49b-a95b5ab65851",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccd3137a-2ccd-431e-894f-d2e4dbf7fe24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f6f5db69-a5e9-47e7-8333-802a115055ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d44fdfde-ad61-4d09-bacb-03632b438157",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9cda71e-3aea-4617-ba8a-9eb8e1a9af79"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "79e01145-93b6-4def-8118-18169094dbfb",
            "name": "Positive Testing",
            "item": [
              {
                "id": "491342d2-8aae-42bd-a21c-73e6aa427404",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "27a73640-c11f-480d-9f37-1c7fbf0396da",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "db1ebe56-a5df-45e3-8beb-588e2b5c5023"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9d3a32ca-e8a6-4bde-9f8a-75e0b4f8f1d1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "09eec21c-ead2-4e2c-b365-ee7bcf1b16b0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "be26c151-0a62-4338-949f-06f3640bb4ad",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "39ab4ec0-f5b1-4cc7-9847-5af482c44935"
            }
          }
        ]
      },
      {
        "id": "1d7a5256-51e0-4f29-9383-9d2139b8bf4f",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "77c7de20-de2f-448e-8dc4-c970a5a444b3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "671f932d-495f-4e9b-b921-794391e57d56",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "7d1f5e2d-f368-45d8-89cf-79411b558ea6",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1992a18-a324-4c38-ad68-cb6cff14fcbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea9dcad4-efbb-4a1e-9891-bdaf90c64f44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d138c45-f568-4653-abf4-9bffc1f8376c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "459e0460-e91a-42f6-ad1e-9e25c0aa7a4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a65514a-4d94-4a50-92f9-0b8909ae0d41",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7028a9e-0a5b-49cb-8879-e643ed4479f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9686da0-919a-44ea-a67f-8ad2a04570d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d46a7e8-94b8-47d1-a814-8a5124b2eda5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2792aabb-e722-40a2-b60e-06ab13dbbc5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "681acf56-fbe3-4a11-90af-aac214325de6",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ff95dd0-f3b9-4861-9f08-b06cb70ccd8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0eed74c-c686-4bf0-a006-33ee77e5a7f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a33690ad-424d-4207-a8c3-8950db3f7ea3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d46e7577-fecb-4922-b394-227150f35cc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afb8394d-15d7-4aa8-b2ac-9b958abb0ef9",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "305e72c8-d295-430e-9358-b888a1d0012e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae3736f6-b8a3-4002-9675-4c02858172ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46d15028-22b4-4795-a944-827302750b31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8d040f3c-6e9d-4d83-b618-61ce7336cdf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c604c2d-5024-4fbf-a06a-cdf882138a95",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1c61c1d-5ade-49c7-94e1-0bbd08b6d54a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d102ffe6-d7d2-44f8-9626-3a1ab35b908d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc242855-58f0-45f1-9932-ed0671737647",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "68b26d86-374c-48ed-9b6d-3c2a501ba54f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31e8bb1b-3d4a-490e-93f4-1af79ef3b6c6",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b4b35ee-d996-4975-a098-d62bab057312",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a4bd8fc-c76b-4a73-8ac0-72faec7e394a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dbc43a3-cdfe-4b9b-bd34-53cebdede4c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ac81160c-9f70-45a9-ac0c-63bdcccf43d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3484e98-6508-4e30-8926-b9f93c99c5b3",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b7bbafe-e713-4683-9988-31c17cf80e96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3da94077-aa9e-4e03-9bcd-645efe5cb1b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7ce83a7-16b9-4408-93b1-4b5711a94df4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f54ff209-a788-4177-b4f2-86af4c9b76e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f25e40d-b070-460b-b091-c8ef256c5163",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5eac5ccf-5271-46c2-b97e-e9760a783fc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe21554c-dae1-4dc8-8926-5b323183a100"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3187ae7f-09e2-45c4-a7d6-25201d81d63a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7613f564-7178-421e-bea4-1c507b8c5153"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9edc3f1-a92c-47b2-8937-80785e190041",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0a85cc3-ee8c-4f9b-9ab7-bc92433e3e97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "051959ed-5bef-478a-9b06-daa9874acf21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbbc9991-b9b3-4708-89e7-9532f5658e7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cc8cb0b4-f884-4f06-b653-1d2da00d8bb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7924c162-d6ab-4287-a034-9a3a0d63e1e4",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f6071d0-2ac6-403a-8552-1bda2fc51b9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06b68330-5642-4918-8eda-76d70effbfea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b143a71-22db-4ad2-a1f5-64b3082258c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "028468a3-ce5f-451d-8ef8-957dd12ebf2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5f6f65d-b436-4ef7-91dd-b49dd60e7c48",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "405d20bc-a181-403a-aa95-084b42bf65ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ebfc9f8-5a29-429e-93b9-6a9e7dff911f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee4dec05-bcc5-4b9b-ae65-610e538e588f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ce4e4c0d-d513-48d2-8f1f-0846de24511a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e3876cc-b5a4-49f0-ad14-5950196342b5",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1ae5148-91d0-4997-a7e8-30ae0de82f75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b8b015a-6e0b-47cd-ae9a-fd6d26f75888"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e90a9b2e-5b5d-41ec-ae42-924ce276273c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d47058c7-dd14-45af-a38d-7102386dd398"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efa1d106-337a-495c-bff4-79d4d69bca9b",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df77f8ba-f69b-40a1-8a3f-6bdd93c0c57f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c006cda0-224c-46dd-af11-7ea0fda87fb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ea5f7d4-cec3-4e6f-b10a-af4c0dd0f931",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4c9621f7-c049-41d8-8360-0fff08449f31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6c04985-3120-4e76-9f6e-f43310b3c77a",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95d8e02e-c620-438b-99e0-48d682bd0583",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e33681e-cb77-40da-a46c-b8a9dd1047d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64990d3a-9bed-44fa-83e6-d8c9ee7f1b0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dcec575c-1edb-43dd-bda2-adb8795b541f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08beab96-309c-4bf8-82d7-b7bd96584098",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f15f793f-3225-470f-9383-18dbe74188f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb2fae58-e718-4c7f-94e4-5f805b6b5c80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90cc64ed-c1e8-43b2-bf13-a0e55d585329",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "26e9c7c1-9e29-48bc-a3ef-50b662a28a1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "052e5e86-8e44-4843-9de8-94f81991c71c",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "766b84d1-bae7-403f-a7ae-670fe73f40a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9862ba5-01b7-4d8e-8626-36835a91c378"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cddaf585-4a32-4f3a-aabe-5f2b4abea2d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "def3d868-de43-4bfc-bda2-d0bd86da2d30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a09ae03-8983-4327-8298-98e23c4a2bc8",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83c8e7e3-0ea5-44b9-9a32-09de3583d098",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "634b6bdd-310f-4138-9857-fa44ffd938c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53c4704d-1d18-4cc0-9d07-0e8aa6d81534",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2bfcb2df-f150-485c-8c9a-6a73a82d62b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb4898bf-a742-4208-8859-7a0dd83d43e8",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92403119-3c5d-43e4-a3b6-7186764d5824",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "207c9a2d-69b5-4fb8-9eb3-bed1459bd390"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1e28308-bfac-4143-a306-b125c514896f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "7459f72d-3dfa-4fb7-ab57-4cfc57a4a673"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee9df990-a16c-4d55-a075-919863ecb81f",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26edfd8e-03ae-468c-933f-a6adb6ea9f58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4824b8d-24b2-46aa-9132-5f33b3f9a8c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0530ae4-9489-42c2-8218-7b19b4cc5ab7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2317b4ef-0c38-4b33-9e02-cbb6de388a5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8581e3cf-bd31-400c-aa2b-2fa0473d9069",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8597c8ca-25bd-4a37-88bf-f3cb777caeaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1140876-bafc-43c4-a68e-a2381ec35cfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1209e4cd-face-4ffa-bd84-4a9c7cb2564e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ac10880-dd99-4469-8807-96b9905dfa75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5909b539-6332-4801-9158-269866331241",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ee0b24b-00b9-47c2-94dc-87adbd26dca7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91fbfa46-e23a-436f-9daa-9dac9cb58307"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3ba2a8d-177b-4e80-af3f-95c8b535b5a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "21b3b54f-8ccb-41ae-9ca8-51ed1deeb5ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e109920-a90b-4942-8086-23ad6d4e13c9",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "676a0990-ddae-491c-a393-7b06cf7b4143",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a946d721-cd3d-4e0c-a06f-ad4520d296f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ffcbbf2-9fd5-4578-9e50-9e642fd61994",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "24720ef0-74bd-45a8-82bf-98825dc6d426"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a10046a0-b730-4581-99bf-8f6eae6b501e",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32cd12bc-9737-4f15-bd22-1e31f3760738",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8742acb1-f7e4-46dc-bb04-eb2156da025d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23ac138d-f335-40a1-9957-b36b44003494",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fb1b293b-3f3f-4912-8857-8c304bb0bf9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec075f08-8d35-4809-9a28-ea1a97ae83b4",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "383805e0-3614-4709-ada6-2b962263ac8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b6c9f5d-3b3d-4bf1-8e54-b30d507f0114"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6acbc584-e979-4db5-bbc7-e67ca4a0e4fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce28a5b4-34c6-4e53-adb3-d0c8577d4c61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4473f910-0779-4579-a5ab-795df0ec8ac8",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dbbf06d-679a-407d-a536-c3aa56c90252",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f3b368d-770d-4600-89c2-a383dcd4377d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e2cfc36-17c5-49aa-b461-b32418ca28d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "422cb70b-74a7-45b6-b3ab-94d4cca424b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b437973-2ffc-4c0f-99ad-00464f3069e1",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a717a44-eb6b-452f-83e6-f4fe441490f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14c99f6f-38bd-4ddd-b4c5-22439d9e355d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e604201-a5fd-4fe3-bb3f-57eeb315cf1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7fb71264-78a2-465d-a9e2-7ed7498df842"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9a24bd6-bfe1-45d5-a85e-2488c2ff9e41",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "278be46f-2413-4e77-9641-f25adab5d3d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f2dc4f1-c574-4b7e-9ba3-8ea8fc833638"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e998bac-5a42-43f7-9f4c-336444c7187f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "48d39e67-ec91-4a14-bedb-352e9a393b8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d568c37f-6508-453f-9d29-10847bd9a9ad",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f89260c-34ec-41b8-bd2b-157f1cb3e468",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f38986f-bd66-418b-a82a-c55cfee78086"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d670f5f-bd4a-4058-ae9f-3352c712e404",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2da38459-f0f2-4a7f-bb6f-5f61db178a50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e301cb60-6835-4683-8e50-a8c600fae80b",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d7228f0-f76b-40c0-978d-918537f71ac7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfba73c8-2d6a-4bf1-b07b-8c7f57434180"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b635d3f-601b-482f-bf2e-06f030b1c548",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "940f8c1d-a754-4f29-b7a4-fb086f273b15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47c2400e-afb6-4773-81f8-5e1f0a9e92ca",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c298d412-672b-417e-a4de-9eb73fccbe6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49c7e04e-2e6d-41a5-ac2e-a7e52d2b3864"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d56da02-cbbf-4e8a-90c1-fe471ea3c149",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "f33382b8-f0b7-4d2b-a9b2-270043dc44a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54e16766-b997-4cfd-a5bf-de2fa3e8b417",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f405c828-44c1-4fb1-9ed0-e1b753857794",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c50cace-c0a2-4ec6-b117-53a0b420e007"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73042ec4-a6bc-4135-acad-5aa3c7785c02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ccb3b5dc-0b77-4e4a-accd-8e70f57b7fd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9206889-cc3e-4329-aa20-df314baf1d71",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "729d1d32-be50-45ae-8bf2-54ab3b8d5d8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d0a6570-ae44-4c19-9a2b-5000c7f221bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e273c749-a542-482f-9c39-1af90daa910d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee3d4838-cb1c-4e89-bb30-292a5e0f0339"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdad0e1a-623f-4d27-b291-573e402e314a",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0cbda66-8c49-46ac-b8c4-d6758c22f2fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "943b9826-1eeb-4bf7-ba0f-96cf0c5ad5e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f440fb33-680d-4fd6-9a31-4bf1daca5821",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "40e5a0a1-2721-449e-9a05-1f92e39bf7ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b44a6f68-ce04-4ce1-af0f-a8f712de6521",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3630d135-f27b-4ba1-bd61-b6451ab92cbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d47e9e7b-415c-4409-b774-a80e1fb9f503"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd69ff3e-d323-4840-9853-bc406ff5a823",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "de419a9b-1aa6-4a3f-93a3-2a76e50b7d62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9754280c-e4e3-41ad-80fd-27fca56061d5",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b28a9709-991b-4db6-8244-7279b7f60d4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c01ebd2-aa5c-492e-86d3-71323ffb8f12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b64ab036-9a5b-485d-a616-af39613fd388",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "e7bbd3d4-1d08-4f0d-8cc6-1eee53325dc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4684827d-e810-4042-8c43-54fae1b72079",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d08e40b7-e17e-4254-a08c-f68eab280a06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "026dad66-a673-4140-a44d-412ce53f1ff1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78f8926e-ad56-4ce5-b146-f0ffe18c383d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "24998598-d294-4cac-a8ff-4a1518aee4fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d313c96a-10d0-49a1-b268-a4e76cc44ebf",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75fc029e-faf1-4ec6-a40c-2129928fb918",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11c7082b-1a46-4143-b0a2-9b37fb714576"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb371749-2e54-4d05-b14c-1edd11722440",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9accfdb0-25b1-4c31-88ce-37d590078c3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "027b4f85-bde0-4448-9798-c3b5da0b4fd6",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a8b9487-3b73-46b2-af68-ad9a95788fcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfba33f1-fb9d-4143-b380-628c7cb0dfa7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b324617e-5e21-49b3-8201-ec894f6b83c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d5f761db-bd8b-43d7-81cb-1653463a24cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "265ab2f9-a034-4eba-b3fc-2111d3f44d22",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91415973-a8b3-4f0c-9486-33d71a3dfda8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9ca18b8-11e2-4764-9df4-7439ab2f14e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7d6d3db-7572-4c6d-825f-995c81d30068",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7d037411-c8f1-4e5f-b1c7-51318ae92c33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7944686b-b7ba-4b8c-b02e-c94bc205f7e8",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f96f8ec6-b933-4327-aea5-1e0614b70f0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d449ced-d75c-40cc-994c-4429f99c248d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90817ef8-7822-4b1d-b1e9-f51b9e4907c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c7be100c-a9a3-40b2-8359-dec8442acd68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9587cc2e-c476-4f8a-a638-7a5d8390d1ee",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b4d7e24-5471-4361-802b-1e5dfcad1374",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a106ee60-9561-4db7-9e84-bdc41b5c16f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6dbfc15-a64f-4fc5-a144-4b87a7eb3ed8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5c1c8564-ac94-4ed9-b10c-eaa4f2ba0f3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99f2ca93-83ce-4f49-bba9-2a4febb073e0",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "017169fa-9075-4701-b98a-112522974526",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d58271cc-6366-432b-8927-83a045ba2289"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1bb551a-f362-4dcd-a942-7a51a759977e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "22a312dd-6397-4d81-acf1-e44452e61616"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cb450b1-8b57-4893-87d2-7ee78bb66c3c",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de05bcb5-664e-48df-8bdf-670089a27e48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b090a96-37b6-4119-a3b2-072c8d3af916"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "201e5a30-2de6-4440-ac2d-a09dbb846f8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "0664e897-ae46-44ef-b9b6-c0a1fe270182"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d07832f-5db7-429a-adb8-eb04a1fbaa12",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76e06443-4b61-4726-83ea-5f2460deaa9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05281f86-f277-4f6e-9ad2-3245eb6f4e14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa951bed-b23f-40c8-9cfa-e41e139f8d60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "ebe405ad-5b55-4ce8-bf9a-b30da9299612"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83e53e56-1484-403a-ba69-a1a42aab3b1e",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b313f6c6-bfd2-44a2-9228-165bf1628564",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4865cbd-b28b-4398-8853-5416603d9244"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7f20811-3c08-4879-b100-84d84a422c77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "71e219fc-9dad-4e7f-88cf-799b67d2cec1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b4c496d-1bde-4346-89a2-002c1ca33e77",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6089b65f-f39f-4088-be6d-b4415479e231",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73568666-b4ec-4f12-b584-d2c4080a7543"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90868f0a-5768-4e44-9c7f-4c8a6e190b5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "42015144-9b1e-422f-83a4-deeb7a68148d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72e6ba8b-57ff-4243-ac2a-4cb5ae004ecf",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "180fec25-60e2-4750-b475-66bf4cd01ec5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6169681-a554-4c90-ba3b-61f46236333b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fb11842-c491-4bf1-919b-911f9f7450ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "87a05f18-6b28-4c4c-a788-1719a2594e06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0733b6d2-f18e-4351-b718-375444a8acb9",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95cea232-d2d2-43a0-8231-d9d71191c0d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e7e5ca1-c3fd-4879-be51-c128b2d8251d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "037728a1-4b21-4e88-a9bb-4dc08e019793",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9200397a-c50e-4fde-ba75-2064d46a5197"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b08aa17d-e1ee-46ca-a232-aa095d9256b1",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7701f0cb-50ad-4a23-bb8f-4c2da3dfd2d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d16110a4-ad2e-48ec-9b20-46a99ff8dba8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c13073d-2828-4172-80e4-5cb7b1a75737",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fcb950b2-cbcd-4dba-8a2a-c5f652ac79c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "592c2ba8-6090-4708-b83e-f68d4903a1be",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8f14095-a09e-40e7-bcb5-76985a8a6c6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d0ef3b9-2a6b-4aa1-86d9-0e5f9e7c293d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "121fa555-ed1f-4ccc-9e21-ab5d734af196",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "33cf1861-3c18-4073-9d30-742bd7dc031d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d758703-c330-49c9-b8c7-405f74752f15",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae1c6801-9f0b-488a-b1ef-f3a46dc5bbde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "509aec6d-ebc1-409b-ad0f-9baf9dc08c53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3179448a-9406-4e60-b4c4-23a950312b63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "1fd10394-b5aa-418c-8c63-ff634f744d59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15de917e-3834-4677-b840-061b211737fd",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21e8709e-8321-44e8-9289-0e5ad830ea73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd9f339d-ebf3-415a-b922-9866208bdd87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0605b17a-4b34-4c9d-aadc-71225ce8caa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a33d433-1bea-41de-9feb-f012f87abb09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e159d251-00a6-48dd-9fb5-3afbd3d2ee8a",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9a8f6c0-ba53-4155-a645-3985c04dfdb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01d6e09d-dbad-4830-b067-6a14d4e95623"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a92fb833-2cbe-4af8-afa5-4a8d4146f4a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c82b431-0f53-40d4-b322-8a86333f4d0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9233765b-cdb8-47ce-8a5a-d65cf0ba5b41",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b479a96e-e54f-4bbe-a17c-41e9e6ef3bc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8ee2ff1-364a-4804-baf7-2a1d8244f3a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad2a3174-cdf4-4c54-aa1f-17c6b78c0511",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2dd186df-0787-4107-86d4-ac01392b1ac2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d68c0203-b4e1-45a9-9661-25e87a6d0e7c",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee49cd6d-739c-4042-ad3d-30d8fb16270f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "295174b7-0c78-4cc6-8270-a3de3b309c28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fcf79d7-c1e0-4268-a429-d4e23b0d87da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "668272c9-e1cc-4c94-88d7-499e892cfe3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a267025-f83f-4ec9-9831-8a7ffb241133",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "733aba8e-4434-401d-b705-15f7c59fdb7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c7e117d-ae50-4d8d-a85b-bcb82450666c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09d43cb4-56cb-4306-9a93-a1359e6e26fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "8ef1680c-2d52-4710-8826-c1ee50c78895"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5c42290-a70f-49f9-a098-d0d8a165b014",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bbde06e-01b2-4b4d-92c2-4a328e2be5f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67b84cb1-35d9-4f5a-b07f-a4a2ad4e4c73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f37a3fef-0f9a-4c61-8124-2bcfd9743a08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "22ca7aa1-09ee-47c3-ae5a-16ecfa06aaf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c49bf9d4-de4f-4623-994d-f0da31acf092",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3244b6f-ecf5-4d5f-a4d5-5018c40f9c5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6aab0dfc-f446-4398-9214-fcaaa64b635c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "568d8c88-43ef-4f52-94bd-b9070440dbef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "46e5dd4e-aa8b-4714-824d-e8296ca03493"
                        }
                      }
                    ]
                  },
                  {
                    "id": "301fddc5-674c-4a5e-af40-43a37283acb4",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5138f22-e29d-4086-a946-5529ec17e8cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37829337-e9a8-4e17-b5f1-7d6f056ddefb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9bde089-fd4a-440b-85ca-5aa67b6a54df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "fcce3701-da15-485f-b899-f9c72838b8a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5727d7c-b974-4626-a03a-ca40603ec9f1",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c865c7c-0d72-475e-8cb8-42e3f9b0b561",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1e84a62-7d4f-4714-9d6f-54e797f3cd7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "926a9cb8-de8c-48c1-a075-662dd4f38be3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5ee14bfd-aa93-4ef4-b6e2-e85acdf2ad62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "522d73c1-d246-4efc-9ad9-d6483d0c5284",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f903ff0f-aea6-48c5-98d2-7432839fbbb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c6f1ec2-77fb-4570-b486-b61832f58bf7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c7443ed-acd1-4d25-b120-998c6fd721d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "e3b85c74-6629-4aca-8d38-ead31240a9fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35e290c8-0f6b-4df1-815d-06938242651a",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a39cf87-2015-441f-9dd5-3171b79ea8a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2399002-5f9a-4853-a23f-f7fa7a1ae519"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49cd4ed0-6d33-4e84-b096-7913b0df2d2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "2fa3bf98-1877-4a76-bce2-36cb66139442"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ffc688d-9527-41d2-af99-c74c63fb1595",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab7874e9-f989-4014-a5df-cb399c19acd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a14b8d1-aba7-46bf-aecc-f9f8be887505"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64ba1321-ad06-47cc-8a65-26c61f8aeee2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d67e415-aab0-44f3-bfe5-5d080aea1cc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "115100c0-08a5-44ff-8698-b2baceec6c10",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf13990e-cad2-4199-aeb5-e13144c346cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0eb7f4e5-1987-4825-a457-6895449d9aa7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "624cd20d-073e-4ad8-83a9-077eece2a468",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b455fec-0d09-41dd-953a-80376e3ac1f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "492a7946-a744-4b12-a3d5-1e4a1b5ebd7c",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d7b131b-99e4-4918-80e7-bd55593acd08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "beabf77b-1724-4769-9417-9bf2719cdac6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a9755d3-4192-4e1c-998e-ebfdde8087e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb429a65-2978-4ece-852b-68600319d714"
                        }
                      }
                    ]
                  },
                  {
                    "id": "145e9d83-f76a-4cbd-89de-c16bf1fa9513",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5700c211-e6dc-455f-86b0-dd44522873ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "916430eb-a366-45e2-8394-e0e6ff780718"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "def370eb-11c3-4e08-b73c-6d3cb9019941",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "502cc3a0-e859-449f-b357-a934a7ba198c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de04760f-81b6-4211-8601-d553be3424b1",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d6ecb56-0368-4d46-afb6-d7533ac5a4e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a011ec5a-ed36-4952-bce7-37662376b486"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac01b772-f78f-4a5e-92b9-8263110c1c51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "83f9e873-aa63-40d9-9a35-afe901cfbb97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9ac0fc7-1ce3-4d2d-91e9-606861f2952c",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64288e10-bb50-43cb-8391-7176a53ef53b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b90ef4b-8d71-4c7e-a609-6f6f83b96f62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87c06176-d51c-4e80-88bb-e6a0056f8898",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "2446171d-6ac4-4b3e-9adc-85d93a67afc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80e7e871-6e64-4127-a81e-94befcb37046",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca0f0c7a-f130-423a-be02-79776ef11e9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68105aad-55ad-466e-9811-10a11fad08da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1f638ce-fa56-417d-83de-d796ae9fac59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ad76738-9b82-4ef9-86ae-212dbb9083c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d5544cc-349b-48dc-b190-489d0ad3cf05",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02a542b5-fcd2-47b5-bf22-57eb55b76416",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e41dd14-4743-4018-a630-9fb30f125440"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc4ce228-017a-4b07-9075-c283f36fe260",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "93524878-9c83-4d40-b1bd-240444102a34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0af529fe-da23-40e7-a1f5-56e0ef1221e6",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86539613-fe34-4600-baee-262ab571b680",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eded58dd-1daf-4760-9f36-8ebbbdbfc90b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b1c73ad-2658-4ac0-aa2b-76936c62a28f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b42f1ae-cd80-4260-8a53-e09057eca2a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c429261e-922b-44ac-a3d1-73eb1d30844c",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1566706a-7106-4074-a907-7560eef19251",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92030e67-9fc6-4626-abc8-fc7015c20392"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e92f77f5-b5cd-416f-a558-47361806912b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b2757dd-126c-4138-9bf7-02ba41f8b05b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d686c15-2d92-4366-8c07-c9881566c4b8",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39545c40-6239-421a-96ef-238680343394",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e4e8bb3-87d1-422b-ae0e-a2f94a8871bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2266cad-ee4f-456c-904b-bcb40d0f8cbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e27a3370-1ecf-4b72-8c6b-f3d540af8eec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95ffe121-6b03-4034-8b31-5f1c46170a4b",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef70a2ba-f0b3-4196-9aa3-1b6023af077d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad9db241-ba33-4cee-b7f1-4493a7f73f2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c2a6b93-1fcc-4b5f-b35b-e3de5cb8d960",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e08dc9d9-49e2-458c-8f3d-c6a26060f250"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97610059-349f-43dc-959b-44140487d1bd",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c864dd65-a0d1-400f-9ccb-4c89e75aeb0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20472c04-6adf-48ec-a38d-c21ef3203395"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df45e63b-fc95-4a59-b4fa-cd1f131eef8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "268b101a-205b-4380-bc35-b160f3f88b36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aad05842-8bca-4693-b82d-475ed4d1ec29",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41a7a680-d9de-44c4-831b-d6710bfb2ac5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9129c8c0-da93-440d-bb57-6c7b3d78021c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6d64899-7572-40c7-b0a9-3ac9ca02a331",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "762f07b3-b204-417e-b178-2523bb4fd8e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beb42968-a503-483b-828c-8cc3227b31fb",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4165f466-44da-473e-be7e-a8d6106e4aca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e1966ad-55b0-4751-b2bc-6ec22733647b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25d6f658-4aa5-4589-b32c-9754a2ad4063",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "815cf4b7-bd69-4447-b31d-f71f67f96092"
                        }
                      }
                    ]
                  },
                  {
                    "id": "888da739-3813-46a6-a286-2865af8e623d",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "540bd469-8d65-499d-9724-ae36eafe27d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d901608b-4486-4144-b385-da0c14dbaef1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f721feda-3ee6-4037-9f47-c21e4aea4541",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "980ea28a-7038-43aa-aee8-b97626a4d7ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "569e93fd-69fd-4342-903d-15af5aeb3fb5",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "202ffc3a-94aa-4d5e-a980-6a26628a121b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ee5aacc-e09f-44fc-afd3-4697dbd2993f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6554baff-73cd-42ba-83b8-bd508c2dbc22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f293e15e-1e93-4fc5-acb9-9f72f9a038c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc3f788f-0721-422c-8d1d-db0d24f367fa",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d97f3639-101c-4930-ba81-2a15d4e80dee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a7e7d97-4cb2-471b-a10a-78217eea5673"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92f9629b-4989-4102-b79e-8cf0e62f0b88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "826f9a6a-278a-4599-b897-76e4639d9ad1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c5d52d6-12dd-460e-b698-00a37b260345",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bae4cb5-1b84-428c-aa41-48106e4268b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2560e0a-967d-4f4e-944b-8ed588556917"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d401ba8-daa3-48ee-bad9-e97d805ca52c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b2ce9b8-bfd3-4302-bef8-15d6ec7318d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cefc3a88-ab9a-4bd2-9526-e9124a1fb8dc",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f2a6418-6ba9-4e18-af18-bad73281b98b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97a1108a-4497-4d5c-b44c-1a1168082755"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8d884b8-20f5-48e9-9427-24cb821fae01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "627aa1ea-f65c-4cd1-a274-6d781325ad31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6f49090-de38-4d61-9ab3-bf96cd8168c4",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1d2b6ed-7b44-47e5-8c01-554717aa40a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bae143e-a1a4-4882-b2cd-bb99655536a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "537452a5-0df7-43b8-8895-ee9648a56dcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f5891440-df6b-49f8-b32c-88071c06beea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a348ad3e-8dac-459f-8ec6-aa3240e0f971",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "103ba4ea-d253-43a0-968a-5b8b949d4447",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4186355b-cc78-4970-9954-07e8bd7d82e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7c0e7da-75ad-45c1-866d-477aea36bf24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d173175-b102-47ec-8376-6963819e1214"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff396cb1-e7f5-41fd-a7b0-67725f2f7ca2",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "259e45bb-7f8e-4434-8ccf-9ac76e6944fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ece1bf7-989a-436f-9e84-14842e67fe9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "387d1cfd-b36e-4eef-9183-969a3499dae2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "300435a3-bdae-4c9a-98ce-59c6e26b6814"
                        }
                      }
                    ]
                  },
                  {
                    "id": "635796bd-69ee-40db-938a-6ac674f6c45f",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49473c92-06e5-4d61-83cd-8847d511a801",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "222e6c6e-41a1-4c28-b2c0-591c95d52f44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6593564d-905f-4b4f-8f21-b3cba1d47549",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c7111c33-defe-4b90-902b-8a27c03ef7a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "548d3e1d-c28f-4cf7-a734-a9769d4199f6",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba15d318-e4c2-4f0d-85bd-5bb27995398d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8604db8-28af-4a6a-88ee-1b1a3d4ef45f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d354eb08-6339-460f-9a1e-8f55fdca788e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "8bae812a-8666-47b5-9cc0-94580578e959"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f0856b8-7cd7-4de3-a0d9-6d1cdfb16ac4",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3920f766-a801-4385-b9b2-94d5913be40c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcb33d79-32a0-4102-bad1-d63b35c0d943"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4ae36c4-d875-43b8-8f95-80b49119cf6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "03114df0-a2d4-4fbd-b40d-aa788d2fdd5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccfd15e6-ca14-4e28-b11c-6bddf11c1a22",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5508825b-2446-4279-bebe-fe4e007bf323",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a634315-abfb-4bc6-9ce8-c6bde3259160"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06f5059e-4ae2-413b-bf3c-d8f2dbaf8b83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "12cc82ac-2122-4004-8991-d8fbce02a6fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7c1eae3-6465-4484-9854-e8095dbde275",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9074b07-5ab8-4b08-ab3f-d81d417aa708",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d62b0d67-282c-4712-816b-da4f05373e52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d15b04b-e7c0-454f-ae6d-d121823f450d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8e13d03b-e83b-4b32-a73a-07962b510967"
                        }
                      }
                    ]
                  },
                  {
                    "id": "098b4c03-0d28-4457-8828-26b6623f13a5",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c89e9fcc-4c32-40c2-ba32-06a380a2934b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8c006e4-2c81-41ba-8cab-c8c9859d99d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24410064-3471-4751-92cb-09f785b10130",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "f479dc46-8d85-4547-ac58-153759169f39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b799fcd4-85c8-4d15-89ea-44ed27714fe6",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "754a78f9-9273-45b9-8a29-414bb635448f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "470ef032-aa4e-4b47-a7da-8b73d028df95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25816d98-50d6-4ee5-af4a-61aaf93e3779",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "f192c2d1-8172-4fdf-a079-1f1ca8c894ea"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2e8e72f1-c21a-457c-bfd9-c23ff3cb1760",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "dcc5d657-06ad-492e-8f30-9a840ea726e6",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb715f8c-7699-4cd4-b60b-9459d2cc0f1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "15d359fb-c6c1-485f-9fba-e22c1e691933"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "754a550a-b77a-41aa-9a69-7e326c3f9ba0",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4cdf2b91-9505-49e4-8795-1e8d29ee7070"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "29135a6c-a5ec-4950-ab44-53280f49f5c1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bb25fc48-86c3-424d-aae2-52f0c265bf2e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9c96a225-0221-4896-b6c1-3b4050bed345",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "27b86cf4-b5c4-4e22-b2f7-df28543e29fe"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fbf76276-bd5d-49b0-9e5f-c87462c6a59d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bba64cb3-ece3-49f7-ab14-31997be6c82b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "47da43e9-fa05-49d6-b5ed-461e99e65eb7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5fc39042-77bc-41cf-9323-4f93e6e4b2ad"
                }
              }
            ]
          },
          {
            "id": "e8d3947e-d230-4d78-a427-f421975ec2f2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "89d52caf-feae-4ff1-a3b0-60fef76208a2",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "c4dfb1e2-1a73-41c0-a2dd-43981eaa758f",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e521da60-c270-4f17-9027-5bccdf32b3b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "3eb6e5b1-061b-4461-9065-80e0218f1b58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e388d840-f1d6-4027-9233-da09d94a6438",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78adb937-9a76-4b42-8efc-45e22f04599e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "09063973-2e88-4b61-922d-418862919fd3",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dadb64ef-1dc3-463b-a4a2-d1836aa7f2ec",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b9186a97-98a5-4e36-b9eb-6a0695762ad3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2364249a-9cbf-4fe8-92b7-ee49cc8b27ac",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d6020a51-7003-4380-9333-e392216f737c"
                    }
                  }
                ]
              },
              {
                "id": "8ac0f2f1-0fd7-46ee-8adb-a407cd3d6dd6",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f409216e-9d92-4331-b108-153c6c6b1d73",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9a92b45c-63de-454a-b17a-d485d159b388"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fa02f381-c554-41ce-9d55-02f515ec33d3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "cd3e9ddd-146b-415a-8209-7043146f17de"
                    }
                  }
                ]
              },
              {
                "id": "7c878ce5-8400-4c35-906b-e636f6614000",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "71f28404-649d-4292-8f38-5c071a7ab772",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "40af27ac-abb0-474a-921b-5ae898381027"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "014b2215-1f21-476f-98b8-a6ab05ed954b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e1ed840b-cc92-4d80-87c6-102063b1f316"
                    }
                  }
                ]
              },
              {
                "id": "a22fe2a7-82c7-4ecb-b17f-51c762434f05",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1f14105b-1288-4b3d-92e1-d1b6e6b8ef37",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "11af0e4f-f5f0-4e12-9d44-7c142b08f0f9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f4c5d512-27a9-4eba-8012-fc38bc5c71d3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "0717b045-aad3-41a4-af6e-493febd35862"
                    }
                  }
                ]
              },
              {
                "id": "7263bbc6-1f46-4652-859e-d0972305b4bc",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "76fc6066-2fc5-4525-b237-e3b94be120b1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8f183db1-e6bb-406e-8b98-ce36bf5da9d6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "51eedb6e-c507-4c60-b545-935876970e8d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "f4588640-3b0b-48bf-9f96-0f5c6de741cf"
                    }
                  }
                ]
              },
              {
                "id": "b2e0ef1f-575b-4b3b-b4b4-d4d7e59d9946",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2249fde9-1539-4688-a337-d551be300e52",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0ea7b1c9-8bf1-4778-83eb-82b3f0e6597e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "afc654be-7e2c-43b9-bf72-d5064cbeee3a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "74019791-e8eb-4b31-9920-2fe7b73a9ba0"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4ca7a128-981f-4cd2-89d5-7164fe06c3de",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0ef1c12c-aa30-4abc-b14b-1b9512895d29"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "14a23668-19c4-4c58-847d-3103a3954bde",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c51b1b63-006d-4781-b369-8aaf04da8409"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8c7d68a2-2395-4022-93eb-ec5538b90170",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "b2ac2f27-e3af-4c9b-a538-d4b29952eb50"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ce5671a3-3732-468c-80c4-e88dc7d1b803",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9a28ee0f-861f-487f-85b4-415d521e35d0"
            }
          }
        ]
      },
      {
        "id": "e1b73803-cd9f-4772-8f6e-6c87450acb8d",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "9336ca3b-7cfb-44f2-b6c7-7ab55d4fcf18",
            "name": "Negative Testing",
            "item": [
              {
                "id": "52990f43-6a97-4f15-901c-d81298a35c11",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "455e14b8-f6c1-44e4-927b-3275553fc69d",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afb45546-3e36-482a-99b3-87e5ecbf1f23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3fb29c2-70b0-4ee7-af41-db6f30cf5263"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c42eeebc-4fdd-4d92-ba52-a3d3ec46d72b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "b82b81c4-2260-466a-bf25-c80268b88ee2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a82533c6-8de9-43c8-aadc-c0f07d49a064",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5866bc35-89e9-4f4a-ab5d-a47f74579c8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4293da7-93db-47fe-bc8f-403e171a3a87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3256e29c-b2af-46a0-98ee-49c1a3cb6dba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "561af5ac-de14-4f38-a8bb-4c2e2a7ec12b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26618bd9-cdfc-4f7e-a49b-fee3241397cd",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e56db57f-61dc-4814-81c6-2831dc211bc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2975c47-d659-403c-ab70-7a1dcfcafe50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7159395-4be5-4a12-8ed6-3bf2fd0349db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d0608b51-c12e-41d0-9df1-d9fb2a9c8bd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a98c1b3-1114-4c23-b076-3c299068ad20",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05f0e439-c2e7-42ec-a73d-8e247a1437e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa6dae2a-7a9c-4bfc-bb46-29bcdb3d41c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4684d05-9a14-4320-8f20-77f43002777a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "87004093-572c-44b4-bdfa-58e6a937d06e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da7dd18a-959d-4364-ba00-e7ca54320e9c",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f388d1b0-d74a-4264-9dd6-cc0b5467c56c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbdf720b-e7d7-4074-9651-9ec59bcac720"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1737ee72-1b1d-4620-a697-c0af3a3d0e3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4bc86998-0802-4f8a-852d-1f8bda9fcbe9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "634c6f56-cfbb-4221-a771-61101bc2f26d",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9ab09cc-9604-48a2-84dc-e50ff612217e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c82d8a14-c224-419f-9dde-966166378e27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "623a13ee-032b-48db-93d4-f42c78a4918b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "547a279e-a90b-4b9e-907a-11a1a30de6b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "950cfc24-8f94-487c-9a12-762bccbb991c",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb2f9610-de81-43f2-8ada-1dd1f898974e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea0aba9a-3140-44ee-8574-c27c43e7a243"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c254a7f3-82c4-45ed-80f3-e302993241e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "2fd93d5a-db7e-4b3c-a493-03dad44dc3f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a22dbcf-699c-4863-85d6-918599578338",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c29d25dc-1606-466a-843d-3dac6cf13135",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e935c9b-39df-4fac-a07d-7ccd6efec734"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80581c8b-ee0a-4855-b2d5-a03759484b78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "245ac82e-68b4-4991-8e5b-17cd1a4681c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "849be0cb-4fc6-4f5a-ab5a-edfc4974bd5b",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfe40b6a-3a47-4336-9736-9ac9b5b20a9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a83ca5fa-ee00-4d97-b0cd-5b0a11c491ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd63429b-8baa-4b00-914f-09188c3fc263",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "245e5229-1792-46d5-a9fb-a93d7f5fe03e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7f5f56e-3c29-467f-8b08-fe2aeb8891c6",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58e7f610-d59f-47ed-a5c3-378c4cef5e74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c33473c-6a56-4dba-9ad2-ef83338060f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3c327dc-4f26-4af8-97e7-295ef696e992",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d4f7733-ea40-4a9b-9d18-6771cf0c1bf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b839a0ab-e4e2-48bd-bcbf-3e70dc4cacf9",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e385f0a-dcc7-47ab-b786-f17d2f64729f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f26cb13f-320d-47da-9b8c-a651178c8182"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7112bf35-4324-45f8-8bf6-762cd57119a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "101275d3-a0c8-4761-9b42-10e4ea5b80d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6f1e281-cdfb-449b-960c-2b6ccb5f26e7",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3746178f-d084-488a-8925-41006ff00674",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35b4c90c-29f4-419f-bddc-fb552a32e665"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4236c45d-c103-4540-ae85-e1a8a69de3de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "dcfd5fd0-9258-4a80-b380-6932a8ae97a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a73fab7-81a8-4e93-aad8-a0dae6762c7e",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f9e21b9-9368-4c0b-940b-46a419031a7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3f440b0-f12d-4ef1-acaa-f6ff2cfac325"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f48b18b-d11f-407c-b5a2-4be6916cf2d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9279a02-e041-4bff-8f9b-26bb7492687f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c38398f4-6c21-49e3-b1cb-306f8333a631",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec1c0c3b-2001-4428-bc8f-0705372d7a04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25442b5a-24f2-44d9-b3ed-6a33f016762a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9b326f2-2d48-4df9-ab18-943de0916d8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "fedbfea6-c4d8-4d23-8d9d-cf1cb87d274e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b518d24-bda2-4c23-952c-10d754fd41ec",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "903846cb-d880-49bd-88f2-eea77447e046",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "358679d3-167e-487f-a9b4-4f3b4948b48f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae5fe76b-864b-4949-b3fe-df0739f2aef3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "b2f2dba3-809a-4267-b226-d18dfa1b4d5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4f87bac-88b0-4d1d-ac5f-ac7196cb8fb0",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70aab8b2-e4cd-47fc-8b4d-1716e8702360",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4292d0bf-0fb5-4cd4-9842-3810b77a1327"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72e2e48c-1db3-4a08-8f9c-47f2d799a408",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc30b900-d059-451a-b52e-a7ccf62524fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d14bddb1-e27f-4c32-8384-2ec0cc520444",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d89ebf8-1be1-45b3-9423-2298aec3a0d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef299fb8-32a9-4f73-8769-60f680282920"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6de364b-e47d-4adb-8606-d3ce5bd15b18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "53c611f9-763c-4f03-81b2-351ddd69732f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91164553-508f-4b4d-b298-184a0fbb79d7",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43f3b3f7-1364-499e-8973-4f3a9dc0be70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb9b1a52-a3df-4202-9634-5694086f7cba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c934a3b3-3abc-49dc-87b4-a2cab7362da5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b7fb5dd-3693-484b-b16c-370fc2ecec61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a7b75e2-6853-4e5a-9377-da6e37a46e70",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cde1b1bd-3f49-4655-8e7f-cd518193d557",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "326121aa-4e72-4108-a902-62e555656151"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e59948c-af82-4f75-8323-6f29f54789cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3401be32-121f-4e33-b689-07282b101d4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9674229b-f73e-4337-9b45-077378844c53",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0de4abd5-aa85-4237-9538-1622ad46831c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93643701-d12b-417e-9035-6c12b6368c94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b68c690-48bd-4eb9-8585-60e32657e96d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "19607ea1-a076-4ed3-ade4-0994134121a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6795124-9171-4975-be6a-b50fb9aba618",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62c418ef-16e9-4b50-86e7-f3bc24ea1183",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c57d7fc6-c2f6-47f1-b53f-7d8c6500ed42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b116979d-3c50-4bda-8346-19b323befe9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1618e67b-6f8d-4d0e-97f9-7ea5f5398db8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9a47e75-8c01-4b49-a48b-3e85323a09ba",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc8a5ebe-3690-4b45-8041-bc904f0a246f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "569efaf8-92ec-4833-89e1-fdd6ef0372b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ef2a0a2-50de-41a0-be35-ead75b858c53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c035a14-610f-4fdb-9398-ee2dc041f6e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d09afd62-cdcb-4860-a191-45fff63c6152",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e36b50d-ca57-4957-ab89-09629a98ddb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f9da2a5-2355-4146-b4e4-276fe31011fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3c2e316-37f2-4c6a-bb44-13983595c0de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f09e2d8-e7e6-41e3-9e79-a89588d614e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24c2d431-c0df-429c-9a94-57778e2a9513",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82152da4-f3d3-4053-ab14-6cc3350d4079",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ebd455b-53ee-40ef-9f9a-be4d1e642c04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5d2294d-5edc-4d85-a02b-628a8db475f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4dba84a-17b7-40b2-8fd9-7f12458c6635"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41a579ca-8128-4d00-9a6a-73253650fd80",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44bd49e6-a596-481b-8097-68363d658be5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "450f8f5e-28be-49fc-be8b-708393966d55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef48542e-411b-4503-ba22-12313c4226df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7eeacf93-5dd7-43cb-ac9c-ca9382fa9d64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39471456-8b4a-4c22-983e-51875fc727fa",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b678556b-c17c-4f15-b72d-81f8701b6cc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ced9946c-f225-442f-84fb-4c4b2061403a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a46ac07d-e38e-4c86-8359-3ed854bd1f80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "af6fdc52-b6cf-4e47-8e27-5036294df672"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0a4a391-a031-408b-896d-8a13a7c99498",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ec157c1-51dd-4081-87db-11ccbceb17ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "764082e6-42ac-46aa-88d8-7fbf1904b95b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e3b7364-1acd-4a88-9484-f84e74eff8e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "531d24e2-cf37-408c-a70b-33b6bcb094ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d94945a5-2a30-4c0f-b0d4-94e878e951a9",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "548bf69f-8051-4a50-8014-67754dc9d4b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b1b0f47-93ad-47e1-a671-ebfd0f2be8d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa0dd994-36f4-4ad0-b8ab-8f8021479bff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "680e286e-64f7-4c5d-9aaf-8e6cc4a256fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab1d88fd-65f7-4c79-bf33-316470905dd1",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc471742-0ccf-4d45-935f-53588dd2676f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ff04f1b-7afb-4cfe-b514-72aa2bdff53a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "991e1171-8756-4d11-abe9-bb3de8ab4a5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a060040b-d467-45fb-849f-abb573c3a76c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79b90adb-a3b3-4e6c-b6dd-9546cb2f1806",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffb11ab2-7ffe-4e68-951b-216c49f066a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cace2097-8700-48df-b9e7-edaaba5eebe3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e67f84a6-8deb-4ecd-af4e-f2b68bdab837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a25196d-182e-47eb-9c82-a6ae63dd4e82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1a0db0c-21fc-4050-a819-697d130e749b",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7ef7360-0438-473b-b398-24fad53f4af8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54777bc1-dbb8-4b69-8f9a-4cca9eddf02f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b8e5735-baf8-4665-887c-740fce09f1e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f02d930-4598-431b-99d5-9f7b70bcd1e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "298a5dfa-b3d9-45b8-a8eb-3744e5b4e0fc",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59539e43-e7be-434f-81cd-7a76050f85ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5da0147-daaf-4eda-9799-9c98f1dae246"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2e1a28f-9895-4d52-bcd5-3efafc389b6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "144e0d81-3409-473c-8145-2c193235670a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65e1d56e-02ee-419f-9bae-07d3fa7d8107",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0be1dc4-9908-4683-8b4f-f60026c374af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e419dd2-c2b2-4609-8b08-a43561a6a9f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fd9584d-ad7b-4cbd-ae25-c93ab081365c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "585dbc5f-5ad7-4555-9e93-4e6194726ef8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "423a3d0e-2fd9-4f9b-813e-c8a67fed28a8",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33cc32b6-c8b7-46c3-8e2a-c7f07b572e7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46694a83-97c4-4e99-9611-17344879e175"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2fac0e3-c759-4607-8b2c-298bc75c22e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4b873b3-8e87-48d1-8a82-eefdbf05d387"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2125b7d-fbde-4b30-9d6f-ba884b0db2ac",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "666a1b98-7393-4d7d-b2d8-6080a9f562f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7da0381e-f6eb-47d1-ad86-76ff8687b6af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2234494d-85b6-47be-abe7-a5c2aa664014",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fbdb4b6e-478a-40d1-b5c4-5f8485fd2373"
                        }
                      }
                    ]
                  },
                  {
                    "id": "163f6bce-a6bd-42bf-9ea3-1507677a2a34",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db9107f2-8e31-48c4-bf5f-cc477bffb30c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9b09d97-8c67-4a1d-aa4e-9df12a67dbbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3296bda9-28a8-4d96-9e69-eea564e0ce6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a70671d-5521-480d-8bbb-3185968fa4e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d347008f-241b-4237-bcd1-c5f25e323a39",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbf80ad0-2bfe-472d-80d4-35fbad9246b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4861beb-285b-40b5-bc1d-946a9c590582"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "717fd5c5-63ad-44f8-a453-58c5c883fc69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "037d1331-4899-4c2f-80fa-db0a5af74f4e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "15514324-a431-4874-8a87-9ccf0180a214",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0e7b6f34-81b4-406d-8abd-a181e912e81c",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31bf5e15-ce02-4b19-94bd-da2fe7142b39",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "a67776e6-f20f-4d48-8355-5310231c21e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8292527-3c4f-4b1b-bc2c-924f07d71e12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e8279d8b-4eae-4fe7-87ca-35117e10f425"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7bf9d8a2-4ff1-4b1f-ba98-a9ab6eaacfe4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "65e8ec58-9efc-42b8-995d-ce2d9049afcc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "08c045b6-2ac0-41aa-890b-711f690c08fd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fa508a39-0a14-4d9e-9714-2f35ab3f8fcd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0b8d44c8-8fbe-46a4-b685-b19e9b85842f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "30de34ca-5046-41c8-8d72-d9883340a123"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7d962b05-bd7e-478a-a1b4-f883330af4a7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b73f064b-5998-439c-8985-b1127c4a2477"
            }
          }
        ]
      },
      {
        "id": "13613a31-2e24-4172-b407-955bb98b54aa",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "26fc3b0e-ce97-4b91-a5ad-e321fd390271",
            "name": "Negative Testing",
            "item": [
              {
                "id": "aa68fc0c-2239-4f00-9486-4788081dc73e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1358d8cc-c7ba-4aa1-9acf-d5b9ee8646cf",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e2fdb7b-2bdc-49fa-a7d8-3b334477c63a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab0f55aa-0e3a-422a-a265-56776deb7d5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75d516f8-b070-49e0-a837-52b7d88aa1a7",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95fce80b-693c-402b-b1d7-90b1f5e8c437",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa4922d8-b456-42bc-a7a3-bfe61c1995a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41d9e000-7220-4a5a-b967-b68ff9c53d59",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "210fdf9f-d97b-4157-a22d-9f06eeaa9e62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "348577d6-3235-47b2-8c27-0938be626af0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a92d274-d0e0-41cb-af11-14278195d6b9",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbc5e41d-36ff-4333-927f-2f0cf75c79f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "072c62e3-1ed5-45b4-ae92-bdafd38744e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baa255ec-d440-4923-a6be-ace450869747",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "299f236d-74c4-4744-954a-3a493b1699fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1030f2f1-c5d2-4a50-aa68-07a8269555f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bc418c1-c250-4a84-9ec8-116f9e60d534",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d72dd564-4f08-4d74-acd3-4b70cd4af3f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9b36982-75d1-40c4-ba4d-67e768daccc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa093aa2-0659-4c5f-91ec-0e896adb9aee",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "766a2ec1-e5f3-4aea-a1c8-6c17e39a8d4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdf4f27c-a7f5-42cd-b40c-3ffe2064951c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43f1d278-c2b4-4ef0-b1c1-0a815334900c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2116eaef-d1ae-4375-abe4-29eec098a24b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80c53c75-fa64-4950-b4bf-083682876d15",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4e3df93-73a0-44cd-a535-7cc898ea0a8e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9bb6037a-ec79-4cfb-b1c1-3d9f7141076d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fac478d-18bc-4b43-aa1a-9b4ce9dd4b4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "971a7247-d283-4940-b83e-653c7240cc18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c464de3-5f6c-40fa-85e2-61a438896138",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f693ae37-e01d-4589-bf7c-26099fdbc78a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff310c94-8e2d-42fb-bb9b-7562d98fc0cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9411a9b-ae24-4a2d-9b6d-48c8e35ef8cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5aa9eb48-4321-40b5-ae0b-18b9bbb5813c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fecb89f-c836-41c7-962d-0b82df2e23bb",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd122a5c-d0ee-4416-9e07-bb1ca13786bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ba22b8b-ce53-448f-a623-b7a98439beca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "625b010d-5d39-419e-972e-b1488523d342",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a25726f8-66e7-47ae-8395-4c79dceee578"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df0cd6c2-b1be-4fce-8e5a-6db5e8143f76",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc9154e9-55d2-485e-8be8-2fb2a5f8df63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8008f8bf-11bb-4bda-b8e8-122a9820bb41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e5d087e-01f8-4462-b91e-0e5c01f496f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb9a7712-e4b9-4ab3-a31b-d2aa0072669a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb83e4e6-921f-46e3-9907-2548456d4bb6",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcdef494-69d2-481e-a01f-a0b694cfb63b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0acca3df-e76e-4af1-b7a4-9257eb1bcede"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3acfe66a-8494-45eb-a5b1-c3c7853c5540",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "831a62e6-4f49-4c8a-bb89-df80b386085e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bace3bc5-3875-4662-a861-f7b67f528f61",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fb23400-bc59-4663-b83a-e20f7dfd2bb3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74be6b6c-e313-4b33-981f-edf09fa61771"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce2d82cb-afa1-4f9b-bcd0-62ab748cfce2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d85d6173-e290-4d95-ab85-4d561cc6f95e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48bf2807-2928-4433-970c-2e08b557b3da",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "458c1105-4c64-4455-8c2e-99c1988fd491",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d64006d-600b-4dd3-93bd-09574aaf31af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dbebccc-4275-47ea-8cfd-abc5281b5fd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1da04601-b525-46e7-8462-35d98730eca9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "060b779d-a83b-4143-bafe-ff357853a5fa",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20107ce7-34bf-4545-a337-840072c18e93",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "488ba183-10ad-46ad-b023-1b142cec914b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "562a18d7-4c5d-4b99-9ebf-84e51a2894eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5deebbd4-4f86-455a-ac14-0e5882ea52d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9be0645-ac2c-48b5-b7c3-31eaba79491b",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "718eb2f6-fafc-4ce3-8e88-c4073f6b18a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e01093e9-6671-4a1f-adf5-a505025d7129"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ac368bd-89ac-418f-96fa-e1b85cbc6531",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1be2b9e-8265-4477-b712-6a8175cc6600"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c6b3ff0-8b26-4263-b6b8-1a9f82692aaa",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed95ce02-e1d5-4e9f-a198-660bac1e6a86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f64b9cd-b2e6-4330-84ab-bda266af25cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e12788c5-fd4f-4c9b-bf3e-50bbc68bc6b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57df33d7-698d-4426-a530-47f272c07eee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2cf9946-2aef-4ae7-8a4f-2a7cfe2ed9ec",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7962e3c-1a80-4ba0-b623-e8ae6ee49f98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "864728df-0dc2-463c-825a-b94fc41aebee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dfecec2-bfce-49c0-80bc-63663e6d971f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68fd1c9e-084f-41ea-bee1-552f37a9028a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68989526-bafe-4582-b93a-833cb5f83bef",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72ef2b8c-d127-4baa-ab52-ce965b9058df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52aadb2a-436a-4d71-8673-674ca6ab02d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f6dee38-3599-43e0-b6cd-4f9a186e791d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78faebf2-a83a-4942-ab60-50be9604102d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0d4cf2f-7e54-40b6-84df-fa161078bf68",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2533d513-21f4-4b26-86ad-43df4a220c1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7eb994da-f47e-49e1-9858-c1fe1f1860b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40955a9a-ac6b-44fb-8441-724fb3d68fb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c557f6d8-e81e-4569-8d31-641f1f3819b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c587ce0d-123e-4cc3-8c51-4f41ab5c503d",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e81b0d05-77f5-47a8-a54e-00851c333cf4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70e6d620-75db-4ab0-8bfd-b5e9088f17ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "425d1703-f5b6-4927-bcc9-bb2491483e48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebf33791-a1bf-44ad-9042-20089b061537"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff1de9f5-997e-4b78-89d7-bfed8d7ab48b",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dac9706-0662-42ce-8ab5-ef46a869c519",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35c80d44-0893-4523-8ff9-30260e93559d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ad9c608-55da-4013-9f8f-7768c9fd93cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "873c2ccb-1585-4807-86eb-84f987724cd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0084adf1-d746-4546-bcd4-6264af7cfde8",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f63fbb0d-0a1e-4a9f-8bf2-7b1f664b4854",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61792578-781d-42eb-ada6-dde9dc2ffc75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eca26842-4241-463d-bc80-b19c59f6f5b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12b28da2-a722-45e5-a6f0-6b63f3c959e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c566e06-d4d9-4a7c-8420-fe69e28023bd",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9330f1cb-d2d9-4124-b693-ce9a00523ac7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a6399891-0361-4d02-aaf1-197aab09b8ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99763ee6-0ba1-4241-8f35-fff82930e8ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7b69296-fdc2-4f44-b3b5-e02d618f4fd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45f67e72-c31d-4a87-83e8-70cc96c14d0c",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5028f33c-43e6-482c-817e-1333afd0252b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5bb84825-5500-48ee-8a15-78319133d441"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "988f1f05-9f32-4046-a1bf-8b2370671d45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "078f54e0-85e7-4e38-8612-c0261fa624dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddcef5de-043f-4782-a59e-ef7ef03c014d",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d58798a4-72f7-464b-990e-d7fb6e7f1d7d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e9a8e29-9f28-4f9e-8e7d-12702edd1688"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c9c0f33-841e-46f8-9e75-6160dab8d27b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb5635ed-a36e-4e29-85ad-61b3ad4d9c54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6a861f0-6c3a-4154-913d-f9e631bfef32",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8ca9f72-d3b1-4234-af3a-1ac836a5c40b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7c63e4f-979a-44ed-bf30-91920b0ba3f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "424c8092-6001-416d-886f-71a397c731b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecd539c7-4335-4a37-ab20-ee7551a65303"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bba396ab-010c-4b8f-b7f5-e3faf337235a",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "beca7425-7c9e-4614-8c32-70bbf8b5fd1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "217c1851-666b-4ec7-9905-24ab79a96da5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b441e999-61cb-4365-9ad4-041a5eb70f9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47d6eadc-246b-4b2d-974e-be67cae5815d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ded90a32-5d68-4f88-a388-ac9f1290a5ba",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "910e9246-b855-4212-b59a-2e41c7f695a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4d426c7-8f5c-46a8-8113-16da8a2f1da5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65d687dd-36e3-4e24-a233-3ccfa356d61e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46203007-a944-4d41-8693-7c6fdb3ba08a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e40d76da-56e7-4ec3-a0a6-3daa238c15de",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f419d455-cf6a-4dca-b8bb-abfc38b01a48",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9be8332a-48eb-4f3f-9860-ee2bcb7c0643"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "812b493e-716c-41f6-b2f2-0eddc4d0855b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc8c2272-0c92-49f1-afea-239b0112066a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2873ef56-2bd0-4fae-ba64-582d09406ce5",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e244a90-451e-4d99-99fb-8c53992521bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e355cfe2-025b-4894-a977-fff6accff176"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ed7f2e2-80df-44f3-9fbe-48556baf9744",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a523da6-da56-4295-89e9-fd44ccbd46ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7d83123-e74e-4023-8929-33d9ba8af39e",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff1aef44-7544-483c-a5ab-c3d88d09cb2f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f3f8582-1eda-411e-aaec-6849bf0a6bc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "682a77e3-c003-4e77-85f9-5614072a1741",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9ab7e21-da1b-4cfc-9818-9459027442e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee22a3ef-2ab4-4efb-b6d9-ec82adbfa359",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e75a71e-acf6-4649-98ae-2a3d642062f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f4d484a-bc92-4f87-a03c-5657a1dd759f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17f6e88b-97be-47aa-8504-7dea0f46673d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9256348c-19b8-4f10-b29e-d88e6cc7a0e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b07efaa-1a72-45a1-ba17-7ceb2f59200f",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33008228-828f-4e3a-9772-4269c5575760",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f01dd8d-2f7a-4d8e-8b0a-b5cbf88ff485"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e82e2cd-ffec-4a0f-aadc-a2548e49f335",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2b790ac-10b7-44d5-bb7e-d18b6cf35c18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb0bd72a-2a61-44ba-9efa-9290c6240d4c",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8952f75-8a12-471d-afbf-59632fdcc484",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3a51927-eb4d-4c3c-bf83-e238b240f554"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6118cfec-ee02-4020-8ecc-e42263349a8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7b53073-4cb4-42fe-b64d-83f225f690d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "409e93ad-2733-4c38-9f7e-e37afb1a2120",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2f6427d-4a18-48da-854a-a427f249ac3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e550ff2e-3fb0-4650-a3a9-56d044811402"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e726083-f28c-46ad-aaa1-5c257efc8c30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0c27129-2731-4571-b1d6-a45dd3685891"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b46341d9-e04e-4f64-963a-c4c9706bedb8",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b516940-0daf-4b0c-ae41-284610ec090a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0519df81-2d2d-47ff-a25e-c050bcf47f2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c7c5065-2faf-4222-a634-1f16daf6f6c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82a581d2-a81a-4e3c-a589-4cc39f69d69b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e47ac75-0212-4094-a3c1-75b3f09017d3",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2edd7238-b5bf-4c35-87c2-67364ec13bca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f892d359-5d5b-48a3-be83-c58b362c84a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1402f70-0b4c-4165-aca1-b7e1186b178e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f455d01a-c031-424d-a183-a3f1ad1da921"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a3ab061-a824-465d-abbc-69a0f119fd4f",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9078d7f-8d98-4b28-a20f-c042e28bda27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa478a4b-81ca-41d0-b89a-2719afd8f3a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "292254cf-4b34-4dad-b5d2-cdc465eb0d52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6a5e06b-68e8-484a-93dd-6e2da68822aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcfa855a-0e5e-4ff3-a6f9-019b5630a692",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96b3aabf-ef29-4648-8211-907ef3ce89a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ae2c7c6-2962-41fe-8825-3bb399e55934"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7500e98-b518-4dbd-a514-9858df406b14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "770632d7-f1d7-453e-91bc-220fc386edca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22037dbc-679c-41ad-a56f-6eed116b9d2d",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccb8b5df-fa3b-4c7f-91da-80f30e582148",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7ef4aba-df6e-40be-8984-ef7afd003bb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a455968-a675-4858-809f-e35f7c99cd19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42c77ba9-99fb-462a-92e3-48e45a305200"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e51c6faf-fa7b-43ba-8716-6ba5d39fb12d",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9438b7d4-9f84-49ec-a458-724c85daf8d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95c5de7f-b6c1-42a2-9ec5-81b1e629814b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72ddb91b-6c5c-415b-a727-74a37fb5ad20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8d4ef99-38ca-44f6-b9d3-0bfca5dfe16f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d876a05-4a64-4b79-8a27-8e14e7a1674f",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e6e2dad-c22c-44b7-8bcc-0a2a6a11411b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b87aa88-ee2a-4a3c-838c-df5ad7a8767c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35fd4642-e436-4118-91e8-e984ad5ef333",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fc9bb4c-3153-4909-b539-dff81ac8d6b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b486bea-8a47-4814-84a5-95ee3c1046d7",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b73628ab-d7e3-4bf8-bb3e-4a0f44e8ea5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe173049-3394-4d1a-a964-68658b5a843d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03760119-1ca1-4507-8ffb-b0551257da8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8bfece1-da60-493c-ba1c-ae9c722fa16d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cea35e28-f9fe-42ce-bcbb-f88e5f52ed14",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a30c5198-d019-4ffb-8df4-6c3d382107b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e2fd8a8-8d57-4fff-8853-0a582d360b8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f5c48be-357f-450e-9aaa-6e374c14311d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27f9a100-d7fc-4bc4-8f6c-5e3b61a6f5a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76f7e500-911e-47e9-9a39-72e263c24c73",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48726871-5ea1-49cc-bdad-4fe8b6f50f0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c3cc613-ddc5-4bb9-985d-554bdf85866c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4433ed1-7fb7-4a41-aef4-7b5189697da5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9534bdd-d544-4486-a954-35d4f616dbdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81f93081-660c-4bf8-9abc-8cd99934a782",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "978c295a-ff71-4861-8b7e-6018e297db2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4235bfe5-91dd-422c-b623-255a54091726"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f173f33-80a6-4348-88dd-5e076b4f6286",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2a47b98-aad5-458b-b924-1f469b5b0a03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3138a22e-67fb-4ddf-bf70-0ea06d228d79",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06db785a-1ebe-476f-a129-4d1ef4c36753",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "900bd052-931f-4a31-baaa-f8474969042c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f14891d-c9a4-4594-83e9-c2b712e454c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52ee9d0f-1e37-492b-b3fe-04553fd38749"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbeb409f-a178-4850-a4ff-d1d537239655",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea1d270c-a7bd-4d98-832c-12096358c454",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fcb09a9-c8bc-4d7e-a510-e3cd57570849"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e673c52-6bf3-4be4-a4ca-397d13f98bcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f403cbf9-81bd-473b-b145-95366e4f6f77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "552edb6b-35a0-448e-af66-64b791590fdc",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0bbabfe-9cdf-4ffb-997b-512c8fd3fdb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10ef593b-9cd3-4f78-9947-bc50f7b6250f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8faf214d-41d7-48ab-9028-adc027fd1dce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c62687b8-fe39-43d5-895e-563e75dc4cdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a85f3a8-55ab-411b-8789-65c6305cf6cd",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30e51c3b-d5db-44d6-8e19-76652f320a81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91532df3-8f70-4267-87b8-d429ea781018"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5a13e04-a1cd-4bb7-8eab-e29f5cf21150",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8cef44a-5a77-4e80-9a47-60f660f96297"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44cb729f-898c-4557-b485-418299435d84",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d8c497c-acaf-472a-be27-d8c0226c4738",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d983042f-a80b-4411-b515-298d64febf5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db8d0d6b-fe2c-4bbe-a799-f653bb3c5cca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a6afa17-1f3b-4c05-a19f-a30086f28f25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "461e666f-1124-4f94-a6f3-ae5c590ca3bd",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fde80e3-c1de-4490-82bc-9b8540a752ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76dbc97c-e336-486f-8169-ee1b04d76f95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d66118e-216c-45ba-a31a-ec8721a621ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8cedf63-a14f-4fba-b04c-843fcc2973e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44b41ac0-dbe5-41a5-82eb-f3218db46336",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cae9980-1591-43f1-abb5-0ec602b6f59a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39badb66-4c51-4a5d-bc79-5357bed4c144"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1679e396-302d-4e74-b5a4-93a67b8a9b45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "188f9466-01d2-44ee-9e09-bfd1683ea493"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e10d2dd4-f96c-40c8-acbd-0b7578182bc1",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1d9552f-ef65-4cea-bb3d-57cc72764131",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd74cb1d-6fda-4e91-8c71-cc24704d4e02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9fd3efb-accf-41b1-9760-f96483680dd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59a13f93-60d4-4f30-80c2-8c2ebdf46b93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1c2ee3f-ce3e-4152-8688-c373a4dbbf24",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f1c81b3-47d4-4573-b663-86ee20935d34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e0370b5-2569-4f55-bd1f-6c71ae2726f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4248ca37-1328-478e-b3ff-c6974d420804",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab686a95-040a-4633-bd32-9204b7d41f3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de3082a8-f3b2-4165-b8d4-8c5c3826d1fd",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41e5f022-03dc-483e-8b35-4920417847a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7136a8c-a032-4b8d-9837-76684f26ee86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5781f277-25ce-42f3-bbbb-b4339bbfaa5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "828373f8-efdb-4b63-b189-bdb555ccad7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4aec7bcd-c605-4ce9-a8da-39a077972938",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d66f0b9c-ded8-4986-a6cf-b361462067b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75d139dc-d025-4f1d-92b9-9528e1c726f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b952707c-6c45-451b-b100-ac67a7ddba0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9bb2cde-1da3-46be-8d55-63ddf6f42eeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29fc6a20-680f-4db7-a94c-dcc9668a8b5c",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c39a4274-c3b1-4180-aea0-d6aac67d71bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "160df7cb-8df6-48a7-a1fb-19a0eaa5f242"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acf00b52-8077-4c47-b968-58b77b7c510f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4e724f2-19b1-4e6b-a5c9-9dba4075e76e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf818b4c-bc1c-4f55-b201-3c0f3933b4d3",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a924cb8a-15e3-4272-a33c-78a7eaf15c4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37d781f6-b9a9-4715-a806-983012806d54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b11daaf-b1d0-49f0-b5a5-7f2d28cea426",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d7a1bcb-1075-4dfb-83b7-a859a7036be4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e09ff616-40b1-4645-adcb-a4d63aaece44",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "460d2e52-8ff4-406f-9b03-0ccacc352ca8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c17c4b8b-d130-49f0-9562-b0efcdb2a779"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "695d9f93-d949-43ed-9db7-678a1653216a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d859cd18-1e2e-4536-87b6-72b0e0d7cb13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a5e1ed5-df78-405c-91ac-390a1de6f375",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5143b736-0e43-4f19-8be3-b73a037ef2ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d5ea7db-2ae9-4c12-8491-1f0fb98857f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "199e11db-8450-4ec1-91c7-d0308eaf4ab9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4bedf69-409a-4e3a-821b-47c9a2828d94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41cca374-b5c1-43e7-81de-a29d93de0dc9",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acd67bb3-f06a-4742-a43c-1a18fafdf195",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10c0f59e-b648-478b-bdc7-ed1984b1e5af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fded62c2-4cc8-4b77-8c1f-455058cce34d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0943d84f-57b6-4e9d-8ba9-8bbab7e5fc32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e3c7bea-d3de-4d19-9ea6-ce32e4d19fc7",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5df78e2-20e4-49b6-a2f9-c057b06dad9f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0778239-1831-4533-a9fa-75200c286e69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04ba2299-01be-4996-8a30-d6b1512146a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fa3865b-2ed0-4abe-a875-988a34844280"
                        }
                      }
                    ]
                  },
                  {
                    "id": "837cdc23-8185-4a09-92a2-76ae24ba0cc9",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7befaee0-6607-421a-9b30-606a9e092c4e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a0b6eb2-c8ab-4ba7-9485-676cee8d1d25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "576c3c9e-f527-462b-9716-cbb49fe86787",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cdafdad-3113-4017-b672-8a2845723e1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3b51eb5-058b-45a1-b1a8-e2174bde0b42",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb5b0d9b-4771-4cca-8e72-eb134c2093ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52c1d3b3-d5ff-4953-806e-2f99f48b366c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c09af785-7e3a-4cbc-acd0-e4e6dabf100a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9081c06-87b9-48e8-abf1-0eae3fa07d79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3fa3bd9-b336-488c-ab64-e3216049b305",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1618caa2-0e8a-400f-8d7d-e3943f58b943",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f3597ad-74bf-41e8-90d0-b51399f27e3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90022a17-f3cb-4300-874a-eff58ed2eabb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5075b48d-dfcf-4e53-8792-9b3af08a1956"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebad2683-f6ab-4dee-bb27-76ddff4be532",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44f475b3-5f9f-40f8-95c2-1dc3fa32aba6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87774761-96e2-49e0-85be-a70c386b5eaa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c03c31db-be74-4496-afbf-a0566676c8b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa51d63e-c7b9-43a3-903e-1f9986903546"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96241951-9bc1-4514-b910-d1e2e1db7f8b",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8718781e-004a-4a58-837a-d5962e68740a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d612c99b-9a37-4654-b11a-3be4beb9069b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76f1eba8-a8e3-4488-b395-d6e8233be8eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15a26d1e-7360-4e9c-98c4-0fbe37dcd544"
                        }
                      }
                    ]
                  },
                  {
                    "id": "813d5f6f-bf66-4c86-ab70-1a7f36bf93c3",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c67a0a40-04b0-4b3f-b21d-4640225a3e56",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ce1a4e3-f998-4b92-9ff8-592c1148f7b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "064de8d3-c7ae-4a93-8d4a-7f18fa53134b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24436472-76db-4411-93f4-b0d0432dd007"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8e32371-9693-48ef-a3e8-b17a29a60d6d",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90639b2d-ed3a-4c30-b54e-5594742eb2fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df67de02-91c3-4e66-9c30-38448b375793"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c789203f-138b-4731-bd1b-5392998d2882",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84f52b2e-bf7d-4348-a2ca-731ddee5a3bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc9957e1-d6be-47ed-a9f8-72ec453e5556",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c489f61-4e49-4a66-a4ba-425de45b2331",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1a47ff8-72e7-4058-9998-9398e4570100"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10a36c5f-4bb6-42b7-93a1-36c3834f2689",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edbb25fd-9f0f-441a-a073-dd18eaf2c986"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11dafa75-bf79-4397-be4b-8801d3c7b2b9",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e79ec8a6-1e9f-448d-9b3c-4bec24c1a74f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c30a9a0-c3cb-457b-86a2-2761cc2eaef5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa4bab75-e213-44e7-89b7-3dcff3a3f5b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d198ce7d-d9bf-4893-9f9c-2afe2689a094"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e127fc46-3d85-4ec9-a8a9-d846f70ecaa8",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba0a6665-07c7-4c56-abc8-5b2b39ed4f73",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1d080a5-60e4-4ed1-a838-f9ead871ef2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b49e6b58-fef4-4c0b-bef4-1478a05a1a5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec1d30b2-1089-4f00-ba27-043b892a605a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33edfc3c-f4ca-4d1f-b947-2b20c5be8bf2",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8795f88b-1ca1-409d-ab92-7ee227295443",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8520670c-f700-494e-b566-87bf24fc2066"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f46f7bd-7cd8-4d44-a311-5f2f9efa1b30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4bced6a-2c39-46c3-a69a-436b004539b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "916d2124-3892-47f5-bda3-9c8d6055275c",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d772dd29-ab5a-467d-9ff3-225c33177b00",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e7568e5-c80c-453c-a1b0-12a0510b9934"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "696e01ff-fb8f-4cd2-95e3-dcc059d467da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86c938e0-37ad-4689-a91e-1105ee7ec756"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3020f8af-5abb-4c18-a189-7c0b297583ac",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05d9007f-a54e-495d-b414-737340ae8c88",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18c0997b-486f-448e-bab3-2e9ba3690cd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29bfcd24-ac70-4fc7-8102-fd667afd0f0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5743970-407f-4142-8468-f172f4cadb16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a8f8787-4fde-43c6-9e97-f5596955853b",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c1da81c-f4f9-4f07-a8c9-293b46a526a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e897d654-72e7-48e8-b5cd-827686a2bf00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "166abb9d-eca2-47bf-9915-76b676d9f840",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e3dabfa-4fe0-4033-8c03-3692b7c5483f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e706866-e237-4682-95cc-b0b652c2de79",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "239a7129-0b7e-4ff2-871e-33e56038c708",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "887b506e-1e5f-4053-a52d-750624faf9c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c69afcb5-aeb3-420f-b7be-73b3599b088b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1c7535f-dbec-4204-a607-f3e6a3ceb7cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8016e0f9-8417-4fee-9bae-553298721388",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b029c9b-9f9f-41e6-a25d-968ab0bb4ee1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90cff1be-42a2-4751-b3a7-3491c02fa3a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f95e168-06d6-4185-9499-a6a69d6825bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8ef627d-476a-4067-a559-e150d129f7d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "738b8c0b-ffed-487b-8f5f-98f093d02977",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1ad3831-68a7-41a6-b52b-9798291563ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7031c3e-4961-4eed-ae7d-92140d6eccde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f059e70-a6c9-4f1b-88c3-4f1278276fe8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3b15f8b-9375-4e94-99a1-4c1745987570"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b695f1c-4475-4901-9045-7f352c6f8575",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01a27a1a-d145-43b9-bee4-d291a29f7f12",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57a830fa-b4c6-4cd9-8050-2134678739fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "874b1886-9ed1-4799-8580-9ead44e6f768",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b1e8088-804c-4436-a2c2-b2b4d7e5ae76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ef96e58-cf28-4b3d-9ea3-6766612fef71",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f210274-43fb-4385-a66c-84753b4de1a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80379570-bd34-49d8-b150-8f5dd0c0024c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a902f7a-ed3d-4756-92a0-15f747d16a8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef96f929-be61-4160-87b0-3d513b181a4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7320127c-89de-4098-a5ee-f94998d627c8",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bee2cfad-c3c6-47a8-9bab-8be83e4ffabc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97230892-8acd-46ec-9814-58755ed68595"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49d4f889-afeb-484d-b4fe-127144934002",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83a71c4e-b6a7-4e01-bc84-e9fed9be0b98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "addfeca9-79b6-4fc4-804d-bcb7b2ec1557",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9080a2dc-89e3-4d63-a119-997d74eb5a34",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac405bfd-12df-46d2-a9da-c64b6aac9e07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67ecc1a3-95c4-4bf5-ae28-d184b82b4bcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "767a619f-e3cc-455c-ae35-761635377ac8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23d18f99-2d03-473d-894b-828ecef60c5d",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "877c3c8c-3a4f-4e83-8162-70be7faac97b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51303318-58f9-4fca-897c-4b0391070f7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9145f514-b303-46c9-afef-3c446549e16d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d37c1b70-ea5e-4d41-a023-5d2cc7f77d55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a20927e0-01fe-4fb8-9f94-8a097eb44b5f",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c3755b8-f272-4cff-b3a8-b87e7f5e1739",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca45340a-b2d8-4b34-ab30-b4d76bb380fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddde8faa-c6e0-4680-a396-edde0be87739",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c606a1f9-2cc3-4aad-85f6-581cc36cda86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b86ea386-534f-4c40-b9ae-acbd7bbfe9d1",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f0820b9-2171-4a7b-ac5e-cbd4c855dce6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e2ff6b9-3e0f-4bd5-bfc5-2f3ff587aa49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "201fc65a-ffc0-4a3c-b91b-c5ff6024ebdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab2e3002-e34f-4550-b3e0-3d2612bb75b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92f00f90-8a51-44c4-8e7b-1beba1055900",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87169a29-8a76-4b2c-96a9-a6e1fb219094",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb2af5f9-866c-4e0e-8eed-483aa3dbe1b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dd1874f-1026-4c4c-88b3-a1794b7f1382",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1986990-b359-4a2c-a606-e7a63f1d1989"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4e80f1c-7ac0-4cac-b858-093d66751864",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "078f8bd5-8ed1-4291-bcb3-a739cab10bff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7618cbb-9c2c-4c98-af3e-1f8771e6c32a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69268cd0-d091-471c-a5b7-89cdd937d15e",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d02ab5e1-4b89-4946-ab7b-9a067de3c6dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7091f1a0-3d62-4544-97ff-ff3cd1cfe4b1",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09463f08-8d43-42c5-b2ed-c77a9486e13a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "581874ea-3c38-4643-a67e-c488a9e8fd27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c4b63d1-861e-4006-89f5-631eb065b0ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a71958f-4171-4a09-b42f-17043252f885"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aacdd853-15bd-4bf9-9e79-0d030fb20171",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fb52503-b869-430b-a12e-a6f260f08d10",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "999c7cd1-963b-4333-a1a1-00fcf82bc0ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7082502e-f32b-467d-b5f9-fa2925450110",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "890fbe9e-2f41-4b0b-a802-a8a7b9f8ffe9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1147b57-56e2-4aea-a48b-95b4db2a928b",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "805ae559-e4cf-485f-bdb9-6cfe3c36c40c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9891273e-6e72-4b80-b612-e7fe11560296"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df5fec20-cff9-49d6-82b6-02ab50cce058",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb3cc1e2-43d1-44c3-94e8-355e8d146915"
                        }
                      }
                    ]
                  },
                  {
                    "id": "164b0f7a-b186-49e8-bb57-09d99810b4f5",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb2b6121-e429-4062-88ee-08020d76ccb2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1a727d5-a816-4dde-bc12-190bebc16ecd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc43bd1a-ad8e-4c66-b32f-376315de48ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42e35a8c-c743-4819-825a-eca4074f3f0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2b997b2-2ec2-4ae2-a3fe-9fa971c0b05d",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9a29b14-2e28-4d4f-8bdd-426ea5d81156",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "62aab1c3-a0c3-4b78-b04d-354d19b061a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f349d46f-547d-4afc-a228-5ae23f1fd694",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d19c5e0a-abd2-4138-b85c-59ba1dd08c9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbc6d3a2-e8fa-442e-8477-f92cfa033448",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5220f15d-b3d7-4938-8585-c47c8e75a10f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f3cf3ef-ec6c-4eb4-81dd-b1507495b491"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eaaa035-dcbb-4e8d-9bce-91a8dfb857c3",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea7889c0-6339-4ea4-bd33-0a8bf0c87a8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07414dc4-c4e9-4f14-b96c-1c495ab8a7f0",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f825ad4-0bd0-41ce-b93f-16ac3dc3fcc2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aca7b307-5d17-48d0-96ae-a91d1bcb680a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37a18582-46a3-4017-8383-f71f7d034c5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "077dea9e-7437-4b88-8ba2-5e55d1224cec"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fbaccec1-07a7-4ae6-80bb-fb0d29499383",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "17b35fa9-5cff-4e32-83d7-d0783f688b5a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a334bbe8-ba1c-4581-9c77-adaa525c4841",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "19474d6e-a9cb-4cbb-81f4-b4287cfccab8"
                    }
                  }
                ]
              },
              {
                "id": "d08eb124-bd29-443d-b27b-b4757b70fc37",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6e4e4a3a-11b5-4dac-8de2-46ceb66f8ea0",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb9bc55e-b3dc-423f-9671-7dfb52f087c1",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "65fd775f-06be-4e87-aec1-8f856f37621d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f1db8e4-1c5a-4609-8f6f-f9715cc2710f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "74f723da-11ab-407c-bee4-1b05abb82088"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b8a1fc1a-1df7-42c2-b757-3770e19b5902",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f2289fb5-3b70-4555-bb1d-755cf528548c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cb8d141b-bd9b-49c5-b6c2-c17fdb673d9a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fb6c6e71-b36d-47c7-8a1c-b37c7b7f227c"
                    }
                  }
                ]
              },
              {
                "id": "1c4500ed-f541-49a2-8d2f-25aa91aa51ab",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "17f6ee67-3eb8-49bc-983b-b7293f7f7aac",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f363f515-5d84-40c4-af29-123943774c39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "65a53111-4184-4ec0-aec3-684fa8a39bce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99a96c4c-ebfb-41ef-ae6e-34c2bba54697",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91c2a58d-1618-4702-a487-6c23df170db9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "23acc0f6-3cdb-4b06-9104-dc8e8c95f6de",
            "name": "Positive Testing",
            "item": [
              {
                "id": "78945231-d7ea-4875-9fbc-dd44d133382a",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a8c83129-caf3-480e-b1b6-c9e067d0c585",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "77b43074-2a4b-42b1-a525-cd597ad6546d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5c00e52b-2ab8-4017-9bac-47a56fbfaaad",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1cdc546c-b844-4953-874e-07ee67c045a4"
                    }
                  }
                ]
              },
              {
                "id": "2b598d6b-5ad6-4aeb-b3a6-35cb1fbaf92a",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c5aeb524-657c-4dd1-99b1-aa230a1e3f0d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "0bbc4522-1fd2-4e99-a472-c84bba6adb7b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2e18b76d-e3dd-4d3d-8e3a-2426324195b5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d90f23bc-056a-4f18-8c70-a9c0da23ffa2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "787a9725-4abc-4096-81e6-8197a941471d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "fb4b7848-5bb6-4700-b657-7ae439338153"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9a02c85d-cba0-43fb-a28d-22e6af814348",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d7f8e828-1693-40de-8297-fb88e2ea8cd7"
            }
          }
        ]
      },
      {
        "id": "2ea391d4-6ccd-4122-8b3f-daf7f4a31e35",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "2840a83a-4571-4e19-9c32-f84104231c8f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "545b16e0-9334-4546-b8fa-9025bd8514aa",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5e710b4f-8aaf-4f6e-842f-b5e7bf6dd3be",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4aa1129c-798d-477d-ade2-7a82a5412fe9",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "262a6d1c-6e05-4651-85f7-da6ebdd64de3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd7de428-1838-4f83-a858-105cf1683236",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "737f2de9-e85c-45da-9498-f1c25080f893"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9d37d94d-0f63-452b-b547-1f991b48b596",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "af1bf787-db50-495e-a121-7fc039a4dec8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4c42d340-c1b3-4fb8-abdb-9605de9f5a8c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ae60a155-cfe5-4b74-ab7e-37c3ce9622fd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c957e50f-186c-43ff-bf97-fc3263cfbc1f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "99d226b6-29f8-41d9-abcd-d4ef044d41bd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cac54519-d7ff-4062-8fcd-4c81e358a473",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2c699ea5-e82b-4655-85ff-5ebc4f2255dd"
            }
          }
        ]
      },
      {
        "id": "85f7b18a-140b-4037-b11c-f356783a70bb",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "82d0acbe-a454-4893-a3e4-f6392802aa85",
            "name": "Negative Testing",
            "item": [
              {
                "id": "778684cd-4654-40b8-83c9-8cd1ca14888a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7c197b6f-0e97-46bd-9dde-2f33249a26db",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5763117-1445-49bd-92d5-ed3e2ae3bec2",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e84ef969-9656-4ad7-8e69-87aa7fc18d9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80fb0a5a-9df1-4e63-8828-23abe81109be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "77fdd30c-f6b1-4197-8743-eb4f5e06d681"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "30f18393-1c2b-4144-98ee-06eb22564c8b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8b6d1cb4-0c53-4434-af7d-d451dc5b7e38"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "489d4f97-6340-4430-a082-b343f5e7ff8a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8d6f3963-6204-4df4-ad84-adc5f65e221f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "619f220a-669f-4ae5-8ddd-91c9fd960b3c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a6808ad2-8f22-4585-a328-7ec0f39b58e9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "544b7e1c-cac5-45c8-83e9-9ce161167eb2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0a587709-0c89-4a80-8bc9-244ae28a5cc2"
            }
          }
        ]
      },
      {
        "id": "f3198e3e-aedd-4e29-a9ec-b7f52e15d2bd",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "ecebb724-f817-494b-8ccf-d5ce6616af15",
            "name": "Negative Testing",
            "item": [
              {
                "id": "82d1a422-0c50-493b-b57f-68c3fc38ffe3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "495918c9-2241-469b-a237-9d8687166113",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c144e8b-dfa5-46ff-95ca-61e62a48708e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ac9d2353-eba0-46a1-b4df-d6fb87b004b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "774482a5-386d-415b-a2cb-9643192d7d54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8f8f9d4d-3f43-4588-9d79-95465a52a6aa"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "18d82cbe-86f1-4044-8045-d3d73ee17a38",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7e46d8a7-0edc-4587-855c-96b5d4d39d27"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "10cb7ef2-c1b5-48da-b948-7304f218f69e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d453e4c6-7608-48d4-8934-64315b8ab471"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "710ca876-336f-4daa-ae85-d997fd90744c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d9207586-218f-426c-b0a5-3613ec140924"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "91391b48-fc9b-49a9-a95a-1fd0a169f6e0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d79e7283-ae6a-44db-bf37-f95032fb0f64"
            }
          }
        ]
      },
      {
        "id": "ea92f55c-20dc-40df-ad9c-9bbbfd7f5f28",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1d9efcb6-9481-4c5d-9731-80f32e14954b",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b2356301-bad0-4910-b122-a7377671b6b2",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "e556b938-d1d2-40c5-a7ff-c203737e14ea",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3a34782f-9b4f-494f-bbbb-914b0dd5d15b",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "76227768-0604-45f9-8c7a-92d393525891",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 111.46031746031747,
      "responseMin": 7,
      "responseMax": 12326,
      "responseSd": 814.3075415559039,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1716943220336,
      "completed": 1716943256634
    },
    "executions": [
      {
        "id": "96de2b7c-d27d-4b93-b481-0acb1059ed7b",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "09ea6f8b-b6d5-453f-b868-38c842053c92",
          "httpRequestId": "b2b736d4-a826-4eec-92c2-ff59b58c0b0d"
        },
        "item": {
          "id": "96de2b7c-d27d-4b93-b481-0acb1059ed7b",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "a41b73d0-4be1-49ec-aa49-0c766ee2b17c",
          "status": "OK",
          "code": 200,
          "responseTime": 47,
          "responseSize": 0
        }
      },
      {
        "id": "4ed31b42-81f1-4781-b8c3-5e9ad4123bf8",
        "cursor": {
          "ref": "e6be76ac-7b7a-40b9-9385-a75f3a332d4e",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "75299b60-63c4-4fd8-946b-31343792186c"
        },
        "item": {
          "id": "4ed31b42-81f1-4781-b8c3-5e9ad4123bf8",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "7de45c69-69b0-403e-ba4a-313fef775787",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "93634669-2df5-428a-8016-2b4b7da81857",
        "cursor": {
          "ref": "0ea57d86-6ea6-4fff-9edc-618b05ba363d",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "f2d3f70c-f78a-4733-97ab-6add59a4041d"
        },
        "item": {
          "id": "93634669-2df5-428a-8016-2b4b7da81857",
          "name": "did_json"
        },
        "response": {
          "id": "9ab296d9-0a23-4637-aa78-68303b52328c",
          "status": "OK",
          "code": 200,
          "responseTime": 332,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acb925eb-b1bb-4973-8b4e-06d859051a39",
        "cursor": {
          "ref": "79bad87b-5196-4f21-98b9-6a37ae48a1b0",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "540f657e-0ef4-4e42-a9b4-692a62351f44"
        },
        "item": {
          "id": "acb925eb-b1bb-4973-8b4e-06d859051a39",
          "name": "did:invalid"
        },
        "response": {
          "id": "e0d25ddd-1ca8-478b-9849-26fecfd30a9b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 317,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acb925eb-b1bb-4973-8b4e-06d859051a39",
        "cursor": {
          "ref": "79bad87b-5196-4f21-98b9-6a37ae48a1b0",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "540f657e-0ef4-4e42-a9b4-692a62351f44"
        },
        "item": {
          "id": "acb925eb-b1bb-4973-8b4e-06d859051a39",
          "name": "did:invalid"
        },
        "response": {
          "id": "e0d25ddd-1ca8-478b-9849-26fecfd30a9b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 317,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a738847-d98e-40a6-b71b-062b9432a851",
        "cursor": {
          "ref": "7d7fd0f9-17bf-4ae0-9887-cf5bac8fb5b0",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "3f2fa933-d164-4c57-b283-dc8b1e74b8fe"
        },
        "item": {
          "id": "3a738847-d98e-40a6-b71b-062b9432a851",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "18c85158-8b4f-4c52-95fc-39c48537b733",
          "status": "Not Found",
          "code": 404,
          "responseTime": 33,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "524e0b76-43ab-417f-aab9-f167acfca529",
        "cursor": {
          "ref": "fd31b07c-a6fb-4676-ba89-4cd9b11e63ca",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "8eed24e3-b89d-41ab-b053-086e98afcfc6"
        },
        "item": {
          "id": "524e0b76-43ab-417f-aab9-f167acfca529",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "50310113-14a6-4a53-bdbe-46922d3f1ee7",
          "status": "Not Found",
          "code": 404,
          "responseTime": 34,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4922fc65-0d05-4f4c-a49b-a95b5ab65851",
        "cursor": {
          "ref": "a54b0608-e591-4e06-a29f-e750cf74fed5",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "e61f415b-4538-4ed2-baf0-fd65d853d18b"
        },
        "item": {
          "id": "4922fc65-0d05-4f4c-a49b-a95b5ab65851",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "1efa891c-b38a-407d-909d-4b7f7a1cb4e6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 20,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "491342d2-8aae-42bd-a21c-73e6aa427404",
        "cursor": {
          "ref": "0e38d978-5bb7-477e-b6d5-7c190afcaa51",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "5858b5a6-93d1-4093-bd3d-73b1b1d61ec2"
        },
        "item": {
          "id": "491342d2-8aae-42bd-a21c-73e6aa427404",
          "name": "identifiers"
        },
        "response": {
          "id": "238c3d81-5a05-4d73-82bf-1492d3d9df44",
          "status": "OK",
          "code": 200,
          "responseTime": 47,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d1f5e2d-f368-45d8-89cf-79411b558ea6",
        "cursor": {
          "ref": "76ab7026-df1a-43b3-a8f7-40f52355e8f1",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "ad5c922b-6cd7-41d5-8319-5e1066904354"
        },
        "item": {
          "id": "7d1f5e2d-f368-45d8-89cf-79411b558ea6",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "ad13dd18-90d0-4d1f-b76d-49e4d8d34395",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a65514a-4d94-4a50-92f9-0b8909ae0d41",
        "cursor": {
          "ref": "c5ce6f3b-848a-4682-9783-cbcb71384c15",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "2d4ae6f4-49db-4339-9fc3-d8acbd694910"
        },
        "item": {
          "id": "7a65514a-4d94-4a50-92f9-0b8909ae0d41",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "5897c97c-c45c-4251-b2a0-6ca8f3b02fcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "681acf56-fbe3-4a11-90af-aac214325de6",
        "cursor": {
          "ref": "729aad34-2fec-4f21-94db-9b24a57a49cb",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "48e3b6ed-f71c-432a-94d0-40ae3f48b5b8"
        },
        "item": {
          "id": "681acf56-fbe3-4a11-90af-aac214325de6",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "7a3f06af-1475-4857-b0a6-08d35c96ed6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afb8394d-15d7-4aa8-b2ac-9b958abb0ef9",
        "cursor": {
          "ref": "e2caddaa-a6ed-412c-8564-db58e457984f",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "661d2193-8894-4670-80b5-109562bcfa2f"
        },
        "item": {
          "id": "afb8394d-15d7-4aa8-b2ac-9b958abb0ef9",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "43f2cdac-54cf-42b1-9e88-1fb61a5aac8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c604c2d-5024-4fbf-a06a-cdf882138a95",
        "cursor": {
          "ref": "9de673e9-005c-4829-a406-c1a82ca47e80",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "8168be5b-9182-4be0-a4d5-b2fe3641cfe3"
        },
        "item": {
          "id": "3c604c2d-5024-4fbf-a06a-cdf882138a95",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "9f30ac67-9bb6-4cf1-9e47-cd58cc7da16d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31e8bb1b-3d4a-490e-93f4-1af79ef3b6c6",
        "cursor": {
          "ref": "08164db6-9886-4cc0-b429-b2bef164ade6",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "3b0f7dd5-63e5-408b-a517-b33583a11067"
        },
        "item": {
          "id": "31e8bb1b-3d4a-490e-93f4-1af79ef3b6c6",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "7c441a4a-3c51-4fb6-9c8c-c8e05c0a6fa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3484e98-6508-4e30-8926-b9f93c99c5b3",
        "cursor": {
          "ref": "1d7ff6fc-8bdc-4d97-89c6-0988100263ef",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "4cd6be82-3bde-4985-8d85-c031319c8d1d"
        },
        "item": {
          "id": "c3484e98-6508-4e30-8926-b9f93c99c5b3",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "617a3874-2f37-4a4b-b75b-cb57d83f0795",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f25e40d-b070-460b-b091-c8ef256c5163",
        "cursor": {
          "ref": "89e592e2-7ed8-41de-a5ac-e4423b801900",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "45cb1762-1e9d-48ec-8bc2-91b3d8f36006"
        },
        "item": {
          "id": "4f25e40d-b070-460b-b091-c8ef256c5163",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "b1cb2c14-8602-437e-814c-343167d23d45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9edc3f1-a92c-47b2-8937-80785e190041",
        "cursor": {
          "ref": "ba706f36-bec8-4420-9b37-e812200f2cf6",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "fc931927-6d8c-497f-95c9-0c533a42a3ec"
        },
        "item": {
          "id": "a9edc3f1-a92c-47b2-8937-80785e190041",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "1e4af735-b1b7-4ac3-b5ef-1f07fefdd042",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7924c162-d6ab-4287-a034-9a3a0d63e1e4",
        "cursor": {
          "ref": "c346ec2b-e6fc-4d4c-83da-288d6a142a22",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "d894d8b1-2833-4fe7-82f5-4b637c759e8e"
        },
        "item": {
          "id": "7924c162-d6ab-4287-a034-9a3a0d63e1e4",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "e91ac2ab-1ea3-40a5-8054-665539d01429",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 112,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5f6f65d-b436-4ef7-91dd-b49dd60e7c48",
        "cursor": {
          "ref": "19110845-27d9-490d-85f3-5c4e803b0e68",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "bd17d46f-b35e-4d7c-ae81-c23dcafb7b01"
        },
        "item": {
          "id": "b5f6f65d-b436-4ef7-91dd-b49dd60e7c48",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "cbf62df7-02b9-4bd8-adbe-5fe7a2dd7126",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e3876cc-b5a4-49f0-ad14-5950196342b5",
        "cursor": {
          "ref": "f2461a7e-7690-4783-8f36-6c9fb1c8cf9d",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "6051ae06-9714-4223-b6d3-e662a5f47de2"
        },
        "item": {
          "id": "6e3876cc-b5a4-49f0-ad14-5950196342b5",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "6e2a777a-b817-4685-af45-9008a2e4cd26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efa1d106-337a-495c-bff4-79d4d69bca9b",
        "cursor": {
          "ref": "d175578c-0dd5-413c-aa5a-4111c4c5d0bd",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "e5f7a6c3-d1a6-46e3-8d29-6f71a7990138"
        },
        "item": {
          "id": "efa1d106-337a-495c-bff4-79d4d69bca9b",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "f2de6d3b-fd1b-4001-ad72-cccb947ac8a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6c04985-3120-4e76-9f6e-f43310b3c77a",
        "cursor": {
          "ref": "bc2f582b-3681-4782-b04e-24d4518ebe50",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "cf66dec4-835b-4f11-8729-071eef50422f"
        },
        "item": {
          "id": "f6c04985-3120-4e76-9f6e-f43310b3c77a",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "33063b29-bbd8-4c17-b4c9-df50c93b28df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08beab96-309c-4bf8-82d7-b7bd96584098",
        "cursor": {
          "ref": "2bd2155f-08a9-406e-b103-f3565e4fa7bd",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "c33d04c7-432c-4aae-a6f1-951f52605cc5"
        },
        "item": {
          "id": "08beab96-309c-4bf8-82d7-b7bd96584098",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "2f3171ad-d6e2-46ab-9ac5-b3c2c6a104e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "052e5e86-8e44-4843-9de8-94f81991c71c",
        "cursor": {
          "ref": "a76ebd3b-ea37-4713-a281-279fe6d46bc7",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "061d8307-9da9-4d51-bc38-df73ce71aca3"
        },
        "item": {
          "id": "052e5e86-8e44-4843-9de8-94f81991c71c",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "ea2b7d63-5e9b-433b-9f94-21b911b74e21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a09ae03-8983-4327-8298-98e23c4a2bc8",
        "cursor": {
          "ref": "5bbe8103-37df-4953-92e6-99bfa3e24c03",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "a7dfd3b5-8361-479d-ae1b-f21e82e4aec8"
        },
        "item": {
          "id": "9a09ae03-8983-4327-8298-98e23c4a2bc8",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "7a3675d3-7e79-4dae-892d-30c8b049f628",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb4898bf-a742-4208-8859-7a0dd83d43e8",
        "cursor": {
          "ref": "151a4d87-4e06-4cda-b178-cf50558c4eb3",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "6b572d58-5f8f-4e47-8e6d-e956f06aaa7d"
        },
        "item": {
          "id": "bb4898bf-a742-4208-8859-7a0dd83d43e8",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "f0e72b15-1068-47bc-a171-e60732cc9fd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee9df990-a16c-4d55-a075-919863ecb81f",
        "cursor": {
          "ref": "84e135df-8d54-41e0-bd90-e001238720d5",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "a1cfe70c-fed4-4cd8-84cb-d7911d367cc9"
        },
        "item": {
          "id": "ee9df990-a16c-4d55-a075-919863ecb81f",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "ba1423ec-bbfa-413f-a8f0-c259cb9121da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8581e3cf-bd31-400c-aa2b-2fa0473d9069",
        "cursor": {
          "ref": "50075778-08e0-4934-b39a-62773bee5f13",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "a435eb80-4869-4f2f-bfc6-e17585de8f82"
        },
        "item": {
          "id": "8581e3cf-bd31-400c-aa2b-2fa0473d9069",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "269e608a-5fc1-4a50-8427-e71d7b28c23d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5909b539-6332-4801-9158-269866331241",
        "cursor": {
          "ref": "f4b6d600-a14a-46cd-b6fc-86fbcd23d112",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "34e6389f-3091-40e9-b9d9-0ac163df0a5d"
        },
        "item": {
          "id": "5909b539-6332-4801-9158-269866331241",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "849909a8-1079-44b6-8125-f4e45c16db15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e109920-a90b-4942-8086-23ad6d4e13c9",
        "cursor": {
          "ref": "0b166e13-6973-4a7e-80b9-b80b6e99de55",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "689ad0c7-de74-4f44-8a9d-abb824fbd917"
        },
        "item": {
          "id": "2e109920-a90b-4942-8086-23ad6d4e13c9",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "4aae8978-084a-4ec8-8a8b-2336e555ed2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a10046a0-b730-4581-99bf-8f6eae6b501e",
        "cursor": {
          "ref": "0cef618d-3a3c-4214-8bec-1d0c6e000f5d",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "c8042fba-9a08-40fc-9654-9860e8a0bd08"
        },
        "item": {
          "id": "a10046a0-b730-4581-99bf-8f6eae6b501e",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "c1a1e858-622d-401c-97d6-3935d34b2483",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec075f08-8d35-4809-9a28-ea1a97ae83b4",
        "cursor": {
          "ref": "70410e4e-2199-4a80-973e-36a760cc1a98",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "88379b27-632e-4f78-b142-9e97e43881da"
        },
        "item": {
          "id": "ec075f08-8d35-4809-9a28-ea1a97ae83b4",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "829bd722-7c2e-4a64-82ea-175e302e6c41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4473f910-0779-4579-a5ab-795df0ec8ac8",
        "cursor": {
          "ref": "4a901318-fc04-4329-9d26-3a1dd1c8c657",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "e898020b-566a-45a1-a9c1-6a54b3f68a69"
        },
        "item": {
          "id": "4473f910-0779-4579-a5ab-795df0ec8ac8",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "eeabb980-3531-4af4-aae6-8d5741eaa83e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b437973-2ffc-4c0f-99ad-00464f3069e1",
        "cursor": {
          "ref": "da2883f8-0b30-473e-9545-68d199400598",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "35cc4d86-9177-4a2d-ac6e-17ad3412d1bf"
        },
        "item": {
          "id": "8b437973-2ffc-4c0f-99ad-00464f3069e1",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "1ada26ef-4a49-47ae-8a06-4acfa638fabb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9a24bd6-bfe1-45d5-a85e-2488c2ff9e41",
        "cursor": {
          "ref": "fd28e898-7a3a-465b-bd56-28222721254c",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "e50d9fb3-2674-4949-8588-fe89c515c36c"
        },
        "item": {
          "id": "f9a24bd6-bfe1-45d5-a85e-2488c2ff9e41",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "b704a817-5edb-4f97-b724-5ab3ca3c1715",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d568c37f-6508-453f-9d29-10847bd9a9ad",
        "cursor": {
          "ref": "a9af023f-ceb7-4fd3-84c0-9f8528b4e0d7",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "21e0db0f-c4eb-4dc5-8091-8e980063c566"
        },
        "item": {
          "id": "d568c37f-6508-453f-9d29-10847bd9a9ad",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "f6bfeac9-d1af-4c9e-8a09-7b137735419c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e301cb60-6835-4683-8e50-a8c600fae80b",
        "cursor": {
          "ref": "ecad1973-b315-4879-b882-0d2d32130f0b",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "aacfb8b6-05ec-480e-88a3-932955629dee"
        },
        "item": {
          "id": "e301cb60-6835-4683-8e50-a8c600fae80b",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "56a1bc42-67b9-4129-a622-5b41df2194ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47c2400e-afb6-4773-81f8-5e1f0a9e92ca",
        "cursor": {
          "ref": "eef14ea9-d57e-459e-8eb4-b2246b79fde4",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "7455bfc4-6a5f-48a1-a086-bb770527778b"
        },
        "item": {
          "id": "47c2400e-afb6-4773-81f8-5e1f0a9e92ca",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "d9e801c4-0279-4a21-8dea-db88359ada2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54e16766-b997-4cfd-a5bf-de2fa3e8b417",
        "cursor": {
          "ref": "53d09503-da28-498c-a23a-5b44a3c67297",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "03d76096-bdd5-45ee-8926-226cca12d0eb"
        },
        "item": {
          "id": "54e16766-b997-4cfd-a5bf-de2fa3e8b417",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "03ea644e-7077-4d46-998d-75ce4a55a6a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9206889-cc3e-4329-aa20-df314baf1d71",
        "cursor": {
          "ref": "85f189bb-3b5b-4f13-9ba3-7e81dfcef44e",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "df5eee3d-7585-43c3-b807-6c81f07a033d"
        },
        "item": {
          "id": "a9206889-cc3e-4329-aa20-df314baf1d71",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "3a5cc594-6e2c-4b6b-a8ce-01d3fdfc9e53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdad0e1a-623f-4d27-b291-573e402e314a",
        "cursor": {
          "ref": "84ce1154-b193-4df9-8045-9da85ba021a8",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "36bdc9db-e299-4d0a-8178-e6fe487548f9"
        },
        "item": {
          "id": "bdad0e1a-623f-4d27-b291-573e402e314a",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "d7d1202c-1595-4f35-b595-c4f6abe2ebf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b44a6f68-ce04-4ce1-af0f-a8f712de6521",
        "cursor": {
          "ref": "69770a7d-5962-48a3-8a1d-b1fe6cd77b58",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "a3ba0c43-18dd-4114-b592-0ac6702d1ac9"
        },
        "item": {
          "id": "b44a6f68-ce04-4ce1-af0f-a8f712de6521",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "7dcc3357-6568-4ecb-a4ee-af8aeb1ba27a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9754280c-e4e3-41ad-80fd-27fca56061d5",
        "cursor": {
          "ref": "9e575ae6-e84a-4d7c-af09-447942a28e89",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "5d89bd1b-c6cb-43be-990c-996db8932656"
        },
        "item": {
          "id": "9754280c-e4e3-41ad-80fd-27fca56061d5",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "0702bf3f-4b8f-4914-ab74-d8b2f86aa456",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4684827d-e810-4042-8c43-54fae1b72079",
        "cursor": {
          "ref": "920681fb-a99d-4691-8dc7-ccd7c0af41cb",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "efa93e1c-8a4b-4be0-8e68-092177c66d50"
        },
        "item": {
          "id": "4684827d-e810-4042-8c43-54fae1b72079",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "d887204b-d5b8-43f3-999a-15271bbea572",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d313c96a-10d0-49a1-b268-a4e76cc44ebf",
        "cursor": {
          "ref": "7c2889ec-602e-4d66-b8b2-9e85b2a3b163",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "68e67d49-c28a-49a8-9b28-e88dc4c88cde"
        },
        "item": {
          "id": "d313c96a-10d0-49a1-b268-a4e76cc44ebf",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "29dd111f-ae26-4f8e-8a6d-de09ec6ef461",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "027b4f85-bde0-4448-9798-c3b5da0b4fd6",
        "cursor": {
          "ref": "73b2e66e-cbca-468c-9d25-f8e112e3185f",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "be6e349d-bf13-4c44-a835-cc45b9fa9b64"
        },
        "item": {
          "id": "027b4f85-bde0-4448-9798-c3b5da0b4fd6",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "200ba4ce-b21a-479d-abd1-24070002ae06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "265ab2f9-a034-4eba-b3fc-2111d3f44d22",
        "cursor": {
          "ref": "f46dd2f6-85e7-4c09-a206-2fc8194f1846",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "eda61edd-01ea-4a1e-bed8-a076b8564698"
        },
        "item": {
          "id": "265ab2f9-a034-4eba-b3fc-2111d3f44d22",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "2648c4b1-d192-4f00-b087-f83c2dc61483",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7944686b-b7ba-4b8c-b02e-c94bc205f7e8",
        "cursor": {
          "ref": "68b80fdc-a22e-47e0-96d1-e87e4cbcbc71",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "77c13cc7-76f5-47a9-af7b-06cc5569ac61"
        },
        "item": {
          "id": "7944686b-b7ba-4b8c-b02e-c94bc205f7e8",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "53684b62-7bff-41b5-9c4d-021c9d276fb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9587cc2e-c476-4f8a-a638-7a5d8390d1ee",
        "cursor": {
          "ref": "b22fc70c-6a46-4376-946f-be029c2a4178",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "f14b82fe-fa00-4f54-a1e0-563877b7918c"
        },
        "item": {
          "id": "9587cc2e-c476-4f8a-a638-7a5d8390d1ee",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "f7d5eee8-03ca-47f0-8169-cf8e962c29e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99f2ca93-83ce-4f49-bba9-2a4febb073e0",
        "cursor": {
          "ref": "a1c8a4ec-6af2-4e65-a8ac-29b3d366264e",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "37191b35-2986-4bf1-b78c-6cd6a96748b5"
        },
        "item": {
          "id": "99f2ca93-83ce-4f49-bba9-2a4febb073e0",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "66fdf04b-9c6e-4031-b81d-4064b28b1605",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cb450b1-8b57-4893-87d2-7ee78bb66c3c",
        "cursor": {
          "ref": "20cccc1e-0078-45a7-b104-b2c07b6e7211",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "804b2efb-7b44-4c5e-8180-771910639ddf"
        },
        "item": {
          "id": "9cb450b1-8b57-4893-87d2-7ee78bb66c3c",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "2bcbdf89-43fa-49f8-9abf-1ec369fa8260",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d07832f-5db7-429a-adb8-eb04a1fbaa12",
        "cursor": {
          "ref": "968abdfc-2561-4480-99a6-44d7003ee77c",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "880f39fb-ae20-4c64-999f-c620ab22ffc5"
        },
        "item": {
          "id": "5d07832f-5db7-429a-adb8-eb04a1fbaa12",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "007ed299-4b0a-4125-8125-3bbb1a718685",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83e53e56-1484-403a-ba69-a1a42aab3b1e",
        "cursor": {
          "ref": "d5d47975-fda4-40d6-b84a-6c01acc1ba62",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "f3f566fb-2d1d-4438-a68a-05f844a6e6f3"
        },
        "item": {
          "id": "83e53e56-1484-403a-ba69-a1a42aab3b1e",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "064974de-e28e-4692-bb60-f1ed01215d24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b4c496d-1bde-4346-89a2-002c1ca33e77",
        "cursor": {
          "ref": "da28d8e8-cf7d-4e30-a53f-e644260f5379",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "d57fe264-f84a-4ae4-9318-9020c15dde1a"
        },
        "item": {
          "id": "8b4c496d-1bde-4346-89a2-002c1ca33e77",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "02ed42ad-d117-46c1-a875-6162664a003b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72e6ba8b-57ff-4243-ac2a-4cb5ae004ecf",
        "cursor": {
          "ref": "551b7249-0a7c-4206-9cb5-50b005e1a6fd",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "39833bb7-3441-4028-bfea-1121f7b94c4b"
        },
        "item": {
          "id": "72e6ba8b-57ff-4243-ac2a-4cb5ae004ecf",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "e19783ed-81bb-4a66-a493-f6ef1d420936",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0733b6d2-f18e-4351-b718-375444a8acb9",
        "cursor": {
          "ref": "0118e36d-945a-4e82-98bc-035d40949bd9",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "6aa617e2-f0f7-490f-b4b2-c091310e91f3"
        },
        "item": {
          "id": "0733b6d2-f18e-4351-b718-375444a8acb9",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "eb1194f2-892a-44c5-a6ff-fda65cbcfbcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b08aa17d-e1ee-46ca-a232-aa095d9256b1",
        "cursor": {
          "ref": "13f69d46-a306-43fc-9154-9cc5d51b0f7c",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "7701523c-0dbf-4e50-a981-15db5affe493"
        },
        "item": {
          "id": "b08aa17d-e1ee-46ca-a232-aa095d9256b1",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "21889147-3a29-4ae5-943c-52a28e48a75d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "592c2ba8-6090-4708-b83e-f68d4903a1be",
        "cursor": {
          "ref": "25268b8e-03f1-4ee9-8bfa-3c17fb20b8f9",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "458262ea-5450-4cb5-a334-8264570c7002"
        },
        "item": {
          "id": "592c2ba8-6090-4708-b83e-f68d4903a1be",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "78a0be95-4be1-4cd1-b1a1-0966fa32ae75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d758703-c330-49c9-b8c7-405f74752f15",
        "cursor": {
          "ref": "5d2adf5d-d47e-4ea2-8945-bf19926b8498",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "106d2d98-0225-41ee-80f6-a8c04038fa94"
        },
        "item": {
          "id": "2d758703-c330-49c9-b8c7-405f74752f15",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "640acbe0-296f-488d-8ec6-215ca033f00c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15de917e-3834-4677-b840-061b211737fd",
        "cursor": {
          "ref": "b4500891-4bcf-4367-b829-a42517a27997",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "a221ac5a-bf68-4521-bb88-86ebc2deb06e"
        },
        "item": {
          "id": "15de917e-3834-4677-b840-061b211737fd",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "6d5b6a1d-66c7-4560-9d2c-b27d0071dc0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e159d251-00a6-48dd-9fb5-3afbd3d2ee8a",
        "cursor": {
          "ref": "3f108d6c-e3bc-4172-a7e8-dd7d00d8dada",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "377a38ce-acc1-457b-9487-d0ca6f7aed32"
        },
        "item": {
          "id": "e159d251-00a6-48dd-9fb5-3afbd3d2ee8a",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "1da824a9-2603-4853-a4c9-418917e9b136",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9233765b-cdb8-47ce-8a5a-d65cf0ba5b41",
        "cursor": {
          "ref": "57fc37aa-c791-4394-a839-6a1c6aa3b921",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "c10a90eb-795c-4320-9136-ce2df90a87f8"
        },
        "item": {
          "id": "9233765b-cdb8-47ce-8a5a-d65cf0ba5b41",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "ce256cff-491d-430e-8402-239b0c482a71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d68c0203-b4e1-45a9-9661-25e87a6d0e7c",
        "cursor": {
          "ref": "b9df1dd8-679a-4313-8370-251c330904b6",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "2e4f4ea2-cd5c-4b07-b390-2477cf44a3c5"
        },
        "item": {
          "id": "d68c0203-b4e1-45a9-9661-25e87a6d0e7c",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "15d335cd-ba2a-4833-97ed-ad09d2dff529",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a267025-f83f-4ec9-9831-8a7ffb241133",
        "cursor": {
          "ref": "1c867499-3831-4282-a36d-a183d58a6d37",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "8661dc69-9744-4054-8b58-057e4aefcd1f"
        },
        "item": {
          "id": "6a267025-f83f-4ec9-9831-8a7ffb241133",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "41fa8306-aef1-4a53-9b08-4c8de3e3efce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5c42290-a70f-49f9-a098-d0d8a165b014",
        "cursor": {
          "ref": "67ad2834-1373-4f6d-a5bf-c74a0a26658b",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "2aa560a7-8527-4430-847c-16434ed91e14"
        },
        "item": {
          "id": "c5c42290-a70f-49f9-a098-d0d8a165b014",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "f67c9e05-be86-4a32-ba75-f5be00dcac5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c49bf9d4-de4f-4623-994d-f0da31acf092",
        "cursor": {
          "ref": "9b65040a-56e6-4615-a68d-34640f16b110",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "38ec1103-efe6-4705-9c6b-00e734356516"
        },
        "item": {
          "id": "c49bf9d4-de4f-4623-994d-f0da31acf092",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "58cfbe5c-a335-4a30-b1c2-35ba650393ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "301fddc5-674c-4a5e-af40-43a37283acb4",
        "cursor": {
          "ref": "5340c738-3e2d-45bb-9f70-3c6cc4049f67",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "7946d764-e4c3-43a0-b5ad-d1689421f6a7"
        },
        "item": {
          "id": "301fddc5-674c-4a5e-af40-43a37283acb4",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "9f5ddd10-c706-4d99-a6f4-bdc55134da0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5727d7c-b974-4626-a03a-ca40603ec9f1",
        "cursor": {
          "ref": "e2c6255c-1a4c-44ed-b26e-82313c3d704f",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "97834af8-ba55-4f37-8eb3-ae796b7817c9"
        },
        "item": {
          "id": "d5727d7c-b974-4626-a03a-ca40603ec9f1",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "ceffc8e7-54c2-4c49-abdf-e8ebd63a1c4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "522d73c1-d246-4efc-9ad9-d6483d0c5284",
        "cursor": {
          "ref": "4a5efa21-475d-417b-8205-8a3a0512e98e",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "81010016-246c-4c29-a767-c122ca1d4692"
        },
        "item": {
          "id": "522d73c1-d246-4efc-9ad9-d6483d0c5284",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "deeafe4e-095a-4695-9fc2-226bfe464cc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35e290c8-0f6b-4df1-815d-06938242651a",
        "cursor": {
          "ref": "5717d6de-68c5-4997-9c19-8c11dc2dab97",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "1cc0411d-ddd2-4415-a75e-acf8a196700f"
        },
        "item": {
          "id": "35e290c8-0f6b-4df1-815d-06938242651a",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "1a5d882e-a014-4748-864c-77cb4d69c365",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ffc688d-9527-41d2-af99-c74c63fb1595",
        "cursor": {
          "ref": "4e36308e-9eb5-45ba-a725-d79fb8cb5726",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "c46e8c19-8230-4d99-8313-2921f638b796"
        },
        "item": {
          "id": "2ffc688d-9527-41d2-af99-c74c63fb1595",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "e429d8c3-4714-43c3-89ec-4e450b0a673e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "115100c0-08a5-44ff-8698-b2baceec6c10",
        "cursor": {
          "ref": "e0cbc131-6329-47b2-b0c6-660a4d79492e",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "b130f5df-4044-448d-85ad-a7f33ea2150e"
        },
        "item": {
          "id": "115100c0-08a5-44ff-8698-b2baceec6c10",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "1cc553de-be57-4a8a-b3ec-6161698ec01a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "492a7946-a744-4b12-a3d5-1e4a1b5ebd7c",
        "cursor": {
          "ref": "8d4b0758-cbd1-4484-9b98-20a455656ffd",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "26e92489-8137-4741-b49c-ef8d0dc1be25"
        },
        "item": {
          "id": "492a7946-a744-4b12-a3d5-1e4a1b5ebd7c",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "4269e364-536d-4245-95c1-f5205e847baa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "145e9d83-f76a-4cbd-89de-c16bf1fa9513",
        "cursor": {
          "ref": "ecec48e1-e110-4d02-b98a-796b23f79a41",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "24802551-eeea-411e-808e-6f4756c7b8b5"
        },
        "item": {
          "id": "145e9d83-f76a-4cbd-89de-c16bf1fa9513",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "5fe26a90-74eb-4da6-a8c0-4b8453bdd941",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de04760f-81b6-4211-8601-d553be3424b1",
        "cursor": {
          "ref": "0a14e057-3ef1-45ae-95e6-0f02f7bbae6e",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "b498d6bf-505f-4fdd-8f46-457be83bfcda"
        },
        "item": {
          "id": "de04760f-81b6-4211-8601-d553be3424b1",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "73a71759-cfc7-41ca-a403-58a17eb31b46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9ac0fc7-1ce3-4d2d-91e9-606861f2952c",
        "cursor": {
          "ref": "3d0358ac-8444-4c1b-8499-2b45078248d1",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "74ca927f-0829-40b0-a5d0-ea17756c3b03"
        },
        "item": {
          "id": "b9ac0fc7-1ce3-4d2d-91e9-606861f2952c",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "5e8922d7-2919-4bd6-ac59-94ddec5f4d19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80e7e871-6e64-4127-a81e-94befcb37046",
        "cursor": {
          "ref": "9cdfd331-f09c-4dcf-8fde-b5dd9d333adb",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "8a78adf2-f557-44f0-aeb6-d1f96ea7bc64"
        },
        "item": {
          "id": "80e7e871-6e64-4127-a81e-94befcb37046",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "c4040be5-c81b-4044-97ea-bb5c2a540bfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d5544cc-349b-48dc-b190-489d0ad3cf05",
        "cursor": {
          "ref": "be8227d6-fb83-4cc2-83c8-3801cfdcbcf4",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "3c6f3bf9-4fe8-4401-b509-5b47884e79d3"
        },
        "item": {
          "id": "5d5544cc-349b-48dc-b190-489d0ad3cf05",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "c16bca98-f572-4f46-b431-b33a27478767",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0af529fe-da23-40e7-a1f5-56e0ef1221e6",
        "cursor": {
          "ref": "aabb0f85-91c0-4f3e-a0e1-5a8fcd963a29",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "dd9cab28-42ef-492a-b3c0-ae5ec6a60f06"
        },
        "item": {
          "id": "0af529fe-da23-40e7-a1f5-56e0ef1221e6",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "2912d1e6-5dbf-4ccd-b02f-3046e2caea47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c429261e-922b-44ac-a3d1-73eb1d30844c",
        "cursor": {
          "ref": "64b4f5c3-29fe-4965-8394-a8f770a3d175",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "f8f81dc7-b7e1-4f8a-abbe-4d80bff4b224"
        },
        "item": {
          "id": "c429261e-922b-44ac-a3d1-73eb1d30844c",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "e10c4b24-58fe-4b92-9b22-446b415dc8fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d686c15-2d92-4366-8c07-c9881566c4b8",
        "cursor": {
          "ref": "cf2859aa-95ef-4e1e-a21b-7ea426303a80",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "0d30f9cf-d767-4ce6-8284-4271dcfcc547"
        },
        "item": {
          "id": "6d686c15-2d92-4366-8c07-c9881566c4b8",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "ba2cb2e8-0411-4d93-b0c5-0837fda85761",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95ffe121-6b03-4034-8b31-5f1c46170a4b",
        "cursor": {
          "ref": "96f53783-4a81-497d-b535-cb20db89c59e",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "9b77a120-eefc-4375-b886-c1eaf06b67df"
        },
        "item": {
          "id": "95ffe121-6b03-4034-8b31-5f1c46170a4b",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "f9c62621-97a6-433d-af8e-3d15bb696644",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97610059-349f-43dc-959b-44140487d1bd",
        "cursor": {
          "ref": "e2cbd6c8-f231-4bee-8e4a-a81ad894b1eb",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "614c7338-98ae-41b6-affb-ae766a5b9241"
        },
        "item": {
          "id": "97610059-349f-43dc-959b-44140487d1bd",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "d73f1cf5-832b-4390-9222-2a86b03ce109",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aad05842-8bca-4693-b82d-475ed4d1ec29",
        "cursor": {
          "ref": "3ddb76ef-82d2-4056-95aa-857481a91247",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "d74b94ed-07a6-4a2c-a3ee-b8ef4b22922d"
        },
        "item": {
          "id": "aad05842-8bca-4693-b82d-475ed4d1ec29",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "ebfa413f-a9b9-4f11-a08b-664faa291544",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beb42968-a503-483b-828c-8cc3227b31fb",
        "cursor": {
          "ref": "43700d78-25a6-422f-a5ac-82be72ce25be",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "baea4c9d-ccbf-4364-95f8-32aad5b1f9f8"
        },
        "item": {
          "id": "beb42968-a503-483b-828c-8cc3227b31fb",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "9fb7d35f-3ccd-4ec0-a78c-92e8c3dc728e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "888da739-3813-46a6-a286-2865af8e623d",
        "cursor": {
          "ref": "80210653-9392-4dcf-ae8b-9116d99ebb89",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "0c1388b7-98bb-4067-b23a-9e303d304ba5"
        },
        "item": {
          "id": "888da739-3813-46a6-a286-2865af8e623d",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "afab5e67-f97a-4c76-b8e9-11794084002d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "569e93fd-69fd-4342-903d-15af5aeb3fb5",
        "cursor": {
          "ref": "892c2206-87da-43fe-8d28-79deb6e9102d",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "42b88fbc-698d-49ca-b207-95777e60b93c"
        },
        "item": {
          "id": "569e93fd-69fd-4342-903d-15af5aeb3fb5",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "7a33347f-9930-4643-8cc0-bbb4209c9efe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc3f788f-0721-422c-8d1d-db0d24f367fa",
        "cursor": {
          "ref": "9751e864-39c3-4ee0-b4b3-1816f31b3c13",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "831d26da-23fc-483b-a40a-2f90e5561037"
        },
        "item": {
          "id": "dc3f788f-0721-422c-8d1d-db0d24f367fa",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "93ada857-9110-4c50-bfc8-da3e438820d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c5d52d6-12dd-460e-b698-00a37b260345",
        "cursor": {
          "ref": "206f6faf-6dde-4df8-a423-91f7e3d12d50",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "4ab9d9e4-0336-4d08-9118-f6b578762067"
        },
        "item": {
          "id": "5c5d52d6-12dd-460e-b698-00a37b260345",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "4418b991-a612-4921-93ec-a40efca82c9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cefc3a88-ab9a-4bd2-9526-e9124a1fb8dc",
        "cursor": {
          "ref": "2e9f1db3-2308-438b-89ff-6d14e9a8a336",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "ea37f4cc-90f2-4af9-b050-0a622ec23fa4"
        },
        "item": {
          "id": "cefc3a88-ab9a-4bd2-9526-e9124a1fb8dc",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "04b4376b-bd02-4268-a9be-28a53f2b58db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6f49090-de38-4d61-9ab3-bf96cd8168c4",
        "cursor": {
          "ref": "11bff527-3aa9-40e0-b73b-a4651fa0048f",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "d69bfdec-2278-4826-8da9-d7b35dbcedb7"
        },
        "item": {
          "id": "e6f49090-de38-4d61-9ab3-bf96cd8168c4",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "25f57d8e-677a-4ffb-9339-71be42932b09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a348ad3e-8dac-459f-8ec6-aa3240e0f971",
        "cursor": {
          "ref": "daba608b-e4a6-44cf-b2f9-753898ac3e79",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "0a9e5726-4e98-4c48-b68c-ced7f7d5c8ae"
        },
        "item": {
          "id": "a348ad3e-8dac-459f-8ec6-aa3240e0f971",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "f2d2d43f-8de6-46c2-8d15-db1f42d1981c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff396cb1-e7f5-41fd-a7b0-67725f2f7ca2",
        "cursor": {
          "ref": "5f55c28b-3767-4389-b14e-84ce00f538a5",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "560d7e7d-40b1-4280-8ca2-5b3f7887f1db"
        },
        "item": {
          "id": "ff396cb1-e7f5-41fd-a7b0-67725f2f7ca2",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "febfdfe8-f081-4563-9ebc-bb301677855f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "635796bd-69ee-40db-938a-6ac674f6c45f",
        "cursor": {
          "ref": "db88fe52-9fc3-4521-96c6-7e874bea99bd",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "1829b68b-757f-47fb-abb1-0e2f3ab66bb7"
        },
        "item": {
          "id": "635796bd-69ee-40db-938a-6ac674f6c45f",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "369ddf1b-4247-4788-a70a-84fb4fb2a1b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "548d3e1d-c28f-4cf7-a734-a9769d4199f6",
        "cursor": {
          "ref": "f669169a-6a53-411f-8418-50536aa0d20f",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "ecfe6e9f-6677-4e06-842f-0e66616f0221"
        },
        "item": {
          "id": "548d3e1d-c28f-4cf7-a734-a9769d4199f6",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "018d9155-f0e3-4d60-b71d-12c0f89b634b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f0856b8-7cd7-4de3-a0d9-6d1cdfb16ac4",
        "cursor": {
          "ref": "d203c6c5-ab0f-400c-8e28-899d22a16792",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "155db9c2-ffbe-4ccf-8fc4-2cf7c3bb32e9"
        },
        "item": {
          "id": "8f0856b8-7cd7-4de3-a0d9-6d1cdfb16ac4",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "5edf4c45-1f3e-454d-8e6f-fa4bdb6f2c5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccfd15e6-ca14-4e28-b11c-6bddf11c1a22",
        "cursor": {
          "ref": "b728575e-fb2c-40c8-8257-31086c391fe2",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "d1a653b4-4b4b-4a9f-8d50-f4acf126b70a"
        },
        "item": {
          "id": "ccfd15e6-ca14-4e28-b11c-6bddf11c1a22",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "e2212ec7-dd2f-4ba3-8d46-9feb09b0eb8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7c1eae3-6465-4484-9854-e8095dbde275",
        "cursor": {
          "ref": "ba665f67-3f98-40fd-a469-8e239cc6ba81",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "46aaa571-61df-4d49-9f92-ecdd2fe4a3d5"
        },
        "item": {
          "id": "e7c1eae3-6465-4484-9854-e8095dbde275",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "2042c6cc-4eeb-47a0-8c30-66f90cb59a80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "098b4c03-0d28-4457-8828-26b6623f13a5",
        "cursor": {
          "ref": "650219a9-508e-4e1d-9f6e-556c6fa77bda",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "3590ce37-2eca-4b66-ab0f-0d8630ae966d"
        },
        "item": {
          "id": "098b4c03-0d28-4457-8828-26b6623f13a5",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "9ffcecbd-d6f9-4467-9f07-f62ac54be383",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b799fcd4-85c8-4d15-89ea-44ed27714fe6",
        "cursor": {
          "ref": "b1ce5a8a-5597-4071-b8e2-f2bdaa6c14eb",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "bfd95766-f4d1-4b3a-ab6c-85a8859f1d4f"
        },
        "item": {
          "id": "b799fcd4-85c8-4d15-89ea-44ed27714fe6",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "d5095b29-4a81-4acb-a9b9-6702a4a95584",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcc5d657-06ad-492e-8f30-9a840ea726e6",
        "cursor": {
          "ref": "13500a39-275e-4d34-873a-be0df8bf9d30",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "5ccb6dcc-70f8-4510-9fff-ea15c243e72c"
        },
        "item": {
          "id": "dcc5d657-06ad-492e-8f30-9a840ea726e6",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "a96c39db-6730-42b8-bb19-05f0d33389fb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 21,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4dfb1e2-1a73-41c0-a2dd-43981eaa758f",
        "cursor": {
          "ref": "5f5864d3-3f32-4bbc-933c-cfd12d10fb8c",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "2955b0cc-c263-424c-95fc-592695ed5f1f"
        },
        "item": {
          "id": "c4dfb1e2-1a73-41c0-a2dd-43981eaa758f",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "7e7b649f-3d78-44d4-b13e-3f964f90aefd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "09063973-2e88-4b61-922d-418862919fd3",
        "cursor": {
          "ref": "75d679c9-bf3c-4a9a-a7a1-bf2b3a94166b",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "277d11b8-c1c1-4b15-b0a2-0cac6b7bd9ff"
        },
        "item": {
          "id": "09063973-2e88-4b61-922d-418862919fd3",
          "name": "credentials_issue"
        },
        "response": {
          "id": "805ffdd8-864d-4c41-8d73-51ec356388bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "8ac0f2f1-0fd7-46ee-8adb-a407cd3d6dd6",
        "cursor": {
          "ref": "2af1144e-f932-45bd-a17f-7f512f7bc59b",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "964ba37b-125c-4308-89a8-f759fec769a7"
        },
        "item": {
          "id": "8ac0f2f1-0fd7-46ee-8adb-a407cd3d6dd6",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "45c09032-8f50-4355-bc38-6194554cd218",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "7c878ce5-8400-4c35-906b-e636f6614000",
        "cursor": {
          "ref": "74b762ea-d87b-4ecc-a898-7addc9a7b1fb",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "39678694-2cdc-4349-b77c-e92e11cc5581"
        },
        "item": {
          "id": "7c878ce5-8400-4c35-906b-e636f6614000",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "22e1691e-2c03-4e72-9aa0-f9cc82546a2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "a22fe2a7-82c7-4ecb-b17f-51c762434f05",
        "cursor": {
          "ref": "14996e98-3670-470f-97cb-4f654e037993",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "cadbdba4-ba56-45c5-993f-bf4e66cce97d"
        },
        "item": {
          "id": "a22fe2a7-82c7-4ecb-b17f-51c762434f05",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "c61114c2-5030-4650-a2de-183636255c26",
          "status": "Created",
          "code": 201,
          "responseTime": 12326,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "7263bbc6-1f46-4652-859e-d0972305b4bc",
        "cursor": {
          "ref": "142d545d-6c03-4c90-8b30-3a6309b729ea",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "1f49ccc5-f68b-414b-9b9d-0487d85867c8"
        },
        "item": {
          "id": "7263bbc6-1f46-4652-859e-d0972305b4bc",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "5d0ad0a0-85a2-416b-953c-db687ccea597",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "b2e0ef1f-575b-4b3b-b4b4-d4d7e59d9946",
        "cursor": {
          "ref": "ea93c257-ecd4-42bf-8481-1fd013b416df",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "349d60b6-cc99-4108-88a3-227747974dd2"
        },
        "item": {
          "id": "b2e0ef1f-575b-4b3b-b4b4-d4d7e59d9946",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "63ead312-9003-4bb2-a2d9-95e5f71b65d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "455e14b8-f6c1-44e4-927b-3275553fc69d",
        "cursor": {
          "ref": "7d5c4fd1-bed0-47d6-8299-bb50b3b936e4",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "201e83bb-a008-41c4-b739-6ba0a277e7aa"
        },
        "item": {
          "id": "455e14b8-f6c1-44e4-927b-3275553fc69d",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "bb9c8a0c-8d1e-4734-ae26-3b97380b1faf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a82533c6-8de9-43c8-aadc-c0f07d49a064",
        "cursor": {
          "ref": "581f28c4-96b2-42d4-962e-2184d363fa1c",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "8b41bc69-9c25-47f4-af1f-5b082c7fc9a3"
        },
        "item": {
          "id": "a82533c6-8de9-43c8-aadc-c0f07d49a064",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "10aad5a1-cf32-4e85-bae0-6c09ea95db64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26618bd9-cdfc-4f7e-a49b-fee3241397cd",
        "cursor": {
          "ref": "bb583a0d-adf8-449d-bd00-c7ba9392a029",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "a7f2364b-014c-490d-a1e8-426ba22bafca"
        },
        "item": {
          "id": "26618bd9-cdfc-4f7e-a49b-fee3241397cd",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "480de3d1-347d-4117-b965-4fa6c015b466",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a98c1b3-1114-4c23-b076-3c299068ad20",
        "cursor": {
          "ref": "b74dc3e8-eb10-4401-8343-6898a21ff109",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "a446fa79-e883-45e7-a3f9-b0b66f1aa606"
        },
        "item": {
          "id": "5a98c1b3-1114-4c23-b076-3c299068ad20",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "ab9af616-d726-4067-9fb0-6610b29b1ed6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da7dd18a-959d-4364-ba00-e7ca54320e9c",
        "cursor": {
          "ref": "34fc8fda-c107-4920-966c-171a2c068163",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "b8d17236-17bf-4d17-a185-921f8795186e"
        },
        "item": {
          "id": "da7dd18a-959d-4364-ba00-e7ca54320e9c",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "c2a68d63-95c7-4499-8ce8-51a022c857b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "634c6f56-cfbb-4221-a771-61101bc2f26d",
        "cursor": {
          "ref": "5b142be7-fe1b-471f-bd0e-aeec6564d8d1",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "adab39ca-9d4c-4c0f-823c-4b2cefb6fbcd"
        },
        "item": {
          "id": "634c6f56-cfbb-4221-a771-61101bc2f26d",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "d5b4720e-88ce-4495-b213-70edc01c2bd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "950cfc24-8f94-487c-9a12-762bccbb991c",
        "cursor": {
          "ref": "531ff7d9-b298-4a0d-b91b-a38463ce761a",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "5247fef6-132d-4505-8d53-5bb6d9aa7580"
        },
        "item": {
          "id": "950cfc24-8f94-487c-9a12-762bccbb991c",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "e4947573-4e9e-4e6a-b6a0-ebe34fc7d91d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a22dbcf-699c-4863-85d6-918599578338",
        "cursor": {
          "ref": "fa8e73de-1b3a-41e9-b738-bbca8263ca23",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "99357365-495e-43ad-9964-ca4faafe48ab"
        },
        "item": {
          "id": "0a22dbcf-699c-4863-85d6-918599578338",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "207f9bc0-1360-49ac-96bc-307c8def7ad8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "849be0cb-4fc6-4f5a-ab5a-edfc4974bd5b",
        "cursor": {
          "ref": "e524c62e-5e18-4d58-988a-604a5369a2e9",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "f9458166-46a2-4a24-8f81-e3895ec7ea16"
        },
        "item": {
          "id": "849be0cb-4fc6-4f5a-ab5a-edfc4974bd5b",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "660d3e3a-4619-4f8b-85d8-f8fd55bb2eab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7f5f56e-3c29-467f-8b08-fe2aeb8891c6",
        "cursor": {
          "ref": "e26766ff-a363-4b3d-97ac-00c724a07ce5",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "7dc82fd6-500f-4ecc-be46-84d75bd8df11"
        },
        "item": {
          "id": "d7f5f56e-3c29-467f-8b08-fe2aeb8891c6",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "4b4e8f5e-aa50-4345-99ef-47cc42c14b58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b839a0ab-e4e2-48bd-bcbf-3e70dc4cacf9",
        "cursor": {
          "ref": "ca0a6dc5-ad82-4076-b507-d2255dc32e3d",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "55b77d0e-90ee-4d61-8f15-411b11921149"
        },
        "item": {
          "id": "b839a0ab-e4e2-48bd-bcbf-3e70dc4cacf9",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "7f2e4a67-6f3c-4a30-94cf-55bfa766eb18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6f1e281-cdfb-449b-960c-2b6ccb5f26e7",
        "cursor": {
          "ref": "35d1ab32-3c10-46d0-b5b3-9a3ebe6c6d07",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "ac64f6ca-6e59-4d9f-8238-fbe8bbf22a2e"
        },
        "item": {
          "id": "a6f1e281-cdfb-449b-960c-2b6ccb5f26e7",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "662b0b03-28df-436f-bd7d-090ac1834ac2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a73fab7-81a8-4e93-aad8-a0dae6762c7e",
        "cursor": {
          "ref": "68520fa5-ff26-462b-95ea-f1e862c39b9a",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "c65f2af5-7a43-4d44-874d-49b5ec782de3"
        },
        "item": {
          "id": "8a73fab7-81a8-4e93-aad8-a0dae6762c7e",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "175bff9b-f9d6-43cb-83e6-d383866e8858",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c38398f4-6c21-49e3-b1cb-306f8333a631",
        "cursor": {
          "ref": "74f0634d-19d2-41c6-9c7f-d9c663a402c3",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "b5f74ef4-2962-4b82-be1a-ac188ba01d0d"
        },
        "item": {
          "id": "c38398f4-6c21-49e3-b1cb-306f8333a631",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "add989b7-cd1f-4db1-8fb1-8b69775f85fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b518d24-bda2-4c23-952c-10d754fd41ec",
        "cursor": {
          "ref": "d7b5c0d2-cdc0-40dc-8ada-62000297f53c",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "534bb628-c007-434a-b7a0-2dd2a5cc7bf7"
        },
        "item": {
          "id": "2b518d24-bda2-4c23-952c-10d754fd41ec",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "a524c676-6f45-4004-9c35-a369efd294c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4f87bac-88b0-4d1d-ac5f-ac7196cb8fb0",
        "cursor": {
          "ref": "a59400d3-5d45-4647-8d77-78371f19d57e",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "50a8d197-6a6e-4ce2-a9cd-07d4c6d84665"
        },
        "item": {
          "id": "f4f87bac-88b0-4d1d-ac5f-ac7196cb8fb0",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "2f771b00-d04d-4a44-813d-c7686be08cab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d14bddb1-e27f-4c32-8384-2ec0cc520444",
        "cursor": {
          "ref": "2a0b51ea-6582-4bf9-a338-f5d004e50445",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "492f41c4-5529-4991-8d3b-dafbd17d9a16"
        },
        "item": {
          "id": "d14bddb1-e27f-4c32-8384-2ec0cc520444",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "db32d0f0-b04b-41da-a300-93362c3f0c9c",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 89,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "91164553-508f-4b4d-b298-184a0fbb79d7",
        "cursor": {
          "ref": "97872c1d-509e-46dc-8237-14a76f11e8a1",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "cbd5406c-36ec-48fb-8322-8174db6a2a22"
        },
        "item": {
          "id": "91164553-508f-4b4d-b298-184a0fbb79d7",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "f41d357d-dee1-477c-b7f4-1ff5e6274172",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a7b75e2-6853-4e5a-9377-da6e37a46e70",
        "cursor": {
          "ref": "2c14f0d7-cec1-4b23-b784-28ea9105b0f6",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "f6854aa5-8c72-41bc-9dfe-549b3977ad57"
        },
        "item": {
          "id": "1a7b75e2-6853-4e5a-9377-da6e37a46e70",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "1238e725-75bd-444c-8466-7d3094d77478",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9674229b-f73e-4337-9b45-077378844c53",
        "cursor": {
          "ref": "a2372136-e932-49e9-9a10-c646b62866d0",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "074426ef-ad8b-452c-80e9-0c279b75c01c"
        },
        "item": {
          "id": "9674229b-f73e-4337-9b45-077378844c53",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "a2d044ae-3d90-44c1-9fc6-2f82d6dd9f6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6795124-9171-4975-be6a-b50fb9aba618",
        "cursor": {
          "ref": "fdd00877-0c58-4a29-8c98-d66a0525f48b",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "f5f083fc-e4c4-4144-9194-cb4cb39c8ec9"
        },
        "item": {
          "id": "b6795124-9171-4975-be6a-b50fb9aba618",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "ebed0680-cdce-49ee-aed4-0d86e1187177",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9a47e75-8c01-4b49-a48b-3e85323a09ba",
        "cursor": {
          "ref": "52d0b11b-a705-4243-8564-265acbc6992e",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "dee067b4-7498-4683-919c-e6ddfbdd482b"
        },
        "item": {
          "id": "e9a47e75-8c01-4b49-a48b-3e85323a09ba",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "e588d1fb-5300-4b41-9ce3-c1f05bc8d5da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d09afd62-cdcb-4860-a191-45fff63c6152",
        "cursor": {
          "ref": "7f3b0303-a019-4164-a02b-4379d0194ada",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "3f8bbb4d-0a12-4861-8eee-443c02d78fd4"
        },
        "item": {
          "id": "d09afd62-cdcb-4860-a191-45fff63c6152",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "a90ca360-e463-4101-9255-03ec630c3ba9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24c2d431-c0df-429c-9a94-57778e2a9513",
        "cursor": {
          "ref": "1d7ad3cb-8ecc-4d3c-ba18-6d7032bad01b",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "7a9bcbc2-f7d8-4fde-9287-b2b22efcadcc"
        },
        "item": {
          "id": "24c2d431-c0df-429c-9a94-57778e2a9513",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "a3242835-687e-430e-8224-3e2b10fa9bdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41a579ca-8128-4d00-9a6a-73253650fd80",
        "cursor": {
          "ref": "67fa085f-a64a-4fba-b849-3aa48c9bf774",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "1be5a55a-0f93-4807-a8de-874b790206f6"
        },
        "item": {
          "id": "41a579ca-8128-4d00-9a6a-73253650fd80",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "3a764dda-98aa-491a-8cd7-d9b76db3c565",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 31,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "39471456-8b4a-4c22-983e-51875fc727fa",
        "cursor": {
          "ref": "e93b2ee9-c740-407f-af70-071d7f4884c1",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "6cb9f7ad-71d3-4a88-9230-cb9bc898bfa5"
        },
        "item": {
          "id": "39471456-8b4a-4c22-983e-51875fc727fa",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "98e8fb8b-ab01-432c-b901-5249152f89b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0a4a391-a031-408b-896d-8a13a7c99498",
        "cursor": {
          "ref": "ed6a9498-486c-4a9e-b909-c7b42ab5c1e7",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "d70606ff-6239-4e55-aedf-bae1dc61bb6c"
        },
        "item": {
          "id": "a0a4a391-a031-408b-896d-8a13a7c99498",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "8924ce94-f401-4392-9f6b-24720e583901",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d94945a5-2a30-4c0f-b0d4-94e878e951a9",
        "cursor": {
          "ref": "f30122ec-a859-4d81-9e5e-3d7d659c49a4",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "b01cc458-7272-445b-87aa-1b7cd51e72e5"
        },
        "item": {
          "id": "d94945a5-2a30-4c0f-b0d4-94e878e951a9",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "c7ff83e3-286e-4b16-bd5a-b7f70fe826eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab1d88fd-65f7-4c79-bf33-316470905dd1",
        "cursor": {
          "ref": "659b157e-7f22-4391-9286-15d390f5396d",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "e1885c93-1669-4bd4-b462-f48635870888"
        },
        "item": {
          "id": "ab1d88fd-65f7-4c79-bf33-316470905dd1",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "04f189c0-fe03-4e8d-9984-fae2c046202f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79b90adb-a3b3-4e6c-b6dd-9546cb2f1806",
        "cursor": {
          "ref": "2feeaa14-fc0f-4599-a975-8a30e50e15e1",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "40c13f3b-adeb-44f1-a84a-5a56b1bdb614"
        },
        "item": {
          "id": "79b90adb-a3b3-4e6c-b6dd-9546cb2f1806",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "2f3d8243-be18-4dac-b4cd-3ce78fda84a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1a0db0c-21fc-4050-a819-697d130e749b",
        "cursor": {
          "ref": "22d9febc-21dd-4feb-9ab0-c9f953b6ccff",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "88c038e9-06f5-4628-b222-455fcef453bd"
        },
        "item": {
          "id": "d1a0db0c-21fc-4050-a819-697d130e749b",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "57f46706-4e43-4a9d-a077-d0d8beda8bd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "298a5dfa-b3d9-45b8-a8eb-3744e5b4e0fc",
        "cursor": {
          "ref": "6723c571-3f1a-4b5d-9b1f-9354bb019d7e",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "9577da9a-3d77-41f2-984a-b667f1fc482c"
        },
        "item": {
          "id": "298a5dfa-b3d9-45b8-a8eb-3744e5b4e0fc",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "096f464d-481b-4196-9608-cdef1b42fd01",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 30,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "65e1d56e-02ee-419f-9bae-07d3fa7d8107",
        "cursor": {
          "ref": "70b78a09-bb6f-4573-8f2b-6f4932ef76b4",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "ce777de2-36c6-4cbd-9ba5-9365ea8a0eb2"
        },
        "item": {
          "id": "65e1d56e-02ee-419f-9bae-07d3fa7d8107",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "24078258-f7d8-433d-88d5-a51e21c6d1b1",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 27,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "423a3d0e-2fd9-4f9b-813e-c8a67fed28a8",
        "cursor": {
          "ref": "9bc1ba61-322e-4aaa-8b11-b0c59cf122b3",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "46d27c46-ce34-438b-bbd8-e9d69f689f5a"
        },
        "item": {
          "id": "423a3d0e-2fd9-4f9b-813e-c8a67fed28a8",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "0669adb1-ac34-46a6-9276-9c2f73ade2bb",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 28,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "d2125b7d-fbde-4b30-9d6f-ba884b0db2ac",
        "cursor": {
          "ref": "de56580d-593b-4dde-a0f4-6732555ac38b",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "ea92a36d-2a69-42cf-82f0-00e311e939b5"
        },
        "item": {
          "id": "d2125b7d-fbde-4b30-9d6f-ba884b0db2ac",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "39b88259-e982-43eb-b88b-3c129ce8a709",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 102,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "163f6bce-a6bd-42bf-9ea3-1507677a2a34",
        "cursor": {
          "ref": "4e2bbcfc-6ffb-4e08-98e4-007d61249f50",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "a63d6b16-ed8f-41cb-a618-1372dfd92b23"
        },
        "item": {
          "id": "163f6bce-a6bd-42bf-9ea3-1507677a2a34",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "e8766aa4-c690-4b5f-83f5-62d30d99025a",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 55,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "d347008f-241b-4237-bcd1-c5f25e323a39",
        "cursor": {
          "ref": "981b8284-9b07-4665-961e-02ce63813ad4",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "fd84c428-7217-46f8-9c3e-9d0d03e7c4a0"
        },
        "item": {
          "id": "d347008f-241b-4237-bcd1-c5f25e323a39",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "3685b5d6-9217-423e-b485-ca1917095cd6",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 26,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "0e7b6f34-81b4-406d-8abd-a181e912e81c",
        "cursor": {
          "ref": "c5dc5395-9aa6-4bf7-b67c-58aa38f6d6e3",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "a9364156-fc0b-4b07-a130-0de60b0eb259"
        },
        "item": {
          "id": "0e7b6f34-81b4-406d-8abd-a181e912e81c",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "89c7f45e-2818-4970-9f35-924c128bc828",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 19,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1358d8cc-c7ba-4aa1-9acf-d5b9ee8646cf",
        "cursor": {
          "ref": "94bae2ee-0871-4348-bc0f-f6ca23420052",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "0658a798-65c4-44f2-a874-c7e43459aa73"
        },
        "item": {
          "id": "1358d8cc-c7ba-4aa1-9acf-d5b9ee8646cf",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "3bdb02e8-b71c-4d5b-a36d-5ae628eaefe9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75d516f8-b070-49e0-a837-52b7d88aa1a7",
        "cursor": {
          "ref": "64267064-6ded-4ef7-9d08-d9ed5aac3673",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "8e008bc6-86c6-47d7-af7e-6bf7310370db"
        },
        "item": {
          "id": "75d516f8-b070-49e0-a837-52b7d88aa1a7",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "642766a9-e0f5-43a5-a8de-1ae5ec0866aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41d9e000-7220-4a5a-b967-b68ff9c53d59",
        "cursor": {
          "ref": "a196faba-c16b-4f54-aa22-438e10afc4ab",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "3bf57646-c839-4c44-a634-49b31ca00f73"
        },
        "item": {
          "id": "41d9e000-7220-4a5a-b967-b68ff9c53d59",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "7281c373-4ec1-460d-9e82-d58a291e69bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a92d274-d0e0-41cb-af11-14278195d6b9",
        "cursor": {
          "ref": "886d3d00-46ea-40c6-a7c9-bbe818fc389a",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "60423f1b-bc0d-4eec-8f9f-341a779c5ad2"
        },
        "item": {
          "id": "9a92d274-d0e0-41cb-af11-14278195d6b9",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "20ce7f66-6e5d-402e-a9e8-a6517b74f03c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baa255ec-d440-4923-a6be-ace450869747",
        "cursor": {
          "ref": "92a69fcc-4e09-4f6d-a191-86b651a6e0f5",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "da756571-1c85-4799-8f73-df1559f733f9"
        },
        "item": {
          "id": "baa255ec-d440-4923-a6be-ace450869747",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "128256ca-5976-42a1-8ac6-89442aabff54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bc418c1-c250-4a84-9ec8-116f9e60d534",
        "cursor": {
          "ref": "cedb029e-84f3-4fa5-a9e2-5ea2bf64e040",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "ad597d9f-a582-40b6-a4be-1fc33fa057be"
        },
        "item": {
          "id": "5bc418c1-c250-4a84-9ec8-116f9e60d534",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "8fb1257b-3bab-4beb-8a07-9acac8069dbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa093aa2-0659-4c5f-91ec-0e896adb9aee",
        "cursor": {
          "ref": "bfb72a7b-0aaa-444a-9722-13b694dce858",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "9a108194-d9f2-4be5-96c0-5684eb3fb060"
        },
        "item": {
          "id": "fa093aa2-0659-4c5f-91ec-0e896adb9aee",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "e0b35574-732a-4bfc-8e25-4699e43abca6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80c53c75-fa64-4950-b4bf-083682876d15",
        "cursor": {
          "ref": "ac377865-8c55-4869-8c2e-66eded74b762",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "75889b9d-2fbb-4765-8653-9337e31df968"
        },
        "item": {
          "id": "80c53c75-fa64-4950-b4bf-083682876d15",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "02de7f51-4cba-4437-9096-8a43f8a1c671",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c464de3-5f6c-40fa-85e2-61a438896138",
        "cursor": {
          "ref": "a7b34ff9-d7cb-4cc9-94c6-2b6f9dcfb769",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "f97ebb4c-410c-47db-8220-ca57541e4964"
        },
        "item": {
          "id": "1c464de3-5f6c-40fa-85e2-61a438896138",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "e6dc91fa-4028-4d41-a058-1aa3239077df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fecb89f-c836-41c7-962d-0b82df2e23bb",
        "cursor": {
          "ref": "8c0814c2-3b6c-4ac1-850f-7751a331c780",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "cb8b22ef-d572-455a-a969-138f1e70d682"
        },
        "item": {
          "id": "4fecb89f-c836-41c7-962d-0b82df2e23bb",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "410d011e-3d4d-4bea-8048-3da500e01813",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df0cd6c2-b1be-4fce-8e5a-6db5e8143f76",
        "cursor": {
          "ref": "a39ebcde-0fb3-4662-9a9d-885c55a98bc5",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "4687fe41-eeb6-49a9-a784-9d49d052b7b1"
        },
        "item": {
          "id": "df0cd6c2-b1be-4fce-8e5a-6db5e8143f76",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "1b2a99b4-7d6c-40c5-ab6e-0b6f27ee7c6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb83e4e6-921f-46e3-9907-2548456d4bb6",
        "cursor": {
          "ref": "feb2c10e-003c-4797-8984-97ed9934a90f",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "474324f1-b42d-4e89-a6ab-47a2f2855304"
        },
        "item": {
          "id": "cb83e4e6-921f-46e3-9907-2548456d4bb6",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "6695e78d-c7de-46ea-aa7d-4e80c4b49892",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bace3bc5-3875-4662-a861-f7b67f528f61",
        "cursor": {
          "ref": "31357e06-7939-4aae-857d-3716f27fbeb6",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "5153e85c-68d3-47c0-91f2-9fe5872ed586"
        },
        "item": {
          "id": "bace3bc5-3875-4662-a861-f7b67f528f61",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "e851467d-b9cf-4512-b78a-aef40942922f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48bf2807-2928-4433-970c-2e08b557b3da",
        "cursor": {
          "ref": "834e1acf-1575-4e2a-80d2-b2b7f39c5b0d",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "2e633850-a3c3-4ff1-aea5-68e8976d8bd3"
        },
        "item": {
          "id": "48bf2807-2928-4433-970c-2e08b557b3da",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "0e7db642-6024-449c-9684-62a402a23a13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "060b779d-a83b-4143-bafe-ff357853a5fa",
        "cursor": {
          "ref": "4b2048ad-b509-4852-8392-00607431965b",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "fc67ded8-80c4-4e82-a892-4a6e958d0fc8"
        },
        "item": {
          "id": "060b779d-a83b-4143-bafe-ff357853a5fa",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "3d60cce9-e4dc-417e-9b24-065d6869c19d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9be0645-ac2c-48b5-b7c3-31eaba79491b",
        "cursor": {
          "ref": "d27b0ea7-9718-4125-b87b-d9b6c55f26d7",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "384309fe-072b-4448-8e9f-31f04c5b8329"
        },
        "item": {
          "id": "e9be0645-ac2c-48b5-b7c3-31eaba79491b",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "342f1ea4-1c0d-4416-a952-0e6c1e5593af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c6b3ff0-8b26-4263-b6b8-1a9f82692aaa",
        "cursor": {
          "ref": "f11e96ef-4599-482a-b892-a10bce87b5a4",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "1c6c991a-eda6-4219-9513-cfaf4ec78d7d"
        },
        "item": {
          "id": "3c6b3ff0-8b26-4263-b6b8-1a9f82692aaa",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "a95ccaed-7b81-4c63-8b1f-790050f43350",
          "status": "OK",
          "code": 200,
          "responseTime": 82,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "e2cf9946-2aef-4ae7-8a4f-2a7cfe2ed9ec",
        "cursor": {
          "ref": "84516dcb-4789-42b0-80db-5359edc38b56",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "cdf00256-c714-4b2b-b186-da3af26ef927"
        },
        "item": {
          "id": "e2cf9946-2aef-4ae7-8a4f-2a7cfe2ed9ec",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "aa1f4ee0-4fc4-4f04-b38f-d2308e61ce53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68989526-bafe-4582-b93a-833cb5f83bef",
        "cursor": {
          "ref": "2618da8f-9535-4cf2-9333-5d657e272f82",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "dabb74dd-cf0f-4d16-8a5e-c133c0028b1a"
        },
        "item": {
          "id": "68989526-bafe-4582-b93a-833cb5f83bef",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "11325f1d-5188-43aa-b625-a5baf342e0b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0d4cf2f-7e54-40b6-84df-fa161078bf68",
        "cursor": {
          "ref": "4f25ad08-40ee-4004-9f06-1385e9e916f9",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "62790921-378e-4b9b-8446-01d104abdd4d"
        },
        "item": {
          "id": "f0d4cf2f-7e54-40b6-84df-fa161078bf68",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "d9f6bc8d-fc87-4bca-be57-a7aff523c43b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c587ce0d-123e-4cc3-8c51-4f41ab5c503d",
        "cursor": {
          "ref": "cec9e08e-1208-436b-b389-0fe0a81b33de",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "330ac49b-c90c-4cae-968b-fec78fdc0d3a"
        },
        "item": {
          "id": "c587ce0d-123e-4cc3-8c51-4f41ab5c503d",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "120e6891-fecf-487a-92e8-fc96da779da8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff1de9f5-997e-4b78-89d7-bfed8d7ab48b",
        "cursor": {
          "ref": "80647906-d310-4671-9345-68bb3132df0c",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "7115e4b5-a1a0-4511-8212-9619608cf2df"
        },
        "item": {
          "id": "ff1de9f5-997e-4b78-89d7-bfed8d7ab48b",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "5874a10b-274a-43c6-9bab-2dff96e1a7db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0084adf1-d746-4546-bcd4-6264af7cfde8",
        "cursor": {
          "ref": "66786236-373f-4e92-8361-f22deb12744c",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "dd97e80f-74da-4dc7-8623-c81cbf141fc2"
        },
        "item": {
          "id": "0084adf1-d746-4546-bcd4-6264af7cfde8",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "f184e7ba-baf5-429c-bd36-c5f450b4677e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c566e06-d4d9-4a7c-8420-fe69e28023bd",
        "cursor": {
          "ref": "e578a81c-f9d6-4e6b-bd2b-68c292edef10",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "f753dea2-1efc-41a3-844b-9c5d975cff5f"
        },
        "item": {
          "id": "4c566e06-d4d9-4a7c-8420-fe69e28023bd",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "23962277-c526-42c0-a553-42fee88bb4ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45f67e72-c31d-4a87-83e8-70cc96c14d0c",
        "cursor": {
          "ref": "19b71fa4-e84e-4e5f-a0d5-a24f8ffd2eb9",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "b907402c-09b4-4dff-843d-ba0a61955370"
        },
        "item": {
          "id": "45f67e72-c31d-4a87-83e8-70cc96c14d0c",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "e3702b60-e880-426d-8b6b-67b8ca73f6aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddcef5de-043f-4782-a59e-ef7ef03c014d",
        "cursor": {
          "ref": "c0f8d158-bb54-4271-bdd2-71f0d738f101",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "e6dd8e68-a3a6-4826-abaf-9b6991290b2b"
        },
        "item": {
          "id": "ddcef5de-043f-4782-a59e-ef7ef03c014d",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "fad1f38e-c334-4adc-b832-dfabfd8cb526",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6a861f0-6c3a-4154-913d-f9e631bfef32",
        "cursor": {
          "ref": "bfb867e5-adb5-4df6-82f0-e07407c48d39",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "21bc6cd5-32aa-4d14-b832-8dd29d896857"
        },
        "item": {
          "id": "f6a861f0-6c3a-4154-913d-f9e631bfef32",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "5e3f81eb-4395-4fa8-8f72-6fb56f9c855d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bba396ab-010c-4b8f-b7f5-e3faf337235a",
        "cursor": {
          "ref": "b84cdb40-3651-42af-8478-716370051354",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "6e2c22ce-e35d-4e1f-8d17-ff8b39db5e70"
        },
        "item": {
          "id": "bba396ab-010c-4b8f-b7f5-e3faf337235a",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "749c8bc9-0814-4731-9ad3-6b024ed5948a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ded90a32-5d68-4f88-a388-ac9f1290a5ba",
        "cursor": {
          "ref": "e696faf9-b74d-4edd-ab82-fb2d87ee702a",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "4f0b9801-4f09-4f78-95a3-21d11b2b204a"
        },
        "item": {
          "id": "ded90a32-5d68-4f88-a388-ac9f1290a5ba",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "7d9c65c0-fc96-46ea-b484-29fb17ae0b5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e40d76da-56e7-4ec3-a0a6-3daa238c15de",
        "cursor": {
          "ref": "34e0e84f-fc21-4c8b-8af1-5246958f65e8",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "cc2e80d0-e4de-4f20-ac9f-44f91f8ea9bd"
        },
        "item": {
          "id": "e40d76da-56e7-4ec3-a0a6-3daa238c15de",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "6208f225-1919-44c1-9f0d-81bca3b26fa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2873ef56-2bd0-4fae-ba64-582d09406ce5",
        "cursor": {
          "ref": "b9fc0dfd-f3e5-4602-b05d-9539c61aa39c",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "9e364236-1797-4895-9f9f-8c5c3d4eb57d"
        },
        "item": {
          "id": "2873ef56-2bd0-4fae-ba64-582d09406ce5",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "644ef55f-4534-4238-9257-20d095d31f2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7d83123-e74e-4023-8929-33d9ba8af39e",
        "cursor": {
          "ref": "364ae298-3ba3-478c-a9b7-202932825e46",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "ceea5c23-b6e8-4977-807c-f01e6ddf2572"
        },
        "item": {
          "id": "c7d83123-e74e-4023-8929-33d9ba8af39e",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "fe64e003-7df0-4d13-bb30-37814fca3595",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee22a3ef-2ab4-4efb-b6d9-ec82adbfa359",
        "cursor": {
          "ref": "cad22099-32a3-439f-90e5-f4b83f8e8688",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "a5ca9a1e-db3f-42d7-a786-e7cde35597da"
        },
        "item": {
          "id": "ee22a3ef-2ab4-4efb-b6d9-ec82adbfa359",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "9b1237e0-09cc-4c65-884b-16654ace98a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b07efaa-1a72-45a1-ba17-7ceb2f59200f",
        "cursor": {
          "ref": "a3fa65d2-e704-4af7-ae21-9166f6bf5ba7",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "41c0f9db-8bbb-4e77-ac63-6b8e1386b6d3"
        },
        "item": {
          "id": "3b07efaa-1a72-45a1-ba17-7ceb2f59200f",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "0124b6a0-d7b9-4890-913c-3070f7889e52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb0bd72a-2a61-44ba-9efa-9290c6240d4c",
        "cursor": {
          "ref": "795fe975-a170-443f-b2cc-cfc109f594a5",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "7c1eb05e-44d3-4b2e-b011-cdadc6f7e76a"
        },
        "item": {
          "id": "eb0bd72a-2a61-44ba-9efa-9290c6240d4c",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "81502700-3a52-480a-8de9-d124f998e0ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "409e93ad-2733-4c38-9f7e-e37afb1a2120",
        "cursor": {
          "ref": "f294820d-ed70-4e1e-bd32-3836dca51a12",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "5c57d1ad-dd6d-44f1-a3fa-c13883482382"
        },
        "item": {
          "id": "409e93ad-2733-4c38-9f7e-e37afb1a2120",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "de974f4c-cbf3-46b2-8800-641f62a2f5ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b46341d9-e04e-4f64-963a-c4c9706bedb8",
        "cursor": {
          "ref": "b9b26af4-40ad-4661-ac4d-af6ec6f57d20",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "fa9847fc-9710-412c-9d1b-f9a2bb987c9b"
        },
        "item": {
          "id": "b46341d9-e04e-4f64-963a-c4c9706bedb8",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "ae4e8638-a73a-4595-a9f2-72af809b80b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e47ac75-0212-4094-a3c1-75b3f09017d3",
        "cursor": {
          "ref": "5af4ee1f-032c-4a62-9e89-b33e627d15c3",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "2c1c3d58-5854-49a3-8231-30e6032c2b11"
        },
        "item": {
          "id": "7e47ac75-0212-4094-a3c1-75b3f09017d3",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "e155dba8-714d-43ad-a338-8cc4136c699b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a3ab061-a824-465d-abbc-69a0f119fd4f",
        "cursor": {
          "ref": "4943e860-a8a6-4979-acc8-d30438b7e198",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "13c64374-17a9-4f0d-b089-0c2b6edcda91"
        },
        "item": {
          "id": "7a3ab061-a824-465d-abbc-69a0f119fd4f",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "4dc9016a-3ddc-4876-af65-c06354a468ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcfa855a-0e5e-4ff3-a6f9-019b5630a692",
        "cursor": {
          "ref": "0459ae3a-0e5a-4275-8fe3-d4aecf767350",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "f7f95a44-e23c-4015-af8e-122db1f6a455"
        },
        "item": {
          "id": "dcfa855a-0e5e-4ff3-a6f9-019b5630a692",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "7c456230-02f4-4db2-8ace-972ca7e958ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22037dbc-679c-41ad-a56f-6eed116b9d2d",
        "cursor": {
          "ref": "a9ece272-e917-4b9e-9010-7f055d94cd91",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "c00c915f-fd75-45bd-a75e-fee836c843bb"
        },
        "item": {
          "id": "22037dbc-679c-41ad-a56f-6eed116b9d2d",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "9c3c6d30-56f0-4d88-8336-8138a3897fd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e51c6faf-fa7b-43ba-8716-6ba5d39fb12d",
        "cursor": {
          "ref": "7a7808f9-0d6e-4dee-85fa-011805bdda2b",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "467a7e5a-ba1c-44d9-a4bf-370d02a944db"
        },
        "item": {
          "id": "e51c6faf-fa7b-43ba-8716-6ba5d39fb12d",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "800f98fb-041d-4fc7-aa83-853873fe4f0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d876a05-4a64-4b79-8a27-8e14e7a1674f",
        "cursor": {
          "ref": "a72fd876-dec2-4cd3-968a-10d524c5b60c",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "26bbab65-7940-4d52-b29d-4fe950e8fbb2"
        },
        "item": {
          "id": "1d876a05-4a64-4b79-8a27-8e14e7a1674f",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "a88910fd-9e18-4fb7-a910-b46107c4df7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b486bea-8a47-4814-84a5-95ee3c1046d7",
        "cursor": {
          "ref": "145cbd90-f0aa-477c-b308-f6952aa72f09",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "b90660cf-428e-4da7-8f1e-d8d5f30e434e"
        },
        "item": {
          "id": "6b486bea-8a47-4814-84a5-95ee3c1046d7",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "69bfd725-16c5-41df-a0aa-764fdc3899cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cea35e28-f9fe-42ce-bcbb-f88e5f52ed14",
        "cursor": {
          "ref": "ee73f2f6-25fa-4395-a3da-79798634c6b1",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "9cd3f892-c87d-4c08-9e97-29d8eaa4ea52"
        },
        "item": {
          "id": "cea35e28-f9fe-42ce-bcbb-f88e5f52ed14",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "493da8bf-dddf-40f1-a972-d346496de8f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76f7e500-911e-47e9-9a39-72e263c24c73",
        "cursor": {
          "ref": "3d63130e-820f-4a00-b3f7-20d582c2538b",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "b32cda67-691f-4e8e-b9cb-452ad646db28"
        },
        "item": {
          "id": "76f7e500-911e-47e9-9a39-72e263c24c73",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "88db02d5-1257-4ad2-b7a5-ac6370619023",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81f93081-660c-4bf8-9abc-8cd99934a782",
        "cursor": {
          "ref": "ed4dd3db-ae1b-499c-bc0e-81764b7e7460",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "b45c3cbf-0f1b-4526-b749-62dee80047c5"
        },
        "item": {
          "id": "81f93081-660c-4bf8-9abc-8cd99934a782",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "87092020-c052-4d22-aad9-ecc6799b180d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3138a22e-67fb-4ddf-bf70-0ea06d228d79",
        "cursor": {
          "ref": "53db396b-3306-48ba-9aac-88efdeb9503c",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "23c4e878-a011-4acc-97a5-2672984c6f60"
        },
        "item": {
          "id": "3138a22e-67fb-4ddf-bf70-0ea06d228d79",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "e6677d1f-58cc-4253-aef2-b3e828269d88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbeb409f-a178-4850-a4ff-d1d537239655",
        "cursor": {
          "ref": "7a9a381c-2ce1-4d8b-bc36-64220e037dd8",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "e26c7d17-bfb2-47e8-b63c-63c7e88a7d5b"
        },
        "item": {
          "id": "cbeb409f-a178-4850-a4ff-d1d537239655",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "7b14bace-e173-40ad-819b-09e0d8668612",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "552edb6b-35a0-448e-af66-64b791590fdc",
        "cursor": {
          "ref": "eec6e028-97d3-4da1-ac62-bedf6b2fcf3b",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "10f178b7-77a0-45d7-8e2b-e94f2e3e5374"
        },
        "item": {
          "id": "552edb6b-35a0-448e-af66-64b791590fdc",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "16aceb73-b969-4a19-81fe-62520369c63a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a85f3a8-55ab-411b-8789-65c6305cf6cd",
        "cursor": {
          "ref": "94fc5e81-d423-4802-908c-43f9b2c7d944",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "f3e06f5c-0525-4262-8731-12dd137c637c"
        },
        "item": {
          "id": "0a85f3a8-55ab-411b-8789-65c6305cf6cd",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "a28e807f-3301-4df2-81f0-e7bef02c48f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44cb729f-898c-4557-b485-418299435d84",
        "cursor": {
          "ref": "72f609c2-00c6-4abf-a953-21ed5acd7467",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "ce8622a2-01ee-4c98-8455-f3895186ca2c"
        },
        "item": {
          "id": "44cb729f-898c-4557-b485-418299435d84",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "48f70296-5fd4-4529-bf69-3195aa8e0540",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "461e666f-1124-4f94-a6f3-ae5c590ca3bd",
        "cursor": {
          "ref": "d6c7758b-42b1-4896-890b-02461ee3e2ed",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "82843893-3450-4625-8a79-f3b204302f6c"
        },
        "item": {
          "id": "461e666f-1124-4f94-a6f3-ae5c590ca3bd",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "f061d9cb-d3c9-4953-af89-17048babab81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44b41ac0-dbe5-41a5-82eb-f3218db46336",
        "cursor": {
          "ref": "3962ce41-adc4-4fa4-8ab0-0da33c5ec920",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "ea8cc7e2-a0bc-435b-bd14-d941cbac1c11"
        },
        "item": {
          "id": "44b41ac0-dbe5-41a5-82eb-f3218db46336",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "f1ebbd95-091a-43ef-88bd-f68972dee629",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e10d2dd4-f96c-40c8-acbd-0b7578182bc1",
        "cursor": {
          "ref": "19511182-a667-4f62-972b-ce4079b04e93",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "ee70cc96-67b2-4713-95f0-f2bf20b3c5fa"
        },
        "item": {
          "id": "e10d2dd4-f96c-40c8-acbd-0b7578182bc1",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "d82bd54f-3a57-4527-b2e4-9b863348c68e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1c2ee3f-ce3e-4152-8688-c373a4dbbf24",
        "cursor": {
          "ref": "af155083-aa3d-4f93-9d59-05a62fd1414c",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "a5d95237-f30b-4d4b-86c3-984586bb48f0"
        },
        "item": {
          "id": "d1c2ee3f-ce3e-4152-8688-c373a4dbbf24",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "4bdb3793-27d8-4fd4-a8e3-57973b9ed9df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de3082a8-f3b2-4165-b8d4-8c5c3826d1fd",
        "cursor": {
          "ref": "60df2f0a-eaf4-4c8c-9c4d-464cd8656250",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "7d2dbc8d-66b7-4fe8-bd85-425c0a67cb95"
        },
        "item": {
          "id": "de3082a8-f3b2-4165-b8d4-8c5c3826d1fd",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "08dd2250-bc18-4e28-858e-83f5799d6ca5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aec7bcd-c605-4ce9-a8da-39a077972938",
        "cursor": {
          "ref": "2abc9e02-5ada-4e26-9491-de9af91c5f00",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "22c5e626-a483-4c31-bd6b-30624df8c911"
        },
        "item": {
          "id": "4aec7bcd-c605-4ce9-a8da-39a077972938",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "58f54629-63e7-4005-ba5d-4ab20dbfbd5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29fc6a20-680f-4db7-a94c-dcc9668a8b5c",
        "cursor": {
          "ref": "dfd3c623-cfd6-4fd6-a254-bf2d16f3e7b5",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "79df887b-bad1-43cc-a6ca-db066af92c63"
        },
        "item": {
          "id": "29fc6a20-680f-4db7-a94c-dcc9668a8b5c",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "c7a0d814-728b-4bdd-9391-4e5acb06cc54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf818b4c-bc1c-4f55-b201-3c0f3933b4d3",
        "cursor": {
          "ref": "fa86b3cf-1fc1-4369-aff8-300da83ee64e",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "f500cef2-a1ac-4b1a-ab21-213ab12d5c61"
        },
        "item": {
          "id": "bf818b4c-bc1c-4f55-b201-3c0f3933b4d3",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "353c3607-620b-40bc-8534-54d6b8a318e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e09ff616-40b1-4645-adcb-a4d63aaece44",
        "cursor": {
          "ref": "64b59849-eb67-4804-84e4-bb78b4225775",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "0ed9d02e-1524-4964-9370-df689a0aca4d"
        },
        "item": {
          "id": "e09ff616-40b1-4645-adcb-a4d63aaece44",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "81a81fea-02ed-44d7-8d72-839784f9de1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a5e1ed5-df78-405c-91ac-390a1de6f375",
        "cursor": {
          "ref": "e4303561-3cc0-4c40-bee8-567580b92b64",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "b5f0ed66-1055-49d9-82eb-ec067c83423c"
        },
        "item": {
          "id": "7a5e1ed5-df78-405c-91ac-390a1de6f375",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "83b0fb39-7998-483d-937f-04abb534339c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41cca374-b5c1-43e7-81de-a29d93de0dc9",
        "cursor": {
          "ref": "78205edb-e3d2-456f-af72-d42b8945184b",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "21fd6a80-29bb-47be-a615-3621eb35cefd"
        },
        "item": {
          "id": "41cca374-b5c1-43e7-81de-a29d93de0dc9",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "ca298de3-9dc8-4bc9-83fb-5ae6ec2d4c7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e3c7bea-d3de-4d19-9ea6-ce32e4d19fc7",
        "cursor": {
          "ref": "cbe3ddeb-2315-442c-bb4d-25f3dd2f81bb",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "70ecfd11-1a9c-48c7-940c-96e02bb77cde"
        },
        "item": {
          "id": "7e3c7bea-d3de-4d19-9ea6-ce32e4d19fc7",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "78baf6b3-a127-4b3e-a2b6-d3c9a8982f1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "837cdc23-8185-4a09-92a2-76ae24ba0cc9",
        "cursor": {
          "ref": "6a1aa8eb-b820-476c-ad73-6e2f728932c0",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "6ae2d23e-3df1-4d29-9856-3b5370d7643a"
        },
        "item": {
          "id": "837cdc23-8185-4a09-92a2-76ae24ba0cc9",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "e22849da-41f2-4965-93a0-4dac554ec61e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3b51eb5-058b-45a1-b1a8-e2174bde0b42",
        "cursor": {
          "ref": "9cd74165-df8a-432c-b358-543ed38c1ab0",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "915c5acf-4047-4d04-9945-b54596a4d8a9"
        },
        "item": {
          "id": "f3b51eb5-058b-45a1-b1a8-e2174bde0b42",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "ebdbcc8b-3d33-47d9-878b-d201439a256c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3fa3bd9-b336-488c-ab64-e3216049b305",
        "cursor": {
          "ref": "f2eab37f-1532-4015-b74c-8fabc06fe540",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "1cd6a089-f073-43a5-b31f-607624ff7f3e"
        },
        "item": {
          "id": "b3fa3bd9-b336-488c-ab64-e3216049b305",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "95d5f7c4-abac-4618-9cfc-5d635abdbaab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebad2683-f6ab-4dee-bb27-76ddff4be532",
        "cursor": {
          "ref": "7123ff8a-a4a0-4cef-8d5d-199cb80b0903",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "3e2f4722-2639-471f-bb03-3a40478be3a5"
        },
        "item": {
          "id": "ebad2683-f6ab-4dee-bb27-76ddff4be532",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "dc5b8e73-3f16-4146-9634-474dcca085b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96241951-9bc1-4514-b910-d1e2e1db7f8b",
        "cursor": {
          "ref": "f568591c-44c6-47c0-91a9-eba4f8218f58",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "864d52f0-350d-4813-b06c-95c55f9da50d"
        },
        "item": {
          "id": "96241951-9bc1-4514-b910-d1e2e1db7f8b",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "53b85ce8-f8e0-42c5-a519-49c3e95c249c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "813d5f6f-bf66-4c86-ab70-1a7f36bf93c3",
        "cursor": {
          "ref": "2b2aef09-c9c8-4c3c-b210-921fc23cc797",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "ca1ea0af-248d-48cc-a390-758501431e7e"
        },
        "item": {
          "id": "813d5f6f-bf66-4c86-ab70-1a7f36bf93c3",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "c0d6a4f2-6fa2-4065-a899-361ddae63c23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8e32371-9693-48ef-a3e8-b17a29a60d6d",
        "cursor": {
          "ref": "597e293f-7cac-4ae5-8ad1-58f339b90385",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "dccd681f-ce43-462d-a733-130fc9aef6cc"
        },
        "item": {
          "id": "c8e32371-9693-48ef-a3e8-b17a29a60d6d",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "125cb045-7abb-4aa3-977b-e6ab3094cddd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc9957e1-d6be-47ed-a9f8-72ec453e5556",
        "cursor": {
          "ref": "69de0e76-7a97-4aec-8aa6-08e6f652d54d",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "cb1ac4de-3502-4747-ae64-93ee32f856da"
        },
        "item": {
          "id": "bc9957e1-d6be-47ed-a9f8-72ec453e5556",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "e96ea89a-1fd7-4481-9773-2fec4fee0e43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11dafa75-bf79-4397-be4b-8801d3c7b2b9",
        "cursor": {
          "ref": "5277ad78-be95-43a0-a163-cb22e22466f4",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "fa7c20bf-c0c1-4b19-912e-85f98796ab35"
        },
        "item": {
          "id": "11dafa75-bf79-4397-be4b-8801d3c7b2b9",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "3c650786-ee27-4317-813b-23839cef4a90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e127fc46-3d85-4ec9-a8a9-d846f70ecaa8",
        "cursor": {
          "ref": "377dbf4f-c90e-4629-9fd2-2be36721f0a5",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "5694b088-29e5-40ff-92a9-a2d68da1c310"
        },
        "item": {
          "id": "e127fc46-3d85-4ec9-a8a9-d846f70ecaa8",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "5d16640e-4a6d-4c1f-9503-4db2ba896de7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33edfc3c-f4ca-4d1f-b947-2b20c5be8bf2",
        "cursor": {
          "ref": "a57be37b-eef7-49cc-b80e-ff9ea16258b2",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "423b4c3e-649d-4246-bcee-108c626fbdc5"
        },
        "item": {
          "id": "33edfc3c-f4ca-4d1f-b947-2b20c5be8bf2",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "3dfe62a5-da6c-4120-9a53-5334a71472ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "916d2124-3892-47f5-bda3-9c8d6055275c",
        "cursor": {
          "ref": "e398539f-1361-44c0-95c8-11100654aaa3",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "4d2eb8b7-a6bf-402b-a186-c980f082e830"
        },
        "item": {
          "id": "916d2124-3892-47f5-bda3-9c8d6055275c",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "c86855cb-08b0-484a-a827-4316b7548d89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3020f8af-5abb-4c18-a189-7c0b297583ac",
        "cursor": {
          "ref": "15e2b7fd-5683-4fff-b922-8612b29497d1",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "be3ea62f-470e-44be-98ac-fb1885eebad3"
        },
        "item": {
          "id": "3020f8af-5abb-4c18-a189-7c0b297583ac",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "dcfccb65-0bef-45c0-a10d-471424c4d082",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a8f8787-4fde-43c6-9e97-f5596955853b",
        "cursor": {
          "ref": "4e92250f-6fa7-41cc-ba2e-3aa14c4cc86f",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "f0959f06-6089-4399-8bd0-2178d13656e3"
        },
        "item": {
          "id": "1a8f8787-4fde-43c6-9e97-f5596955853b",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "ffb07712-8ed3-423a-802f-d35128ccc0b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e706866-e237-4682-95cc-b0b652c2de79",
        "cursor": {
          "ref": "3d2f0192-bd30-46e2-bd30-1cd2dd4ac063",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "c24712c8-0bb8-4fed-8fb7-78eb68234bcf"
        },
        "item": {
          "id": "7e706866-e237-4682-95cc-b0b652c2de79",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "a0763ce0-370b-45f4-a7b3-0fa58c875547",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8016e0f9-8417-4fee-9bae-553298721388",
        "cursor": {
          "ref": "d43fa6a3-1674-4a03-93cc-eec13c7f1795",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "0d906b4c-436d-4368-bfdd-6821094593e6"
        },
        "item": {
          "id": "8016e0f9-8417-4fee-9bae-553298721388",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "d34b274d-886e-4de8-8d95-4ffe144cb789",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "738b8c0b-ffed-487b-8f5f-98f093d02977",
        "cursor": {
          "ref": "fe76146f-b811-48e3-8be3-f5a47ffd775e",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "5b682a42-f65b-4fc0-ac19-884743599861"
        },
        "item": {
          "id": "738b8c0b-ffed-487b-8f5f-98f093d02977",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "4b9fe813-562f-4bc1-9ad6-652223e509cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b695f1c-4475-4901-9045-7f352c6f8575",
        "cursor": {
          "ref": "b9d883f0-36a5-4970-8af3-ed769b4dd6eb",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "9ecebd19-b346-487d-94a0-3b165886cb6c"
        },
        "item": {
          "id": "1b695f1c-4475-4901-9045-7f352c6f8575",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "6648d2b9-542d-4254-b254-92dbb7ec2cb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ef96e58-cf28-4b3d-9ea3-6766612fef71",
        "cursor": {
          "ref": "8ad6f71c-4e1e-40b6-b683-114bb6fcbd9a",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "97ca04bf-5714-4fa8-ac4e-e6622663e4bf"
        },
        "item": {
          "id": "6ef96e58-cf28-4b3d-9ea3-6766612fef71",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "5a039494-bc47-4ead-94f5-31b70993f01f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7320127c-89de-4098-a5ee-f94998d627c8",
        "cursor": {
          "ref": "189383ef-e07b-48a5-990d-babe96754984",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "61af7bb5-5ea9-4f11-b15b-bf4991083224"
        },
        "item": {
          "id": "7320127c-89de-4098-a5ee-f94998d627c8",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "305f850a-298b-4c50-93ff-d26fb7f9a10c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "addfeca9-79b6-4fc4-804d-bcb7b2ec1557",
        "cursor": {
          "ref": "6ae1b594-b687-4e91-a2cc-f960a1587aba",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "8843c401-6e49-4c47-983e-7bee3cafa6f3"
        },
        "item": {
          "id": "addfeca9-79b6-4fc4-804d-bcb7b2ec1557",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "b746733e-6778-453c-8c6c-66d73850397c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23d18f99-2d03-473d-894b-828ecef60c5d",
        "cursor": {
          "ref": "cce226d0-1650-4851-8810-ace53b6bab6a",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "6104dda4-690c-43a4-b44c-27d05cc07e8f"
        },
        "item": {
          "id": "23d18f99-2d03-473d-894b-828ecef60c5d",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "f2be09bc-4745-4f2b-8dbf-0f3530da52af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a20927e0-01fe-4fb8-9f94-8a097eb44b5f",
        "cursor": {
          "ref": "307e4e34-1b16-4760-91ae-3c8ea57b29e7",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "0cff8ae6-812d-4237-adc1-c6de4f9e0b1c"
        },
        "item": {
          "id": "a20927e0-01fe-4fb8-9f94-8a097eb44b5f",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "82106fa5-e284-4e73-aeb2-ecda04e68526",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b86ea386-534f-4c40-b9ae-acbd7bbfe9d1",
        "cursor": {
          "ref": "b5c008b2-d6f3-4885-98a7-be30dcff55ea",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "df84e807-62cc-42aa-b691-154af04f058f"
        },
        "item": {
          "id": "b86ea386-534f-4c40-b9ae-acbd7bbfe9d1",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "71279e58-d738-47c1-b5b2-eb309dbb26cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92f00f90-8a51-44c4-8e7b-1beba1055900",
        "cursor": {
          "ref": "c0e3be9d-879b-4d76-87ee-aee4d84df916",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "5e87891b-2b1b-4929-9e59-cf5cc0e6a51f"
        },
        "item": {
          "id": "92f00f90-8a51-44c4-8e7b-1beba1055900",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "8c06a272-7bcf-41a4-aac6-dd6d791e7361",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4e80f1c-7ac0-4cac-b858-093d66751864",
        "cursor": {
          "ref": "b10d4166-7919-4c2e-8e5f-a82fcb492129",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "cd2e708b-2ab7-4dc9-a009-5e403f5965e2"
        },
        "item": {
          "id": "e4e80f1c-7ac0-4cac-b858-093d66751864",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "5d951eaa-6e0c-4dd4-a750-623a1a33fb80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7091f1a0-3d62-4544-97ff-ff3cd1cfe4b1",
        "cursor": {
          "ref": "b5ffff34-28b4-42a9-970e-5c16cc0a5eea",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "866b1cde-f6e3-4f64-a90f-5caa7f96e179"
        },
        "item": {
          "id": "7091f1a0-3d62-4544-97ff-ff3cd1cfe4b1",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "bb150eef-44c0-43cd-86f9-4952c9f90387",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aacdd853-15bd-4bf9-9e79-0d030fb20171",
        "cursor": {
          "ref": "2132144a-09cd-4140-a4a2-5ff651e5e4d6",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "f35a80ee-a669-4fd6-a28b-2e54a8f673cc"
        },
        "item": {
          "id": "aacdd853-15bd-4bf9-9e79-0d030fb20171",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "19a0eed4-853f-455b-b842-678b87289dc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1147b57-56e2-4aea-a48b-95b4db2a928b",
        "cursor": {
          "ref": "345f94dc-bc40-433b-92b7-f39085e88b84",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "90d53649-9811-48c0-9694-caf80a2d809c"
        },
        "item": {
          "id": "d1147b57-56e2-4aea-a48b-95b4db2a928b",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "0f0939fd-1871-43f4-be06-60247490816a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "164b0f7a-b186-49e8-bb57-09d99810b4f5",
        "cursor": {
          "ref": "826dee9f-cbfd-45bb-9152-27ff44a6b920",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "6be3e58d-97a6-41d4-8ad6-3cf5e18476d1"
        },
        "item": {
          "id": "164b0f7a-b186-49e8-bb57-09d99810b4f5",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "64d64c2e-f693-4df9-82df-e565e3de546e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2b997b2-2ec2-4ae2-a3fe-9fa971c0b05d",
        "cursor": {
          "ref": "c01dd414-4d92-4852-8e13-88689d2b35dc",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "80baea50-1139-4b03-a6b1-e113e479f55a"
        },
        "item": {
          "id": "a2b997b2-2ec2-4ae2-a3fe-9fa971c0b05d",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "bf5a13b0-36c1-41c4-8c61-ef850faad795",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbc6d3a2-e8fa-442e-8477-f92cfa033448",
        "cursor": {
          "ref": "068abd06-0a9f-483a-ab6b-c6afee3cd135",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "c2e4a463-d340-4a89-8401-d7ef915a9b34"
        },
        "item": {
          "id": "bbc6d3a2-e8fa-442e-8477-f92cfa033448",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "69e440de-264e-4bb6-8559-d57a006e71db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07414dc4-c4e9-4f14-b96c-1c495ab8a7f0",
        "cursor": {
          "ref": "a87c634f-e167-4ea1-97c7-49d7a6dfe5b4",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "ce450c5f-9b09-4878-9ffa-c6711f4a3974"
        },
        "item": {
          "id": "07414dc4-c4e9-4f14-b96c-1c495ab8a7f0",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "1ffb299b-034d-4385-9bd8-52157cf6eb47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e4e4a3a-11b5-4dac-8de2-46ceb66f8ea0",
        "cursor": {
          "ref": "88ae0928-d8fd-498f-b866-0627185f765a",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "bb48bd00-82f4-4f4b-91c6-fb8c003ce715"
        },
        "item": {
          "id": "6e4e4a3a-11b5-4dac-8de2-46ceb66f8ea0",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "fa7ae50d-f9ea-4e67-a4a9-6d3c2316a041",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 19,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17f6ee67-3eb8-49bc-983b-b7293f7f7aac",
        "cursor": {
          "ref": "73b1562e-f46e-4f9e-8991-805b721d3638",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "59240622-49f2-4b02-987c-7028caf0e237"
        },
        "item": {
          "id": "17f6ee67-3eb8-49bc-983b-b7293f7f7aac",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "214ecc52-f008-4f0e-b078-bff8c2166134",
          "status": "OK",
          "code": 200,
          "responseTime": 38,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "78945231-d7ea-4875-9fbc-dd44d133382a",
        "cursor": {
          "ref": "8b5a12ca-45c3-427f-9c5d-2d998ea92694",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "7be3b8d9-b65c-44fb-951a-b4ad45ec65f4"
        },
        "item": {
          "id": "78945231-d7ea-4875-9fbc-dd44d133382a",
          "name": "credentials_verify"
        },
        "response": {
          "id": "37fdd96e-c511-4daa-ae1e-571881f71b80",
          "status": "OK",
          "code": 200,
          "responseTime": 3007,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b598d6b-5ad6-4aeb-b3a6-35cb1fbaf92a",
        "cursor": {
          "ref": "cab9f6b7-08dc-4fa1-8b7a-7218543a0e13",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "de2c8afd-6bdf-4f37-b5e9-3cc2eb96e4bc"
        },
        "item": {
          "id": "2b598d6b-5ad6-4aeb-b3a6-35cb1fbaf92a",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "7b9d1bcd-778c-49c6-bff4-f3e5a3ed67fb",
          "status": "OK",
          "code": 200,
          "responseTime": 2590,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e710b4f-8aaf-4f6e-842f-b5e7bf6dd3be",
        "cursor": {
          "ref": "05cd4101-1fc7-48ee-9121-d91a31c09ad0",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "fd71d9b0-05a1-457a-a98d-b7104925a749"
        },
        "item": {
          "id": "5e710b4f-8aaf-4f6e-842f-b5e7bf6dd3be",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "a68130b9-094f-4939-a305-dd1d8afd0c03",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 18,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e710b4f-8aaf-4f6e-842f-b5e7bf6dd3be",
        "cursor": {
          "ref": "05cd4101-1fc7-48ee-9121-d91a31c09ad0",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "fd71d9b0-05a1-457a-a98d-b7104925a749"
        },
        "item": {
          "id": "5e710b4f-8aaf-4f6e-842f-b5e7bf6dd3be",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "a68130b9-094f-4939-a305-dd1d8afd0c03",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 18,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c197b6f-0e97-46bd-9dde-2f33249a26db",
        "cursor": {
          "ref": "ea5ddf54-31ec-49cc-b671-e426bc0523aa",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "342fd303-aafa-4e28-a019-8225ff5cbac2"
        },
        "item": {
          "id": "7c197b6f-0e97-46bd-9dde-2f33249a26db",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "83d965df-ed96-42c8-a710-e0d39c87e776",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 19,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "495918c9-2241-469b-a237-9d8687166113",
        "cursor": {
          "ref": "1d41043d-3818-4c69-920c-92234543a98e",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "94e9a541-7c9e-4190-a1ce-cdc8a2951fe9"
        },
        "item": {
          "id": "495918c9-2241-469b-a237-9d8687166113",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "5999b8ad-9eeb-4e39-85c1-2755ff4fddf9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 18,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}